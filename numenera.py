import random

# to do list
# add datasphere
# add cyphers
# random beasts by terrain
# ruins generator
# random npc
# weird discovery generator

# reformat strings
# example:
# shepherd = "Mary"
# age = 32
# stuff_in_string = "Shepherd {} is {} years old.".format(shepherd, age)
# print(stuff_in_string)
# Shepherd Mary is 32 years old.
# https://docs.python.org/3/library/string.html#format-string-syntax

def random_situation():
    random_stuff = random.randint(1,100)
    if random_stuff == 1:
        print('random event:')
        event()
    elif random_stuff < 3:
        print('random leak:')
        leak()
    elif random_stuff < 7:
        print('random colony:')
        colony()
    elif random_stuff < 9:
        print('random discharge:')
        discharge()
    elif random_stuff < 14:
        explorer()
    elif random_stuff < 27:
        print('random creature:')
        ruins_creature()
    else:
        pass

def path_marker():
    #  About 5% of newly generated exits reveal a cryptic route marker from a previous explorer
    path_marker_roll = random.randint(1, 20)
    if path_marker_roll == 1:
        print('You find a cryptic route marker left from a previous explorer. You gain an asset on all tasks related to finding, tracking, locating, following directions, or otherwise navigating your way through the ruin.\n')
    else:
        pass

def ruins_creature():

    # add in chance for random humanoid
    creature_list = [
    'accelerator',
    'steel angel ',
    'stitcher',
    'symbate',
    'tanaras',
    'lacaric courier',
    'lambrequin',
    'imorphin gonoph',
    'glauxim',
    'fuser',
    'machine eater',
    'gevanic',
    'eldmor',
    'decanted reaper ',
    'ateric ',
    'cypherid ',
    'laak ',
    'disassembler ',
    'revehent',
    'cynoclept',
    'cuiddit',
    'warcore',
    'synth eater',
    'divellent',
    'dritch',
    'marauding vault',
    'mesotemus',
    'tarrow mole',
    'reconstructor ',
    'residuum',
    'vaytaren',
    'scrow',
    'sferic',
    'griefsteel',
    'mech shambler ',
    'steel spider',
    'nagina ']
    creature_select = random.choice(creature_list)
    print('creature:', creature_select)

def abhuman():
    abhuman_race_roll = random.randint(1,20)
    print('abhumans')
    if abhuman_race_roll == 1:
        print('Chirog - 4(12)')
        print('Chirogs are vaguely reptilian abhumans with thick armor plating covering most of their bodies. Chirogs tend to live in small packs of 3-6 with a clear leader who\'s usually a female. In fact, she\'s likely the mother of many of the members of the pack. ')
        print('Health: 15\nDamage Inflicted: 5 points\nArmor: 3\nMovement: Short\nModifications: Climbs as level 7\n')
        print('Combat: Bite and grapple. Instead of damage, a grapple immobilizes a foe. They can only struggle to get free (a difficulty 4 Might task). Both the grappling chirog and the grappled foe are easier targets for other combatants, so attacks against them are eased by two steps.\n')
        print('Unique: Rukh')
        print('Prone to throwing tantrums and smashing fragile objects to get attention or distract someone from threatening or punishing them. They speak the Truth and the language of chirogs, using a surprising array of profane words and gestures to bully others of their kind into doing what they say. They work best when allowed to skulk about nearby instead of following at someone’s heel. They have siblings in various chirog colonies, and when entering their territory, Rukh throws tantrums until they get permission to visit relatives for a few days. Rukh prefers working for PCs who don’t rely on a lot of numenera devices, or those who prefer hunting and salvaging automatons (such as someone with the Battles Automatons focus). Although they hate the numenera (and can’t articulate why), as a follower they are satisfied with being given unwanted or weak cyphers and oddities that they can break, and as long as this destructive streak is catered to, they don’t go out of their way to tear apart items their “boss” wants to use or keep. They also like salty foods, finger jewelry, and paints they can use to decorate their underbelly (which doesn’t call attention to their presence when they are trying to hide).')
    elif abhuman_race_roll == 2:
        print('OORGOLIAN - 4(12)')
        print('Created in aeons past (perhaps on an entirely different world), the mechanical men known as Oorgolian soldiers patrol isolated areas of the Ninth World, particularly the Plains of Kataru and Scorpion’s Reach. They are almost always found in groups of 1d6 + 2. Lanky and alien in their movements, these quasihumanoid automatons stand almost 8 feet (2.4 m) tall. In their three-fingered hands, they wield a variety of weapons.')
        print('Health: 15 Damage Inflicted: 4 points Armor: 3 Movement: Short Modifications: Perception as level 5. Leaps, runs, and balances as level 6. Combat: Oorgolians attack in groups using well-organized tactics. Although they can speak, they transmit information to one another silently and instantly within a 100-mile (161 km) range via radio transmissions. Originally they were almost certainly outfitted with numenera weaponry, but about half have lost their armaments and now wield Ninth World weapons, such as spears, crossbows, or axes. The Oorgolians still armed with the numenera typically carry a weapon that can fire multiple rapid shots without reloading. The soldiers use these to fire at up to three targets (all next to one another) at once. For each target after the first, the difficulty of defense rolls is decreased by one step. In addition to a ranged projectile weapon, one in four Oorgolians carries a back-mounted device that hurls detonations at long range with deadly accuracy. They explode in immediate range for 4 points of damage. Each device holds 1d6 detonations. People who have experience fighting these automatons have discovered that certain frequencies of sound confuse them. Some frequencies cause Oorgolians to function at two levels lower than normal, and others prevent them from acting at all for 1d6 + 1 rounds. Interaction: On their own, Oorgolians act on prior orders that literally may be a million years old or more, so their actions and motives don’t always make sense. Sometimes they completely ignore creatures they find. Sometimes they communicate. Sometimes they ambush and attack. Loot: Half of all Oorgolian soldiers carry artifact weapons, such as a slug thrower—a two-handed weapon that inflicts 6 points of damage and has a range of 200 feet (61 m). The projectile ammo regenerates within the weapon until it runs out of power (depletion 1 in 1d100). In addition, each Oorgolian body contains 1d6 cyphers.')
        print('Unique: Speaker Vosh Osh Yem Blue\nLEVEL 5\nModifications: Defenses, intimidation, negotiation, perception, persuasion XP Cost: 6\nSpeaker Vosh Osh Yem Blue dresses in tight layers of cloth that somewhat conceal its inhuman form without restricting its movement, but nobody would mistake its body for something human. Whether it is self-willed and follows a PC willingly or it was reprogrammed to serve, it bears an undeletable lengthy message, which it reveals to various individuals in parts as a way to assess their usefulness in knowing more. Its particular kind of telepathy allows it to communicate with only one creature at a time, so it avoids situations where it has to communicate rapidly with a group of creatures. If bonded to a PC, it prefers transmitting its words to that character, relaying advice and suggestions about what to say or do, and only if absolutely necessary will it suspend that link to address someone else directly. It understands the Truth (and many other human languages) and prefers to observe when others are talking, especially if they think it can’t understand them. It has never been known to call Oorgolian soldiers to its location, but it hasn’t denied that it can do so.\n')
        print('Unique: Patrol Unit Ser Ost Kreel Vosh Nem\nModifications: Attacks, balancing, jumping, perception XP Cost: 4 Patrol Unit Ser Ost Kreel Vosh Nem (or just “Patrol Unit” for short, especially if there are no other Oorgolian soldiers in the vicinity) is a sturdy automaton with advanced combatprogramming. It considers itself part of a military squad and refers to its bonded PC as “Commander,” calling itself “this patrol unit” or using its full designation when it speaks. Its original weapons depleted long ago, and now it wields a crossbow or a large, jagged sword (although it will use whatever weapon or artifact it can make use of, especially if its commander orders it to). It speaks and understands the Truth, and its radio transmitter still works (although speaking to it that way requires a cypher, artifact, or installation with the ability to transmit radio waves). Because of its tactical programming, it responds well to instructions, even if its orders are ambiguous or could be misinterpreted by an inferior automaton, as it can infer its commander’s intent from context and prior conversations. It tends to perk up when other Oorgolian automatons are within transmission range, as if it is listening in on their conversations and determining who they are loyal to (and perhapsawaiting a code command that will reset it to its original programming).')
    # 11 Caprimag
    # 02 Margr
    # 12 Heeldran
    # 03 Murden
    # 13 Igothus
    # 04 Sathosh
    # 14 Kaseyer
    # 05 Yovok
    # 15 Keltonim
    # 06 Yovok
    # 16 Larus
    # 07 Grush
    # 17 Malvok
    # 08 Grush
    # 18 Olion
    # 09 Killist
    # 19 Umem
    # 10 Syzygy ghoul
    # 20 Zayrn

def colony():
    print('abhuman colony')
    print('Unless noted to the contrary, an abhuman colony is constructed of salvaged rubble, synth, and equipment stolen from explorers or other creatures infesting the installation. Abhuman colonies must have some way to provide food and water for themselves. Those close to the exterior might have a secret exit they use to hunt in the lands beyond. Those deeper inside have likely found a machine or other oddment of the numenera that somehow sustains them, either directly by producing foodstuffs or through more esoteric means, such as the duplication of one living creature per day, direct life maintenance via biological induction, or something weirder.')
    abhuman()

    colony_specifics_roll = random.randint(1,20)
    if colony_specifics_roll == 1:
        print('Colony is dead, all mummified corpses')
    elif colony_specifics_roll == 2:
        print('Colony is empty')
    elif colony_specifics_roll == 3:
        print('Colony is empty. A strange device can be salvaged from a chamber; roll on the Chamber Table to determine the device’s nature. The device also emits a level 5 invisible toxin.')
    elif colony_specifics_roll == 4:
        print('Colony is xenophobic and hungry')
    elif colony_specifics_roll == 5:
        print('Colony is xenophobic and hungry, but willing to negotiate')
    elif colony_specifics_roll == 6:
        print('Colony seems friendly')
    elif colony_specifics_roll == 7:
        print('Colony seems friendly, but it’s a trick to gain trust before a surprise ambush and betrayal')
    elif colony_specifics_roll == 8:
        print('Colony seems friendly but a misstep on the explorers’ part is likely to turn the abhumans into raging killers')
    elif colony_specifics_roll == 9:
        print('Colony wars with another abhuman colony nearby:')
        abhuman()
    elif colony_specifics_roll == 10:
        print('Colony is in some kind of suspended animation (cocooned, stasis, time-locked, etc.)')
    elif colony_specifics_roll == 11:
        print('Colony keeps several victims kidnapped from the outside')
    elif colony_specifics_roll == 12:
        print('Colony doesn’t want to kill explorers, just take them prisoner as forced labor')
    elif colony_specifics_roll == 13:
        print('Colony is on the verge of activating a “sleeping” dark fathom they believe will be under their control')
    elif colony_specifics_roll == 14:
        print('Colony is dying; their access to hunting outside or the machine that provided nutrition is gone')
    elif colony_specifics_roll == 15:
        print('Colony’s leader is an Aeon Priest who “went native”')
    elif colony_specifics_roll == 16:
        print('Colony has a map to a vault containing several artifacts; roll on the Vault Contents Table to determine specifics')
        vault()
    elif colony_specifics_roll == 17:
        print('Colony plans to ambush and overrun another group of explorers, a field camp of Jade Protectors, or an external community')
    elif colony_specifics_roll == 18:
        print('Colony is being hunted by a group of explorers who want vengeance for a past wrong')
        explorer()
    elif colony_specifics_roll == 19:
        print('Colony is flourishing thanks to a device they salvaged from a chamber; roll on the Chamber Table to determine the device’s nature. The device also emits a level 2 healing field that grants up to 2 points of health each round.')
    else:
        print('Colony knows the secret entrance to an undiscovered relic chamber; roll on the Relic Anatomy and Relic Quality tables to determine that relic’s nature; if applicable, one or two abhumans in the colony have been touched by the relic’s power')
        relic()

def machine():
    print('integrated machine\n')
    print('To use an integrated machine, an explorer first must succeed on a level 6 Intellect task to learn something about the machine’s function. About 30% of discovered machines require some additional component or repair before they can be used. Successfully using the machine is another level 6 task. A failed attempt to use the machine has negative consequences, usually inflicting 6 points of damage, but potentially having the opposite of the intended effect.\n')
    print('A machine often won’t function more than once or twice before it runs down, requiring extensive repair and the application of special parts. Generally speaking, an integrated machine has a control surface and an activation platform, arch, cavity, or other receptacle where objects or creatures to be acted on can be placed, or where objects or creatures appear if produced. An integrated machine can be salvaged for 2d20 shins and one or two cyphers, and maybe an artifact, which destroys the machine.\n')

    machine_specifics = random.randint(1,100)
    if machine_specifics < 3:
        print('Grafts one extra automaton limb onto a user, which adds +1 to die rolls involving tasks where having an extra hand would be useful')
    elif machine_specifics < 5:
        print('Plates a user with flexible synth, granting +1 to Armor but an inability on movement-related tasks')
    elif machine_specifics < 8:
        print('Produces an offensive cypher')
    elif machine_specifics < 10:
        print('Produces a defensive cypher')
    elif machine_specifics < 13:
        print('Recharges a used cypher')
    elif machine_specifics < 15:
        print('Heals, cures, and “refurbishes” an unhealthy living creature or automaton; for example, a creature missing an eye or limb gains a new one, though one that is made of crystal and synth')
    elif machine_specifics < 18:
        print('Grants a user long-range telepathy for about a day; the following day the creature suffers a severe headache and has a temporary inability on Intellect-related tasks')
    elif machine_specifics < 20:
        print('Grants a user +3 to Might Edge for about a day; the following day the creature has severe stiffness and a temporary inability on Might-related tasks')
    elif machine_specifics < 23:
        print('Grants a user perfect pitch')
    elif machine_specifics < 25:
        print('Duplicates one nonliving object')
    elif machine_specifics < 28:
        print('Creates a wormhole that persists for an hour to a location the user knows to exist')
    elif machine_specifics < 30:
        print('Over the course of an hour, a user is returned to their most viable physiological age (for humans, that’s around 25 years old)')
    elif machine_specifics < 33:
        print('User gains a voice in their head that reduces the difficulty of all knowledge tasks by one step, but sometimes attempts to take over when the user is hurt, distracted, or sleeping')
    elif machine_specifics < 35:
        print('User gains a voice in their head that grants an asset on all tasks to detect falsehoods, but also grants the user an inability when trying to lie')
    elif machine_specifics < 38:
        print('User gains an additional eye that can’t stand bright light, but allows the user to see in the dark')
    elif machine_specifics < 40:
        print('User gains “flesh flaps” between their arms, fingers, and sides of their body, allowing them to glide to a safe landing from all falls over 30 feet (9 m)')
    elif machine_specifics < 42:
        print('User gains the ability to eat literally anything (including rocks, synth, metal, and drit) and gain nutrition; objects of up to level 7 can be eaten and destroyed in this fashion with no harm to the eater')
    elif machine_specifics < 45:
        print('Produces a clone of the user that is mentally and physically only three months old')
    elif machine_specifics < 47:
        print('A person the user knows to exist of up to level 6 is immediately transferred from wherever they are to this location')
    elif machine_specifics < 50:
        print('User is transferred into the presence of a being of up to level 6 that they know to exist, wherever that being is located')
    elif machine_specifics < 52:
        print('Dead creatures brought here are reconstructed in animate glass, with a few memories of the dead creature')
    elif machine_specifics < 55:
        print('Grafts synth struts to user, increasing their strength (+1 to Might Edge) but causing them to move stiffly (3 points deducted from Speed Pool)')
    elif machine_specifics < 57:
        print('Grafts synth struts to user, which quickens them (+1 to Speed Edge) but makes them more fragile (3 points deducted from Might Pool)')
    elif machine_specifics < 60:
        print('Synth helm fitted to user alleviates their need to breathe')
    elif machine_specifics < 62:
        print('Synth helm fitted to user removes sight but greatly increases other senses; it’s essentially a wash, except the creature can “see” in the dark')
    elif machine_specifics < 65:
        print('Grafts extra synth arm to user that functions only one minute per day')
    elif machine_specifics < 67:
        print('User gains a powerful mutation for 28 hours')
    elif machine_specifics < 70:
        print('User gains a powerful mutation, but only after being encased in a chrysalis for 28 hours, during which time they are insensate and vulnerable')
    elif machine_specifics < 72:
        print('Device contains knowledge of nearby star systems')
    elif machine_specifics < 75:
        print('Device contains knowledge of nearby dimensions')
    elif machine_specifics < 78:
        print('Device contains knowledge of esoteric mathematical formulas that could grant an asset on one nano ability or focus ability that deals with manipulation of nanites or the numenera')
    elif machine_specifics < 81:
        print('Device contains a wealth of confusing scenes from an ancient star-faring species')
    elif machine_specifics < 84:
        print('Device renders a creature or object out of phase for a random period, usually lasting no more than 28 hours')
    elif machine_specifics < 87:
        print('Device grows a flesh bud on user that contains a knot of neurological tissue; once integrated, it adds 1 point to the user’s Intellect Pool')
    elif machine_specifics < 90:
        print('Device grows a flesh bud on user that contains a knot of neurological tissue; once integrated, it gives the user an asset on any knowledge task')
    elif machine_specifics < 93:
        print('Device grows a flesh bud on user that contains a knot of neurological tissue; once integrated, the PC’s mind is transferred to the bud and their head slowly begins to atrophy')
    elif machine_specifics < 96:
        print('Device malfunctions on use, goes dead')
    else:
        print('Device malfunctions on use, detonates')

def leak():
    print('Matter leak\n')
    print('A matter leak is the discharge of a fluid, a powder, a liquid, or a collection of complex parts or components that has spilled from one area into another not meant to contain it. In the area where it is found, it is usually pooled or piled, but if the leak is ongoing, it may flow into neighboring corridors and chambers. The source of the leak is usually a longdead mechanism or reservoir hidden behind a wall or bulkhead—that is, hidden except for the crack or fracture through which the leak manifests. If a leak is dangerous, any tasks associated with avoiding or defending against such effects are level 5, on average. Often, characters must risk exposing themselves to a leak in order to continue moving along their route.\n')

    # Matter Leak Specifics
    specific_roll = random.randint(1,100)
    if specific_roll < 3:
        print('Water, slightly briny but potable')
    elif specific_roll < 5:
        print('Water, tastes oily but potable')
    elif specific_roll < 7:
        print('Water, tastes sweet and fizzy but potable')
    elif specific_roll < 9:
        print('Green “gunk” that sticks and stains')
    elif specific_roll < 11:
        print('Green “gunk” that sticks and burns (like acid) those who stumble into the material')
    elif specific_roll < 13:
        print('Brownish organic fluid that smells like alcohol and explodes into a raging inferno if exposed to flame')
    elif specific_roll < 15:
        print('Silvery, metallic solid that flowed when it was white-hot molten metal')
    elif specific_roll < 17:
        print('White-hot, flowing, molten metal that burns to the bone anyone who touches or falls into it')
    elif specific_roll < 19:
        print('Viscous black ooze that contains trace amounts of void matter and acts as one large midnight stone from which several “uses” can be obtained')
    elif specific_roll < 21:
        print('Drifts of yellowish powder that smells like metal')
    elif specific_roll < 23:
        print('Drifts of yellowish powder that smells like metal, composed of nanites that drain power from tech, cyphers, and artifacts')
    elif specific_roll < 24:
        print('Drifts of crimson powder that is magnetic')
    elif specific_roll < 27:
        print('Viscous transparent gel that reacts to the force of gravity in the opposite direction of other matter')
    elif specific_roll < 29:
        print('Viscous brown gel that gives off light for the same duration and at the same intensity as light shined on it')
    elif specific_roll < 31:
        print('Viscous black gel that shimmers and seems to emit sounds similar to laughing when jostled')
    elif specific_roll < 33:
        print('Water-like fluid with blue tint that reflects images in its depths of strongly imagined scenes')
    elif specific_roll < 35:
        print('Living fluid solvent that eats through 1 cubic foot (.03 cubic m) of material for five rounds if removed from area of leak')
    elif specific_roll < 37:
        print('Drifts of pale dust that desiccate any object that comes into contact with them')
    elif specific_roll < 39:
        print('Salty water in which reddish jellyfish dart and float')
    elif specific_roll < 41:
        print('Salty water in which reddish jellyfish dart and float, plus a creature* lairs near or in the water')
    elif specific_roll < 43:
        print('White fluid streaked with silvery strands is a concentrated consciousness that dazes those exposed')
    elif specific_roll < 45:
        print('Multicolored marble-sized spheroids 45–46 Multicolored marble-sized spheroids that each weigh 10 times more than a similar amount of metal')
    elif specific_roll < 49:
        print('Leaflike fractal wafers that rustle in response to thoughts')
    elif specific_roll < 51:
        print('Leaflike fractal wafers that animate and flutter to exposed devices like insects drawn to light')
    elif specific_roll < 53:
        print('Leaflike fractal wafers that stick like iridescent tattoos if applied to flesh')
    elif specific_roll < 55:
        print('Thousands of what resemble insect eggs 55–56 Thousands of what resemble insect legs')
    elif specific_roll < 59:
        print('Hundreds of disembodied tentacle suckers 59–60 Hundreds of metal and glass spheres with tiny silver wires leading from the back; they resemble disembodied human eyes')
    elif specific_roll < 63:
        print('Four-fingered hands that are humanlike but smaller, more delicate, and composed of synth ')
    elif specific_roll < 65:
        print('Hair')
    elif specific_roll < 67:
        print('Thick ebony fluid that acts like glue (level 6) if a bit is squeezed between two objects')
    elif specific_roll < 69:
        print('Hundreds of invisible, many-sided stars about the size of a human hand; stars have sharp ends and are dangerous if trod upon or fallen into')
    elif specific_roll < 71:
        print('Yellow fragrant putty')
    elif specific_roll < 73:
        print('Orange putty; if sculpted into an object with limb-like projections, the shape animates as a level 1 creature and follows the sculptor')
    elif specific_roll < 75:
        print('White putty; if sculpted into an object with limb-like projections, the shape animates as a level 3 creature and attacks the sculptor')
    elif specific_roll < 77:
        print('Thousands of tiny metallic rods, flat at one end, pointed at the other')
    elif specific_roll < 79:
        print('Gravel made of clear and translucent crystal')
    elif specific_roll < 81:
        print('Liquid that infuses objects or creatures, making them shake and vibrate for minutes or hours')
    elif specific_roll < 83:
        print('Chunks of white super-cold material that steams and dissipates when disturbed')
    elif specific_roll < 85:
        print('Pink dust, easily disturbed to rise in clouds of particulate vapor that flows toward the nearest exit to the structure')
    elif specific_roll < 87:
        print('Dull grey dust that absorbs objects and creatures that fall into it as if sucking them in; actually transfers them to an alternate dimension')
    elif specific_roll < 89:
        print('Thick whitish dust that smells sharp; sticks electrostatically to clothing and skin')
    elif specific_roll < 91:
        print('Spiral shells of thumbnail size and smaller 91–92 Spiral shells of thumbnail size and smaller, each containing an inactive, burnedout device')
    elif specific_roll < 95:
        print('Spiral shells of thumbnail size, each containing a small synth traction device that might allow the shells to move in unison, if a control device could be found or fabricated')
    elif specific_roll < 97:
        print('Shattered dark red glass')
    elif specific_roll < 99:
        print('Bone fragments from hundreds of different kinds of creatures')
    else:
        print('Panes of stacked (and tumbled) blue-tinted glass that is fragile; light takes minutes, hours, days, or even years to move through it, depending on the pane')

def discharge():
    level = random.randint(1,6)
    print('Energy discharge\n')
    print('An energy discharge is the manifestation of energy from one area into another that is not meant to contain it. In the area where it is found, the energy is usually intermittently snapping, pulsing, or spitting\n')
    print('The source of the energy discharge is usually a malfunctioning mechanism or piece of tech meant to store the energy hidden behind a wall or bulkhead. Sometimes a rent in the barrier is visible, and other times the energy just passes through. If the characters can breach the wall (a level 8 task) to access the tech, they could deactivate it and salvage it for one or two cyphers and 1d10 shins.\n')
    print('If a leak is dangerous, tasks associated with avoiding or defending against such effects are level 6, on average.\n')

    discharge_specifics = random.randint(1,100)
    if discharge_specifics < 3:
        print('Blue electricity grants those exposed +1 to Speed Edge for one hour, but repeated exposure causes a runaway reaction that inflicts 3 points of Speed damage each round until the victim succeeds on a Might defense task.')
    elif discharge_specifics < 5:
        print('Gravity discharge pulses every few rounds, dramatically increasing gravity, which inflicts 6 points of ambient damage on a failed Might defense task.')
    elif discharge_specifics < 7:
        print('Gravity drops to nothing every few rounds.')
    elif discharge_specifics < 9:
        print('As 03–04, but a defunct dark fathom is the source; reactivating the dark fathom is a level 6 Intellect task.')
    elif discharge_specifics < 11:
        print('Random green electrical flares create voice-like sounds of an entity that is probably hopelessly insane.')
    elif discharge_specifics < 13:
        print('White-hot plasma discharge inflicts 10 points of damage to those in its path.')
    elif discharge_specifics < 15:
        print('Warm red plasma discharge restores 6 points to a character’s Pools, but each repeated exposure causes the character to descend one step on the damage track.')
    elif discharge_specifics < 17:
        print('Pulsed light dazes victims for one round.')
    elif discharge_specifics < 19:
        print('Pulsed light gives those exposed one random piece of knowledge; more than three exposures per day risks a stroke, which inflicts 5 points of Intellect damage and moves victim one step down the damage track.')
    elif discharge_specifics < 21:
        print('Pulsed light programs victim who fails an Intellect defense task into believing they are on a secret mission to deliver a message to a creature* in another part of the ruin.')
    elif discharge_specifics < 23:
        print('Pulsed light programs victim who fails an Intellect defense task into believing their allies are evil invaders and should be destroyed; effect lasts for one minute.')
    elif discharge_specifics < 25:
        print('Pulsed light erases victim’s memory of previous 28 hours on failed Intellect defense task.')
    elif discharge_specifics < 27:
        print('Pulsed light provides those exposed with 5 points to add to their Intellect Pool; each point over their maximum requires an Intellect defense task to avoid a stroke and descending one step on the damage track.')
    elif discharge_specifics < 29:
        print('Pulsed light reprograms cyphers, automatons, artifacts, and other tech to assemble to create a new level 6 automaton that is erratic and potentially dangerous, though it could become an ally.')
    elif discharge_specifics < 31:
        print('Purple electricity gives creature a static charge that can be discharged as part of a melee attack to inflict +4 points of damage; additional charges can be built up, but doing so requires an Intellect defense task to avoid a stroke and descending two steps on the damage track.')
    elif discharge_specifics < 33:
        print('Incandescent plasma sears strange symbols and equations on exposed creature’s skin and face.')
    elif discharge_specifics < 35:
        print('Orange electricity supercharges a creature’s carried cyphers and artifacts, increasing their level by 3. A repeated exposure causes charged cyphers to explode as if detonations of their new higher level.')
    elif discharge_specifics < 37:
        print('Grey plasma forms aura-like nimbus around exposed creatures that persists for several days.')
    elif discharge_specifics < 39:
        print('Turquoise plasma causes mundane equipment and clothing to melt into goo; important equipment resists on a successful Speed defense task by owner.')
    elif discharge_specifics < 41:
        print('Psychic flare from an exposed conduit inflicts 3 points of Intellect damage (ignores Armor) each round on creatures within immediate range.')
    elif discharge_specifics < 43:
        print('Psychic flare from an exposed conduit gives a random phobia to creatures within immediate range.')
    elif discharge_specifics < 45:
        print('Large device with many conduits sparks and snaps with electrical discharge, but the discharge is directed into a point on the ceiling, rendering the device relatively safe to approach, despite appearances.')
    elif discharge_specifics < 47:
        print('Kinetic energy leaks from exposed conduit as red electricity, transferring to creatures within immediate range, potentially hurling them a short range in a random direction and inflicting 5 points of damage.')
    elif discharge_specifics < 49:
        print('Kinetic energy leaks from exposed conduit as red electricity, which gives creatures +3 to Speed Edge for one hour. Additional exposures inflict Speed damage instead of conferring Edge.')
    elif discharge_specifics < 51:
        print('Chronal energy leaks from cracked device, causing exposed creatures to see their own actions a second before acting.')
    elif discharge_specifics < 53:
        print('Chronal energy leaks from cracked device, causing exposed creatures to begin to skip several seconds forward in time and see echoes of their past self')
    elif discharge_specifics < 55:
        print('Chronal energy leaks from cracked device, causing exposed creatures to move more slowly through time. Their voices are noticeably lowered, and the difficulty of their Speed-based tasks is increased by one step when dealing with nonslowed creatures. The effect lasts for several hours.')
    elif discharge_specifics < 57:
        print('Chronal energy leaks from cracked device, causing exposed creatures to move more quickly through time. Their voices are noticeably higher in pitch, and the difficulty of their Speed-based tasks is decreased by one step when dealing with creatures not in the same state. The effect lasts for a few minutes.')
    elif discharge_specifics < 59:
        print('Chronal energy leaks from cracked device, causing exposed creatures to race through time. Their voices are a shrill whine that can’t be understood by those not in the same state, they can take two actions instead of one on their turn, and the difficulty of their Speed-based tasks is reduced by one step when dealing with creatures not in the same state. The effect lasts for a few minutes.')
    elif discharge_specifics < 61:
        print('Device on mount holds a tiny point of fierce light within a force field; however, an occasional warp in that field allows bursts of invisible accelerated particles to blast into the area and nearby areas, scorching objects and creatures in wavering lines of energy. Symbols in an unknown language, if they can be translated, read “solar wind tap.”')
    elif discharge_specifics < 63:
        print('Magnetic energy leaks from a milky complex of spheres and rods, visible as a pinkish shimmer that randomly magnetizes a creature’s metallic possessions. Magnetized possessions are attracted to each other, repelled apart, or both.')
    elif discharge_specifics < 65:
        print('Magnetic energy pulses from a milky complex of spheres and rods, visible as red pulses of light that create such intense reactions that the tiny bits of iron in a creature’s blood become magnetized, repelling one another in a way that risks causing the creature to detonate. On a failed Might defense task, an affected creature descends one step on the damage track and takes 10 points of Speed damage (ignores Armor).')
    elif discharge_specifics < 67:
        print('The surrounding area is oddly quiet as sound is stripped away and stored in a silvery device thick with metallic prongs. A malfunction in the device sometimes releases the stored energy in sonic crescendos of white noise that can deafen nearby creatures.')
    elif discharge_specifics < 69:
        print('The surrounding area is oddly quiet as sound is stripped away and stored in a silvery device thick with metallic prongs. A malfunction in the device sometimes releases the stored energy in sonic crescendos of white noise that can deafen nearby creatures. In addition, the sound energy reacts to one or more nearby cyphers, which might cause them to activate, or could reprogram them to take on a different function than previously determined.')
    elif discharge_specifics < 71:
        print('Psychic energy leaks from exposed conduits, inciting discord among creatures in the area, potentially causing armed conflict among those who fail an Intellect defense task.')
    elif discharge_specifics < 73:
        print('Psychic energy leaks from exposed conduits, inducing feelings of contentment and joy among creatures in the area, potentially making those who fail an Intellect defense task so satisfied that they slump down and refuse to continue their exploration')
    elif discharge_specifics < 75:
        print('Psychic energy leaks from exposed conduits, inducing feelings of fear among creatures in the area, potentially making those who fail an Intellect defense task so terrified that they freeze in horror.')
    elif discharge_specifics < 77:
        print('Psychic energy leaks from exposed conduits, inducing feelings of trust among creatures in the area, potentially making those who fail an Intellect defense task so credulous that they are not ready to defend themselves from actual threats.')
    elif discharge_specifics < 79:
        print('Psychic energy leaks from exposed conduits, inducing feelings of trust among creatures in the area, potentially making those who fail an Intellect defense task so credulous that they are not ready to defend themselves from actual threats. However, the leaking trust causes creatures* in the area that would normally be aggressive to welcome explorers as long-lost allies and friends.')
    elif discharge_specifics < 81:
        print('Clear synth module filled with thousands of tiny flashing entities, normally too small to be seen by the naked eye, in a saline gel. The module is cracked, and the gel has spread into one or more nearby areas. Contact with the gel (and the tiny creatures in it) causes electrical damage to exposed flesh, but might repower used cyphers.')
    elif discharge_specifics < 83:
        print('Clear synth module filled with thousands of tiny entities that absorb light and energy creating a reverse sparkle in a leaking saline gel. The module is cracked, and the gel has spread into one or more nearby areas. Contact with the gel drains Might (ignores Armor) and could also drain a cypher, rendering it useless.')
    elif discharge_specifics < 85:
        print('Concentrated ion leaks from a crystalline and synth device, causing a howling, moaning sound to reverberate through nearby areas, along with a slight breeze. A fierce wind emanating from the device at its source makes it difficult to approach directly.')
    elif discharge_specifics < 87:
        print('Concentrated ion leaks from a crystalline and synth device, causing a howling, moaning sound to reverberate through nearby areas, along with a slight breeze. A fierce wind emanating from the device at its source makes it difficult to approach directly. However, a few successful Intellect tasks could allow someone to find the leak and turn it off. But a mistake causes the entire chamber to be launched from the structure like a rocket, which could be lethal if navigation systems or other means of steering can’t be found before the chamber crashes back to earth.')
    elif discharge_specifics < 89:
        print('Psychic energy leaks from exposed conduits, inducing feelings of agony among creatures in the area, potentially making those who fail a Might defense task fall into writhing heaps.')
    elif discharge_specifics < 91:
        print('Psychic energy leaks from exposed conduits, inducing feelings of ecstasy among creatures in the area, potentially making those who fail a Might defense task fall into trembling heaps.')
    elif discharge_specifics < 93:
        print('Transdimensional energy swirls and flows through the area, sometimes condensing into objects that were not there earlier, or causing equipment of creatures in the area to randomly disappear.')
    elif discharge_specifics < 95:
        print('Temporal energy swirls and flows through the area, which has a chance to transport creatures who enter the area back in time 1 hour.')
    elif discharge_specifics < 97:
        print('A device spits sonic energy through the area, which sometimes triggers changes through rapid nanite construction in flesh. Creatures that fail a Might task are replaced with silent versions of themselves called whispers over the next 10 + ', level,' hours.')
    elif discharge_specifics < 99:
        print('Haze of brownish gas escapes from reservoir; the gas is a “flavored ion” that induces the sense of eating a very satisfying sugary treat in creatures that come into contact with it.')
    else:
        print('Massive cracked canister has leaked electric algae, which crusts all surfaces in the area and has advanced into some of the areas beyond. The growth has achieved sentience and can telepathically speak with those who are sensitive enough to hear it. The algae can electrify itself to gather fertilizer in the form of living creatures, or to defend itself from grazing.')

def midnight_stone():
    stone_roll = random.randint(1,20)
    if stone_roll == 1:
        print('The user makes a free one-action recovery roll and adds 2 to their Intellect Edge for one hour.')
    elif stone_roll == 2:
        print('The stone sprouts fine glassy tendrils similar to hair. If the user continues to hold the stone, their body sprouts the same sort of hair (first their hand, then their arm, and so on across their body), inflicting 4 points of ambient damage each round, until they let go of the stone.')
    elif stone_roll == 3:
        print('A thundering sound somehow blinds (rather than deafens) the user for several minutes.')
    elif stone_roll == 4:
        print('A used cypher in the user’s possession is renewed, or a depleted artifact is recharged.')
    elif stone_roll == 5:
        print('The skin around the user’s eyes, mouth, ears, and all other orifices is sealed with a sudden surge of new skin growth. The user suffocates if not helped by someone poking a hole over the mouth or nostrils and keeping it open (the skin keeps trying to grow closed). After about ten minutes, the growth reverses if the user is still alive.')
    elif stone_roll == 6:
        print('The user makes a free one-action recovery roll and adds 2 to their Might Edge for one hour.')
    elif stone_roll == 7:
        print('The user’s legs and arms bloodlessly drop off. If held in place to where they were once attached, reattachment occurs if the user makes a recovery roll.')
    elif stone_roll < 11:
        print('The user learns the answer to one question in an intuitive leap, but this leaves a nagging headache for several hours afterward.')
    elif stone_roll == 11:
        print('The user becomes distracted by the sound of a strange crunching noise that only they can hear, apparently coming from behind the nearest wall or the floor. It increases the difficulty of all Intellect tasks by one step for a few days.')
    elif stone_roll == 12:
        print('As part of the same action used to activate the stone, the user can direct a ray of transdimensional energy, inflicting 6 points of damage on a target within long range with a successful attack.')
    elif stone_roll == 13:
        print('The midnight stone detonates, inflicting 6 points of damage on the user and everyone within immediate range who fails a difficulty 6 Speed defense task.')
    elif stone_roll < 17:
        print('The user gains a beneficial mutation that lasts for 28 hours.')
        beneficial_mutation()
    elif stone_roll == 17:
        print('The user gains a harmful mutation that lasts for 28 hours.')
        harmful_mutation()
    elif stone_roll == 18:
        print('The user gains a beneficial mutation that is permanent, replacing any previous beneficial mutation from a midnight stone.')
        beneficial_mutation()
    elif stone_roll == 19:
        print('The user gains a harmful mutation that is permanent.')
        harmful_mutation()
    elif stone_roll == 20:
        print('The user gains a powerful mutation that is permanent, replacing any previous powerful mutation from a midnight stone.')
        powerful_mutation()

def event():
    print('Weird event\n')
    print('If a weird event has dangerous consequences, any tasks associated with avoiding or defending against it are level 5, on average\n')

    weird_event_roll = random.randint(1,20)
    if weird_event_roll == 1:
        print('Quake accompanied by blue haze and high-pitched musical tones goes on for almost a minute. Creatures must succeed on Speed defense tasks or suffer 5 points of damage from being knocked around.')
    elif weird_event_roll == 2:
        print('Vague smell slowly sharpens, assaulting every creature in the area with an odor so indescribably delicious that they salivate in uncontrollable yearning. The odor fades after a minute, but the hunger awakened is so strong that it dazes creatures, increasing the difficulty of all tasks by one step, until they can enjoy a large meal.')
    elif weird_event_roll == 3:
        print('Low, thrumming hum impinges on the senses of one-third of any group of creatures in the area. To those who can sense it, the humming is intense and hard to ignore. To the rest, nothing is detected or sensed. The humming dies away after a few minutes.')
    elif weird_event_roll == 4:
        print('Swarm of thousands of tiny red insects covers the walls, floors, and ceilings, moving an immediate distance each round. They produce a rich, vibrating sound audible for miles. The insects are harmless individually, though potentially capable of smothering a creature that falls prone in their path.')
    elif weird_event_roll == 5:
        print('Everyone hears a voice in their heads in a language that isn’t known. The voice seems to be making some kind of announcement that lasts a couple of rounds. If the PCs have a translation device that allows them to understand an unknown language, the words seem to be stern instructions, but without the proper knowledge and context, they are still inexplicable.')
    elif weird_event_roll == 6:
        print('Time wave washes through the area, though characters may not realize its full effect until they finally emerge from the installation to discover they were inside two months longer than they thought.')
    elif weird_event_roll == 7:
        print('Time wave washes through the area, though characters may not realize its full effect until they finally emerge from the installation two months earlier than when they entered.')
    elif weird_event_roll == 8:
        print('Brilliant flash of light leaves in its wake small changes to reality in the vicinity, which characters might notice, such as a cloak color being different, a tattoo design being reversed, and so on. However, a large change, such as the addition of a new compatriot who believes they’ve always been part of the group, is possible.')
    elif weird_event_roll == 9:
        print('Brilliant flash of light leaves in its wake a completely altered situation. Instead of exploring the interior of an installation, the characters find themselves clinging to the shell of a vast structure floating in airless void, with huge chunks of what might be the Earth spiraling around them in a planetary cloud. Stutters of other flashing alternative realities encompass the PCs before they expire in the vacuum, returning them to their original situation and reality.')
    elif weird_event_roll == 10:
        print('Stampede of phase-shifted creatures with milky fur, limbs dozens of feet long, and voices like children runs through the area, passing through objects, normal creatures, characters, and walls as if those objects were not there. Once past, they leave behind a slightly doglike scent that quickly fades.')
    elif weird_event_roll == 11:
        print('Flying vessel impacts the exterior of the installation with so much force, the walls are cracked and the vessel is mostly destroyed. The vessel contains several creatures* who, maddened and injured, spill out into nearby corridors.')
    elif weird_event_roll == 12:
        print('The temperature begins to drop, slowly and barely perceptible at first. But within a few hours, it drops far below freezing and stays that way within a large area for several hours, until the effect passes and normal conditions reassert themselves.')
    elif weird_event_roll == 13:
        print('Spatial anomaly manifests as a sparkling hole in space. The one-way anomaly persists for several days, during which time it constantly spits out random objects, which are often broken or fused pieces of tech, but sometimes include contemporary objects of the Ninth World such as shoes, hats, and human body parts.')
    elif weird_event_roll == 14:
        print('Dozens of previously undetected compartments iris open, from which a small fleet of fist-sized level 1 automatons emerge. The automatons skim along surfaces, leaving in their path a thin veneer of level 2 synth. If several automatons are caught and salvaged, a few cyphers might be gained.')
    elif weird_event_roll == 15:
        print('Rumbling and shaking presages a flood of viscous brown fluid moving a short distance each round, spreading out to fill several connected corridors and chambers, potentially drowning any creature caught in its path. The fluid is somewhat nutritious, sweet, and sticky. It subsides and drains away over the course of a day.')
    elif weird_event_roll == 16:
        print('Tech in the characters’ possession designed to provide directions or information— including cyphers, artifacts, or oddities—spontaneously activates. Otherwise, one handheld device owned by a character, regardless of its function, activates with a previously unknown function that shows a representation of the PCs’ location and a pointer indicating that they should follow a route through a hidden passage they’d not previously discovered. If they follow this weird prompt, they discover a shaft plunging down for several miles, at the bottom of which is an abhuman colony (roll on the Abhuman Colony Table). All the abhumans have been murdered as if hit by something large and fast moving. And that something (a level 6 creature of the GM’s choosing) now hunts the PCs.')
    elif weird_event_roll == 17:
        print('Handheld device owned by a character, regardless of its function, activates with a previously unknown function that opens communication with a voice that speaks a language the PC knows. The voice is in trouble and asks for help, indicating that some kind of terrible disaster has befallen, and only they are left. It should become clear soon enough that the voice is the character’s own, but the apocalyptic events hinted at have not happened—at least, not in this reality, or maybe not yet.')
    elif weird_event_roll == 18:
        print('All tech, devices, and automatons in the area of level 7 or lower spontaneously power down for several minutes. During the dead span, weird shadows flow and stream over all nearby surfaces, never quite resolving enough to determine their shape. When the shadows fade, items suddenly return to full function. Automatons have no memory of their function outage.')
    elif weird_event_roll == 19:
        print('Void matter storm passes through the area; treat each affected creature as if they used a midnight stone.')
        midnight_stone()
        midnight_stone()
        midnight_stone()
        midnight_stone()
    elif weird_event_roll == 20:
        print('Golden haze springs up out of nowhere, filling an area that includes many connected chambers and corridors for one hour. Creatures in the haze feel light-headed, happy, and at ease. Grudges are easier to let go, and long-held prejudices without factual basis can be judged for the chimeras of thought that they truly are. For one golden hour, clear-thinking rationality shines through, revealing what passes for normal human thought to be a series of mistakes in thinking that people generally ignore or explain away.')

def empty_room():
    empty_room_roll = random.randint(1,6)
    if empty_room_roll == 1:
        print('Discarded synthmetal headbands here. Telepathic virus (level 3) attempts to affect any who wear them')
    elif empty_room_roll == 2:
        print('Invisible device casts shadow and hums quietly')
    elif empty_room_roll == 3:
        print('Messily disassembled automaton lies scattered here')
    elif empty_room_roll == 4:
        print('Disembodied mechanical hand floats in the air')
    elif empty_room_roll == 5:
        print('Nozzles sporadically spray area with water vapor')
    else:
        print('Opened boxes filled with strange rusting tools')

def content():
    print('Room contains content:')
    print('Any content that includes some kind of device can potentially be salvaged by characters who succeed on a difficulty 5 Intellect task for 1d20 shins and one or two cyphers.')
    content_roll = random.randint(1,20)
    if content_roll == 1:
        print('Tone Key: An ancient mechanism of spinning cylinders and singing crystal shards, a level 7 device, is embedded in a wall here. Lines of yellow and purple energy snake from the machine and into the wall. If characters can activate it, it emits a series of tones that seem to burrow into the minds of all nearby creatures such that they can never forget it. In fact, it acts like an earworm for some time. The tones can be hummed with perfect pitch at will by a creature that has heard it, but to what end is the earworm embedded? The tones likely have some utility, but without more context, it’s nearly impossible for the PCs to determine the purpose of the tones. (In fact, if a character uses the tones on the unexpectedly animated and aggressive armor automaton described in result 8, the armor returns to mute inactivity.)')
    elif content_roll == 2:
        print('Inconstant Stone: A greenish-black chunk of stone shaped like a humanoid hand (not a human’s) is mounted within a basin here. The hand measures 10 feet (3 m) wide and 15 feet (5 m) tall. Devices on the walls here once offered salvage, but they’ve been well picked over. However, the central stone retains some function. Touching the stone causes it to ripple and quaver as if it were water or some kind of gel instead of stone. If the character then succeeds on a difficulty 4 Intellect task, the stone seems to collapse for a moment in liquid form into the basin of the ring holding it. Then, it rises back up shaped like a hand, or alternatively like an eye, mouth, or face, but sized to the character. Though it’s difficult to guess without context, the reproduced body part is an exact copy of the body part of the character who touched it. The item could be taken and used as a prosthetic, if desired. Otherwise, it is absorbed back into the main mass of stone that rises back up from the basin in its original shape a minute later.')
    elif content_roll == 3:
        print('Magnetizer: A device composed of many overlapping metallic discs hangs from the ceiling. From its lowest point, about 3 feet (0.9 m) above the floor, reddish electricity dances and arcs. Anyone who comes within immediate range is jolted for 4 points of damage. In addition, on a failed difficulty 4 Might defense task, targets become highly magnetized so that metal of all sorts is attracted to them. This effect is so strong that smaller items fly through the air and pelt the character, who also can be drawn through the air and become stuck to larger fixed metallic objects. This effect is removed when a victim suffers at least 1 point of damage from another energy source.')
    elif content_roll == 4:
        print('White Pellet: A shard of white synth, about twice as big as a human, is embedded at the chamber’s center. Touching the shard causes it to seemingly “implode,” leaving behind a small white pellet on a bare platform. If left alone, it is absorbed back into the shard when the synth reforms a minute later from streams of material that come from minuscule nozzles in the platform and immediately harden. The shard will form only one such pellet per 28-hour period, and never more than once for the same person. The pellet is a protective servant cypher.')
    elif content_roll == 5:
        print('Brown Pellet: A shard of brownish-pink synth, one about twice as big as a human, is embedded at the chamber’s center. Touching the shard causes it to seemingly “implode,” along with the character who touched it if they fail a difficulty 5 Intellect task. If the character fails the task, all that remains is a small pinkish-brown pellet on the bare platform. If the pellet is left alone, it disappears and the character is restored when the synth shard reforms a minute later from streams of material that come from minuscule nozzles in the platform and immediately harden. If the pellet is taken, a character who succeeds on a difficulty 5 Intellect task figures out that it is a concentrated form of the missing character. Using it to reform the character merely requires the addition of some water')
    elif content_roll == 6:
        print('Pyramid: A 12-foot-tall (4 m) metal-and-glass pyramid stands at the center of the chamber. When approached, it begins to hum and blink with tiny glowing lights, at least until a new group of explorers comes along and scavenges 1d20 shins and a cypher from it. An opening resembling an eye provides access to the interior, which is filled with numenera components, some very obviously cobbled together. Scavenging is easy enough, though it results in a burst of invisible, hot radiation. All characters within short range must succeed on a difficulty 5 Might defense task or move one step down the damage track and break out in oozing sores.')
    elif content_roll == 7:
        print('Locked Passage: This level 5 sealed gate requires characters to succeed on an Intellect task to open it and pass through to the next area. If characters fail to open the door this way, or if they are attempting to simply force the gate, a slot on the side of the door opens and vents a hallucinatory gas into the chamber (treat this as a group GM intrusion). All creatures within immediate distance of the door that fail a difficulty 5 Intellect defense task become confused and violent, seeing each other as horrific monsters and attacking whoever is nearest to them. They remain so affected until they finally succeed on an Intellect defense task.')
    elif content_roll == 8:
        print('Armored: This area contains a 10-foot-tall (3 m) humanoid creature wearing some kind of mechanized armor. The entity is dead and mummified, but its equipment can be salvaged for 2d20 shins, cyphers and 1 or 2 artifacts')
        cypher()
        artifact()
    elif content_roll == 9:
        print('Stutter: A brilliant flash of light from a mechanism in the ceiling leaves a completely altered situation in its wake: instead of attempting to escape the ruin, the characters find themselves clinging to the shell of a vast structure floating in an airless void, with colossal chunks of what might be the Earth spiraling around them in a great planetary cloud. Another stutter of flashing alternative realities engulfs the characters before they can expire in the vacuum, returning them to their previous situation and reality.')
    elif content_roll == 10:
        print('A level 7 carapace helmet artifact. The wearer can breathe normally in almost any environment for one day, but once used, the device cannot be removed until depleted. (Depletion: 1 in 1d20.)')
    elif content_roll == 11:
        print('A level 5 carapace cypher. When attached to a weapon, the next time the weapon (or ammunition fired from it) strikes a target, a tiny insect inflicts an additional 5 points of damage, and the target loses its next turn.')
    elif content_roll == 12:
        print('A level 5 artifact carapace. If attached to a PC’s back, the character can trigger filmy insect wings that grant flight at up to a long distance per round for one hour. (Depletion: 1 in 1d20.)')
    elif content_roll == 13:
        print('A level 6 fist-sized egg cypher. When thrown at a target within short range, it detonates, inflicting 6 points of damage from a cloud of toothed worms that burrow into any nearby flesh.')
    elif content_roll == 14:
        print('A level 7 stafflike artifact with a spinneret at one end. The wielder can attack a target within short range with a strand of webbing that holds the target immobile and unable to take physical actions until it can escape. (Depletion: 1 in 1d10.)')
    elif content_roll == 15:
        print('A level 4 purple tablet cypher. If eaten, the pill immediately restores 5 points to the imbiber’s Intellect Pool, but their skin gains a faint purple luster.')
    elif content_roll == 16:
        print('A level 6 trap mechanism that attempts to drown the intruder in a 25-foot (8 m) deep water-filled shaft.')
    elif content_roll == 17:
        print('A level 5 trap that slams shut on the intruder’s arm, inflicting 10 points of damage, and on a failed Might defense roll, severs the arm.')
    elif content_roll == 18:
        print('A level 5 trap that projects the intruder up and out on a jet of air and eventually leads to a fall from a height of at least 200 feet (61 m).')
    elif content_roll == 19:
        print('A level 6 trap that spins the entire area upside down and drops victims down a 30-foot (9 m) shaft. At the bottom is a swarm of biting insects that inflict 3 points of damage each round until victims can escape.')
    else:
        print('Light of the Gods: In this area, a device consisting of crystal spheres set in a black synth block periodically produces a brilliant blast of light. One character is caught in the blast of light (treat as a GM intrusion) and is infused with an energy virus that periodically makes the character shake and vibrate with supernatural vehemence. These “fits” happen any time the creature takes damage, unless they can succeed on a difficulty 3 Might defense task. If the fit proceeds, an affected creature is essentially helpless for one round while in the grip of the fit. However, for the next three rounds, the creature is treated as if they had a Might and Speed Edge of 6 as light blazes from them. On the fourth round, the creature drops two steps on the damage track. The energy virus remains with the character until they can get it removed by a skilled healer or Aeon Priest.')

def room_size():
    print('Room Size:')
    chamber_size_roll = random.randint(1,20)
    if chamber_size_roll < 3:
        print('closet sized room')
    elif chamber_size_roll < 7:
        print('room is 15ft across')
    elif chamber_size_roll < 16:
        print('room is 30ft across')
    elif chamber_size_roll < 19:
        print('room is 50ft across')
    elif chamber_size_roll == 19:
        print('room is 60ft across')
    else:
        print('room is 90ft across')

def room_shape():
    print('Room shape:')
    chamber_shape_roll = random.randint(1,20)
    if chamber_shape_roll < 3:
        print('circle shaped room')
    elif chamber_shape_roll < 5:
        print('square shaped room')
    elif chamber_shape_roll < 18:
        print('rectangular shaped room')
    elif chamber_shape_roll == 18:
        print('hexagonal room')
    elif chamber_shape_roll == 19:
        print('semi circle shaped room')
    else:
        print('triangular room')

def relic_anatomy():
        print('If relic is located in the Jade Colossus, it takes the form of: ')
        relic_anatomy_roll = random.randint(1,20)
        if relic_anatomy_roll < 4:
            print('Hand')
        elif relic_anatomy_roll < 7:
            print('Mouth')
        elif relic_anatomy_roll < 10:
            print('Eye')
        elif relic_anatomy_roll < 12:
            print('Ear')
        elif relic_anatomy_roll == 12:
            print('Face')
        elif relic_anatomy_roll == 13:
            print('Foot')
        elif relic_anatomy_roll == 14:
            print('Spine')
        elif relic_anatomy_roll == 15:
            print('Heart')
        elif relic_anatomy_roll == 16:
            print('Stomach')
        elif relic_anatomy_roll == 17:
            print('Lung')
        elif relic_anatomy_roll == 18:
            print('Intestine')
        elif relic_anatomy_roll == 19:
            print('Nose')
        else:
            print('Brain')

def explorer_type():
    # add percent change for unique

    # explorer with constantly shifting face, friendly https://cdn.vox-cdn.com/uploads/chorus_image/image/57380619/ezgif.com_gif_maker__1_.0.gif

    # Creating NPCs Type
    # 1. Cyborg
    # 2. Hologram
    # 3. Human
    # 4. Automaton
    # 5. Mutant
    # 6. Varjellen
    #
    # Weirdness
    # 1. A leg is missing, but stands normally.
    # 2. Body parts seems to fade in and out of existence.
    # 3. Changes gender appearances every so often
    # 4. Claims to have always been in the same location as the PCs
    # 5. Crawls on all fours constantly.
    # 6. Crystals instead of hair, making a resonant noise when they turn
    # 7. Eyes change colors depending on their mood
    # 8. Face is motionless, but they can still talk
    # 9. Has a fully-functional tail
    # 10. Has an elongated neck
    # 11. Has tattoos that are constantly shifting,  changing shapes and color.
    # 12. Has two tongues
    # 13. Is covered in mushrooms
    # 14. Is embedded with a number of oddities
    # 15. Never makes eye contact.
    # 16. One limb seems to have a mind of its own
    # 17. Smokes a pipe that dispels blue smoke and never seems to run dry.
    # 18. Their beauty varies by the onlooker.
    # 19. Voice doesn’t match their mouth
    # 20. Wears large beetles as armor.
    #
    #
    #
    # Motivation
    # 1. To achieve balance
    # 2. To avoid notice
    # 3. To be praised
    # 4. To become accomplished
    # 5. To die in glory
    # 6. To enjoy life to its fullest
    # 7. To entertain
    # 8. To explore unknown
    # 9. To gain respect
    # 10. To hide
    # 11. To indulge
    # 12. To kill a particular creature
    # 13. To locate a lost thing
    # 14. To make profit
    # 15. To not screw up
    # 16. To show kindness
    # 17. To show kindness
    # 18. To show malice
    # 19. To travel
    # 20. To uncover a secret
    #
    # Hook
    # 1. A witness to a grave event, however can only remember details under the influence of a variety of dangerous, mind-altering substances.
    # 2. Asks to accompany the PCs on their travels.
    # 3. Asks the PCs for help accomplishing their Motivation.
    # 4. Asks the PCs to exact revenge to settle a petty vendetta.
    # 5. Asks the PCs to help them capture a dangerous creature to keep as a pet.
    # 6. Firmly believes that the PCs will bring the destruction of the town.
    # 7. Has been transformed by a nearby facility.
    # 8. Has something the PCs want.
    # 9. Is in possession of a destructive artifact.
    # 10. Is married to one of the PCs.
    # 11. Is pregnant, claiming one of the PC’s is the father.
    # 12. Is spreading lies about the PCs.
    # 13. NPC has a piece of numenera that they are giving away, no cost, with no explanation. I’m sure its fine.
    # 14. NPC is afraid that he doesn’t really exist.
    # 15. Sputters random legends, some that have come true, others that haven’t, yet.
    # 16. Thinks that the Aeon Priests are hunting them. # 17. NPC wants to hangout with the PCs, and just tag along with them for a while.
    # 18. Only appears at a specific time of the day and has vital information.
    # 19. PCs are tasked with preventing the NPC from accomplishing their Motivation.
    # 20. They can’t speak, but desperately try to communicate they they need a piece of food immediately.

    rarity = random.randint(1,10)
    explorer_amount = random.randint(1,6)
    explorer_class = random.randint(1,10)
    if explorer_class < 8:
         print(explorer_amount + 1, 'explorer(s)')
    elif explorer_class < 10:
        if rarity == 1:
            print('Arch Nano')
        else:
            print(explorer_amount + 1, 'nano(s)')
    else:
         print(explorer_amount + 1, 'Aeon Priest')

def explorer():

    print('You meet other Explorers!')
    print('Usually cautious or suspicious of others, unless noted as having an agenda or goal that works to the PCs’ detriment, randomly encountered explorers are normally amenable to negotiation and even a brief alliance if the characters succeed on a couple of difficulty 5 Intellect tasks for interaction.')

    print('A group of explorers usually carries one or two cyphers and 1d20 shins each, and maybe one artifact between them. Remember that they might use those cyphers and artifacts if they get into a conflict with the PCs.')
    explorer_type()

    explorer_situation = random.randint(1,100)
    if explorer_situation < 3:
        print('One of the explorers is suffering from an infected wound and might die if aid isn’t found soon.')
    elif explorer_situation < 5:
        print('The explorers are flush with cyphers and artifacts, having just salvaged a nearby chamber.')
    elif explorer_situation < 7:
        print('One of the explorers is planning to betray their comrades within the next day to steal an artifact that was denied to them.')
    elif explorer_situation < 9:
        print('One of the explorers tries to defect to the PCs’ group, indicating that they’ve had a falling out with their own group.')
    elif explorer_situation < 11:
        print('One of the explorers tries to defect to the PCs’ group after alienating some of their own group by being a liar, a coward, and a thief.')
    elif explorer_situation < 13:
        print('The explorers are resting without a watch.')
    elif explorer_situation < 15:
        print('The explorers are resting with a “pet” creature* on watch.')
    elif explorer_situation < 17:
        print('Explorers are on the move, following the lead of a floating level 4 automaton salvaged from some other part of the installation.')
    elif explorer_situation < 19:
        print('Explorers are on the move, fleeing from several creatures*.')
    elif explorer_situation < 21:
        print('Explorers are investigating the remains of a dead creature*.')
    elif explorer_situation < 23:
        print('Explorers are found mysteriously and messily dead, but not looted.')
    elif explorer_situation < 25:
        print('One explorer has a strange device (level 6) stuck to their head, which seems to be slowly turning them insane. The explorer’s friends don’t want to admit it.')
    elif explorer_situation < 27:
        print('One of the PCs knows one of the explorers from an encounter several months or years ago, a meeting that left bad blood between them.')
    elif explorer_situation < 29:
        print('One of the explorers knows a PC and apparently feels as if they owe that character their devotion because the PC saved them in the past. The PC may or may not remember this event.')
    elif explorer_situation < 31:
        print('Two additional explorers accompany the group, each an apparent duplicate of the group leader, identical but for the odd device they have in place of heads.')
    elif explorer_situation < 33:
        print('One of the explorers is an apparent duplicate of one PC, identical but for the odd device the duplicate has in place of their head. The other explorers say their device-headed ally—who never speaks—joined them while they were traveling through the installation. The duplicate acts as if the PC doesn’t exist.')
    elif explorer_situation < 35:
        print('The explorers all bear odd antennae-like metallic rods protruding from the backs of their necks. They act as if dazed and uncertain of where they are, or possibly even who they are.')
    elif explorer_situation < 37:
        print('One of the explorers is on the edge of heartbreak, having lost their pet seskii elsewhere in the installation.')
    elif explorer_situation < 39:
        print('A light-eating nimbus clings to one explorer, and their allies keep their distance. They say the nimbus just appeared one day, and since then, the group has suffered a series of unfortunate incidents they attribute to bad luck. According to their story, the bearer of the nimbus has enjoyed only good luck.')
    elif explorer_situation < 41:
        print('The explorers are only about a foot high. They say they’ve been wandering lost in the installation for days, not realizing they’d been shrunk; they thought they’d been transported to a parallel dimension where everything was larger.')
    elif explorer_situation < 43:
        print('A creature* accompanies the explorers, and they interact with it as if it were an oracle, even if it isn’t normally known for such an ability or can’t communicate in a way that seems to make sense')
    elif explorer_situation < 45:
        print('The explorers use weapons that fire tiny darts covered with level 5 poison.')
    elif explorer_situation < 47:
        print('The explorers encountered a device that wiped their memories, and they’ve been wandering afraid and confused for days.')
    elif explorer_situation < 49:
        print('The explorers seem normal at first, if standoffish and quiet, but they are dead, and a device nestled in the back of one explorer is invisibly holding all of them up, making them seem alive.')
    elif explorer_situation < 51:
        print('One of the explorers has metal insects for teeth, which leave their host\'s mouth and speak for the host (or attack the host\'s foes).')
    elif explorer_situation < 51:
        print('The explorers are all related, including one or perhaps two parents and their children.')
    elif explorer_situation < 55:
        print('One explorer has been secretly killing off others in the group for their own reasons. The explorers say that when they entered the structure, they had double their current number.')
    elif explorer_situation < 57:
        print('On one of the explorers, one forearm has been replaced with an elongated metallic pyramid. It’s a formidable weapon, but the explorer can’t hold things with it, and they bear scars on other body parts where they accidentally cut themselves on the jagged point.')
    elif explorer_situation < 59:
        print('The explorers are part of a larger group that claims the structure for its own use, and they are very aggressive toward creatures and characters who are not part of that group.')
    elif explorer_situation < 61:
        print('One or two of the explorers have become addicted to a blue fungus they found growing in the area (or a nearby area), and now they can’t go more than a few hours without needing to eat more.')
    elif explorer_situation < 63:
        print('The explorers were dazed by exposure to a device somewhere in the structure, and upon seeing the PCs, they respond like young animals do when imprinting on an adult. This lasts for a few hours or days, but eventually wears off.')
    elif explorer_situation < 65:
        print('The explorers seem friendly, but they’re bandits.')
    elif explorer_situation < 67:
        print('One of the explorers is a cartographer and wants to see any maps the characters have made. In return, they offer to show the PCs their maps.')
    elif explorer_situation < 69:
        print('One of the explorers appears to be made of glass.')
    elif explorer_situation < 71:
        print('One of the explorers constantly expels shelled slugs from their mouth, one or two a minute, but seems to regard the condition as similar to having chronic hiccups. The slugs slowly glide away if allowed.')
    elif explorer_situation < 73:
        print('The explorers are partially out of phase after a run-in with a device that detonated, leaving them unable to interact with anything around them. They are looking for help.')
    elif explorer_situation < 75:
        print('The explorers ride a large, many-legged level 4 automaton. It is big enough to accommodate up to four explorers as a mount, but narrow enough to fit down most corridors in the structure.')
    elif explorer_situation < 77:
        print('One of the explorers floats in a silvery, transparent bubble just a foot above the floor. The bubble hedges out insults, harsh language, and shocking sights. To that explorer, the world seems idyllic and peaceful.')
    elif explorer_situation < 79:
        print('One of the explorers has the others in their group chained to the synthreinforced band of their belt.')
    elif explorer_situation < 81:
        print('One of the explorers sings loudly and often, apparently believing they are raising their compatriots’ spirits, when in fact the songs annoy the group—which is quite obvious to the PCs.')
    elif explorer_situation < 83:
        print('The explorers initially believe that the characters have been dispatched by some other group to find and assassinate them.')
    elif explorer_situation < 85:
        print('One of the explorers offers to tell the characters one of the seven hidden words and one of the six lost symbols, in return for an artifact. Are the word and symbol actually valuable, or is it a ruse? Maybe both.')
    elif explorer_situation < 87:
        print('One of the explorers wears a spherical helm, through which can be seen what appears to be a view of a spiral vortex, like a galaxy, instead of a face. This explorer never talks, but instead motions. The other explorers do whatever this one says.')
    elif explorer_situation < 89:
        print('On seeing the characters, the explorers react as if seeing their worst nightmares, dropping whatever they were holding and fleeing in random directions if possible. Either the characters have gained a reputation, or the explorers were reacting to something the PCs haven’t yet noticed about themselves or about something that invisibly accompanies them.')
    elif explorer_situation < 91:
        print('One of the explorers claims to be a relative of the Amber Pope himself. ')
    elif explorer_situation < 93:
         print('The explorers are connected by a thin, living tube, which is flexible and shifts of its own accord so it doesn’t entangle or trip them.')
    elif explorer_situation < 95:
        print('One explorer is made up of hundreds of tiny serpents, which sometimes break apart into disparate creatures before returning to a single entity.')
    elif explorer_situation < 97:
        print('Scintillating crystals orbit around one explorer.')
    elif explorer_situation < 99:
          print('The explorers are desperately looking for a missing member of their group, who was gone when they woke from sleep. The one missing had been on watch.')
    else:
        print('One of the characters recognizes one or more of the explorers from an interaction in a nearby community. The interaction might have been positive, negative, or just weird.')

def corridor():
    print('A 10 feet by 10 feet corridor:\n')
    path_marker()
    # determine whether it is empty (80%) or has content (20%).
    corridor_empty_roll = random.randint(1,100)
    if corridor_empty_roll < 21:
        print('corridor is empty')
    else:
        content()

    corridor_path = random.randint(1,20)
    if corridor_path < 8:
        print('corridor extends 20 feet leading to:')
        random_situation()
        ruins_exit()
    elif corridor_path < 11:
        print('corridor extends a short distance leading to:')
        random_situation()
        ruins_exit()
    elif corridor_path == 11:
        print('corridor blocked by a collapse')
        random_situation()
    elif corridor_path == 12:
        print('corridor comes to a dead end')
        random_situation()
    elif corridor_path == 13:
        print('corridor bends left')
        random_situation()
        ruins_exit()
    elif corridor_path == 14:
        print('corridor bends right')
        random_situation()
        ruins_exit()
    elif corridor_path == 15:
        print('corridor slopes up')
        random_situation()
        ruins_exit()
    elif corridor_path == 16:
        print('corridor slopes down')
        random_situation()
        ruins_exit()
    elif corridor_path == 17:
        print('30-foot-long corridor with a room at the far end')
        random_situation()
        chamber()
    elif corridor_path == 18:
        print('corridor runs an immediate distance into an interstitial cavity, then runs an additional distance across that cavity’s entire width as a catwalk')
        random_situation()
        cavity()
        print('corridor at the end of the catwalk leads to:', corridor())
    elif corridor_path == 19:
        print('30-foot-long corridor with a room on either side and an exit at the end')
        random_situation()
        print('First chamber', chamber())
        print('Second chamber', chamber())
        ruins_exit()
        #print('Left path:', corridor())
        #print('Right path', corridor())
    else:
        # an X, Y, or T intersection; roll again on this table as required
        intersection = ""
        print('30 ft corridor comes to an intersection')
        random_situation()
        intersection_roll = random.randint(1, 3)
        if intersection_roll == 1:
            intersection = 'four way intersection, generate 4 exits'
            ruins_exit()
            ruins_exit()
            ruins_exit()
        elif intersection_roll == 2:
            intersection = 'splits into a Y intersection with two corridors veering to the left and right, generate 2 exits'
            ruins_exit()
            ruins_exit()
        else:
            intersection = 'splits into a T intersection with two corridors going left and right, generate 2 exits'
            ruins_exit()
            ruins_exit()

        #print('Left path:', corridor())
        #print('Right path', corridor())
        #print('Straight:', corridor())

def chamber():

    print('Chamber:')
    room_size()
    room_shape()

    print('Chamber contains:')
    chamber_feature = random.randint(1,332)
    if chamber_feature == 1:
        print('Intricate knot in synth cable; re-knots if undone ')
    elif chamber_feature == 2:
        print('Floating black sphere that shifts hue on touch')
    elif chamber_feature == 3:
        print('Glass panels that reverse reflections in time')
    elif chamber_feature == 4:
        print('Yellow fluid that turns to gas if warmed by touch')
    elif chamber_feature == 5:
        print('Crystal cylinders filled with thousands of dead laaks')
    elif chamber_feature == 6:
        print('Green crystal rods age explorers one day per minute')
    elif chamber_feature == 7:
        print('Spheres shed bright light, triggered by movement')
    elif chamber_feature == 8:
        print('Water leak creates ice sculptures in bizarre shapes')
    elif chamber_feature == 9:
        print('Umbilical ports provide those who can connect +1 to Intellect Edge for one hour, once a day')
    elif chamber_feature == 10:
        print('Umbilical ports provide those who can connect deep sleep and strange dreams for one hour')
    elif chamber_feature == 11:
        print('Crystal dome shows planetary sphere (real-time view of Earth from high above in the void)')
    elif chamber_feature == 12:
        print('Crystal dome shows a parallel-dimension version of the viewer')
    elif chamber_feature == 13:
        print('Crystal dome shows a map of the chamber and all other chambers within long range')
    elif chamber_feature == 14:
        print('Crystal dome shows the exterior of the ruin')
    elif chamber_feature == 15:
        print('Square pool of clear fluid, but thick as honey')
    elif chamber_feature == 16:
        print('Square pool of opaque black fluid that flows to cover explorers, forming a second skin that prevents wearer from seeing, breathing, etc.')
    elif chamber_feature == 17:
        print('Square pool of boiling white fluid that is cool to the touch')
    elif chamber_feature == 18:
        print('Square pool, empty but contains orange crystal residue; if rehydrated, a creature* emerges')
        ruins_creature()
    elif chamber_feature == 19:
        print('Pod dehydrates any living creature that enters, creating a slim husk. Rehydration requires a successful Intellect task.')
    elif chamber_feature == 20:
        print('Floor electrostatically sticky, holds explorers')
    elif chamber_feature == 21:
        print('Black cylinder emits a low gravity field')
    elif chamber_feature == 22:
        print('Clear cylinder emits subsonic vibration')
    elif chamber_feature == 23:
        print('Synth sculpture moves incrementally when touched')
    elif chamber_feature == 24:
        print('Complex pattern in a crystal places target’s mentality in psychic labyrinth until they can escape')
    elif chamber_feature == 25:
        print('Complex pattern in a crystal induces viewers to laugh with unexpected pleasure')
    elif chamber_feature == 26:
        print('Complex pattern in a crystal grants viewer an asset on next Intellect task attempted')
    elif chamber_feature == 27:
        print('Complex pattern in a crystal makes viewer feel unaccountably sad')
    elif chamber_feature == 28:
        print('Archway duplicates creature, without equipment, but dead')
    elif chamber_feature == 29:
        print('Archway cleans anything that moves through it')
    elif chamber_feature == 30:
        print('Archway steals one organ from any living creature that moves through it; replacing the organ requires a difficulty 5 Intellect task')
    elif chamber_feature == 31:
        print('Rack of devices hum and whisper in an unknown language if activated')
    elif chamber_feature == 32:
        print('Complex device with a flat, sparkling surface; all water is sucked from anything touched to the surface (inflicting 2 points of Speed damage to a character who touches it)')
    elif chamber_feature == 33:
        print('Rack of devices blink faster and faster for one minute when activated, then go dead again')
    elif chamber_feature == 34:
        print('Rack of devices become ten times heavier when activated')
    elif chamber_feature == 35:
        print('Rack of brains in jars whisper in an unknown language')
    elif chamber_feature == 36:
        print('Wide metallic urn from which crystal bubbles emerge and waft until they burst')
    elif chamber_feature == 37:
        print('Wide metallic urn from which liquid bubbles emerge and waft, emitting psychic questions of surprise and curiosity, until they burst')
    elif chamber_feature == 38:
        print('Wide metallic urn from which acidic bubbles emerge and waft, endangering explorers')
    elif chamber_feature == 39:
        print('Wavering light sculpture resembling a human brain with three major divisions instead of two')
    elif chamber_feature == 40:
        print('Wavering light sculpture flicks into existence, displaying brain of nearest explorer')
    elif chamber_feature == 41:
        print('Wavering light sculpture of a circular portal through which stars and galaxies are visible')
    elif chamber_feature == 42:
        print('Dozens of translucent spheres, soft to the touch, form a mechanism that emits a lilac and ozone odor')
    elif chamber_feature == 43:
        print('Metallic pod petrifies objects')
    elif chamber_feature == 44:
        print('Metallic pod puts anything that enters into stasis, which lasts until the pod ejects the object or creature')
    elif chamber_feature == 45:
        print('Metallic pod dyes objects bright blue')
    elif chamber_feature == 46:
        print('Metallic pod turns opaque objects translucent')
    elif chamber_feature == 47:
        print('Metallic pod turns solids to liquids')
    elif chamber_feature == 48:
        print('Metallic pod freezes objects')
    elif chamber_feature == 49:
        print('Metallic pod constantly discharges thick grey fluid that is similar to drit “mud”')
    elif chamber_feature == 50:
        print('Metallic pod hums and vibrates but does nothing else that is obvious to observers')
    elif chamber_feature == 51:
        print('You find:', oddity())
    elif chamber_feature == 52:
        print('Glass barrier holds healthy underwater biome that appears to be much larger on the inside')
    elif chamber_feature == 53:
        print('Glass barrier holds fluid-like translucent fog behind which strange creatures* seem to move')
    elif chamber_feature == 54:
        print('Crystal columns embedded with what seem to be skinless, dead humanoid creatures')
    elif chamber_feature == 55:
        print('Crystal columns glow when cyphers are near')
    elif chamber_feature == 56:
        print('Crystal columns cause nearby cypher’s to glow with energy')
    elif chamber_feature == 57:
        print('Crystal column displays strange symbols in a language too complex for normal humans')
    elif chamber_feature == 58:
        print('Black cylinder emits a high-gravity field')
    elif chamber_feature == 59:
        print('Black cylinder attracts nearby metallic objects')
    elif chamber_feature == 60:
        print('Black cylinder repels nearby metallic objects')
    elif chamber_feature == 61:
        print('Synth box adds tiny legs to objects placed inside')
    elif chamber_feature == 62:
        print('Synth box adds tiny eyes to objects placed inside')
    elif chamber_feature == 63:
        print('Empty synth boxes are conveyed along a portion of the chamber, emerging from one wall cavity and entering another. A dead mechanism meant to deposit material into the boxes intersects the moving containers.')
    elif chamber_feature == 64:
        print('Empty synth boxes are conveyed along a portion of the chamber, emerging from one wall cavity and entering another. 1/20 boxes contain midnight stone.')
    elif chamber_feature == 65:
        print('Empty synth boxes are conveyed along a portion of the chamber, emerging from one wall cavity and entering another. 1/10 boxes appear to contain a mudlike substance.')
    elif chamber_feature == 66:
        print('Empty synth boxes are conveyed along a portion of the chamber, emerging from one wall cavity and entering another. 1/10 boxes appear to contain random dead objects of the numenera that someone with crafting or similar knowledge could use as parts.')
    elif chamber_feature == 67:
        print('Machine fuses any two objects brought near it')
    elif chamber_feature == 68:
        print('Machine halves any two objects brought near it')
    elif chamber_feature == 69:
        print('Machine grinds small object into drit')
    elif chamber_feature == 70:
        print('Machine heats objects to boiling temperature')
    elif chamber_feature == 71:
        print('Machine adds tiny wheels to any object')
    elif chamber_feature == 72:
        print('Machine adds metallic eyes to any object')
    elif chamber_feature == 73:
        print('Machine stitches metallic wires to any object')
    elif chamber_feature == 74:
        print('Metallic wires absorb all nearby sound')
    elif chamber_feature == 75:
        print('Metallic wires amplify all nearby sound')
    elif chamber_feature == 76:
        print('Synth machine rusts metallic objects')
    elif chamber_feature == 77:
        print('Synth machine magnetizes metallic objects')
    elif chamber_feature == 78:
        print('Synth machine electrifies metallic objects')
    elif chamber_feature == 79:
        print('Two large, hovering, spinning metallic spheres')
    elif chamber_feature == 80:
        print('Two large, hovering, spinning metallic spheres that unlock or powers nearby tech')
    elif chamber_feature == 81:
        print('Two large, hovering, spinning metallic spheres that locks or powers down nearby tech')
    elif chamber_feature == 82:
        print('Two large, hovering, spinning metallic spheres that stop spinning when questions are asked in the chamber, and don’t start again until some kind of answer is provided')
    elif chamber_feature == 83:
        print('Two large, hovering, spinning metallic spheres that glow bright red if a visitant from another world or dimension enters the chamber')
    elif chamber_feature == 84:
        print('Hovering orb-shaped space eats all light')
    elif chamber_feature == 85:
        print('Hovering orb-shaped space eats all light but objects thrown in space appear elsewhere')
    elif chamber_feature == 86:
        print('Hovering orb-shaped space eats all light but objects thrown in space are disintegrated')
    elif chamber_feature == 87:
        print('Black, rectangle-shaped slab emits deep hum')
    elif chamber_feature == 88:
        print('Black, rectangle-shaped slab emits deep hum and thoughts of nearby creature are displayed as images on slab’s surface')
    elif chamber_feature == 89:
        print('Black, rectangle-shaped slab emits deep hum and slab replicates consciousness of nearby creature into small yellow, floating crystal sphere')
    elif chamber_feature == 90:
        print('Contact with wall causes slightly acidic gas to spray from ceiling fixtures for several minutes')
    elif chamber_feature == 91:
        print('Contact with wall causes white paste to emerge from wall fixture for several rounds; the paste is somewhat nutritious but tastes terrible')
    elif chamber_feature == 92:
        print('Contact with wall causes fixture elsewhere in the chamber to detonate, but only once')
    elif chamber_feature < 96:
        print('Contact with wall causes entire opposite wall to lift and reveal another chamber')
        chamber()
    elif chamber_feature < 98:
        print('Contact with wall causes entire opposite wall to lift and reveal another chamber')
        machine()
    elif chamber_feature < 101:
        print('Trapped** chamber ** A trapped chamber presents as a chamber with one or two normal features, but on a failed attempt to interact with a feature safely, a psychic scream inflicts 4 points of Intellect damage (ignores Armor). Trap effects should be presented as GM intrusions. Other trap effects are possible, including the room’s wall pinching closed, a teleportation effect that transfers a target to a hidden lab or detention cell, or an alarm.')
    elif chamber_feature == 101:
        print('Multidimensional crystal object the size of a human head floats and moans, as if in pain')
    elif chamber_feature == 102:
        print('Long, snakelike extensions made of metal extrude from the floor and ceiling of this room')
    elif chamber_feature == 103:
        print('Squares of the floor intermittently becomes intangible and disappear for a few seconds but then return')
    elif chamber_feature == 104:
        print('Glass container on metallic pole contains rapidly darting gobs of red-glowing goo')
    elif chamber_feature == 105:
        print('Time stutters in area, causing rounds to replay over and over until a character succeeds on a difficulty 5 Intellect task')
    elif chamber_feature == 106:
        print('Device removes eyes of those who use it and stores them in nearby vessel')
    elif chamber_feature == 107:
        print('Leafless “tree” of bronze-colored metal whispers secrets in an unknown language')
    elif chamber_feature == 108:
        print('Leafless “tree” of bronze-colored metal whispers strange questions')
    elif chamber_feature == 109:
        print('Leafless “tree” of bronze-colored metal whispers compliments')
    elif chamber_feature == 110:
        print('Thin vortex of grey mist sometimes springs up a chamber’s center, spins for a few minutes, then fades')
    elif chamber_feature == 111:
        print('Metallic headbands found in discarded jumble contain infectious psychic virus; initial symptoms are whispers that only the infected can hear, but as infection worsens, others also begin to hear them')
    elif chamber_feature == 112:
        print('Invisible device casts shadow, hums quietly')
    elif chamber_feature == 113:
        print('Messily disassembled automaton is scattered here')
    elif chamber_feature == 114:
        print('Disembodied mechanical hand floats in the air')
    elif chamber_feature == 115:
        print('Disembodied mechanical hand floats in the air and tries to grip anything that comes near and crushes it')
    elif chamber_feature == 116:
        print('Door to chamber disappears behind you and appears to be a seamless wall with no obvious way to open it again')
    elif chamber_feature == 117:
        print('Spinning disc hangs at chamber’s center')
    elif chamber_feature == 118:
        print('A giant disc floats in the chamber’s center and spins up when disturbed, going faster and faster until it detonates after three rounds')
    elif chamber_feature == 119:
        print('Spinning disc hangs at chamber’s center changes speed of spin to replicate sounds like words when players talk')
    elif chamber_feature == 120:
        print('Chamber suspended on synth cords attached to a much higher area; sometimes chamber moves between those areas')
    elif chamber_feature == 121:
        print('Torso of faceless humanoid of white synth protrudes from wall, makes strange gestures in response to questions')
    elif chamber_feature == 122:
        print('Turquoise-hued polyp drips ichor that pools here')
    elif chamber_feature == 123:
        print('Pool of liquid metal that is cold to the touch')
    elif chamber_feature == 124:
        print('Pool of liquid metal that hardens any objects dipped inside to steel-like rigidity a few rounds later')
    elif chamber_feature == 125:
        print('Pool of liquid metal that animates to form visages imitating anyone looking into pool')
    elif chamber_feature == 126:
        print('Creatures that trigger a slender device gain a glowing, symbol-like tattoo on their foreheads')
    elif chamber_feature == 127:
        print('Creatures that trigger a slender device gain a glowing, symbols that replace a creature’s irises, though they don’t interfere with vision')
    elif chamber_feature == 128:
        print('Beam of light suspends a massive stone cube scribed with strange writing; breaking the light beam causes the cube to crash down and break')
    elif chamber_feature == 129:
        print('Beam of light suspends a massive stone cube scribed with strange writing; breaking the light beam causes the cube to crash down and break. The broken cube contains a creature* in stasis, now waking')
    elif chamber_feature == 130:
        print('Beam of light lifts and suspends any creature or object that enters')
    elif chamber_feature == 131:
        print('Beam of light lifts and suspends any creature or object that enters and begins to quickly age')
    elif chamber_feature == 132:
        print('Glass container holds slug-like creatures without eyes in a haze of orange mist that sustains them')
    elif chamber_feature == 133:
        print('Glass container holds slug-like creatures without eyes in a haze of orange mist that sustains them, but slugs are intelligent and telepathic, without much purpose or motivation')
    elif chamber_feature == 134:
        print('Glass container holds slug-like creatures without eyes in a haze of orange mist that sustains them, but slugs are intelligent, telepathic, and desperate to convince explorers to free them')
    elif chamber_feature == 135:
        print('Nozzles sporadically spray area with water vapor')
    elif chamber_feature == 136:
        print('Nozzles sporadically spray area with acidic vapor')
    elif chamber_feature == 137:
        print('Nozzles sporadically spray area with sleep inducing vapor')
    elif chamber_feature == 138:
        print('Nozzles sporadically spray area with vapor that distorts concepts of distance, making things seem closer or farther away')
    elif chamber_feature == 139:
        print('Nozzles sporadically spray area with a wonderful and pleasing odor')
    elif chamber_feature == 140:
        print('Mechanism in this chamber attempts to communicate by changing light intensity on a screen')
    elif chamber_feature == 141:
        print('Creature* uses chamber to gestate/birth/hide young')
    elif chamber_feature == 142:
        print('Remnants of shattered device scattered here ')
    elif chamber_feature == 143:
        print('Remnants of shattered device scattered here. If shards are brought together, they spontaneously assemble to create an artifact; artifact seems normal but upon depletion it detonates ')
    elif chamber_feature == 144:
        print('Synth and metal disc can be used as a levitating vehicle for up to one hour per day (depletion: 1 in 1d6')
    elif chamber_feature == 145:
        print('Synth and metal disc can be used as a levitating vehicle for up to one hour per day but on second use, levitating metal disc delivers passengers to some other location in structure that they don’t choose')
    elif chamber_feature == 146:
        print('Sparkling dust (inactive nanites) fills this chamber in fine drifts')
    elif chamber_feature == 147:
        print('Sparkling dust (inactive nanites) fills this chamber in fine drifts but one investigating character gains a glowing nimbus (composed of orbiting nanites) ')
    elif chamber_feature == 148:
        print('Sparkling dust (inactive nanites) fills this chamber in fine drifts but one investigating character gains a light-eating nimbus that seems to alter odds slightly in the character’s favor but with negative consequences for allied characters ')
    elif chamber_feature == 149:
        print('Sparkling dust (inactive nanites) fills this chamber in fine drifts but the character\'s glowing nimbus that enrages any visitant that sees the character ')
    elif chamber_feature == 150:
        print('Pulses of green light are emitted from a sphere-like device, changing slightly with each pulse as if counting something down.')
    elif chamber_feature == 151:
        print('Pulses of green light are emitted from a sphere-like device, changing slightly with each pulse as if counting something down. When it reaches zero, there is a dramatic reversal in local gravity ')
    elif chamber_feature == 152:
        print('Pulses of green light are emitted from a sphere-like device, changing slightly with each pulse as if counting something down. When reaching zero, a nearby spatial portal appears, which changes at each turnover')
    elif chamber_feature == 153:
        print('Spatial flaw, held in place by tech in chamber, closes if machine is deactivated ')
    elif chamber_feature == 154:
        print('Spatial flaw, held in place by tech in chamber, closes if machine is deactivated. Those who enter chamber take ambient damage from folding space each round ')
    elif chamber_feature == 155:
        print('Spatial flaw, held in place by tech in chamber. The flaw begins to expand if machine is deactivated, risking sucking nearby objects and creatures into it ')
    elif chamber_feature == 156:
        print('Walls of chamber striped with material that absorbs light and warmth, making area impossible to illuminate or heat ')
    elif chamber_feature == 157:
        print('Walls of chamber striped with material that absorbs sound and vibration, making area impossible to hear any noise or hear anyone speak')
    elif chamber_feature == 158:
        print('Walls of chamber striped with material that absorbs absorbs emotion, making it impossible to feel happy, sad, curious, scared, or other motivating emotion.')
    elif chamber_feature == 159:
        print('Area shakes, shifts, sometimes rotates')
    elif chamber_feature == 160:
        print('Area randomly spins rapidly, ejecting contents through a door way or pinning to a wall')
    elif chamber_feature == 161:
        print('Skull of dead human explorer has metallic insects for teeth, which bites investigators if touched. Could be salvaged or used as an artifact replacement for teeth')
    elif chamber_feature == 162:
        print('Device attempts to operate on living creatures; it can heal hurts great and small, but often malfunctions')
    elif chamber_feature == 163:
        print('Device attempts to operate on living creatures; it can replace teeth with metal')
    elif chamber_feature == 164:
        print('Device attempts to operate on living creatures; it add vestigial winglike aparatus to back that do not initially seem functional')
    elif chamber_feature == 165:
        print('Device attempts to operate on living creatures; it can replaces one eye with blank metal orb that doesn’t initially seem functional')
    elif chamber_feature == 166:
        print('Device attempts to operate on living creatures; it can replace a limb of a living creature with a long, pointed cone of red metal')
    elif chamber_feature == 167:
        print('Device close to malfunction; failed Intellect task causes device and chamber to disappear, causing a new rupture in the larger structure')
        rupture()
    elif chamber_feature == 168:
        print('Green metallic boxes hum and spit sparks')
    elif chamber_feature == 169:
        print('Red metallic boxes hum and spit sparks; induce malfunction in nearby active devices and tech')
    elif chamber_feature == 170:
        print('Blue metallic boxes hum and spit sparks; add +1 to level of all nearby active devices and tech')
    elif chamber_feature == 171:
        print('Clear metallic boxes hum and spit sparks; allow nearby creatures to stare into parallel dimensions, which can be confusing when scenes overlay the base reality')
    elif chamber_feature == 172:
        print('Thick blue disc emits a variety of intense, moody, and sometimes overwhelming sounds that can be pleasant or evocative, but which eventually draw other creatures* ')
    elif chamber_feature == 173:
        print('Silver spheres on device seem like simple metallic orbs, but have an allure via telepathic induction that is difficult to ignore')
    elif chamber_feature == 174:
        print('Silver spheres on device seem like simple metallic orbs, but have an allure via telepathic induction that is difficult to ignore; character must resist having one memory telepathically edited out')
    elif chamber_feature == 175:
        print('Silver spheres on device seem like simple metallic orbs, but have an allure via telepathic induction that is difficult to ignore; character gains an affection for a kind of food, activity, or entertainment that previously never appealed')
    elif chamber_feature == 176:
        print('Milk-colored solid floating in transparent tube impossibly has nineteen equally matched sides and eight angles')
    elif chamber_feature == 177:
        print('Wall mirror reflects images upside down')
    elif chamber_feature == 178:
        print('Wall mirror reflects characters as silhouettes')
    elif chamber_feature == 179:
        print('Wall mirror reflects unfamiliar faces back')
    elif chamber_feature == 180:
        print('Wall “mirror” is actually glass pane behind which complex automatons try to exactly mimic what happens in front of the pane')
    elif chamber_feature == 181:
        print('Wall mirror births automatons that look like creatures pictured in it minutes earlier, but they have a lifespan of only hours')
    elif chamber_feature == 182:
        print('Booth with glowing light causes extreme pain to creatures on it')
    elif chamber_feature == 183:
        print('Booth with glowing light causes extreme pain to creatures who steps inside it; persists for hours and character begins to transform')
        level = random.randint(1,6)
        mutation(level)
    elif chamber_feature == 184:
        print('Booth with glowing light provides pleasure/relief from malaise')
    elif chamber_feature == 185:
        print('Booth with glowing light provides perfect recollection of past')
    elif chamber_feature == 186:
        print('Booth with glowing light makes creatures voraciously hungry')
    elif chamber_feature == 187:
        print('Booth with glowing light makes creatures crave and enjoy pain for next hour')
    elif chamber_feature == 188:
        print('Device fashions odd but somehow alluring synth bracelets that could be used as jewelry')
    elif chamber_feature == 189:
        print('Device fashions odd but somehow alluring synth bracelet that hovers around wearer')
    elif chamber_feature == 190:
        print('Device fashions odd but somehow alluring synth bracelet that begins to fuse to wearer’s flesh')
    elif chamber_feature == 191:
        print('Synth nests hold insect-like automatons that act as a single intelligence that knows a little of nearby areas')
    elif chamber_feature == 192:
        print('Synth nests hold insect-like automatons that act as a single intelligence that guards nearby areas')
    elif chamber_feature == 193:
        print('Synth nests hold insect-like automatons that act as a single intelligence that secretly tries to take control of and “infest” one character with nests')
    elif chamber_feature == 194:
        print('White fire “burns” here, but isn’t hot; objects and creatures that enter area begin to flame, but do not burn')
    elif chamber_feature == 195:
        print('White fire “burns” here, but isn’t hot; objects and creatures that enter area begin to freeze')
    elif chamber_feature == 196:
        print('Circular synth conduits run through the area, conveying pale liquids to other areas')
    elif chamber_feature == 197:
        print('Circular synth conduits run through the area that leak pools pale liquid here that has 100 times the surface tension of normal water')
    elif chamber_feature == 198:
        print(' Anyone passing through the area suddenly accelerates to 10 times their starting pace, potentially turning creatures and objects into dangerous projectiles')
    elif chamber_feature == 199:
        print('Ceiling dome sparkles with random glows and hums')
    elif chamber_feature == 200:
        print('Dead devices; salvage of 1d6 cyphers and 2d20 shins')
    elif chamber_feature == 201:
        print('Wrecked library; book salvage possible')
    elif chamber_feature == 202:
        print('Active devices; can attempt to use level 6 equipment to send transdimensional message or salvage of 1d6 cyphers and 2d20 shins')
    elif chamber_feature == 203:
        print('Water-filled; one additional exit opens to underwater area')
    elif chamber_feature == 204:
        print('Active devices; can attempt to use level 6 equipment to widely vary temperature of all nearby rooms or salvage of 1d6 cyphers and 2d20 shins')
    elif chamber_feature == 205:
        print('Active mechanism of the numenera; can attempt to use level 7 equipment to induce beneficial mutations or salvage of 1d6 cyphers and 2d20 shins')
    elif chamber_feature == 206:
        print('Room stocked with containers filled with strange and varied drink')
    elif chamber_feature == 207:
        print('Wrecked room that has shattered boxes; equipment salvage possible')
    elif chamber_feature == 208:
        print('Amphitheatre-like chamber; performance by audible illusions possible')
    elif chamber_feature == 209:
        print('Crawling with strange insects')
    elif chamber_feature == 210:
        print('Wrecked armory; weapon salvage possible, up to and including a few artifact weapons')
    elif chamber_feature == 211:
        print('Empty but for dust, enigmatic scratches on walls and floor')
    elif chamber_feature == 212:
        print('Menagerie filled with dead and mummified animals of various descriptions')
    elif chamber_feature == 213:
        print('Skeleton of a massive predatory animal held together with rusting strands of metal')
    elif chamber_feature == 214:
        print('Sculptures in synth of humans, various visitants, and completely strange creatures')
    elif chamber_feature == 215:
        print('A level 5 Glaive separated from her companions that sees newcomers as another threat')
    elif chamber_feature == 216:
        print('Active devices; can attempt to use level 6 equipment to heal all points in a Pool or cure other maladies or salvage of 1d6 cyphers and 2d20 shins')
    elif chamber_feature == 217:
        print('Room with windows that overlook an alternate location that should not be possible')
    elif chamber_feature == 218:
        print('Dead humanoid corpse four times larger than normal human; carries an artifact')
    elif chamber_feature == 219:
        print('A level 6 darkness that quickly dims and kills off all forms of illumination (level 6 effect)')
    elif chamber_feature == 220:
        print('A level 7 blinding light from a central crystalline device fixed in space')
    elif chamber_feature == 221:
        print('Parallel-dimension versions of the PCs, dead and mauled. A Reality Comb is found.\n REALITY COMB (ARTIFACT)\nLevel: 6\nForm: Lightweight synth handheld device with viewscreen Effect: Wearer gains an asset when attempting to understand and find a particular dimension when traveling between dimensions (whether in the Sideslip Fields or elsewhere). It may have preselected locations coded into it. Depletion: 1 in 1d20')
    elif chamber_feature == 222:
        print('Gallery filled with strange art and sculptures')
    elif chamber_feature == 223:
        print('Completely filled with rubble')
    elif chamber_feature == 224:
        print('Shins, oddities, cyphers, and artifacts')
    elif chamber_feature == 225:
        print('Collection of cyphers, including Nalranin connection graft and ice prison')
    elif chamber_feature == 226:
        print('Colossal structure created with 100 humanoid bodies')
    elif chamber_feature == 227:
        print('Packetized estathin, butchered and packed as if for food')
    elif chamber_feature == 228:
        print('Plant with pollen that induces happy, dream-filled slumber')
    elif chamber_feature == 229:
        print('Titanothaur, gargantuan creature of destruction appears frozen in stasis')
    elif chamber_feature == 230:
        print('Gravity is 5 times stronger than normal but affects only organic matter')
    elif chamber_feature == 231:
        print('Light is refracted and allows everyone in the chamber to see a few feet to the right')
    elif chamber_feature == 232:
        print('A level 4 skeane explorer named Ooya. Trained in Attacks, crafting objects and structures, defenses and swimming')
    elif chamber_feature == 233:
        print('Sound becomes a semisolid form of matter in one area')
    elif chamber_feature == 234:
        print('Direct connection terminal to datasphere')
    elif chamber_feature == 235:
        print('Teleportation doorway leading to the moon')
    elif chamber_feature == 236:
        print('Spatial anomaly that turns living creatures a brilliant shade of red, blue, or green')
    elif chamber_feature == 237:
        print('Iron Wind sample')
    elif chamber_feature == 238:
        print('Psionic parasite that infects victim with hallucinations of a higher-dimensional realm')
    elif chamber_feature == 239:
        print('Music of transcendental beauty')
    elif chamber_feature == 240:
        print('Ghostly versions of the explorers that appear to be exploring but can\'t be interacted with')
    elif chamber_feature == 241:
        print('Previous explorers inexplicably turned to glass')
    elif chamber_feature == 242:
        print('Millions of insects unlike anything found anywhere else flutter about')
    elif chamber_feature == 243:
        print('Ringing with music so beautiful it’s painful to leave')
    elif chamber_feature == 244:
        print('Nutrients and oxygen are projected into all inhabitants via constant beams of energy')
    elif chamber_feature == 245:
        print('Every living thing that enters is transformed into a weird bird-insect creature and returned to normal upon exit')
    elif chamber_feature == 246:
        print('Delicious and nutritious fruit grows on the metal walls and ceiling')
    elif chamber_feature == 247:
        print('Constantly “rains” an oily substance throughout')
    elif chamber_feature == 248:
        print('Living creatures teleport to random locations within, at random intervals')
    elif chamber_feature == 249:
        print('Incomprehensible machines argue audibly with each other in an unknown language')
    elif chamber_feature == 250:
        print('Batlike creatures feed upon the metal machines within')
    elif chamber_feature == 251:
        print('Gravity changes in strength at random intervals')
    elif chamber_feature == 252:
        print('Living flesh in the structure slowly turns blue')
    elif chamber_feature == 253:
        print('A chemical in the interior atmosphere intoxicates')
    elif chamber_feature == 254:
        print('A chemical in the interior atmosphere slowly causes illness')
    elif chamber_feature == 255:
        print('Nonliving organic matter (such as packs, leather armor, and clothing) slowly discorporates')
    elif chamber_feature == 256:
        print('Different chambers cause different mental afflictions to those entering')
    elif chamber_feature == 257:
        print('The speed of sound is slowed way, way down, so that sounds come very late')
    elif chamber_feature == 258:
        print('Dramatic temperature changes occur, seemingly at random')
    elif chamber_feature == 259:
        print('Dramatic temperature conditions move slowly through the structure')
    elif chamber_feature == 260:
        print('Thinking creatures’ minds are switched at random')
    elif chamber_feature == 261:
        print('Prolonged flesh-on-flesh contact results in fusion that is painful to separate')
    elif chamber_feature == 262:
        print('Time seems to move at different speeds throughout the structure')
    elif chamber_feature == 263:
        print('The words of everyone are translated into a language no one speaks')
    elif chamber_feature == 264:
        print('Everyone gains a random mutation that fades when they leave')
    elif chamber_feature == 265:
        print('Some (but not all) who enter are incapable of making sounds')
    elif chamber_feature == 266:
        print('Random bits of meaningless and confusing information are constantly transmitted into the brains of all within')
    elif chamber_feature == 267:
        print('The feelings that those who enter have for each other are randomly altered while within')
    elif chamber_feature == 268:
        print('Ghostly creatures move about and carry on their own business, but they cannot be affected or communicated with in any way')
    elif chamber_feature == 269:
        print('Random creatures from the surrounding wilderness suddenly appear inside at random intervals')
    elif chamber_feature == 270:
        print('Devices randomly emit dangerous energy beams in random directions, accompanied by music')
    elif chamber_feature == 271:
        print('All sounds (including spoken words) are repeated again sometime later')
    elif chamber_feature == 272:
        print('The walls and ceiling are an acidic ooze')
    elif chamber_feature == 273:
        print('Invisible creatures move about on their own business and never interact with others except to jostle, make noise, or move objects around')
    elif chamber_feature == 274:
        print('Walls randomly liquefy (splashing a poisonous liquid about), only to reform later')
    elif chamber_feature == 275:
        print('Gravity’s orientation depends on the material—organic materials are pulled one way, metal another, synth another, etc.')
    elif chamber_feature == 276:
        print('Touching the ceiling is addicting and causes hallucinations')
    elif chamber_feature == 277:
        print('The floor constantly flashes with colored lights that are annoying and disorienting')
    elif chamber_feature == 278:
        print('Creatures lose their sense of touch and feel no pain')
    elif chamber_feature == 279:
        print('Although they appear solid, all surfaces are extremely elastic (but do not break)')
    elif chamber_feature == 280:
        print('Creatures suddenly remember where they lost something in the past')
    elif chamber_feature == 281:
        print('Creatures experience visions of their own birth over and over')
    elif chamber_feature == 282:
        print('Groups of individuals slowly begin to think of themselves as a single entity')
    elif chamber_feature == 283:
        print('Everyone becomes telepathic until they leave')
    elif chamber_feature == 284:
        print('Some entering become immediately convinced that they have been here many times before')
    elif chamber_feature == 285:
        print('Ghostly sounds and voices are heard, but the sources are never found')
    elif chamber_feature == 286:
        print('Everyone can fly until they leave')
    elif chamber_feature == 287:
        print('Portions of the bodies of those within become invisible. Lasts 1d20 hours.')
    elif chamber_feature == 288:
        print('Random objects brought in are transformed to a different substance')
    elif chamber_feature == 289:
        print('Mirrored walls reflect only certain colors')
    elif chamber_feature == 290:
        print('Synth becomes rubbery and pliable')
    elif chamber_feature == 291:
        print('Creatures and objects instantly temporarily change color')
    elif chamber_feature == 292:
        print('Creatures gain some form of permanent synesthesia')
    elif chamber_feature == 293:
        print('Some creatures that enter gain amnesia until they leave')
    elif chamber_feature == 294:
        print('Everyone gains memories that are not their own')
    elif chamber_feature == 295:
        print('Creatures spending more than six hours within begin to reproduce asexually via budding')
    elif chamber_feature == 296:
        print('Dangerous electricity arcs across the rooms and corridors, seemingly at random')
    elif chamber_feature == 297:
        print('Screaming echoes throughout the place, but the source can never be found')
    elif chamber_feature == 298:
        print('Cast-off and broken cocoons litter the floor')
    elif chamber_feature == 299:
        print('Fist-sized red gemstones clutter the place but turn to powder if removed')
    elif chamber_feature == 300:
        print('Level 3 damaged automaton moves about, utterly unaware of explorers')
    elif chamber_feature == 301:
        print('Level 3 defense system fires beams of destructive energy at anything that is red')
    elif chamber_feature == 302:
        print('Vents pump out memory-altering gas. Lasts 1d6 hours')
    elif chamber_feature == 303:
        print('Anything made of wood ceases to exist inside (but returns to normal outside)')
    elif chamber_feature == 304:
        print('Large mirrors on walls display x-ray reflections, showing the insides of people and objects')
    elif chamber_feature == 305:
        print('Central area is a true vacuum accessed via airlocks')
    elif chamber_feature == 306:
        print('Liquid-filled tanks hold ancient creatures in suspended animation')
    elif chamber_feature == 307:
        print('Still-functioning equipment is a transmitter keyed to another dimension')
    elif chamber_feature == 308:
        print('Giant globe shows what the earth looked like 500 million years ago')
    elif chamber_feature == 309:
        print('Tiny glowing frogs infest the entire structure')
    elif chamber_feature == 310:
        print('Recently dead reptilian creature has synth tendrils and eyestalks sprouting all over its body')
    elif chamber_feature == 311:
        print('A hard crust slowly grows over the bodies of all who enter')
    elif chamber_feature == 312:
        print('It’s impossible to scratch, stain, or otherwise mar or damage anything in the structure')
    elif chamber_feature == 313:
        print('Machine generates static, which takes on a physical form of ultrathin metal wire twisted upon itself')
    elif chamber_feature == 314:
        print('Curtains of living plasma guard certain areas')
    elif chamber_feature == 315:
        print('Matter randomly becomes energy and vice versa')
    elif chamber_feature == 316:
        print('Walls are covered in graffiti that is ancient but far newer than the structure itself')
    elif chamber_feature == 317:
        print('Automatons made of smoke utterly ignore intruders')
    elif chamber_feature == 318:
        print('A variety of organic eyes stare down from the ceiling')
    elif chamber_feature == 319:
        print('Huge room filled with the remains of tens of thousands of corpses, none of them human')
    elif chamber_feature == 320:
        print('Headless, legless rodents roll about the structure')
    elif chamber_feature == 321:
        print('Paths of movement within the structure are traced in thin red lines that trail behind the moving creature or object')
    elif chamber_feature == 322:
        print('Vivid memories triggered in people’s minds make it difficult to perceive actual reality')
    elif chamber_feature == 323:
        print('Those who enter begin to randomly (and painfully) grow feathers')
    elif chamber_feature == 324:
        print('Holographic images display meaningless and incongruous scenes of unidentifiable creatures and situations')
    elif chamber_feature == 325:
        print('Pits open to randomly dump intruders into the workings of giant machines, eventually to be incorporated into the mechanisms')
    elif chamber_feature == 326:
        print('All who enter henceforth must imbibe liquid methane to survive (unless the condition can be reversed)')
    elif chamber_feature == 327:
        print('A constant droning sound is heard at all times while within and for 1d20 days after leaving')
    elif chamber_feature == 328:
        print('After exiting, explorers find that animals and children shy away from them')
    elif chamber_feature == 329:
        print('It’s impossible to sleep within the structure, although the reason can’t be determined')
    elif chamber_feature == 330:
        print('Those exiting the structure are carriers of a disease that causes chronic weariness and turns exhalations visibly blue')
    elif chamber_feature == 331:
        print('One dead person known to a random explorer is found alive again in this room. ')
    else:
        print('Ceiling dome sparkles with random glows and hums and instills extreme paranoia in creatures who stare into it')


    print('Unless noted otherwise, the interior surfaces of a chamber are constructed of stained synth, metal, or, in some cases, a dark, stone-like substance.')
    print('Unless noted otherwise, or the area is open to natural or artificial sources of light, areas generated by the engine are likely dark. Explorers who can’t see in the dark will need a light source.')
    print('All effects, task difficulties, and defenses triggered by chamber features are, on average, level 5')
    print('Any room that has a feature can probably be salvaged for one or two cyphers and 1d10 shins.')
    print('Random situation in chamber:')
    random_situation()
    path_marker()
    # determine whether it is empty (20%) or has content (80%)
    empty_or_not = random.randint(1,5)
    if empty_or_not == 1:
        empty_room()
    else:
        content()
    print('\n')
    print('Exits:')
    ruins_exit()

def tunnel():
    print('Access tunnel composed of synth and metal, about 3 feet wide and tall. Does not appear to have been intended for regular traffic.\n')
    path_marker()
    tunnel_roll = random.randint(1,20)

    if tunnel_roll <10:
       print('Accessway runs parallel to previously generated chamber(s) or corridor(s) for a short distance with hidden openings into each of those spaces\n')
       tunnel()
    elif tunnel_roll < 13:
        print('Accessway extends a short distance.\n')
        tunnel()
    elif tunnel_roll == 13:
        print('Accessway bends left\n')
    elif tunnel_roll == 14:
        print('Accessway bends right\n')
    elif tunnel_roll == 15:
        print('Accessway extends straight up\n')
    elif tunnel_roll == 16:
        print('Accessway drops straight down\n')
    elif tunnel_roll == 17:
        print('Accessway drops into reclamation pit containing a level 5 deconstructor automaton\n')
    elif tunnel_roll < 20:
        print('Accessway narrows to 4 inches in height and width\n')
        tunnel()
    else:
        print('Accessway runs a short distance and comes to a T intersection\n')
        print('Left path: ', tunnel())
        print('Right path ', tunnel())
    print('Exits:\n')
    ruins_exit()

def rupture():
    print('Rupture\n')

    def rupture_specifics():
        rupture_specifics = random.randint(1,20)
        if rupture_specifics == 1:
            print('Empty of all but drit.')
        elif rupture_specifics == 2:
            print('Area (and potentially a few surrounding corridors) is filled with an orange-red mist that confuses the senses and turns around creatures who enter the space (a level 6 effect) so that when they think they are leaving the area in a known direction, they’re actually leaving and moving in a random direction.')
        elif rupture_specifics == 3:
            print('Tiny metallic insects crawl everywhere; the insects are essentially harmless (level 1) but tend to get into clothing, hair, and bags and packs.')
        elif rupture_specifics == 4:
            print('Area through which the rupture passes was once a vault; roll on the Vault Table to determine the ruined, inactive remains that are scattered through this area.')
        elif rupture_specifics == 5:
            print('Tiny amoeba-like creatures the color of leaves drip and flow around the area; they carry a parasite, and living creatures that enter the area risk contracting a mind-enhancing sickness (a disease) that heightens their mental capacities even as it kills them.')
        elif rupture_specifics == 6:
            print('Crater glowing with residual radiation inflicts 1 point of ambient damage on each creature in the area each minute they spend in the rupture.')
        elif rupture_specifics == 7:
            print('If near the perimeter of the installation, the rupture extends to the outside and could serve as a new entrance/exit to the ruin.')
        elif rupture_specifics == 8:
            print('Water flows swiftly through the rupture from a higher location before plunging in a dramatic fashion to a deeper location 1d10 x 100 feet (30 m) lower in an interstitial cavity; roll on the Interstitial Cavity Table.')
        elif rupture_specifics == 9:
            print('Oddly whorled fungi cover the interior; some of the growths are taller than people.')
        elif rupture_specifics == 10:
            print('Oddly whorled fungi cover the interior; some of the growths are taller than people. The fungi exude soporific spores, putting to sleep anyone who fails a difficulty 5 Might defense task.')
        elif rupture_specifics == 11:
            print('Synth “grass” the color of milk grows in rough patches here and there, rustling slowly.')
        elif rupture_specifics == 12:
            print('Synth “grass” the color of milk grows in rough patches here and there, rustling slowly. The “grass” holds in place anyone who fails a difficulty 5 Might defense task')
        elif rupture_specifics == 13:
            print('Something has been storing skeletons of dead creatures, automatons, and explorers in this rupture, organizing the bones in neat, stacked rows.')
        elif rupture_specifics == 14:
            print('A waxy, slightly cool-to-the touch ooze pools, drips, and undulates here and there about the rupture.')
        elif rupture_specifics == 15:
            print('Stone “grows” through relatively quick crystallization in the rupture, forming geometric crystalline spires.')
        elif rupture_specifics == 16:
            print('A creature* lairs here; roll again on this table to determine the nature of the rupture; the creature is immune to any negative effects.')
            ruins_creature()
        elif rupture_specifics == 17:
            print('Resin-like whorled secretions cover the area, apparently laid down over months or years by some kind of creature or biological process.')
        elif rupture_specifics == 18:
            print('Slender, translucent organic strands hang down from whatever serves as the ceiling, filling the area so thickly that it’s impossible to move through without brushing the strands aside. The strands “sweat” a weak acid that inflicts 2 points of ambient damage each round a creature remains in or moves through the area.')
        elif rupture_specifics == 19:
            print('Metal interior is twisted, warped, bent, and in some cases transformed into other substances; a scholar of the numenera might suspect that the Iron Wind caused the damage.')
        else:
            print('Metal interior is twisted, warped, bent, and in some cases transformed into other substances; a scholar of the numenera might suspect that the Iron Wind caused the damage. A seed of the Iron Wind is still present and could be roused if disturbed.')
        ruins_exit()

    print('Ruptures are unplanned gaps, voids, and hollows found within a prior-world installation.\n')
    print('If a rupture is generated on the Main Feature Table, it should encompass the most recently generated previous feature. For instance, if you rolled a rupture from an exit leading from a corridor, there is no exit; instead, the rupture becomes the exit, which might well “erase” part of the corridor too.\n')
    rupture_specifics()
    print('random situation in rupture:\n')
    random_situation()

def shaft():
    print('Shaft:\n')
    print('Generally speaking, a shaft is composed of synth and metal, measures about 20 feet (6 m) across, and lacks any obvious means of ascent or descent. Climbing a shaft requires a successful difficulty 5 Might task for every long distance ascended or descended. A failure for someone not roped # in leads to a fall that is potentially several hundred feet or more\n')
    shaft_specifics = random.randint(1,20)
    if shaft_specifics < 8:
        print('Shaft extends up and down for 1d10 x 100 feet (30 m)')
    elif shaft_specifics < 11:
        print('Shaft ascends for 1d10 x 100 feet (30 m)')
    elif shaft_specifics < 14:
        print('Shaft descends for 1d10 x 100 feet (30 m)')
    elif shaft_specifics < 16:
        print('Shaft ascends for 1d10 x 100 feet (30 m) and has a conveyance field that whisks those who enter to the next exit named, or to the top of the shaft if nothing specified')
    elif shaft_specifics < 18:
        print('Shaft descends for 1d10 x 100 feet (30 m) and has a conveyance field that whisks those who enter to the next exit named, or to the top of the shaft if nothing specified')
    elif shaft_specifics == 18:
        print('Rubble chokes the shaft, which extends up and down 1d10 x 100 feet (30 m); however, the rubble is large and blocky, creating navigable spaces between pieces that explorers could squeeze through with time and effort')
    elif shaft_specifics == 19:
        print('Shaft drops 1d10 x 100 feet (30 m) into reclamation pit containing a level 7 deconstructor automaton')
    else:
        print('Shaft ascends 1d10 x 100 feet (30 m) and contains a suspended abhuman colony* whose crude domiciles are “webbed” to hang suspended at the shaft’s middle point')
        colony()
    print('\n')
    random_situation()
    print('\n')
    print('Exits:')
    print('Exit at top of shaft: ', ruins_exit() )
    print('Exit at bottom of shaft: ', ruins_exit() )
    print('Exit on sides of shaft:', ruins_exit())

def vault():
    print('Vault:\n')
    print('sealed chamber that stores valuables, or dangerous / important items or creatures\n')
    print('Getting past a vault’s seal normally requires a successful difficulty 7 Intellect task for someone who interacts with a nearby control surface. About 50% of vaults contain defense systems designed to neutralize those who improperly attempt to gain access. A defense system might simply inflict 7 points of energy damage, but it could trigger more elaborate defenses, such as awakening a level 7 defense automaton or causing an even more secure seal to drop in place in front of the already sealed vault entrance. Unless noted otherwise, the interior surfaces of a vault are constructed of level 8 synth that repairs damage done to it over time.\n')
    room_size()
    room_shape()
    print('\n')

    print('If not used for its original purpose, an item of the numenera found in a vault could be salvaged for cyphers, 1d100 shins, and an artifact.')
    cypher()
    artifact()
    print('\n')
    print('Vault contents:')
    vault_contents = random.randint(1,20)
    if vault_contents == 1:
        print('Stacks of metallic disc-shaped oddities that avoid being touched by anything organic, sliding away if possible (grabbing one by hand is a difficulty 3 task).')
    elif vault_contents == 2:
        print('Four fluid-filled canisters each hold what seems to be a human spine grafted with metallic wires and modules. If some method is found for replacing a character’s spine with one of the spines in a canister (and if the character survives), that PC would gain an ability determined randomly using the Artifacts Table in the corebook.')
        artifact()
    elif vault_contents == 3:
        print('Black synth card on a pedestal. If found in the Jade Colossus, the card grants the user an asset on a task related to dealing with a relic, including resisting dangerous effects, avoiding attacks from creatures touched by a relic or that are infused with void matter, or understanding or using a relic. If found in another installation, the card grants access to a key area in the ruin.')
    elif vault_contents == 4:
        print('Level 8 artifact vehicle capable of travel through space. The vault contains a mechanism allowing the vehicle to be deployed to the surface of the installation, where it can launch. It requires a crew of two to four, and can carry up to ten more people or some cargo. It can sustain passengers for up to three months before it needs to return to a planet with a breathable atmosphere. It can travel to locations within the solar system known to the pilot in a few days, or between known distant interstellar locations in about a month. Depletion: 1 in 1d100 (check per day of use).')
    elif vault_contents == 5:
        print('Solid black cube about the size of a human fist encased in a larger clear cube (a level 10 cypher). When the cypher is activated, the clear cube begins to dissolve, which takes ten minutes. After the outer cube dissolves fully, the black cube causes all living creatures in long range that are larger than a small dog to belch forth a cloud of black vapor. This vapor fills the immediate area around the victim, inflicting 10 points of damage to the victim and all other living creatures within the cloud. One round later, all living creatures larger than a small dog within long range of every affected victim belch forth the same cloud (even if they already did so before). This continues until no creatures are affected. The cypher is a horrific doomsday device that could easily destroy an entire city or wipe out an army. ')
    elif vault_contents == 6:
        print('Canister of four level 7 pellets in a mechanical case, each of which shimmers as if on the edge of disappearing. If a pellet is swallowed, mass is drawn to the user from another dimension, allowing them to grow 200 percent larger for one day. During this time, the user gains 12 points to their Might Pool and deals +8 points of damage with all melee attacks, but all Speed-related tasks, including defense, are two steps more difficult. In addition, moving through small spaces could become a challenge.')
    elif vault_contents == 7:
        print('Humanlike head, but 50% larger than normal, preserved in a metallic device with a crystal face. The head may have been alive once or served as a tap into the datasphere, but some sort of error has rendered it so much numenera-suffused preserved flesh.')
    elif vault_contents == 8:
        print('Canister of four level 8 pellets in a mechanical case, each of which is almost ten times heavier than a similar-sized piece of iron. If a pellet is swallowed, the user is transmuted into dull grey metal. The user has entered a safe suspended animation that lasts for 28 hours. While suspended, the user is impervious to attacks lower than level 8. ')
    elif vault_contents == 9:
        print('Vault is actually a vehicle that moves around the interior of the installation on lines of magnetic force, using a system of accessways built for it and similar movable chambers. Figuring out how to engage the vehicle is a level 5 Intellect task. However, it moves somewhat violently, and anyone not secured risks suffering 4 points of Might damage from the sudden starts, turns, and stops. The vehicle apparently has a variable number of preset destinations. Where it actually goes when activated seems to be random, though someone who spends a few weeks experimenting might figure out how to use it reliably. ')
    elif vault_contents == 10:
        print('Razor-thin metallic webs fill the vault. Moving through requires a difficulty 4 Speed defense roll to avoid suffering 4 points of damage per immediate distance crossed. Three level 5 automatons with spiderlike legs move to attack anyone that comes into the vault. ')
    elif vault_contents == 11:
        print('Mechanized vat containing an active nano-fluid. A mechanical crane can be used to douse objects or creatures in the vat (a level 4 Intellect task). Someone who succeeds on a level 6 Intellect task can confer a doused object or creature with +2 to Armor (in the form of a more resilient, damage-resistant outer surface) that lasts for 28 hours. However, a mishap with the vat seals the object or creature inside a level 6 caul that renders an object unusable or smothers a creature unless the caul can be removed. ')
    elif vault_contents == 12:
        print('This complex level 8 device is a rectangular obelisk twice as tall as a human, covered in screens, mechanisms, and controls. It’s surrounded by a force-field globe (Armor 10), which must be dealt with to reach the device. The obelisk doesn’t have an obvious purpose, so unless the GM has a need for a complex control device, it is good for little more than being a rich source of numenera salvage.')
    elif vault_contents == 13:
        print('Stack of three red synth cards in a clear vessel. Each card, called a flaying key, is an artifact (depletion: 1 in 1d10) useful for conducting surgical procedures. A touched target’s skin disappears and the card adheres to the target, moving the target one step down the damage track. While skin is absent, the difficulty of any task related to curing the target’s disease, ameliorating poison, mending broken bones, or other radical healing requiring surgery is reduced by two steps. The target’s skin returns when the key is removed, moving the target one step up the damage track.')
    elif vault_contents == 14:
        print('Level 8 transparent sphere has a diameter of 30 feet (9 m) but contains an area far larger than its size would seem to indicate. In this area, visible but as if through haze, is an ancient city of silver towers, permanently preserved and deserted. (Essentially, this is an entirely new prior-world installation, which could be explored if the level 8 sphere could be breached.)')
    elif vault_contents == 15:
        print('Tomb of a 30-foot (9 m) tall humanoid creature wearing some kind of mechanized armor. The entity is dead and mummified, but its equipment could be salvaged. ')
    elif vault_contents == 16:
        print('Metallic level 8 artifact helmet contained in a clear glass case (depletion: 1 in 1d6). This synthsteel helmet has eight strange projections. If activated when worn (a level 5 Intellect task), eight 9-foot (3 m) long tentacles emerge from the device and remain for up to ten minutes. The tentacles are translucent, modulating between phase states. They can be used to pick up or manipulate objects, push buttons, and so forth, or to attack every creature within immediate range of the user for 8 points of damage. The tentacles can move through energy fields, including solid force fields, as if they were not there. ')
    elif vault_contents == 17:
        print('Complex level 7 machine with many glass reservoirs filled with different weird fluids. Manipulator arms are poised to grasp anything that stands on an activation plate. If any kind of organic material (including a living creature) steps or is placed onto the plate, the arms attempt to grasp it (a level 4 attack) and insert it into an opening at the machine’s top. Ingested objects are broken down into their essential materials and stored as various complex fluids. Someone standing at the machine’s controls who succeeds on a level 7 Intellect task could reconstitute an ingested living creature, or try to make a new creature from the materials gathered. ')
    elif vault_contents == 18:
        print('What appears to be an ornate mirror hangs on a pedestal within a clear synth dome. Examination of the “mirror” reveals that it’s a vertical sheet of reflective liquid and touching it causes ripples. The sheet is a level 8 numenera artifact (depletion: 1 in 1d20) that can transfer someone who steps into the mirror to another dimension or level of reality. The user must know that the destination they seek exists; the GM decides if the user has enough information to confirm its existence and the level of difficulty needed to reach it. Otherwise, the user merely walks back out of the liquid surface of the mirror.')
    elif vault_contents == 19:
        print('Immobile device with leaflike arms partly enfolds a glowing spherical ball of transdimensional energy. This level 7 artifact (depletion: 1 in 1d10) transforms a user who succeeds on a difficulty 5 Intellect task into an immaterial energy construct for up to one hour, during which time the user can’t affect or be affected by normal matter or energy, except as follows. The user can attack a target within long range, inflicting 7 points of transdimensional energy damage; the attack returns the user to normal. Alternatively, the device can be used to recharge a depleted artifact.')
    else:
        print('Vortex of energy swirls above a raised circular platform surrounded by complex machinery. Its radiance makes it difficult to look at, and its heat makes it difficult to stand near. High-intensity energy in the area induces a feeling of awe in observers. The vortex is a wormhole that leads directly into the sun.')
    print('\n')
    print('random situation:')
    random_Event = random.randint(1,100)
    if random_Event == 1:
        event()
    elif random_Event < 4:
        machine()
    else:
        pass

def relic():
    print('Relic chamber\n')
    room_shape()
    room_size()
    print('\n')
    # About 20% of relics previously undiscovered by the humans of Ballarad are untended, but 80% have attracted a creature of some sort; roll on the Creature Table.
    occupied_roll = random.randint(1,10)
    if occupied_roll == 1:
        print('Untended relics are often sealed behind a mechanical door that requires someone to succeed on a difficulty 6 Intellect task to open. The interior surfaces of relic chambers are deeply textured level 9 synth facades over a metallic framework. Relic chambers have no exits other than the one used to gain entry.')
    else:
        print('A creature is in the room with the relic and is possessive of it.')
        ruins_creature()


    # if in jade colossus
    # relic_anatomy()
    print('\n')
    relic_quality = random.randint(1,20)
    if relic_quality == 1:
        print('Intuition. Characters who spend a few minutes in the vicinity of the relic gain insight into a problem they’ve tried but failed to solve before. An answer comes to them unbidden, one that might prove the perfect solution.')
    elif relic_quality == 2:
        print('Strength. Characters who spend several hours in the relic’s vicinity find the difficulty of any Might task reduced by three steps. This strength shift lasts for 28 hours.')
    elif relic_quality == 3:
        print('Insinuation. Characters who spend several hours in the relic’s vicinity can vault their minds into another creature’s body within short range as a level 7 Intellect attack. If successful, the attacking character controls the target body for up to 28 hours while their own body remains in a deep sleep.')
    elif relic_quality == 4:
        print('Expertise. Characters who spend several hours in the relic’s vicinity find the difficulty of any Intellect task reduced by three steps. This strength shift lasts for 28 hours.')
    elif relic_quality == 5:
        print('Void Manipulation. Characters who spend a few minutes in the relic’s vicinity can extrude streamers of void matter for one minute at a time, increasing their normal reach from immediate range to short. Anything a character could do with their own hands, they can do at range through void manipulation. This ability persists for one hour.')
    elif relic_quality == 6:
        print('Void Strike. Characters who spend several hours in the relic’s vicinity can extrude a ray of void matter at a target within short range, inflicting 5 points of damage that ignores Armor. This ability persists for 28 hours.')
    elif relic_quality == 7:
        print('Ancillary Anatomy. Characters who spend several hours in the relic’s vicinity gain a secondary companion intelligence that takes the form of a vestigial limb or organ, similar to the relic, which remains attached to the character. Affected characters can treat the ancillary anatomy as a level 2 NPC that might provide aid, depending on the nature of the organ. For instance, an additional nose would grant an asset on perception tasks, but an extra foot might provide an inability in most movement tasks (but perhaps an asset on tasks to retain balance and stability). The vestigial anatomy persists for up to 28 hours.')
    elif relic_quality == 8:
        print('Communication. Characters who spend several hours in the relic’s vicinity gain long-range telepathy that lasts for 28 hours.')
    elif relic_quality == 9:
        print('Discernment. Characters who spend several hours in the relic’s vicinity always know when another creature is telling a lie. This ability persists for 28 hours.')
    elif relic_quality == 10:
        print('Resistance. Characters who spend several hours in the relic’s vicinity gain +2 to Armor and the ability to withstand poisons, venoms, and diseases of level 8 and lower for the next 28 hours.')
    elif relic_quality == 11:
        print('Persistence. Characters who spend several hours in the relic’s vicinity gain the ability to breathe in any atmosphere or in water. They can hold their breath for several hours without coming to harm in a vacuum. This ability persists for 28 hours.')
    elif relic_quality == 12:
        print('Creation. Characters who spend several hours in the relic’s vicinity gain the ability to mold other creatures’ flesh as if it were clay. For targets that resist, using this ability is a physical attack. Molding another creature could provide them with wings, an extra limb, an extra eye, and so on, though someone with malign intent could remove a creature’s eyes, pull off a limb, and so on. The GM will determine benefits or damage inflicted (or both) depending on the result. In any case, a character trying to mold the flesh of another must succeed on a difficulty 4 Intellect task (or higher, if attempting something complicated like adding functional wings) or suffer a negative mishap. This ability lasts for one hour, but the effects created by the ability are permanent.')
    elif relic_quality == 13:
        print('Aggressive Destiny. Characters who spend several hours in the relic’s vicinity gain the ability to harm another creature with certainty. When the character attacks a target with an ability, weapon, or device, regardless of the range or any barriers separating them, the attack succeeds (treat as a routine task). The user can attack any target, but only if they know that the target exists; the GM will decide if they have enough information to confirm the target’s existence. This ability lasts for one minute, or until a target that isn’t in the same chamber is attacked.')
    elif relic_quality == 14:
        print('Healer. Characters who spend several days in the relic’s vicinity gain the ability to touch a target and restore its Might Pool, Speed Pool, and Intellect Pool to their maximum values, as if it were fully rested. A single target can benefit from this ability only once each day. This ability lasts for 28 hours.')
    elif relic_quality == 15:
        print('Spiritual Leader. Characters who spend several days in the relic’s vicinity gain the ability to convert another creature (whose level is less than their own) to service and sacrifice. The target gives up whatever occupation and life it previously pursued to become the character’s follower. It continues to serve the character gladly, unless or until the character does wrong by the target, as determined by the GM. This ability lasts until used.')
    elif relic_quality == 16:
        print('Far Treader. Characters who spend several days in the relic’s vicinity gain the ability to step between distant locations as easily as they might step into the next room. When using this ability, a character can move between locations no matter how far apart they are, as long as they have been to that location previously or can see it. This ability lasts for one hour.')
    elif relic_quality == 17:
        print('Invincible. Characters who spend several weeks in the relic’s vicinity gain +10 to Armor and the ability to withstand poisons, venoms, and diseases of level 10 and lower for the next hour.')
    elif relic_quality == 18:
        print('Foldable. Characters who spend several days in the relic’s vicinity gain the ability to fold themselves into much smaller spaces, including tiny cracks, or to inflate their mass by as much as 1,000% as long as there is space to do so. Each halving or increase by 50% in size requires one full round of effort. This ability lasts for 28 hours.')
    elif relic_quality == 19:
        print('Contemplative. Characters who spend a few minutes in the relic’s vicinity remember something they failed to note the first time around, perhaps a minor detail that seemed insignificant, but which on further thought emerges as a clue. If nothing in the characters’ history suits, instead they gain +1 to Intellect Edge for one hour.')
    else:
        print('Communion Enabler. Characters who spend several weeks in the relic’s vicinity gain the ability to speak telepathically with all creatures in a 2-mile (3 km) radius simultaneously, regardless of differences in language or physical barriers, for a few rounds. Though the effect is potentially overwhelming for those few rounds, the follow-on effect allows all connected creatures to gain a brief sense of each other and each other’s point of view. For the next ten days at least, the difficulty of any positive interaction tasks attempted between affected creatures is reduced by three steps. The ability to enter into this communion lasts until used.')
    print('\n\nA relic may have additional qualities and attributes not described on the table that could be unlocked through weeks of additional study. These abilities are related to the primary ability. For instance, if a relic has the quality of enhancing intuition, it could also answer simple questions, see the unseen, or grant the ability to detect falsehoods.')

def cavity():
    # Interstitial cavity

    level = random.randint(1,6)

    print('Interstitial cavity:')
    print('Hollows, voids, and liminal locations that probably were never meant for prior-world creatures to use directly, but exist rather as gaps, cavities, and empty regions normally hidden behind walls. These areas are often difficult to navigate (or in some cases, survive) because they weren’t built with normal use in mind.')
    print('Unless noted otherwise, the interior surfaces of an interstitial space are constructed of stained synth and corroded metals')
    print('If an active machine is discovered that can be induced to create an effect, it can usually do so only two or three times before it falls into disrepair or requires a lengthy charging process to get it to function again, and then only briefly. Effects generated by features in an interstitial cavity are usually level 5.')
    print('Unless indicated otherwise by the result, the average interstitial cavity within a massive prior-world ruin measures about 1,000 feet (300 m) by 500 feet (150 m). The orientation and overall shape of the space is as you require to make it fit onto the map. For instance, it could extend straight away from an exit from a connecting corridor, or it could plunge vertically up or down. The entrance leading into the interstitial cavity might be located midway along the side, on the “floor” (such as it is), or on the ceiling of the cavity. A large interstitial cavity could bypass other mapped areas, or surround and enfold other mapped areas. Finally, if you roll an interstitial cavity on the Main Feature Table for a prior-world installation that is relatively small, you can either ignore the result or extend the ruin in a subterranean or transdimensional direction to accommodate the cavity.\n')
    # Nature of Interstitial Cavity
    level = random.randint(1,6)
    cavity_roll = random.randint(1,100)
    if cavity_roll < 3:
        print('Empty and echoing.')
    elif cavity_roll < 5:
        print('Empty and echoing, but contains vast outlines of what must have been immense machines or machine components that have since been removed.')
    elif cavity_roll < 7:
        print('Empty and echoing, except for slender trees with black bark have sprung up in a soft layer of drit and dust.')
    elif cavity_roll < 9:
        print('Empty and echoing, except for spiders, worms, and similar vermin are thick in the area, infesting a few large masses that turn out to be the bones of long-dead creatures that were very, very large.')
    elif cavity_roll < 11:
        print('Empty and echoing, but contains vast outlines of what must have been immense machines or machine components that have since been removed. Looks like it might have been of a massive human shape.')
    elif cavity_roll < 13:
        print('Filled with immense, dead, corroded, long-silent machine components fused to interior. Each character who spends several hours clambering over the vast dead engines can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet).')
    elif cavity_roll < 15:
        print('Filled with immense, dead, corroded, long-silent machine components fused to interior. Each character who spends several hours clambering over the vast dead engines can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), also contains a lair for a creature*.')
        ruins_creature()
    elif cavity_roll < 17:
        print('Filled with immense, dead, corroded, long-silent machine components fused to interior. Each character who spends several hours clambering over the vast dead engines can find one or two cyphers and 1d20 shins, but must succeed on one level 5 Speed defense task to avoid slipping oil-like fluid coating everything and falling from a great height (d100 feet)')
    elif cavity_roll < 19:
        print('Filled with immense, dead, corroded, long-silent machine components fused to interior, but a strange rust covers the mechanism and acts like a contact poison. Each character who spends several hours clambering over the vast dead engines can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet).')
    elif cavity_roll < 21:
        print('Filled with immense, dead, corroded, long-silent machine components fused to interior. Several dead humans lie at the foot of the great machines. Investigation reveals they’ve been looted, but also that some of them have had their faces flayed off and sewn back on again with synth thread.  Each character who spends several hours clambering over the vast dead engines can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet).')
    elif cavity_roll < 23:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. ')
    elif cavity_roll < 25:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. However, characters who spend a few hours studying the machines might discover that they could be induced to attach a massive (house-sized) device capable of creating an amazing amount of thrust, enough to potentially launch the object into space or even farther.')
    elif cavity_roll < 27:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. However, characters who spend a few hours studying the machines might discover that they could be induced to suck all the metal out of a very large object and deliver a metallic ingot of the stolen metals. The process inflicts 10 points of damage to a living creature and causes them to descend one step on the damage track. ')
    elif cavity_roll < 29:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. However, characters who spend a few hours studying the machines might discover that they could be induced to extrude massive (house-sized) crystal solids that glimmer internally but have no obvious purpose. ')
    elif cavity_roll < 31:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. However, characters who spend a few hours studying the machines might discover that they could be induced to plate an arbitrarily large object with a level 4 synth coating that grants +4 to Armor (the process would kill humansized creatures, essentially encasing them in a chunk of solid synth). ')
    elif cavity_roll < 33:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. Check the Integrated Machine results below to see what these machines might do. However, the ones found in an interstitial cavity would create the stated effect on a far grander scale, which means effects that might normally enhance or aid a human-sized creature will instead probably kill them. ')
        machine()
    elif cavity_roll < 35:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. The components whir, vibrate, and give off a constant bass roar that is difficult to endure over long periods. Each character who spends several hours clambering over the vast degraded devices can find one or two cyphers and 1d20 shins, but must succeed on one level 3 Speed defense task to avoid slipping and falling from a great height (d100 feet), and one level 3 Intellect task to avoid causing a local malfunction. An entity has previously entered the chamber and scribed in a silvery metallic ink across the machine surfaces what are essentially “margin notes” to help those new to the area figure out what the vast machines might do. ')
    elif cavity_roll < 37:
        print('Filled with tumbling components and machine parts 10 feet (3 m) to a side, apparently once fused to the walls but now weightless and dead, that crash and batter each other. Each long distance moved through the chamber requires a successful level 5 Speed defense task to avoid being battered for 5 points of damage. ')
    elif cavity_roll < 39:
        print('Half filled with fluid from an ancient leak. Check the Matter Leak results below to determine the nature of the reservoir-sized spill. Opening the wrong exit could cause the fluid to leak into other sections of the ruin, causing flooding and dangerous conditions, depending on the nature of the material. ')
        leak()
    elif cavity_roll < 41:
        print('Vast machinery holds in place a massive sphere at the center of the cavity. The sphere is a planet, which, though small, is still much too large to be contained in the cavity. But thanks to the enclosing machinery that folds space, the planet is indeed held in place. About two-thirds the size of Earth, the strange planet is swaddled in red clouds and storms. Characters who attempt to access the planet’s surface find it habitable, but incredibly unstable. Volcanoes and earthquakes are common, but plant life is lush, though there don’t seem to be any animals or other ambulatory creatures, or in fact any sign of previous habitation. If anything did live here once, the constant upheaval on the surface likely recycled them deep into the planet’s core long ago. ')
    elif cavity_roll < 43:
        print('High, narrow towers made of what appears to be dark red glass jut from the sides and floor (and hang from the ceiling) of this space. The towers have no doors, but sometimes spontaneously absorb those looking to enter, freezing them in stasis.')
    elif cavity_roll < 45:
        print('High, narrow towers made of what appears to be dark red glass jut from the sides and floor (and hang from the ceiling) of this space. The towers have no doors, but sometimes spontaneously absorb those looking to enter, freezing them in stasis. The towers are hollow, and one serves as the home or lair to at least one creature*.')
        ruins_creature()
    elif cavity_roll < 47:
        print('Metallic pyramids of all sizes, some as small as a thumbnail, others as tall as buildings, are jumbled in this space.')
    elif cavity_roll < 49:
        print('Metallic pyramids of all sizes, some as small as a thumbnail, others as tall as buildings, are jumbled in this space. The pyramids are magnetized, so automatons and creatures with metal armor stick to exposed surfaces; some dead automatons and a few explorers who couldn’t get their armor off can be found here.')
    elif cavity_roll < 51:
        print('The space is occupied by an odd ecosystem of purple plants, tiny red clouds, and small, singing, gopher-like creatures with two heads.')
    elif cavity_roll < 53:
        print('Blotches of green and yellow color move like the shadows of clouds across the empty surfaces of this large space.')
    elif cavity_roll < 55:
        print('Blotches of green and yellow color move like the shadows of clouds across the empty surfaces of this large space. The color “shadows” are attracted to motion and attack creatures by “staining” and then eating their substance, converting them into yet more color.')
    elif cavity_roll < 57:
        print('A massive crystalline object floats at the center of this cavity, slowly rotating, held in place by an unseen force.')
    elif cavity_roll < 59:
        print('A massive crystalline object floats at the center of this cavity, slowly rotating, held in place by an unseen force. If light is directed on the crystal, the light is broken into all the colors of the rainbow and more; two of the colors are not normally possible in this dimension, and creatures that see them or that are bathed in their light risk temporary insanity.')
    elif cavity_roll < 61:
        print('A massive crystalline object floats at the center of this cavity, slowly rotating, held in place by an unseen force. The head of a massive, multi-eyed creature that isn’t completely humanoid is preserved in the crystal.')
    elif cavity_roll < 63:
        print('Broken conduits drizzle the exposed areas of the space with a yellowish, sap-like substance that has formed stalagmites and stalactites over hundreds of years; the sap is sweet to the taste and nutritious.')
    elif cavity_roll < 65:
        print('This space is apparently where some kind of creature has stored trophies for hundreds of years—trophies in the form of teeth, which lie in cascading piles across the cavity. The creature responsible is not immediately evident.')
    elif cavity_roll < 67:
        print('A broken, partly smashed vehicle capable of traveling into the void lies in—or has been somehow wedged into—this cavity. With enough time and effort, the ship might be able to be repaired, but getting it out of the cavity is another problem.')
    elif cavity_roll < 69:
        print('Waves of energy flow back and forth across this room like heat mirages over a hard surface on a hot day. The energy ruffles hair and clothing but doesn’t seem directly harmful.')
    elif cavity_roll < 71:
        print('Waves of energy flow back and forth across this room like heat mirages over a hard surface on a hot day. The energy ruffles hair and clothing but doesn’t seem directly harmful. Devices of the numenera (cyphers, artifacts, and oddities) begin to glow brighter and brighter when exposed to the energy. Devices that remain exposed for more than three rounds detonate.')
    elif cavity_roll < 73:
        print('Waves of energy flow back and forth across this room like heat mirages over a hard surface on a hot day. The energy ruffles hair and clothing but doesn’t seem directly harmful. With each wave, a mental surge of thousands of whispering voices intrudes on the minds of conscious creatures in the area.')
    elif cavity_roll < 75:
        print('Waves of energy flow back and forth across this room like heat mirages over a hard surface on a hot day. The energy ruffles hair and clothing but doesn’t seem directly harmful. Creatures in the area risk having their minds randomly switched. This can be especially disconcerting for characters whose minds get switched with a creature* that follows them into the area.')
    elif cavity_roll < 77:
        print('Refugees from a nearby village of humans overrun by creatures* hide in this chamber, living off the by-products of a large machine that produces tasteless but nutritious brown goo.')
    elif cavity_roll < 79:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. Broken devices emit sprays of pollen-like dust that changes the center of gravity of creatures and objects it touches, making it difficult for creatures to walk or run without tipping over.')
    elif cavity_roll < 81:
        print('Filled with immense, partially functioning, colossal machine components fused to walls and ceiling high above. Broken devices emit sprays of white mist that acts as poison to living creatures, but which coats automatons in a layer of protective coating granting +1 to Armor.')
    elif cavity_roll < 83:
        print('The air in this chamber is hazed with narrow vortices that move randomly about, sometimes spinning apart, other times spinning back together again. The vortices spin away from creatures and moving objects.')
    elif cavity_roll < 85:
        print('The air in this chamber is hazed with narrow vortices that move randomly about, sometimes spinning apart, other times spinning back together again. The vortices spin away from creatures and moving objects. The vortices represent splinter personalities of a machine intelligence that once inhabited this area. Individual vortices can speak by vibrating the air, but each has a very narrow slice of knowledge or specialty.')
    elif cavity_roll < 87:
        print('The air in this chamber is hazed with narrow vortices that move randomly about, sometimes spinning apart, other times spinning back together again. The vortices spin away from creatures and moving objects. Each vortex is a level 4 threat; ', level,' of them zero in on any group of creatures trying to make their way across the cavity.')
    elif cavity_roll < 89:
        print('A lens dozens of feet across composed of clear synth has been crudely installed here; it focuses sunlight that sometimes shines in from cracks above onto a device that hums and vibrates when in bright light.')
    elif cavity_roll < 91:
        print('A lens dozens of feet across composed of clear synth has been crudely installed here; it focuses sunlight that sometimes shines in from cracks above onto a device that hums and vibrates when in bright light. The lens wakes for the span of time the beam is focused fully on it (about two minutes), during which time it serves as a terminal into the datasphere.')
    elif cavity_roll < 93:
        print('Discharges of electricity play throughout this chamber like some kind of cloudwreathed hellscape of danger.')
    elif cavity_roll < 95:
        print('The holographic image of a gargantuan eye flickers into existence in the cavity, blinking and focusing on intruders before fading again for a random period. Devices in the area are found to project this image, as well as have many other functions that are less easy to identify.')
    elif cavity_roll < 97:
        print('Massive metallic ring dominates the cavity, cracked and possibly unstable. The ring magnetically holds a brilliant sphere of glowing white material at the center.')
    elif cavity_roll < 99:
        print('Massive metallic ring dominates the cavity, cracked and possibly unstable. The ring magnetically holds a brilliant sphere of glowing white material at the center. The sphere at the center pulses in a variety of rhythms when creatures enter the area. The pulsing is actually communication from beings who exist in two dimensions and are curious about the dimension of the Ninth World.')
    else:
        print('Massive metallic ring dominates the cavity, cracked and possibly unstable. The ring magnetically holds a brilliant sphere of glowing white material at the center. The sphere represents stored, massively compacted waste. Any object or creature thrown into the ring is compacted down to a thin layer of degenerate matter coating the sphere.')
    print('\n')
    random_situation()
    print('First exit:')
    ruins_exit()
    extra_exit = random.randint(1,10)
    print('Extra exits:', extra_exit)
    while extra_exit != 0:
          ruins_exit()
          extra_exit -= 1
    # #generates 1 + 1d10 exits

def ruins_exit():
    print('Exit:')
    path_marker()
    exit_table = random.randint(1, 20)
    if exit_table < 5:
        print('No additional exits')
    elif exit_table < 13:
        print('1 exit leads to:\n')
        #print('generate random room')
        #random_room()
    elif exit_table < 15:
        print('1 sealed exit leads to:\n')
        print('A sealed exit is blocked by some kind of hatch, panel, force field, or closed partition, which prevents easy travel through the exit. A sealed exit might simply require a successful level 5 Intellect task to unseal, though a handful are locked and require a level 8 Intellect task (or the key or password) to open.')
        #print('generate random room')
        #random_room()
    elif exit_table == 15:
        print('2 additional exits')
        print('first exit leads to:\n')
        #print('generate random room')
        #random_room()
        print('second exit leads to:\n')
        #random_room()
        #print('generate random room')
    elif exit_table == 16:
        print('1 additional exit + 1 sealed exit')
        print('A sealed exit is blocked by some kind of hatch, panel, force field, or closed partition, which prevents easy travel through the exit. A sealed exit might simply require a successful level 5 Intellect task to unseal, though a handful are locked and require a level 8 Intellect task (or the key or password) to open.')
        print('sealed exit leads to:\n')
        #random_room()
        #print('generate random room')
        print('other exit leads to:\n')
        #random_room()
        #print('generate random room')
    elif exit_table == 17:
        print('2 additional exits + 1 sealed exit')
        print('A sealed exit is blocked by some kind of hatch, panel, force field, or closed partition, which prevents easy travel through the exit. A sealed exit might simply require a successful level 5 Intellect task to unseal, though a handful are locked and require a level 8 Intellect task (or the key or password) to open.')
        print('sealed exit leads to:\n')
        #random_room()
        #print('generate random room')
        print('first exit leads to:\n')
        #random_room()
        #print('generate random room')
        print('second exit leads to:\n')
        #random_room()
        #print('generate random room')
    elif exit_table == 18:
        print('2 sealed exits')
        print('A sealed exit is blocked by some kind of hatch, panel, force field, or closed partition, which prevents easy travel through the exit. A sealed exit might simply require a successful level 5 Intellect task to unseal, though a handful are locked and require a level 8 Intellect task (or the key or password) to open.')
        print('first sealed exit leads to:\n')
        #random_room()
        #print('generate random room')
        print('second sealed exit leads to:\n')
        #random_room()
        #print('generate random room')
    elif exit_table == 19:
        print('1 trapped exit')
        print('A trapped exit presents as a sealed exit, but on a failed attempt to open it, an energy discharge inflicts 8 points of damage on the creature attempting to bypass the seal. Trap effects should be presented as GM intrusions. Other trap effects are possible, including releasing five level 4 defense automatons, a spray of level 5 poison gas, and/or sealing up all nearby open exits to keep intruders penned.')
        #random_room()
    else:
        print('1 hidden exit')
        print('A hidden exit is not obvious to a cursory search, though it’s found if someone takes the time or uses special abilities that reveal what isn’t obvious.')
        #random_room()

def random_room():
    room_roll = random.randint(1, 100)
    if room_roll < 21:
        print('random room roll: corridor')
        corridor()
    elif room_roll < 59:
        print('random room roll: chamber')
        chamber()
    elif room_roll < 80:
        print('random room roll: cavity')
        cavity()
    elif room_roll < 83:
        print('random room roll: tunnel')
        tunnel()
    elif room_roll < 86:
        print('random room roll: rupture')
        rupture()
    elif room_roll < 89:
        print('random room roll: shaft')
        shaft()
    elif room_roll == 99:
        print('random room roll: vault')
        vault()
    else:
        print('random room roll: relic')
        relic()

def ruin():

    # consider adding explorers, colony, rupture, leak, discharge and machine as random events within rooms
    # while number doesnt equal vault number
    # main_feature_list
        def print_menu():  # Your menu design here
            print(30 * "-", "NUMENERA MENU", 30 * "-")
            print("1. Random Room")
            print("2. Random Chamber")
            print("3. Random Corridor")
            print("4. Random Cavity")
            print("5. Random Accessway")
            print("6. Random Vault")
            print("7. Random Relic")
            print("8. Random Exit ")
            print("9. Random Monster")
            print("0. Exit ")
            print(73 * "-")

        loop = True
        int_choice = -1

        while loop:  # While loop which will keep going until loop = False
            print_menu()  # Displays menu
            choice = input("Enter your choice [1-9]: ")
            level = random.randint(1, 6)
            if choice == '1':
                int_choice = 1
                random_room()

            elif choice == '2':
                int_choice = 2
                chamber()

            elif choice == '3':
                int_choice = 3
                corridor()

            elif choice == '4':
                int_choice = 4
                cavity()

            elif choice == '5':
                int_choice = 5
                tunnel()

            elif choice == '6':
                int_choice = 6
                vault()

            elif choice == '7':
                int_choice = 7
                relic()

            elif choice == '8':
                int_choice = 7
                ruins_exit()

            elif choice == '9':
                int_choice = 9
                ruins_creature()

            elif choice == '0':
                int_choice = -1
                print("Exiting..")
                loop = False  # This will make the while loop to end

            else:
                # Any inputs other than values 1-4 we print an error message
                input("Wrong menu selection. Enter any key to try again..")
        return [int_choice, choice]










def installation():
    installation_list [
    'Adjustable watchtower',
    'Musical obelisk',
    'Keepsafe case',
    'Sleepwell emitter',
    'Sonic wall',
    'Body preserver',
    'Drink dispenser',
    'Teaching monolith',
    'Wind coaxer',
    'Deferment gate',
    'Gallen caller',
    'Reflector orb',
    'Sound suppressor',
    'Tranquility tower',
    'Community translator',
    'Mirrorbright arch',
    'Null field generator',
    'Transdimensional fence',
    'Bioreactor, grand',
    'Earth signaler (destruction)',
    'Fire signaler (suppression)',
    'Force crane',
    'Gravity transducer',
    'Organifact',
    'Prison simulator',
    'Reservoir purifier',
    'Summoner',
    'Time suppressor',
    'Water signaler (calming)',
    'Weathersmith',
    'Champion forger',
    'Control arch',
    'Mind expander',
    'Moment maker',
    'Body shunt',
    'Interrogation tower',
    'Nectar of life',
    'Weatherspear',
    'Cooling obelisk',
    'Compactor',
    'Luminous dynamo',
    'Warming obelisk',
    'Pain taker',
    'Water purifier, basic',
    'Cleansing arch',
    'Sustenance synthesizer',
    'Temporal chime',
    'Rain caller',
    'Truthbox',
    'Water excitation engine',
    'Water purifier, enhanced',
    'Shrink pad',
    'Everflowing nectar',
    'Lightning tower',
    'Water purification station',
    ]
    install_desc = random.choice(installation_list)
    print(install_desc)

def interesting_area():
    area_list = [
        'Giant, gleaming insects glide about on multiple pairs of wings ',
        'Flowering plants seem to sing or moan',
        'Floating crystals orbit people\'s heads',
        'Clothing shifts color and texture ',
        'Mechanical birds flutter through the air ',
        'Floating, glowing motes of light swirl about ',
        'Materials decorating a structure change substance ',
        'Structure has no door but any wall can be passed through as it wasn\'t there',
        'Portions of a wall have eyelike mechanisms that follow you as you move ',
        'Odd patches of violet fungus grow everywhere ',
        'Gravity shits orientation in a location ',
        'Everything emits a hazy glow ',
        'Voices do not mach the movements of people\'s mouthes when speaking ',
        'Creatures leave behind a colored trail in the air as they moves ',
        'Nearby objects are actually bioengineered creatures in that shape ',
        'Window looks out onto a scene that is nowhere nearby ',
        'Structure has a thin organic membrane rather than doors ',
        'Floating spores from a plant give off a slightly euphoric odor ',
        'Structure is larger inside then outside ',
        'Always night in a certain area ',
        'Trees and plants move as much as possible to avoid being touched ',
        'Deep pool of water can be walked across as though it was solid ',
        'Sounds are strangely amplified in a certain location ',
        'Time in a certain location feels slightly slower ',
        'Vat of gelatinous substance that alters normal animals and slowly transforms them into gigantic mutant versions',
        'Miniature black hole that is used to power a dimensional device',
        'Replacement organs held in stasis - could be used to replace human organs if a qualified chiurgeon is found',
        'A storage unit that keeps food fresh indefinitely',
        'Tower mounted cannon that can be moved and reassembled with great effort to protect a city',
        'Defensive tower(s) with lightning emitters',
        'Drug vastly increases lifespan',
        'Means to telepathically lure fish into nets',
        'Limited weather control',
        'Mechanical harnesses grant great strength',
        'Living, organic buildings and houses',
        'Sonic protective field',
        'Force bubbles used as prisons and cages',
        'Telepathic implants',
        'Clockwork insects for pets',
        'A large flying vehicle',
        'A large automaton servant',
        'Music plays throughout the village',
        'Injections or implants for teaching skills and knowledge',
        'Genetically engineered guardian hounds',
        'Camouflage cloaks',
        'Mindwipe device rewrites the brains of criminals',
        'Water purifier cleans nearby contaminated lake',
        'Centralized device produces limitless food',
        'Centralized device shows the location of all nearby game and threats',
        'Mechanized farm equipment',
        'Clock tower',
        'Huge, glow-in-the-dark moths in cages for light',
        'Addictive injections make everyone beautiful',
        'Crops grow extremely large and healthy',
        'Local tree produces fruit that sustains everyone',
        'Device suppresses anger and violence',
        'Tracers placed on all residents Dead people are preserved in stasis',
        'A ﬁeld of synth tubes covered in a living mesh at the top. Each brown-grey tube begins about 2 feet (0.6 m) above the ground and rises 20 (6.1 m) feet into the air. The tubes are about 10 feet (3 m) in diameter and hollow on the inside. A large scutimorph wraps around each tube, and the creature’s rough and cobbled brown exoskeleton makes the tube look like a real tree trunk. PCs attempting to climb the tubes on the outside ﬁnd that the creatures release a vaporous substance that makes their exoskeletons slippery. Trying to kill or harm a scutimorph causes the creature to rear up from its coil around the tree, its large front pinchers seeking to damage the attacker. If one scutimorph wakes, the others begin to respond as well. The interiors of some of the tubes have small cutouts, forming ladders of sorts. The mesh above the tubes, once some kind of protective roof, now hangs down in long strips and is littered with debris, both natural and artiﬁcial. Despite its age, the weaving is strong and, in most places, still supports the weight of a human walking across it.',
        'A synth garden. It looks something like a traditional garden, built with long rows. Some rows are home to ﬂowering plants, herbs, or edibles, while other rows host growing things that seem as synthetic as they are organic. Six broken hounds have moved into the area, although no one knows why.',
    ]

    area_desc = random.choice(area_list)
    print(area_desc)

def interest_effects():
    effect_roll = random.randint(1,20)
    if effect_roll == 1:
        print('major effect')
        # 01–05 Inflicts 1 point of damage
        # 06–11 Random cyphers triggered
        # 12–17 Causes blindness for a day
        # 18–23 Hinders Might tasks for a day
        # 24–29 Hinders Speed tasks for a day
        # 30–35 Hinders Intellect tasks for a day
        # 36–40 Renders creatures mute
        # 41–46 Functions only in darkness
        # 47–51 Component must be regularly replaced
        # 52–58 Develops an antagonistic personality
        # 59–63 Triggers depletion roll on other devices
        # 64–69 Violently shakes the ground
        # 70–74 Kills nearby wildlife and plants
        # 75–79 Complex input required
        # (+1 round and Intellect check)
        # 80–85 Nearby windows shatter
        # 86–90 Causes deafness for a day
        # 91–95 Nightmares prevent benefits of tenhour rest for a day
        # 96–00 Doubles the chance of depletion

    else:
        print('minor effect')
        # 01–05 Strange glow
        # 06–11 Unintelligible utterances
        # 12–17 Dramatic static discharge
        # 18–23 Disturbing odor
        # 24–29 Complex input required (+1 round)
        # 30–35 Irregular malfunction for brief periods
        # 36–40 Regular malfunction for a brief period
        # 41–46 Shoddy, broken-down appearance
        # 47–51 Heats up unpleasantly
        # 52–58 Cools down unpleasantly
        # 59–63 Doesn’t work except for crafter
        # 64–69 Discolors flesh for brief period
        # 70–74 Disturbs sleep for brief period
        # 75–79 User’s hair thins or falls out for
        # brief period
        # 80–85 Requires regular maintenance
        # 86–90 Requires regular exposure to sunlight
        # 91–95 Slow
        # 96–00 Semi-sentient

def discovery():
    interesting_area()
    installation()
# artifact quirk

# sound
# 1 Bell
# 2 Whistle
# 3 Horn
# 4 Drum
# 5 Chime
# 6 Strummed string
# 7 Fluting
# 8 Thunder
# 9 Click
# 10 Warble
# 11 Trills
# 12 Pops
# 13 Beep
# 14 Wail
# 15 Scream
# 16 Moan
# 17 Roar
# 18 Scraping
# 19 Clattering
# 20 Chirping









# 'A whispering voice speaks from within a deep well',
# 'One particular street wraps around itself like a Mobius strip',
# 'Important resident has a single eye on a long eyestalk',
# 'Important resident lives within a transparent sac inside another creature that must vomit him out to speak with anyone',
# 'Merchant sells seeds that grow into small living buildings',
# 'Merchant sells glowing insects in jars that dim when mutants are near',
# 'Merchant sells plants that glow as brightly as a glowglobe while alive',
# 'Aeon Priests have replaced the lower half of each resident with four mechanical legs',
# 'Aeon Priests have equipped everyone in town with a powerful healing injector for emergencies',
# 'Fifty years ago, Aeon Priests arrested aging in the town, but the process is now lost',
# 'Troupe of mechanical acrobats and thespians arrives in town',
# 'Woman carries a large insect in her arms and insists that it’s her child',
# 'Village of normal looking humans that glow with an eerie blue luminescence',
# 'Everyone seems to be obsessed with playing a particular kind of strange flute',
# 'Everyone worships a metal egg of great size in the city center, along with what they believe will emerge from it',
# 'Sections of the street is always illuminated in a greenish light',
# 'The city is covered in fungal growths',
# 'Numerous large, noisy birds nest in the city disrupting everything',
# 'Many of the ancient buildings are made of indestructible glass',
# 'Some of the oldest buildings are made to look like giants',
# 'All the buildings are cones, wider at the top than the bottom',
# 'The town is built among the branches of a very large tree',
# 'The city is built into the side of a cliff, more vertical than horizontal',
# 'The city is a single, massive tower',
# 'A large metal dome encloses the city',
# 'A wall around the city is built to resemble the coils of a massive serpent',
# 'The city is surrounded by a wall of solid sound',
# 'All the buildings are underground, with hatchway doors giving access to each',
# 'The city is built amid the jagged metal ruins of a huge, ancient structure',
# 'The city is built amid the petrified bones of an impossibly huge creature',
# 'The city is built amid a series of natural gas vents',
# 'For defense, the city is surrounded by a field of fungus with poisonous spores',
# 'Religious festivals involve exposing a few children in the city to a gas that mutates them',
# 'The city is a series of towers joined by elevated walkways',
# 'Populace of the city use giant armadillolike creatures as mounts and beasts of burden',
# 'Leader of the city is a fused entity of six different people',
# 'Leader of the city is a superintelligent machine',
# 'Leader of the city has her consciousness infused in every structure',
# 'Leader of the city is a giant sluglike creature with an army of maintenance worker drones',
# 'All leaders of the city are octopoidal creatures in liquid-filled tanks',
# 'Resident has a pet that looks like a cat with the head of a human infant',
# 'The walls are covered in graffiti that appears to have been written by one of the PCs',
# 'The city has a machine that keeps the weather pleasant all the time',
# 'The city moves very slowly—no more than an inch a day—across the landscape',
# 'People are healthy, despite a deeply jaundiced appearance',
# 'People in the city are nonhumans in human guise to protect them against prejudice, not for sinister ends',
# 'Residents wear masks and helmets made from giant insect carapaces',
# 'Everyone in the small town goes to sleep and wakes up at precisely the same moment',
# 'Many people in town appear to be exact duplicates (flesh ghosts 4(12))',
# 'Religion in the city worships a damaged automaton as a god',
# 'City is built on the carcass of a giant creature feeding off its flesh and using its bones for materials',
# 'City is built atop a massive stone statue of a nonhuman creature',
# 'City is located within the folds between dimensions, accessed only through a series of gateways',
# 'All residents of the city bear the same scar on their heads',
# 'Everyone in town has their brain attached to a central mechanical brain via long cords',
# 'Gas filled balloons are used to reach the tops of tall, ancient towers without staircases',
# 'City is always warm, thanks to a subterranean numenera device of great power',
# 'Huge, ancient arch of synth and glass arcs above area',
# 'Area is infested with rodents that feed on glass and synth',
# 'Automatons entering area are immediately attacked by vicious, metal-beaked birds that carry off the parts they tear away',
#
#
#
# 'A WEIRD THING GOING ON INSIDE THE STRUCTURE',
#
# 'Millions of insects unlike anything found anywhere else flutter about',
# 'Ringing with music so beautiful it’s painful to leave',
# 'Nutrients and oxygen are projected into all inhabitants via constant beams of energy',
# 'Every living thing that enters is transformed into a weird bird-insect creature and returned to normal upon exit',
# 'Delicious and nutritious fruit grows on the metal walls and ceiling',
# 'Constantly “rains” an oily substance throughout',
# 'Everyone entering quickly (and painfully) grows or shrinks an inch, permanently',
# 'Living creatures teleport to random locations within, at random intervals',
# 'Incomprehensible machines argue audibly with each other in an unknown language',
# 'Batlike creatures feed upon the metal machines within',
# 'Gravity changes in strength at random intervals',
# 'Living flesh in the structure slowly turns blue',
# 'A chemical in the interior atmosphere intoxicates',
# 'A chemical in the interior atmosphere slowly causes illness',
# 'Nonliving organic matter (such as packs, leather armor, and clothing) slowly discorporates',
# 'Different chambers cause different mental afflictions to those entering',
# 'The speed of sound is slowed way, way down, so that sounds come very late',
# 'Dramatic temperature changes occur, seemingly at random',
# 'Dramatic temperature conditions move slowly through the structure',
# 'Thinking creatures’ minds are switched at random',
# 'Prolonged flesh-on-flesh contact results in fusion that is painful to separate',
# 'Time seems to move at different speeds throughout the structure',
# 'The words of everyone are translated into a language no one speaks',
# 'Everyone gains a random mutation that fades when they leave',
# 'Some (but not all) who enter are incapable of making sounds',
# 'Random bits of meaningless and confusing information are constantly transmitted into the brains of all within',
# 'The feelings that those who enter have for each other are randomly altered while within ',
# 'Ghostly creatures move about and carry on their own business, but they cannot be affected or communicated with in any way',
# 'Random creatures from the surrounding wilderness suddenly appear inside at random intervals',
# 'Devices randomly emit dangerous energy beams in random directions, accompanied by music',
# 'All sounds (including spoken words) are repeated again sometime later',
# 'The walls and ceiling are an acidic ooze',
# 'Invisible creatures move about on their own business and never interact with others except to jostle, make noise, or move objects around',
# 'Walls randomly liquefy (splashing a poisonous liquid about), only to reform later',
# 'Gravity’s orientation depends on the material—organic materials are pulled one way, metal another, synth another, etc.',
# 'Touching the ceiling is addicting and causes hallucinations',
# 'The floor constantly flashes with colored lights that are annoying and disorienting',
# 'Creatures lose their sense of touch and feel no pain',
# 'Although they appear solid, all surfaces are extremely elastic (but do not break)',
# 'Creatures suddenly remember where they lost something in the past',
# 'Creatures experience visions of their own birth over and over',
# 'Groups of individuals slowly begin to think of themselves as a single entity',
# 'Everyone becomes telepathic until they leave',
# 'Some entering become immediately convinced that they have been here many times before',
#
#
# 'Ghostly sounds and voices are heard, but the sources are never found',
# 'Everyone can fly until they leave',
# 'Portions of the bodies of those within become permanently invisible',
# 'Random objects brought in are transformed to a different substance',
# 'Metal becomes brittle',
# 'Mirrored walls reflect only certain colors',
# 'Synth becomes rubbery and pliable',
# 'Creatures and objects instantly and permanently change color',
# 'Creatures gain some form of permanent synesthesia',
# 'Some creatures that enter gain amnesia until they leave',
# 'Everyone gains memories that are not their own',
# 'Creatures spending more than six hours within begin to reproduce asexually via budding',
# 'Candles and other flames burn endlessly within',
# 'Dangerous electricity arcs across the rooms and corridors, seemingly at random',
# 'Screaming echoes throughout the place, but the source can never be found',
# 'Cast-off and broken cocoons litter the floor',
# 'Fist-sized red gemstones clutter the place but turn to powder if removed',
# 'Damaged automaton moves about, utterly unaware of explorers',
# 'Defense system fires beams of destructive energy at anything that is red',
# 'Vents pump out memory-altering gas',
# 'Anything made of wood ceases to exist inside (but returns to normal outside)',
# 'Large mirrors on walls display x-ray reflections, showing the insides of people and objects',
# 'Central area is a true vacuum accessed via airlocks',
# 'Liquid-filled tanks hold ancient creatures in suspended animation',
# 'Still-functioning equipment is a transmitter keyed to another dimension',
# 'Giant globe shows what the earth looked like 500 million years ago',
# 'Tiny glowing frogs infest the entire structure',
# 'Recently dead reptilian creature has synth tendrils and eyestalks sprouting all over its body',
# 'A hard crust slowly grows over the bodies of all who enter',
# 'It’s impossible to scratch, stain, or otherwise mar or damage anything in the structure',
# 'Machine generates static, which takes on a physical form of ultrathin metal wire twisted upon itself',
# 'Curtains of living plasma guard certain areas',
# 'Matter randomly becomes energy and vice versa',
# 'Walls are covered in graffiti that is ancient but far newer than the structure itself',
# 'Automatons made of smoke utterly ignore intruders',
# 'A variety of organic eyes stare down from the ceiling',
# 'Huge room filled with the remains of tens of thousands of corpses, none of them human',
# 'Headless, legless rodents roll about the structure',
# 'Paths of movement within the structure are traced in thin red lines that trail behind the moving creature or object',
# 'Vivid memories triggered in people’s minds make it difficult to perceive actual reality',
# 'Those who enter begin to randomly (and painfully) grow feathers',
# 'Holographic images display meaningless and incongruous scenes of unidentifiable creatures and situations',
# 'Pits open to randomly dump intruders into the workings of giant machines, eventually to be incorporated into the mechanisms',
# 'All who enter henceforth must imbibe liquid methane to survive (unless the condition can be reversed)',
# 'A constant droning sound is heard at all times while within and for 1d20 days after leaving',
# 'After exiting, explorers find that animals and children shy away from them',
# 'It’s impossible to sleep within the structure, although the reason can’t be determined',
# 'Those exiting the structure are carriers of a disease that causes chronic weariness and turns exhalations visibly blue',
# 'One dead person known to a random explorer who enters the structure is alive again when the explorer exits (time has been altered)',
#
#
#
#
# '1. Bush’s flowers open, and each emits a',
# 'different musical note',
# '2. One tree in a copse blows in an unfelt wind',
# 'while the rest are still',
# '3. Trees and plants in an area appear to be',
# 'melting despite normal temperatures',
# '4. The depth of a pond with no inlet seems to',
# 'be raised or lowered about a foot a day',
# '5. Hole in the middle of a rock opens, revealing',
# 'a tiny tunnel',
# '6. Alien spacecraft descends from the sky',
# '7. When cut, a tree bleeds what looks like',
# 'animal blood',
# '8. Vine winds its way through midair',
# '9. Antlike insects construct a huge nest of mud',
# 'that looks like a human face',
# '10. Glowing red crystals erupt from the ground',
# '11. Fungal spores cause tiny mouths to erupt on',
# 'flesh and cry out',
# '12. Lake contains inhabitants that are far too',
# 'large to make logical sense',
# '13. Small ravine where gravity reverses for one',
# 'second at the same time every day',
# '14. People pound on the inside of a transparent,',
# 'soundproof, impenetrable energy dome',
# '15. Mist forms tendrils that follow people',
# 'traveling through the valley',
# '16. The “water” in a small lake can’t be',
# 'touched—it moves away from any attempt',
# '17. All the small animals in a forest are actually',
# 'automatons',
# '18. Meteor strikes the earth, and the spot where',
# 'it lands becomes freezing cold',
# '19. Small village is populated entirely by artificial',
# 'constructs that reproduce sexually',
# '20. Spring-fed pool starts to flow up into the air',
# 'for a moment at random intervals',
# '21. Hill where the bright orange soil slowly eats',
# 'away at any metal it touches',
# '22. Large but innocuous serpent with symbols of',
# 'light on its scales, glowing from within',
# '23. River freezes over randomly',
# '24. Humanlike creatures cavort in a clearing, but',
# 'they are as intelligent and skittish as deer',
# '25. Lake has no surface tension, so nothing',
# 'floats on it',
# '26. Vents in the ground emit gas that drives',
# 'creatures mad',
# '27. Pit seems to have no bottom and is always',
# 'enshrouded in mist',
# '28. Small, innocuous mammal seems to trail',
# 'fires wherever it goes',
# '29. Strange, floating lights bob about but can',
# 'never be caught',
# '30. Occasionally, random inanimate objects',
# 'vibrate violently in the area',
# '31. The trees look too much like people (with',
# 'faces, hands, etc.) to be a coincidence',
# '32. A huge stone has a humanlike face on one',
# 'side that sometimes mouths unknown words',
# '33. Innocuous-looking animal is intelligent',
# 'and erudite (but not a threat)',
# '34. A small stone monument near which sound',
# 'turns into physical matter (usually soft foam)',
# '35. Pool filled with water that is solid but',
# 'is not ice',
# '36. Time moves a little more quickly in a',
# 'secluded glen',
# '37. Trees’ branches bloom with gas-filled sacs',
# 'that explode if touched',
# '38. Berries on a bush cry like baby animals',
# '39. Fruit in a tree gives an ability like a',
# 'random cypher',
# '40. Eggs on the ground are hatching, and tiny',
# 'beings of light are emerging',
# '41. Giant spiderwebs fill the forest, but no',
# 'spiders can be found anywhere',
# '42. Reeds and plants floating in the pond form',
# 'the shape of unknown animal heads',
# '43. Space is distorted in an open field so that',
# 'north–south seems twice as far as east–west',
# '44. Grotto stores the minds of anyone who',
# 'dies nearby in what appear to be rocks',
# '45. Bird swoops at those who come too close',
# 'to its nest, and anyone touching it is',
# 'teleported 100 miles away',
# '46. Fungal growths cover everything, and',
# 'most patches or fruiting bodies bear a',
# 'single human eye that watches',
# '47. Plants grow inside fragile, membranous',
# 'bubbles that float through the air',
# '48. Wind direction changes constantly and',
# 'randomly',
# '49. Bits of an ancient ruin dot the landscape',
# 'but cannot be touched or interacted with',
# 'in any way',
# '50. An ancient road winds its way through a',
# 'lovely glen',
# '51. The night sky, viewed from within a',
# 'particular vale, has entirely different stars',
# '52. Regardless of climatic effects, an open field is always shrouded in mist',
# '53. Landscape is a jumble of synth and metal wreckage, but plants thrive there anyway',
# '54. Hill is actually an ancient artificial dome, covered with a thin layer of soil and plants',
# '55. Cliff wall is actually the side of an ancient building',
#
#
# 'Animals and insects in the small glen are utterly silent',
# 'Animals in the area are extremely tame and docile',
# 'Normally docile animal attacks savagely (but likely ineffectually)',
# 'Unique tree is intelligent and telepathic, but relatively uninterested in the world',
# 'Cypher lies inexplicably in the grass ',
# 'Grass is razor sharp',
# 'Fish briefly fall from the sky like rain',
# 'Obviously wet, amphibious creatures live in a dry desert',
# '64. Pools of fresh blood dot the ground',
# '65. Lone metal monolith shows images from the',
# 'childhood of anyone gazing upon it',
# '66. Some of the animals in the area are',
# 'intelligent holograms',
# '67. Two otherwise normal animals are fused',
# 'together but somehow survive',
# '68. Clearing appears to be the scene of a recent',
# 'battle involving very strange energy weapons',
# '69. Innocuous animal is intelligent and can',
# 'speak, but it doesn’t believe that humans',
# 'are real',
# '70. Nonaggressive, floating sphere creature with',
# 'many eyes watches passersby',
# '71. Otherwise normal trees flash with inner red',
# 'lights (clearly mechanical)',
# '72. Recently built, isolated temple or',
# 'monastery stands empty, the inhabitants',
# 'curiously absent',
# '73. River is made of a toxic, greenish-yellow',
# 'sludge rather than water',
# '74. River’s waters speed up and slow down',
# 'inexplicably',
# '75. Layer of salty crust covers everything',
# '(including living creatures)',
# '76. Absolutely everything in an isolated region',
# 'seems to be the wrong color',
# '77. Temporal stutter causes travelers to pass',
# 'through the same small region 1d6 + 1 times',
# '78. Earthquake uncovers a long-buried structure',
# '79. Pool of tarry black substance traps passersby',
# '80. Sinkhole opens up, dumping the characters',
# 'into an ancient structure',
# '81. Small lake quickly drains while the',
# 'characters watch',
# 'Pool shows the thoughts of anyone standing near it',
# 'Recently dead corpse of a woman is fused with a tree',
# 'Dead explorers lie near a glowing crystal',
# 'Group of bandits attacks, but before any of them can strike, each bandit mysteriously drops dead',
# 'Old woman in a shack claims to know the future, but all of her predictions are wrong (though almost right)',
# 'Wounded man on the road asks for help, tells a story, and then turns to dust and blows away',
# 'Small farmstead where a family raises a herd of giant insects',
# 'Traveler on the road looks just like a friendly local in the last village but has no knowledge of that person',
# 'Traveling merchant sells a concoction that makes anything transparent for a time',
# 'Despite the dangerous wilderness, a lonely farm never seems to have any trouble',
# 'Farm raises cybernetic livestock',
# 'Farm grows extremely poisonous crops, which the farmers and their families can eat safely',
# 'Farm grows fungus underground, although the farmers live aboveground',
# 'Isolated cult’s temple slowly sinking into a bog is half submerged, but the cultists refuse to leave',
# 'Isolated cult worships ugliness and deformity',
# 'Isolated cult worships a mysterious monolith',
# 'Isolated nano dwells within a tower incorporating a great deal of numenera',
# 'Monks in a monastery spend all day meditating on moving the world back in time',
# 'Hidden school teaches students to control the weather',


# 2 The area is dimensionally unstable, and everyone falls prone. If the instability is strong, characters must succeed on a difficulty 5 Intellect task or be hurled into yet another dimension.
# 3 The device used to reach the new dimension malfunctions, threatening to strand characters.
# 4 Greenish, thick fluid begins to rain from the sky, smelling slightly rank. Tasks are one step more diicult while the rain persists.
# A fungus found in the area can temporarily duplicate living flesh, but the new creature is usually hostile to the original
# 5 Giant telepathic slugs live in area.
# A cave in the area sometimes releases large flying metal rings that snatch creatures and carry them deep underground.
# 9 A cypher in the character’s possession interacts with the new dimension and begins to act oddly. It might explode, release dangerous energy, or take on a whole  new temporary ability.
# 10 The environment is somehow toxic, and characters must succeed on a diiculty 4 Might task each hour or descend one step on the damage track.
# 12 A guardian automaton/entity detects the arrival and demands identiication from newcomers, possibly not in a language or communication mode the travelers understand.
# An infestation of greenish metallic bees is building a house-size hive made of foul-smelling ice that doesn't melt.
# Strange plant like growths on the rock bleed an oily red substance
# The weather in the area is toxic to the travelers.
# Head-sized spherical automatons are arranging themselves in strange configurations
# 19 Something in the new landscape, a strange smell, or something else seems familiar to the PC, as if from a forgotten memory in their own past.
# 3 An item or object in the area opens up a portal mouth to an unknown dimension.
# 1 A doppelganger of one of the characters  appears, wounded and crazed, and attempts to take the character’s place. (flesh ghost 4 (12))

# 3 The character still retains transdimensional energy, and when they use a cypher, the interaction blasts the character into an alternate dimension.
# 4 Foes from an alternate dimension inally track the character down.
# 5 The character has such a vivid dream of passing through another dimension that,
# upon waking, they’re not sure whether it was a dream or it was real.
# 6 A black box phases into existence before the character. However, the character
# apparently lacks the key.
# 7 The characters thought they had returned to their home plane, but after a period of
# days (or weeks), they realize they only reached a parallel dimension, possibly when
# they inally return to their home city and ind that it never existed.
# 8 The characters unwittingly bring a dangerous infection, contagion, or creature with
# them when they return to their home dimension.
# 9 The portal mouth or device used to travel to an alternate dimension begins to
# blight reality around it, risking a runaway disaster unless the characters can
# intervene with a successful Intellect task to repair the device.
# 10 The character becomes physically addicted to dimensional travel. Following
# any period longer than a week in which the character does not travel to a new
# dimension, the character sufers a one-step penalty on Intellect tasks.
# 11 Blisters form on the character’s hands. Instead of popping, they open and are
# revealed as eyes of some alien transdimensional being.
# 12 The character has a lashback memory so strong of a previously visited dimension
# that something from that dimension slips into reality.
# 13 The character has a lashback memory so strong of a previously visited dimension
# that an object or NPC the character is handling or speaking with falls into that
# alternate dimension.
# 14 When the character falls asleep, they dream of the old dimension so lucidly that
# something from that dimension is summoned to the character’s reality.
# 15 When the character falls asleep, they dream of the old dimension so lucidly that an
# object or other character is shunted into that prior dimension.
# 16 Aeon Priests who study alternate dimensions have reason to believe that the character
# has upset the dimensional continuum, and must be killed to safeguard reality.
# 17 A creature from an alternate dimension that has been trailing the character inally
# catches up to them. The creature is a predator.
# 18 A creature from an alternate dimension that has been trailing the character inally
# catches up to them. The creature wants to replace the character and take over their life.
# 19 A creature from an alternate dimension that has been trailing the character inally
# catches up to them. The creature accuses the character of stealing something from it.
# 20 A creature from an alternate dimension that has been trailing the character inally
# catches up to them. The creature wants the character to come back and save the
# creature’s people from some interdimensional threat.
#
#
#
#
#
#
# DIMENSIONAL BLEED
# EFFECTS TABLE
# 1 Vividly hued funguslike growths appear on a nearby surface, possession, or PC.
# 5 Orange mist limits vision and sound to immediate range.
# 13 Laaks rain from the sky, mostly dying upon impact.
# 14 Footsteps, knocks, banging, rapping, and scratching sounds emerge from the ground, object, or walls.
# 17 A PC gains a potentially inimical transdimensional duplicate for one minute.
# 18 Blinking eyes and tiny mouths sprout on a nearby surface, possession, or PC.
# 19 Screams like someone being violently murdered emerge from the ground, object, or walls.
# 20 Possessions and provisions become infested with giant green maggots.
#
#
# 1 Extreme gravity forces PCs to crawl, and the difficulty of all physical tasks is increased by three steps
# 2 Tiny crawling green insects swarm everywhere, flying and biting (level 1)
# 5 A sunny, meadowlike hill on which colorful and fragrant flowers grow
# 9 Filled with boiling black mist, slightly poisonous (level 1)
# 11 Planar duplicates of the PCs passing in the other direction
# 12 Continuous earthquake makes it difficult to move without falling
# 13 Direction of gravity changed so what was forward is now down
# 14 A grove of trees whisper, offering to tell secrets to all who pass, though they mostly tell lies
# 16 Emotions cannot be felt
# 18 Nanites gradually convert biological creatures to automatons
# 19 Filled with greenish mist that heals all wounds and diseases, and fills mind with peace and joy (level 3)




def monster():
    monster_trait_list = [
        'altering its appearance',
        'becoming gigantic',
        'becoming tiny',
        'breathing underwater',
        'camoflaging its body',
        'controlling air',
        'controlling arachnids',
        'controlling earth',
        'controlling electricity',
        'controlling fire',
        'controlling insects',
        'controlling water',
        'creating fire',
        'creating force fields',
        'detecting lies',
        'draining life energy',
        'eating anything',
        'an elastic body',
        'an enhanced sense of smell',
        'flight',
        'freezing things',
        'healing quickly',
        'healing others',
        'high jumping',
        'imitating voices',
        'immunity to most diseases',
        'immunity to most forms of radiation',
        'immunity to most toxins',
        'invisibility',
        'near-invulnerability to physical damage',
        'learning the complete history of an object by touching it',
        'manipulating emotions',
        'manipulating gravity',
        'manipulating light',
        'manipulating metal',
        'manipulating plants',
        'manipulating shadows',
        'manipulating time',
        'passing through solid objects',
        'prehensile hair',
        'a prehensile tail',
        'a prehensile tongue',
        'projecting illusions',
        'rapid learning',
        'reading minds',
        'seeing in the dark',
        'seeing the future',
        'seeing through illusions',
        'seeing through solid objects',
        'seeing remote events',
        'sensing emotions',
        'shooting energy beams',
        'super aiming skills',
        'super balance',
        'super hearing',
        'super intelligence',
        'super memory',
        'super navigation skills',
        'super speed',
        'super strength',
        'telepathy',
        'teleportation',
        'transforming into a gaseous form',
        'transforming into a liquid form',
        'withstanding extreme cold',
        'withstanding extreme heat'
    ]

    def print_menu():  # Your menu design here
        print(30 * "-", "MONSTER MENU", 30 * "-")
        print(30 * "-", "Pick Location", 30 * "-")
        print("1. Ruins")
        print("2. Water")
        print("3. Plains")
        print("4. Forest")
        print("5. Mountains")
        print("6. Underground")
        print("7. Swamp ")
        print('8. Exit')
        print(73 * "-")

    loop = True
    int_choice = -1

    while loop:  # While loop which will keep going until loop = False
        print_menu()  # Displays menu
        choice = input("Enter your choice [1-8]: ")

        if choice == '1':
            int_choice = 1
            # add random monsters
            ruins_monster_list = ['accelerator',
                                    'steel angel ',
                                    'stitcher',
                                    'symbate',
                                    'tanaras',
                                    'lacaric courier',
                                    'lambrequin',
                                    'imorphin gonoph',
                                    'glauxim',
                                    'fuser',
                                    'machine eater',
                                    'gevanic',
                                    'eldmor',
                                    'decanted reaper ',
                                    'ateric ',
                                    'cypherid ',
                                    'laak ',
                                    'disassembler ',
                                    'revehent',
                                    'cynoclept',
                                    'cuiddit',
                                    'warcore',
                                    'synth eater',
                                    'divellent',
                                    'dritch',
                                    'marauding vault',
                                    'mesotemus',
                                    'tarrow mole',
                                    'reconstructor ',
                                    'residuum',
                                    'vaytaren',
                                    'scrow',
                                    'sferic',
                                    'griefsteel',
                                    'mech shambler ',
                                    'steel spider',
                                    'nagina ',
]
            print('Ruins monster')
            ruins_monster = random.choice(ruins_monster_list)
            print(ruins_monster)

        elif choice == '2':
            int_choice = 2
            water_monster_list = ['Vroaordun', 'Shoguar', 'Kroth', 'Jybril', 'Kaorund', 'Karestrel', 'Quaaen', 'Glittergar', 'Narborasham', 'Jiraskar', 'Rubar', 'Rhog', 'Mimetan', 'Ghost Crab']
            print('water monster')
            water_monster = random.choice(water_monster_list)
            print(water_monster)

        elif choice == '3':
            int_choice = 3
            print('Plains monster')
            plains_monster_list = ['kissing fawn ',
                                    'parlous green ',
                                    'duronalor ',
                                    'entlan ',
                                    'ravage bear ',
                                    'rasters ',
                                    'laak ',
                                    'ithsyn',
                                        ]
            plains_monster = random.choice(plains_monster_list)
            print(plains_monster)

        elif choice == '4':
            int_choice = 4
            print('Forest monster')
            forest_monster_list = ['kissing fawn ',
                                    'parlous green ',
                                    'duronalor ',
                                    'entlan ',
                                    'ravage bear ',
                                    'rasters ',
                                    'laak ',
                                    'ithsyn',
                                    'erynth grask ',
                                    ]

            forest_monster = random.choice(forest_monster_list)
            print(forest_monster)

        elif choice == '5':
            int_choice = 5
            print('Mountains monster')
            mountains_monster_list = [
                'shoguar ',
                'elaan',
                'crystalvore ',
                'shantag ',
                'shoun',
                'laak ',
                'broken hound ',
                'cragworm ',
                'ravage bear ',

            ]
            mountain_monster = random.choice(mountains_monster_list)
            print(mountain_monster)

        elif choice == '6':
            int_choice = 6
            print('Underground monster')
            underground_monster_list = ['']
            underground_monster = random.choice(underground_monster_list)
            print(underground_monster)

        elif choice == '7':
            int_choice = 6
            print('Swamp monster')
            swamp_monster_list = ['']
            swamp_monster = random.choice(swamp_monster_list)
            print(swamp_monster)

        elif choice == '8':
            int_choice = -1
            print("Exiting..")
            loop = False  # This will make the while loop to end

        else:
            # Any inputs other than values 1-4 we print an error message
            input("Wrong menu selection. Enter any key to try again..")
        return [int_choice, choice]


# items
def cypher():
    level = random.randint(1,6)
    #Form of cypher
    form_list = [
    'Crystal nodule',
    'Handheld device',
    'Ingestible liquid',
    'Injector',
    'Large metallic disc',
    'Metallic sphere',
    'Canister',
    'Synth gauntlet',
    'Wristband device',
    'Amulet',
    'Figurine',
    'Ring',
    'Circlet',
    'Bracelet',
    'Small smooth stone',
    'Cylindrical tube',
    'Goggles',
    'Glove',
    'Electronic module',
    'Pill',
    'Small metallic disc',
    'Adhesive patch',
    'Small cube',
    'Graft',
    'Vial of moving slime',
    'Vial with small writhing worm',
    'Capsule',
    ]
    cypher_form = random.choice(form_list)
    #print("Cypher form:", random.choice(form_list))
    cypher = random.randint(1, 100)
    if cypher == 100: # random extreme cypher
        print('Extreme Cipher!')
        roll = random.randint(1, 100)
        damage_roll = random.randint(1, 100)
        if damage_roll < 51:
            damage_type = "heat/concentrated light"
        elif damage_roll < 61:
            damage_type = "cell-disrupting radiation"
        elif damage_roll < 81:
            damage_type = "force"
        elif damage_roll < 88:
            damage_type = "magnetic wave"
        elif damage_roll < 94:
            damage_type = "molecular bond disruption"
        else:
            damage_type = "concentrated cold"


        if roll < 3:
            print('Certain attack \nLevel: 10 Form:', cypher_form, 'Effect: For the next round, when the user attacks a target with an ability, weapon, or device, regardless of the range or any barriers separating them, the attack succeeds (treat as a routine task). The user can attack any target, but only if she knows that the target exists; the GM will decide if she has enough information to confirm the target’s existence. ')
        elif roll < 6:
            print('City communion \nLevel: 10 Form:', cypher_form, 'Effect: All creatures within a 2-mile (3 km) radius gain telepathy for a few rounds and can speak to each other regardless of any interceding barriers or language barriers. Though the effect is potentially overwhelming for those few rounds, the follow-on effect allows all connected creatures to gain a brief sense of each other and each other’s point of view. For the next ten days at least, the difficulty of any positive interaction tasks attempted between affected creatures is reduced by three steps. ')
        elif roll < 8:
            print('Complete restoration \nLevel: 10 Form:', cypher_form, 'Effect: User’s Pools are completely restored, she becomes hale on the damage track, and she is cured of all diseases, poisons, and other ongoing deleterious effects. ')
        elif roll < 11:
            print('Disciple \nLevel: 9 Form:', cypher_form, 'Effect: A creature about the size of the user and whose level does not exceed the cypher’s level becomes convinced that the user is worthy of service and sacrifice. The creature gives up whatever occupation and life it previously pursued to become the user’s follower. It continues to serve the user gladly, unless or until the user does wrong by the creature, as determined by the GM.')
        elif roll < 13:
            print('Distant Summons \nLevel: 9 Form:', cypher_form, 'Effect: A named target the user knows to exist is summoned from wherever it is, even if it’s unwilling to be called. The user can summon any target, but only if she knows that the target exists; the GM will decide if she has enough information to confirm the target’s existence. ')
        elif roll < 16:
            print('Eclipse \nLevel: 12 Form:', cypher_form, 'Effect: A location up to 10 miles (16 km) away is shadowed in darkness in an area 3 miles (5 km) in radius for one day, during which time all natural sources of light are absent. Light sources produced by technology may also be affected, especially if they are normally the only “natural” sources of light in the chosen area. ')
        elif roll < 18:
            print('Effortless \nLevel: 9 Form:', cypher_form, 'Effect: For the next hour, the user doesn’t spend points from her Pools when applying Effort. Other normal limits for applying Effort remain in effect.')
        elif roll < 21:
            print('Evacuate Air \nLevel: 11 Form:', cypher_form, 'Effect: An area that is a short distance in radius and up to a long distance away is evacuated of all air, gas, or ice, creating a vacuum. The area of vacuum is permanent. ')
        elif roll < 23:
            print('Far Traveler \nLevel: 11 Form:', cypher_form, 'Effect: User is transferred to a location that she knows to exist, no matter how far away it is or how many interceding barriers lie between her and the endpoint. The user can go anywhere, as long as she knows that the location exists; the GM will decide if she has enough information to confirm the location’s existence.')
        elif roll < 26:
            print('Indestructible Item \nLevel: 10 Form:', cypher_form, 'Effect: Effects with a level that is less than the cypher’s level can no longer harm a designated object no larger than the user within immediate range.')
        elif roll < 28:
            print('Instant Friends \nLevel: 9 Form:', cypher_form, 'Effect: All chosen targets within short range regard the user in a friendly fashion, regardless of their earlier dispositions, for one hour or unless she harms a target or otherwise does something obvious that isn’t in a target’s best interest. ')
        elif roll < 31:
            print('Instant Tower \nLevel: 10 Form:', cypher_form, 'Effect: Expands into a complex twenty-story structure with entrances, windows, and stairs connecting each level. The structure is permanent and immobile once created.')
        elif roll < 33:
            print('Lethal Upgrade \nLevel:', level + 9, 'Form:', cypher_form, 'Effect: For the next minute, a selected weapon within immediate range inflicts additional points of damage equal to the cypher’s level.')
        elif roll < 36:
            print('Limitless \nLevel: 10 Form:', cypher_form, 'Effect: The user succeeds at any one knowledge task whose difficulty is equal to or less than the cypher’s level. ')
        elif roll < 38:
            print('Massive Destruction \nLevel:', level + 9,'Form:', cypher_form, 'Effect: Projects a destructive pulse up to 3 miles (5 km) away that explodes in a 1-mile (1.5 km) radius, inflicting damage equal to the cypher’s level. The type of damage is informed by the genre setting where this cypher is deployed. ')
        elif roll < 41:
            print('Multibooster \nLevel: 9 Form:', cypher_form, 'Effect: Adds 3 to the user’s Might Edge, Speed Edge, and Intellect Edge for one hour. ')
        elif roll < 43:
            print('Multiport \nLevel: 8 Form:', cypher_form, 'Effect: User and all allies within short range are instantly transferred to any location the user designates within 100 miles (160 km), as long as she has previously visited the location and the location still exists. ')
        elif roll < 46:
            print('Physical Upgrade \nLevel: 10 Form:', cypher_form, 'Effect: User permanently adds 3 points to one Pool.')
        elif roll < 48:
            print('Power shift (Accuracy) \nLevel: 15 Form:', cypher_form, 'Effect: For three days, the user gains a power shift to accuracy, which reduces the difficulty of any attack he makes by one step. ')
        elif roll < 51:
            print('Power shift (Intelligence) \nLevel: 15 Form:', cypher_form, 'Effect: For three days, the user gains a power shift to intelligence, which reduces the difficulty of any Intellect defense roll and all knowledge, science, and crafting tasks he makes by one step.')
        elif roll < 53:
            print('Power shift (Resilience) \nLevel: 15 Form:', cypher_form, 'Effect: For three days, the user gains a power shift to resilience, which reduces the difficulty of any Might defense roll he makes by one step and adds 1 to Armor. ')
        elif roll < 56:
            print('Power shift (Single Attack) \nLevel: 15 Form:', cypher_form, 'Effect: For three days, the user gains a power shift to a single attack (chosen when the cypher is used), which reduces the difficulty of that particular attack by one step and adds 3 points of damage on a successful attack. ')
        elif roll < 58:
            print('Quell \nLevel: 10 Form:', cypher_form, 'Effect: All chosen targets within long range fall unconscious or become inoperative for one hour or until a target sustains damage, which wakes that particular target. ')
        elif roll < 61:
            print('Rage unending \nLevel: 10 Form:', cypher_form, 'Effect: Targets within a 200-foot (60 m) radius up to 1 mile (1.5 km) away become raging psychopaths, with no thought for their own safety. Affected targets seek out and make melee attacks on the nearest creatures and continue to do so until they are killed or one day passes.')
        elif roll < 63:
            print('Ray emitter (Extreme) \nLevel:', level + 9, 'Form:', cypher_form, 'Effect: Allows the user to project a ray of destructive energy up to 3 miles (5 km) that inflicts ', damage_type, ' damage equal to the cypher’s level.')
        elif roll < 66:
            print('Replacement \nLevel: 10 Form:', cypher_form, 'Effect: Target within long range disappears for one hour, while the user gains the target’s features, general mannerisms, and trivial surface knowledge (such as the names of friends). This lowers the difficulty by four steps of the user’s attempts to pass himself off as or disguise himself as the target')
        elif roll < 68:
            print('Resurrect \nLevel: 13 Form:', cypher_form, 'Effect: Dead creature within immediate range is returned to life in full health, relative youth, and complete possession of its faculties and memories up to the point of death. To ensure success, some remnant of the target creature must remain, such as hair, skin, or bone. ')
        elif roll < 71:
            print('Shadow Body \nLevel: 9 Form:', cypher_form, 'Effect: For one day, the user and all her equipment becomes equivalent to an animate shadow. As a shadow, she can flicker between two shadows within 300 feet (90 m) of each other as part of another action (regardless of interceding barriers), and she gains +15 to Armor against all sources of damage other than those generated by light. In addition, the difficulty of all stealth tasks is reduced by two steps.')
        elif roll < 73:
            print('Super Champion \nLevel: 10 Form:', cypher_form, 'Effect: A level 10 creature is produced within long range and fights on behalf of the user for one minute. ')
        elif roll < 76:
            print('Survive \nLevel: 10 Form:', cypher_form, 'Effect: For one minute, the user regains all points to his Pools each round while he has at least 1 point in any Pool. If he dies, he instead regains all points to one Pool and the effect ends. ')
        elif roll < 78:
            print('Temporal Escape \nLevel: 10 Form:', cypher_form, 'Effect: User and all allies within long range are instantly transferred 1d20 + 5 years into the future. For them, no time elapses. For all other creatures, it’s as if the targets ceased to exist during the intervening period. ')
        elif roll < 81:
            print('Transcendence \nLevel: 11 Form:', cypher_form, 'Effect: For the next minute, each of the user’s actions is treated as if the player rolled a 20. ')
        elif roll < 83:
            print('Transformation Extreme \nLevel: 10 Form:', cypher_form, 'Effect: For one minute, the user gains the form and attributes of a creature of up to level 10 that she knows to exist. The GM will decide if she has enough information to confirm the creature’s existence.')
        elif roll < 86:
            print('Twister \nLevel: 8 Form:', cypher_form, 'Effect: Launches a small tornado that travels a short distance each round in the direction determined by the user. The tornado persists for five minutes, leaving a swath of destruction 300 feet (90 m) wide in its wake by destroying structures whose level is less than the cypher’s level. Each round a creature is caught in the area, it is stunned (losing its next turn), it sustains damage equal to the cypher’s level, and it could be flung a short or long distance in a random direction.')
        elif roll < 88:
            print('Ultimate Acquisition \nLevel: 9 Form:', cypher_form, 'Effect: A named object of the user’s size or smaller that she knows to exist is drawn immediately to her, no matter the range or interceding barriers. The user can summon any object, as long as she knows it exists; the GM will decide if she has enough information to confirm the object’s existence. ')
        elif roll < 91:
            print('Universal Expertise \nLevel: 10 Form:', cypher_form, 'Effect: For the next hour, the difficulty of all tasks the user attempts is reduced by three steps.')
        elif roll < 93:
            print('TIME DUPLICATE\nLevel: 10\nUsable: Metallic sphere\nEffect: A future version of the user appears next to the user and aids the user for up to one minute. Essentially, this allows the user to take two turns per round at two different locations. However, at some point determined by the GM within the next month, the user disappears for up to one minute, paying the time debt. If the user’s present or future duplicate dies or suffers some mishap that creates the potential for a paradox, time wraiths may appear to dispatch all witnesses.')
        elif roll < 94:
            print('Unlock Latency \nLevel: 10 Form:', cypher_form, 'Effect: User permanently gains one special ability from any available focus. The GM determines what foci are available to choose from. The user can choose any ability, but the difficulty of using an ability whose tier is higher than her tier is increased by a number of steps equal to the difference between the tiers.')
        elif roll < 97:
            print('Vanish Creature \nLevel: 11 Form:', cypher_form, 'Effect: One creature within immediate range that is of the user’s size or smaller permanently vanishes')
        elif roll < 98:
            print('Vanish Volume \nLevel: 11 Form:', cypher_form, 'Effect: One or more objects, a structure (and all its contents), or a portion of a structure able to fit in a 10-foot (3 m) cube permanently vanishes. ')
        elif roll < 100:
            print('Doomsday Device Level: 10 Internal: Subdermal injection Usable: Explosive device Effect: When activated, the user sets a timer for up to one year. When the time runs out, the device explodes out to a range of 1 mile (2 km). The explosion inflicts 20 points of damage to everything in the area and saturates the air and ground with radiation that lasts for 5d20 years. Until the radiation dissipates, it inflicts 1 point of ambient damage for each minute a creature remains in the area.')
        else:
            print('Volcano \nLevel: 15 Form:', cypher_form, 'Effect: Over the course of thirty hours, a volcanic dome grows beneath the point on the ground where the cypher is activated, which likely destroys most structures in the area over time. When finished growing, the upthrust area is 6 miles (10 km) across at its base and has an elevation of 4,000 feet (1,200 m). When the growth phase ends, the dome erupts as a volcano for ten hours, threatening to destroy an additional area up to 5 miles (8 km) in radius around the base.')

    else:               # normal cypher
        cypher_roll = random.randint(1,687)
        if cypher_roll == 1:
            print('Safe Distance \n Level:', level + 2, 'Usable: A cube about 1.5 inches (4 cm) to a side, made of utterly ordinary stone Effect: The space between the user and an adjacent target increases to a long distance. The device literally “stretches” space to accomplish this—or to put it another way, the device expands space. This is a permanent change.')
        elif cypher_roll == 2:
            print('Transposition \n Level:', level, 'Usable: A cube about 1.5 inches (4 cm) to a side, made of utterly ordinary stone Effect: The user and one object or creature within long range switch places in space.')
        elif cypher_roll == 3:
            print('Attachment Seeker \n  Level:', level, 'Usable: Handheld device that injects nanites Effect:  Displays the relative location and distance of all people that were injected with nanites on a screen.  Will continue to display updated information for a number of hours equal to the cypher’s level. ')
        elif cypher_roll == 4:
            print('Blizzard Beam \n Level:', level +1, 'Usable: Complex device Effect:  Fires a laser at the sky, summoning blizzard level weather within a user-chosen outdoor location within long range, up to 20 yards (18.29 meters) in diameter, lasting for one hour.  The weather change is totally confined to this cylinder of space, hardly affecting the weather outside of it. ')
        elif cypher_roll == 5:
            print('Brain Scanner \n Level:', level +2, 'Wearable: Headband Usable: Handheld device Effect:  Allows the user to read the surface thoughts of a visible living target within long range, for a number of rounds equal to the cypher’s level.  Will not work if the target is wearing a metal helmet or hat. ')
        elif cypher_roll == 6:
            print('Cloud Grabber \n Level:', level +1, 'Wearable: Wristband Usable: Handheld device Effect:  The user may change the general weather of the region, up to a distance of ten miles (16 kilometers).  Extreme weather is not possible (blizzards, drought, etc.), but heavy storms or squelching heat are within the limits of the device.  The altered weather lasts for a number of hours equal to the level of the cypher. ')
        elif cypher_roll == 7:
            print('Creature Scanner \n Level:', level +2, 'Wearable: Armband, Wristband, Eye mounted display Usable:  Handheld device Effect:  This cypher displays the location and relative distances of all creatures of a particular type within Long range of the user.  The display is constantly updated with changing information about the creatures for a number of hours equal to the level of the cypher.  Each of these cyphers is attuned to a particular type of creature common in the region or area in which the cypher was found. ')
        elif cypher_roll == 8:
            print('Scrambler \n Level:', level +1, 'Wearable: Wristband (long range) Usable:  Weapon (long range) Effect:  Causes cybernetic implants to malfunction, harming the targeted implant host, causing an amount of damage equal to the level of the cypher, causing the target to be stunned for one round, and potentially disabling important abilities for a number of hours equal to the level of the cypher.   Only works against creatures that are both machine and biological. ')
        elif cypher_roll == 9:
            print('Glimmer Maker \n Level:', level +4, 'Usable: Complex device Effect:  Creates an echo of the past, displayed as a holographic vignette of images and sound projected from the sky to an immediate location.  This “glimmer” is a moment from the past that could be important to the user, as determined by the capricious logic of the Datasphere entities and programs. ')
        elif cypher_roll == 10:
            print('Kill Switch \n Level: ', level,' Wearable: Wristband  Usable: Handheld device  Effect:  Target electrical or electronic device is either turned off or on, no matter how complex the device. ')
        elif cypher_roll == 11:
            print('Material Detector \n Level:', level + 1,' Wearable: Armband, Wristband, Eye mounted display Usable: Handheld device Effect: This cypher displays the location and relative distances of all materials of a particular type within Long range of the user.  The display is constantly updated with changing information about deposits of the material for a number of hours equal to the level of the cypher.  Each of these cyphers is attuned to a particular type of material common in the region or area in which the cypher was found, such as steel, ceramics, glass, or synth. ')
        elif cypher_roll == 12:
            print('Position Finder \n Level: ', level,' Usable: Handheld device Effect:  The user learns their present location relative to major known landmarks.  A simple map is displayed on the device, which may briefly reveal additional information about the surrounding terrain at the GM’s discretion. ')
        elif cypher_roll == 13:
            print('Sun Bender \n Level:', level + 1,'Wearable: Glove Usable: Handheld device Effect:  The user directs the cypher to affect an outdoor circular area within long range, up to 20 yards (18.29 meters) in diameter.  This area becomes lit up by daylight, no matter the actual time of day, lasting for one hour.  If used in the middle of the afternoon, this cypher has little effect.   ')
        elif cypher_roll == 14:
            print('System Reformatter \n Level:', level +3,' Usable: Metal disk or spike Effect:  This cypher makes one electronic device or computer system with terminals within immediate range utterly and likely permanently shut down.  Once the cypher is activated the process of destruction takes ', level,' rounds to complete.  It is possible for this device to kill an artificial intelligence if it is stored within a local system rather than the Datasphere. ')
        elif cypher_roll == 15:
            print('Language Converter \n Level:', level,' Usable: Metal disk or spike, Handheld device Effect:  An affected device or computer terminal now displays its interface in your language, rather than whatever prior world language it normally would.  This effect lasts a number of hours equal to the level of the cypher. ')
        elif cypher_roll == 16:
            print('User Identification \n Level:', level,' Usable: Metal disk or spike, Handheld device Effect:  The user gains access to all basic commands on a computer system with a terminal within immediate range, such as control of connected machinery or access to stored recordings of events.  These commands are likely written in a language the user doesn’t understand, so some potentially dangerous trial and error is likely, depending on the computer system. ')
        elif cypher_roll == 17:
            print('Bolt Caster \n Level:', level + 1,' Wearable: Glove, Wristband Usable:  Handheld device Effect:  Calls forth a bolt of lightning to strike a target creature or object.  The target takes an amount of damage equal to the level of the cypher, is knocked to the ground, and is unable to act for a number of rounds equal to the level of the cypher. ')
        elif cypher_roll == 18:
            print('Access Glasses Level:', level +1,'Wearable: Goggles plus gloves or rings Effect: The user can see through up to half an inch of solid material and can pass his hands and anything his hands are holding through that solid matter. Once the area to be looked and passed through is chosen—about 18 inches by 18 inches (46 cm by 46 cm)—a new area cannot be chosen. However, the effect lasts for an hour.')
        elif cypher_roll == 19:
            print('Access Token Level:', level,' Wearable: Gloves, ring, false fingernail Usable: Tiny metal device Effect: Automatically unlocks one locked door or container within short range.')
        elif cypher_roll == 20:
            print('Adamant Foam Level:', level +1,'Usable: Small spray canister Effect: The foam in this canister is extraordinarily light—almost weightless, lighter than a soap bubble—and virtually invisible. It’s possible, in fact, to have this foam in your hand and not even realize it. And yet the foam, which dries on contact with the air, is superstrong. While pliable, it’s as unbreakable as steel mesh. The canister has enough foam to coat an area 6 feet by 6 feet (2 m by 2 m) with a thin layer. Although this foam has many uses, if sprayed on a living target, that target has +2 to Armor. Adamant foam disintegrates after 28 hours.')
        elif cypher_roll == 21:
            print('Airfins Level:', level,' Wearable: Long gloves with forearm fins Effect: Through gravity manipulation, the wearer can swim through the air as if it were water for one hour. Training or specialization in swimming aids in movement.')
        elif cypher_roll == 22:
            print('Alarm Worm Level:', level,' Usable: A bloated worm about 1 foot (0.3 m) long Effect: Six minutes after activation, the worm inflates and excretes ', level,' wet, shuddering eggs at a place the user designates. After laying the eggs, the worm slithers back to the user and coils around one of his limbs, gripping tightly. For the next seven hours, whenever a creature approaches within 5 feet (2 m) of the eggs, the worm tightens and exudes a thick orange slime that reeks of rotten meat. When the effect ends, the worm relaxes its grip, falls, and expires messily.')
        elif cypher_roll == 23:
            print('Amplification Parasite Level:', level +4,'Internal: Living fish, beetle, or worm that must be ingested Effect: Upon eating the parasite, the user chooses one stat and the GM chooses a different stat. The difficulty of any roll related to the user’s chosen stat is reduced by two steps, and the difficulty of any roll involving the GM’s chosen stat is increased by two steps. The parasite dies after ', level,' hours, and the effect ends when the user violently expels it from her body.')
        elif cypher_roll == 24:
            print('Analysis Daemon Level: 1 Internal: Pill, ingestible liquid Wearable: Temporary tattoo, amulet, headband, crystal worn on temple Usable: Small handheld device, crystal Effect: The user examines a cypher or an artifact and then taps into the datasphere. The user automatically identifies the device.')
        elif cypher_roll == 25:
            print('Analysis Scanner Level:', level +4,' Wearable: Bracelet Usable: Handheld device Effect: This device scans and records everything within short range for one round and then conveys the level and nature of all creatures, objects, and energy sources it scanned. This information can be accessed for 28 hours after the scan.')
        elif cypher_roll == 26:
            print('Anchor Stone Level:', level,' Usable: Lump of oddly shaped stone or metal Effect: Submerging the device in water causes it to swell into a boulder about 5 feet (2 m) in diameter that weighs 500 pounds (227 kg).')
        elif cypher_roll == 27:
            print('Antipathy Field Emitter Level:', level,' Wearable: Mask, amulet worn around the neck, temporary tattoo Usable: Small handheld device, node that can be attached to a weapon or armor Effect: When activated, the device emits an invisible energy field for one hour. The field extends out to immediate range. Any living creature in the field other than the user experiences nausea and physical discomfort. The difficulty of all tasks performed by an affected creature is modified by one step to its detriment.')
        elif cypher_roll == 28:
            print('Anxiety Engine Level:', level +2,' Usable: White sphere with a glowing red orb Effect: Fills a 5-foot (2 m) cube with a cloud of shadowy mist that lingers for one hour. The mist cannot be dispersed and remains despite the environmental conditions. Whenever a creature moves to within a short distance of the mist and can see it, the creature sees the cloud transform into something terrifying and horrific, its worst nightmares come to life. While the creature remains within a short distance of the cloud, the difficulty for all its tasks is modified by one step to its detriment.')
        elif cypher_roll == 29:
            print('Armor Patch Level:', level,' Wearable: Sewn-on patch, self-stick fabric, metallic swatch Effect: After being applied to armor of any kind, this patch activates when firmly slapped, sending tiny nanowires through the armor’s material to provide greater benefit. 01–50 Nanowires add a repellent layer to the material. Gain +1 to Armor against ranged, piercing, fire, or beam attacks for 28 hours. 51–75 Nanowires create greater flexibility in the material. Gain a +2 bonus to Speed defense rolls for 28 hours. 76–00 Nanowires create a tough outer coating to the material. Gain a +2  bonus to Might defense rolls for 28 hours. Action to attach to armor. Activation can be combined with another action.')
        elif cypher_roll == 30:
            print('Artificial Leech Level:', level,' Usable: Handheld device Effect: When used at the site of an infected or poisoned wound, the device draws out as much of the infection or poison as it can without injuring the surrounding tissue. The device restores a number of points equal to the cypher level to the user’s Might Pool.')
        elif cypher_roll == 31:
            print('Atmospheric Hyperskin Level:', level,' Wearable: Adhesive patch of clear or fleshcolored substrate, temporary tattoo, sticky bundle of bare nanowires Effect: When applied to any part of the body, nanowires penetrate the surface of the skin, allowing the user to sense a wider-thannormal range of atmospheric, geologic, and aqueous pressures, sensations, and vibrations. The user becomes trained in geology, biology, climatology, and perception for 28 hours.')
        elif cypher_roll == 32:
            print('Awareness Enhancer Level:', level,' Internal: Pill, injector Wearable: Headband Effect: For the next 28 hours, the user is more aware of his surroundings through telepathic and telekinetic means. He can feel objects move within short range and can mentally hear thinking beings within long range. This is an asset for all perception and initiative tasks.')
        elif cypher_roll == 33:
            print('Battle Vapor Level:', level,' Usable: Small metal canister Effect: Releases faint red vapor that fills an area within long distance within two rounds. The vapor persists for ten minutes unless natural conditions (such as wind) suggest otherwise. All energy weapons used in the area inflict 2 additional points of damage as the vapor intensifies them.')
        elif cypher_roll == 34:
            print('Beauty Mask Level:', level,' Usable: Paste Effect: Once applied to the user’s face and left to dry for ten minutes, this paste removes blemishes and wrinkles. The user appears much younger and more attractive. This effect is permanent.')
        elif cypher_roll == 35:
            print('Bezoar Discharge Level:', level,' Usable: Explosive device (thrown, short range) or handheld projector (long range) Effect: Explodes in an immediate radius, giving everything and everyone within it a sticky, powdery coating that provides +1 to Armor against poison, chemical, and fire damage for 28 hours.')
        elif cypher_roll == 36:
            print('Biofeedback Glove Level:', level,' Wearable: Single glove made of synth and nanowires Effect: For the next hour, each time the wearer uses the gloved hand to perform an action, the glove sends a biofeedback response regarding the action. After wearing the glove for one hour, the wearer may choose one of those actions (such as wielding a weapon, crafting, working with numenera devices, and so on). She becomes temporarily trained in that skill. For the next 28 hours, the difficulty of all tasks related to that skill is reduced by one step.')
        elif cypher_roll == 37:
            print('Biological Transpiercer Level:', level + 2,'Usable: Biological needle or spike that is inserted under the skin Effect: Once inserted beneath the user’s skin, the transpiercer releases a slow-acting biological compound that begins to mix with the user’s blood, causing one of the following effects: 01–04 Allows the user to see in the dark for one hour 05–08   Causes the user to go out of phase for one hour 09–12 Increases Might Pool by 5 for one hour 13–16 Increases Speed Pool by 5 for one hour 17–20 Increases Intellect Pool by 5 for one hour 21–25 Restores a number of Might Pool points equal to cypher level 26–30 Restores a number of Speed Pool points equal to cypher level 31–35 Restores a number of Intellect Pool points equal to cypher level 36–45 Increases Might Edge by 1 for one hour 46–55 Increases Speed Edge by 1 for one hour 56–65 Increases Intellect Edge by 1 for one hour 66–75 Creates a random beneficial mutation for one hour 76–85 Creates a random powerful mutation for one hour 86–95 Creates a random distinctive mutation for one hour 96–00 Creates a random cosmetic mutation for one hour')
        elif cypher_roll == 38:
            print('Biometric Reference Level: 1 Internal: Pill, ingestible liquid Wearable: Temporary tattoo, amulet, headband, crystal worn on temple Usable: Small handheld device, crystal Effect: Activating the device allows the user to connect with the datasphere to identify one creature he can see. The user learns the creature’s level, motivations, health, damage inflicted, armor, and movement, plus a detail about how it fights in combat.')
        elif cypher_roll == 39:
            print('Biomorph Level:', level + 2,' Internal: Pill, ingestible liquid Usable: Injector Effect: Causes the user to gain a mutation. Roll to determine the type of mutation: 01–20 Harmful mutation 21–40 Cosmetic mutation 41–60 Beneficial mutation 61–80 Distinctive mutation 81–00 Powerful mutation')
        elif cypher_roll == 40:
            print('Blood Boiler Level:', level + 1,' Internal: Pill, ingestible liquid Effect: Causes an increase in blood flow to any stimulated body parts. Adds 1 to Might Edge for one hour.')
        elif cypher_roll == 41:
            print('Blood Magnet Level:', level,' Wearable: Glove, wristband Usable: Syringe Effect: The user injects the biological magnet into his own blood or that of another living creature within close range. The hemoglobin of the injected creature gains strong ferromagnetic properties for one hour. Roll d100: 01–50 Attracts metallic objects to the creature (can move an object up to the weight of the creature within long range) 51–75 Repels metallic objects from the creature (can move an object up to the weight of the creature within long range) 76–00 Causes the creature’s blood to become overly magnetized, decreasing the flow of oxygen to the cells (does damage equal to the cypher level)')
        elif cypher_roll == 42:
            print('Bloom (Fireflower) Level:', level + 4,' Usable: Ceramic, glass, or other breakable material in the shape of a flower or seed pod with a fuse stem (lit and then thrown or launched, long-range) Effect: Ten seconds after the fuse is lit, the device explodes, sending shards of red-hot glass out into the pattern of a flower. Any living creature that comes into contact with falling or spraying shards suffers burn damage equal to the cypher level.')
        elif cypher_roll == 43:
            print('Bloom (Serpent) Level:', level + 2,' Usable: Ceramic, glass, or other breakable material in the shape of a coiled snake with a fuse tongue (lit and then thrown or launched, long-range) Effect: Ten seconds after the fuse is lit, the device explodes, sending out electrified wireworms in the pattern of a long, gyrating snake. As the snake pattern slides through the air, it explodes a second time, sending the electrified wireworms out in a wider pattern. Any living creature that comes into contact with the wireworms is electrified, taking damage equal to the cypher level and becoming dazed for one round, during which time the difficulty of all tasks it performs is modified by one step to its detriment.')
        elif cypher_roll == 44:
            print('Bloom (Spore) Level:', level + 4,' Usable: Moss-wrapped ball filled with small pressure-activated detonator and propellant spores Effect: Ten seconds after the ball is firmly squeezed (to activate the detonator), the device explodes, sending spores out in foliage patterns. Any living creature that breathes in the falling or spraying spores takes damage equal to the cypher level.')
        elif cypher_roll == 45:
            print('Blue Crystal Level:', level + 1,' Usable: Small blue crystal Effect: When one gazes through a blue crystal, for a brief moment she can view a spot corresponding to her current position in a parallel universe. Moreover, the view is set a few moments in the future. However, since the crystal shows a parallel universe, the future seen may or may not be an accurate reflection of her reality. The user, then, sees a possible future. Normally, there is about a 30% chance that the glimpse is entirely accurate and a 30% chance that it is partially accurate, but these numbers depend on the circumstances.')
        elif cypher_roll == 46:
            print('Body Enhancer Level:', level,' Usable: Tube of malleable material Effect: Adjusts to match the user’s skin color and temperature, can be shaped into any form, and affixes itself to the user’s body for up to two hours. Single action to shape and affix.')
        elif cypher_roll == 47:
            print('Bone Dress Level:', level,' Usable: Squeezable tube filled with liquefied bone Effect: The material can be squeezed into a pattern of protection around anything, living or nonliving. Within a few seconds after application, the bone hardens in the established pattern, providing a cage of armor around the selected object or creature. The cage is malleable, allowing movement, and offers +1 to Armor for one hour. Application takes ten seconds or one round.')
        elif cypher_roll == 48:
            print('Brain Lightning Level:', level,' Wearable: Electrical headband Usable: Handheld device, long-needled syringe Effect: Provides a short, low-level burst of electrical stimulation directly to the brain, increasing awareness and cognitive function. As a result, the user moves one step up the damage track for ten minutes. This is a temporary effect that doesn’t change the status of her Pools. If she is hale (or becomes hale), the device has no effect.')
        elif cypher_roll == 49:
            print('Breather Symbiote Level:', level + 2,' Wearable: A gelatinous mask that must be pressed onto the face Effect: Activating the symbiote causes the device to forcefully inject a long tendril down the user’s throat until it reaches his lungs, where it lodges in the fleshy material. The symbiote provides him with breathable air for one hour, letting him breathe in the absence of air. However, while the symbiote is activated, the user can’t speak. If the symbiote is removed, the user takes 4 points of damage.')
        elif cypher_roll == 50:
            print('Buoyancy Level:', level,' Internal: Pill, ingestible liquid Wearable: Full bodysuit, harness worn about the chest Usable: Injector Effect: For one hour, the user cannot become submerged in any liquid.')
        elif cypher_roll == 51:
            print('Burrowing Bubble Level:', level + 4,' Wearable: Ring, bracelet, headband Usable: Handheld device Effect: Upon activation, for ten minutes, the user is surrounded by a bubble of energy that projects incredible heat outward, but not inward. This bubble floats 1 foot (0.3 m) in the air, inflicts 6 points of damage to all within immediate range, and inflicts 3 points of damage to all within short range. Further, it instantly melts the material directly below (of lower level than the cypher), and the bubble sinks an immediate distance into the new hole it created. This continues for the duration of the effect, so a user who stands on the ground when activating this cypher ends up about 800 feet (244 m) underground when it finally stops. If the user concentrates, she can force the bubble to move an immediate distance in any direction she chooses as an action. The user cannot penetrate the bubble, and neither can forces from the outside. Not even ambient damage gets through. Dealing at least 50 points of damage to the bubble (which has no Armor) destroys it. Damaging the bubble does not harm the user inside until the bubble is destroyed, at which point she falls from whatever height the bubble was at, which is at least 1 foot (0.3 m) in the air.')
        elif cypher_roll == 52:
            print('Butterfly Drone Level:', level,' Usable: Fingertip-sized winged insect built of synth and biological elements Effect: This voice-controlled cyberbug travels in a designated direction and distance. There, it holds its position, flying around in the area for ten minutes, recording sound and images. After that time, it returns to the user. To decipher the information, the user must ingest the bug, which then relays the recording via mechanical impulses to her brain. She sees and hears the recording only once.')
        elif cypher_roll == 53:
            print('Cable Projector Level:', level,' Wearable: Wrist-mounted projector Usable: Handheld device Effect: Projects a cable or rope (if the PC has one) attached to a powerful spike up to long range. The projected rope embeds itself solidly into most surfaces, and the cypher can retract the rope later or pull it extremely taut. If desired, the device can easily be spiked into a surface so that the rope attaches to something solid at both ends.')
        elif cypher_roll == 54:
            print('Camouflage Screen Level:', level + 4,'Usable: Handheld device Effect: Projects an opaque, two-dimensional screen of light that is 12 feet (4 m) high and 20 feet (6 m) across. It lasts up to 28 hours. The screen bears an animate image appropriate to the surrounding area, such as trees and brush in a forest, sandy dunes in a desert, and so on. Thus, anything behind the screen is easily hidden from visual observation unless the viewer is within immediate distance (and even then it may be obscured, depending on the circumstances).')
        elif cypher_roll == 55:
            print('Camouflage Spray Level:', level + 1,' Usable: Canister Effect: An inanimate object (or group of objects) small enough to fit into a cube that is 10 feet by 10 feet by 10 feet (3 m by 3 m by 3 m) can be quickly coated so that its color and texture blend into its surroundings perfectly.')
        elif cypher_roll == 56:
            print('Caustic Storm Level:', level + 4,' Usable: Handheld device Effect: When activated, the cypher surrounds the user with a nimbus of energy, giving him +10 to Armor that works only against caustic damage. This lasts for one round, and the Armor is ablative, which is to say that each point of damage that it absorbs destroys 1 point of the Armor. The cypher also releases fourteen hailstonesized motes of roiling caustic fluid that fly toward and attack all targets (including the user) within immediate range, one mote per target. If there are not fourteen targets within immediate range, the motes fly out to short range. If there are not fourteen targets within short range, they fly out to long range. If there are not fourteen targets within long range, the targets within long range get attacked twice (or more times) each, starting with those in immediate range.')
        elif cypher_roll == 57:
            print('Chitin Colony Level:', level,' Usable: Small container filled with metal shavings Effect: The shavings sprout sharp legs and rush out of the container to completely encase the user’s body. Each piece locks with another piece to form a flexible mesh. The user gains +1 to Armor for one hour.')
        elif cypher_roll == 58:
            print('Cicerone Level:', level,' Usable: Handheld automaton Effect: The user activates the device, points the automaton’s face in the general direction he wishes to go, and states a general distance. The device suggests the easiest and quickest way to travel that route, taking into account terrain, weather, potential threats, and existing paths. It functions for 28 hours and then dies, speaking a single bit of useful information about the route ahead when it does so.')
        elif cypher_roll == 59:
            print('Clamp Trap Level:', level + 1,' Usable: Mouthlike metal clamp Effect: When activated, this device becomes a pressure-plate trap that clamps around anything that triggers it. The device is similar to a bear trap, except that when it is fully activated, it becomes invisible. Once triggered, it inflicts damage equal to the cypher level, plus 1 additional point of damage per minute until it is removed.')
        elif cypher_roll == 60:
            print('Cleaner Level:', level,' Wearable: Wristband projector (immediate range) Usable: Metal container filled with what looks like metal filings Effect: When activated, the device dissolves the remains of one dead human-sized creature into a small pile of salts and other minerals.')
        elif cypher_roll == 61:
            print('Cloaking Pin Level:', level + 2,' Usable: Metal disk that has been made into a lapel pin Effect: When activated, this creates a cloaking field that effectively makes the user invisible and completely silent for one minute. While invisible, the user is specialized in stealth and Speed defense tasks. This effect ends if he does something to reveal his presence or position—attacking, performing an esotery, using an ability, moving a large object, and so on. If this occurs, he can regain the remaining invisibility effect by taking an action to focus on hiding his position.')
        elif cypher_roll == 62:
            print('Clone Tank Level: 10 Usable: A large glass and metal tank filled with pink slime Effect: To activate this device, the user must place a few drops of blood, strands of hair, nail clippings, or a piece of flesh in the slime. The slime hardens around the organic material to form a cyst. Over the next 3d6 months, the device rapidly grows a person from the material. At the end of this time, a full-grown creature, identical in every physical way to the donor creature, emerges from the tank, and the device deactivates. The clone is a level 1 creature. It can communicate in a language known to the user, but otherwise it understands nothing of the world. It becomes a unique character that develops a personality, objectives, and nature of its own.')
        elif cypher_roll == 63:
            print('Cloud Seed Level: ', level + 4,' Usable: Handheld projector (5 miles or 8 km) Effect: This device can be activated only outdoors and with a clear and unobstructed path to the sky. Once activated, a bright white mote flies up from the device into the sky and explodes, throwing grey tendrils out for 1 mile (2 km) in all directions. After one minute, the tendrils become dark clouds, and after another minute, the skies open up and drench the ground below with heavy rains. In freezing temperatures, the precipitation is sleet, ice, or snow. With the rain comes lightning and thunder. The storm moves with the prevailing winds and dissipates ', level,' hours later.')
        elif cypher_roll == 64:
            print('Cloudskimmer Level: ', level + 2,' Usable: A lightweight box large enough to hold four human-sized creatures Effect: The lid of the box opens, and ten small bags rise from within and spend the next five minutes filling with a lighter-than-air gas. As they inflate, they rise above the box, revealing an empty compartment. A sturdy cord tethers each balloon to the box. When the balloons finish inflating, they lift the box and anything in it into the air at a rate of 100 feet (30 m) per minute until it reaches a maximum altitude of 1,000 feet (305 m). The device remains airborne for seven hours. After this time, it loses 100 feet (30 m) of altitude every ten minutes until it lands. The device moves in whatever direction the winds are blowing.')
        elif cypher_roll == 65:
            print('Colorless Grease Level: ', level + 4,' Usable: A metal container filled with thin, colorless grease Effect: There’s enough grease in the container to cover a human-sized creature or an object that can fit inside a 5-foot (2 m) cube. Rubbing the grease onto the target causes it to reflect no color and become invisible for as long as the grease remains. The grease wears off after ', level,' hours. Heat can cause the grease to melt and run, revealing the concealed target early.')
        elif cypher_roll == 66:
            print('Communication Disks Level: ', level + 1,' Usable: Small synth disks Effect: These cyphers usually come in pairs (although each is its own cypher). They allow verbal communication between their users at any distance. Both cyphers must be activated at the same time, and they function for 28 hours.')
        elif cypher_roll == 67:
            print('Complex Fluid Wall Projector Level: ', level + 2,' Usable: Handheld device Effect: Creates a wall of complex fluid up to 30 feet by 30 feet by 1 foot (9 m by 9 m by 0.3 m). It inflicts damage equal to the cypher level on any out-of-phase creature that passes through it. Breaking through or puncturing the wall is a task equal to the cypher level. The wall conforms to the space available. It lasts for one hour.')
        elif cypher_roll == 68:
            print('Concrete Casting Level: ', level,' Usable: Compound Effect: When mixed with water, this compound turns into malleable paste. If molded around a piece of armor, a body part, or another object and allowed to harden for ten minutes, the paste gives it an additional layer of protection, granting +3 to Armor. The paste lasts for one hour before it begins to disintegrate.')
        elif cypher_roll == 69:
            print('Conflict Advisor Level:', level + 2,' Internal: Pill, ingestible liquid Wearable: Temporary tattoo, amulet, headband, crystal worn on temple Effect: The device allows the user to access the datasphere to analyze opponents and anticipate their actions. For one hour, the user has an asset on all attack rolls and Speed defense rolls.')
        elif cypher_roll == 70:
            print('Construction Foam Level:', level + 1,' Usable: Large canister Effect: The canister produces a vast amount of foam. This foam can easily be shaped into whatever form the user wishes that equals about four 10-foot (3 m) cubes—the size of a small house or a wall that’s 1 foot (0.3 m) thick, 10 feet (3 m) high, and 400 feet (122 m) long. This probably takes about twenty minutes. The foam dries quickly (in about a half hour) and hardens to the strength of steel, but it remains fairly lightweight. The entire mass of hardened foam weighs about 200 pounds (91 kg).')
        elif cypher_roll == 71:
            print('Contingent Subroutine Level:', level,' Internal: Pill, ingestible liquid, inhalable powder Wearable: Temporary tattoo, dermal patch Effect: The device automatically activates if the user becomes debilitated or dies. The device downloads special instructions from the datasphere that cause the body to take steps to protect and repair itself. During the next minute, the user is under the GM’s control and on each of the user’s turns, even if he is dead, he takes an action to move away from danger by the safest available route. At the end of this time, he makes a recovery roll—again, even if he is dead. The recovery roll does not count against the limit on recovery rolls that he can make in a day.')
        elif cypher_roll == 72:
            print('Countermeasure (Magnetic) Level:', level + 2,' Usable: Handheld device Effect: This device creates an invisible field that fills an area within short range and lasts for one minute. The field scrambles magnetic fields, making any device or power involving magnetism unusable. The effect lasts as long as the device or power remains within the field.')
        elif cypher_roll == 73:
            print('Countermeasure (Membrane) Level:', level + 2,' Usable: Handheld device Effect: This device creates an invisible field around up to three living creatures that lasts for one minute. The field scrambles all effects of incoming technological devices, ricocheting the effect back toward the initiator. It has no effects on technological devices used inside the field.')
        elif cypher_roll == 74:
            print('Countermeasure (Technological) Level:', level + 2,' Usable: Handheld device Effect: Two rounds after being activated, the device creates an invisible field that fills an area within short range and lasts for one minute. The field scrambles the electronic processes of most technological devices and makes them inoperable. Intelligent devices cannot take actions during this time. The effect lasts as long as the devices remain within the field.')
        elif cypher_roll == 75:
            print('Crystal Virus Level:', level + 3,' Wearable: Crystal that affixes to forehead Effect: When placed on a human’s forehead, this cypher immediately takes effect by permanently grafting itself in place (no longer counting against the person’s cypher limit). Within 1d10 + 2 days, the wearer’s flesh begins to take on a crystalline appearance in patches. In three times that number of days, her entire body becomes organic crystal, flexible enough to move without hindrance, but hard and cold like crystal. She has +1 to Armor permanently but is no longer capable of sexual reproduction. Further, at the time of complete transformation, she produces a new crystal virus cypher, which can be used by another human. It’s possible to remove the crystal before complete transformation, but it requires surgery and the task difficulty is equal to the cypher level. Doing so ensures that the creature’s flesh returns to normal. This will not work after complete transformation occurs.')
        elif cypher_roll == 76:
            print('Cyberflesh Level:', level + 2,' Internal: Pill, injection Wearable: Spray-on mist Effect: A character covered in cyberflesh has many advantages. The metallic coating offers +1 to Armor. The character also can use an action to touch any numenera device and automatically learn its function and how to use it (if possible). Cyberflesh lasts for ten minutes.')
        elif cypher_roll == 77:
            print('Cypher Replicator Level:', level,'  Usable: An orb created from a series of synth blocks in various shapes that connect to each other via male and female tabs Effect: The user can dismantle the orb and use the individual blocks to replicate the shape of a weapon, bit of armor, or piece of equipment that is in her line of sight. Even if the duplicate is not identical, the finished object gives a viewer the sense that it is. In fact, for most people, it would be hard to tell the two objects apart. Creating the duplicate takes two actions. The replicated item works exactly as the original does, except that it disintegrates in one hour.')
        elif cypher_roll == 78:
            print('Cypher Seed Level:', level,'  Usable: Tiny metal and synth chip Effect: If affixed to another cypher that is a handheld device, it infuses that cypher with additional circuitry like roots from a plant. In 28 hours, it transforms the cypher into an artifact. The GM determines whether the new artifact retains the same ability (but now with potentially multiple uses) or whether it becomes a different artifact of the handhelddevice variety.')
        elif cypher_roll == 79:
            print('Data Flood Level:', level + 2,'Internal: Pill, ingestible liquid Wearable: Dermal patch that must be worn and tapped to be activated Effect: Activating the cypher enables the user to connect her mind to the datasphere for one hour. Until the connection is broken, the difficulty is reduced by one step for her Intellect defense rolls and Intellect tasks to identify objects, creatures, and places.')
        elif cypher_roll == 80:
            print('Data Merge Level: 10 Internal: Pill, ingestible liquid Wearable: Temporary tattoo, amulet, headband, crystal worn on temple Usable: Small handheld device, crystal Effect: The user uploads his mind into the datasphere, where it becomes a being of pure thought. His body becomes catatonic and remains that way until he downloads his consciousness back into his body. If his body dies, he becomes trapped in the datasphere and is forever lost. While the user is merged with the datasphere, the difficulty of his Intellect rolls is reduced by two steps. In addition, the user can project a solid light hologram anywhere he chooses in the world. The hologram acts as a level 5 creature under the user’s control. He can perceive and communicate through the hologram and decide how it acts and moves. If the hologram is reduced to 0 health, the user must wait at least one hour before he can create a new one.')
        elif cypher_roll == 81:
            print('Data Mine Level:', level,'  Usable: Small disk that attaches to forehead, electronic bracelet, thick collar, stretchy gloves Effect: Allows the user to tap into the mind of anyone in visual range and steal the target’s knowledge of a skill that it is trained in. The user becomes trained in that skill for one hour. During that time, the target loses its own training in that skill.')
        elif cypher_roll == 82:
            print('Data Spike Level:', level,'  Internal: Tiny spike Effect: A user activates the device by inserting it or having another character insert it into the base of his neck, angled upward so that it enters the brain stem. Installing the spike and removing it at a later time inflicts 1 point of damage that ignores Armor. A user can benefit from only one data spike at a time. Once the spike is installed, the user immediately connects to the datasphere and downloads information about a randomly determined skill into his mind. He becomes trained in that skill for a number of hours equal to the cypher level. If he is already trained in the skill, he instead becomes specialized. When a data spike is found, the GM can choose a skill or roll a d20 to determine the skill(s) randomly. 1 Astronomy       2 Balancing 3 Biology and botany 4 Climbing and swimming 5 Deceiving    6 Escaping and lockpicking 7 Geography and geology 8 Healing 9 History 10 Identifying 11 Intimidation 12 Leatherworking, metalworking, and    woodworking 13 Numenera 14 Perception 15 Persuasion 16 Philosophy 17 Pickpocketing 18 Repairing 19 Riding 20 GM’s choice')
        elif cypher_roll == 83:
            print('Data Vault Level:', level + 2,'Usable: Hourglass-shaped synth device with a ring around the center Effect: The device scans one object (chosen by the user) that can fit inside a 10-foot (3 m) cube and is within a short distance. The object then dissolves, its substance drawn into the device. Activating the device again causes it to create an identical copy of the object using solidified light at an open spot within a short distance.')
        elif cypher_roll == 84:
            print('Deadly Mist Level:', level + 2,' Wearable: Wrist-mounted sprayer Usable: Canister with a short hose Effect: This cypher sprays a mist of exotic fluid at one or more targets within immediate range (potentially all targets in range, if the user desires). The mist condenses on the targets and gathers into a thick liquid that begins to form hard, razor-sharp edges, needles, spikes, and barbs that inflict damage equal to the cypher level. Affected targets suffer half the damage on the next round as well before the fluid turns back into mist and evaporates.')
        elif cypher_roll == 85:
            print('Death Messenger Level:', level + 2,' Usable: A pair of metal or organic wings on a frame that can be attached to any detonation cypher Effect: To activate the device, the user places a bit of skin, hair, nail, or some other material from a living creature inside a compartment positioned between the wings. The wings begin to flap, causing the device to lift into the air and fly off toward the creature whose materials were used to activate it. The device uses the datasphere to locate the creature and speeds off toward it by the shortest and fastest available route. The device flies about 30 mph (48 kph) and maneuvers around obstacles. If blocked by a solid object, it goes out of phase, along with the cypher it carries, and moves through the object until it emerges into an open space. The device activates its detonation cypher when it reaches the target or after 28 hours, whichever comes first.')
        elif cypher_roll == 86:
            print('Deficiency Detector Level:', level,'  Usable: Two small disks. One attaches to the user. The other, when thrown, seeks out and attaches to the nearest living creature in long range. Effect: When the disk hits its target and attaches, it relays information about the target’s weakness to the user. This information decreases the difficulty of the user’s next interaction with the target by one step. If the user relays the weakness to others, the difficulty of their next interaction with the target is also decreased by one step.')
        elif cypher_roll == 87:
            print('Demonsphere Level:', level + 4,'Usable: A 6-inch (15 cm) orb of steel lattice with a reflective red sphere in the center Effect: This is a dangerous cypher to use, perhaps giving rise to its name. When activated, it creates a horrific sound, a combination of shrill shrieks and low rumbling (which also might account for its name). At the same time, red streaks of energy lance out at a number of intelligent targets within short range equal to the cypher level. If there are more targets than streaks of energy, the targets are determined randomly, meaning that the user could be a target. The streaks of energy are extradimensional conduits tying the targets to an ultraterrestrial intelligence with a level equal to the cypher level. The intelligence attempts to control the targets’ actions for one round per cypher level. (Eligible targets include machine intelligences or any living creature more substantial than an insect.) The ultraterrestrial intelligence has a motive and understanding all its own, but it is utterly alien. Thus, it can do almost anything, but if desired, roll d100 each round instead: Roll Target’s action 01–10 Scream 11–20 Make incomprehensible gestures 21–40 Attack the nearest creature 41–55 Attack the nearest object 56–60 Attack the ground 61–65 Activate the nearest numenera device 66–75 Run off as fast as possible 76–80 Begin speaking in an unknown language 81–83 Speak in the Truth and ask strange, random questions 84–85 Speak in the Truth and demand obedience 86–88 Examine a random object 89–90 Try to eat a random creature or object 91–93 Access unknown energies and teleport away 94–95 Access unknown energies and create a force field around itself 96–97 Access unknown energies and use them to attack all nearby 98–00 Access unknown energies and open a transdimensional portal')
        elif cypher_roll == 88:
            print('Deployer (Atmospheric) Level:', level,'  Wearable: Wristband projector (long range), arm- or shoulder-mounted launcher (long range) Usable: Handheld projector (long range) Effect: Once initiated, the device collects the most widely available atmospheric aerosols within long range (such as drit dust, water droplets, pollen, bacteria, or smoke). It brings those aerosols together in a whirling tornado that centers around the device itself. Anything in close range of the tornado takes damage equal to the cypher level.')
        elif cypher_roll == 89:
            print('Deployer (Hypersound) Level:', level,'  Usable: Handheld device Effect: Once initiated, the device causes all audible sound waves within long range to gather in a single wave of inaudible hypersound. This wave then carries the sound directly to the ears of the user, allowing him to hear everything while at the same time creating absolute silence for everyone else in long range.')
        elif cypher_roll == 90:
            print('Deployer (Muscular) Level:', level,'  Internal: Injector, pill Usable: Needle projector, blow gun (short range) Effect: Once the material enters a living body, it begins to rearrange the skeletal muscle tissue of the creature in an orderly fashion to allow muscles to be used at their maximum capacity. For the next ten minutes, the difficulty of all Speed-based tasks (including Speed defense) is decreased by one step.')
        elif cypher_roll == 91:
            print('Deployer (Optical) Level:', level,'  Usable: Handheld device Effect: Once initiated, the device manipulates the path of electromagnetic radiation through specific parts of the light spectrum. In doing so, it shields the user from view, essentially rendering her invisible, for one hour.')
        elif cypher_roll == 92:
            print('Desiccation Bag Level:', level,' Usable: Small synth bag approximately 1 foot by 1 foot by 3 inches (0.3 m by 0.3 m by 8 cm) Effect: Completely dries out any object placed in the bag within ten minutes. Living creatures put into the bag take damage equal to the cypher level.')
        elif cypher_roll == 93:
            print('Detonation (Coma) Level:', level + 4,' Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in a patterned flash of pale yellow gas in an immediate radius. Living creatures in the area fall unconscious for a number of rounds equal to the cypher level, or until violently slapped awake or damaged.')
        elif cypher_roll == 94:
            print('Detonation (Crystal) Level:', level + 3,' Usable: Crystal shard the size of a fist (thrown, short range) Effect: Explodes with wild energy and crystal shrapnel. The shrapnel strikes in a short radius, inflicting damage equal to the cypher level. The energy extends to a long radius and inflicts 4 points of damage that ignores Armor.')
        elif cypher_roll == 95:
            print('Detonation (Distress) Level:', level,' Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in an immediate radius with blue vapors. Anyone in the area becomes nauseated and spends one round per cypher level vomiting and incapacitated in pain, unable to take actions.')
        elif cypher_roll == 96:
            print('Detonation (Electromagnetic) Level:', level + 4,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes and releases a potent wave of electromagnetic energy in a short radius. Numenera devices in the area when it explodes do not function for one hour.')
        elif cypher_roll == 97:
            print('Detonation (Filament) Level:', level,' Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Bursts into a swirling mass of hundreds of extremely thin metal filaments that slice through flesh and objects in an immediate radius, inflicting damage equal to the cypher level. Further, the razor-sharp filaments remain in the area, difficult to see but dangerous. Anyone entering the area suffers damage as if they were caught in the initial explosion. The area of filaments collapses after ten minutes.')
        elif cypher_roll == 98:
            print('Detonation (Flashfire) Level:', level + 3,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes with radiation in an immediate area. The radiation burns so quickly that things affected by it char (taking damage equal to the cypher level) but never catch fire.')
        elif cypher_roll == 99:
            print('Detonation (Flesh Warping) Level:', level + 3,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in an immediate radius with strange energies. Those within the area suffer damage equal to the cypher level and are afflicted by a harmful mutation that fades after ', level,' + 1 weeks.')
        elif cypher_roll == 100:
            print('Detonation (Foam) Level:', level + 2,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes with foam in an immediate area. The foam inflicts no damage but hardens immediately, filling the area with resilient, spongy matter. Those trapped in the foam can break free only by using their Might or perhaps a cutting tool (which would take at least a minute). The foam disintegrates after one hour.')
        elif cypher_roll == 101:
            print('Detonation (Healing) Level:', level + 4,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes to release a burst of warm energy in a short radius. The energy restores a number of points equal to the cypher level to the Pools (or health) of everyone in the area.')
        elif cypher_roll == 102:
            print('Detonation (Living Metal) Level:', level + 3,'Usable: Metal sphere (thrown, short range) Effect: Explodes in a short radius, spraying shards of liquid metal that inflict damage equal to the cypher level. The shards then drop to the ground or other nearby surface and slither along toward the point of detonation, where they rejoin. This process takes about three rounds. If it is not somehow prevented, the detonation explodes again, inflicting 1 fewer point of damage than before.')
        elif cypher_roll == 103:
            print('Detonation (Plant Transformation) Level:', level + 2,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in an immediate radius with a grey mist. Living creatures affected in the area begin to transform into plants. Player characters exposed to the mist must attempt three Might defense rolls (any Effort used on one roll is applied to all three). The final result depends on the result of the rolls: No successes: Over the course of ten minutes, the character’s flesh turns green and begins to sprout shoots. He permanently turns into a human-shaped plant. One success: Over the course of ten minutes, the character’s flesh turns green and begins to sprout shoots. Her body stiffens and she cannot move for 28 hours as she takes root. At the end of that time, she becomes a humanshaped plant. However, if someone keeps her from taking root, she returns to normal over the course of another 28 hours, during which time she can take no actions. Two successes: Over the course of ten minutes, the character’s flesh turns green and begins to sprout shoots. This is a painful process. At the ten-minute mark, he moves one step down the damage track, and he remains that way until he returns to normal 28 hours later. Three successes: The character is not affected at all. NPCs in the area who are one level lower than the cypher are affected as if they had two successes. NPCs who are two or three levels lower are affected as if they had one success. NPCs who are four or more levels lower than the cypher are affected as if they had no successes. All plants in the area gain a permanent +1 level boost.')
        elif cypher_roll == 104:
            print('Detonation (Smoke) Level:', level + 2,'Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Bursts in a short radius, filling the area with thick smoke that lasts for one minute. A strong wind disperses it immediately. Treat the smoke as darkness, and the difficulty of melee attacks in the area is modified by one step in the defender’s favor.')
        elif cypher_roll == 105:
            print('Detonation (Spatial Warping) Level:', level + 3,' Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in an immediate radius with strange energies. All creatures within the area are teleported (safely) to a different spot within short range of the detonation.')
        elif cypher_roll == 106:
            print('Detonation (Stasis) Level:', level + 4,' Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in an immediate radius with strange energies. All creatures within the area are held in temporal stasis for one minute, during which time they cannot take actions or be affected in any manner.')
        elif cypher_roll == 107:
            print('Detonation (Suggestion) Level:', level + 2,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Explodes in a patterned flash of multicolored lights and gas in an immediate radius. For all sentient creatures in the area, the difficulty of Intellect defense rolls to resist reasonably worded suggestions is increased by a number of steps equal to half the cypher level (round down). The effect lasts for a number of rounds equal to the cypher level.')
        elif cypher_roll == 108:
            print('Detonation (Tendril) Level:', level + 2,'Usable: Explosive device or ceramic sphere (thrown, short range), handheld projector (long range) Effect: Bursts into a swirling mass of dozens of animate tendrils that emerge from the point of explosion. The tendrils attack every creature and unattended object within immediate range. If successful, they hold their victim fast for up to six rounds unless the victim can break free (small or fragile objects are simply crushed and destroyed).')
        elif cypher_roll == 109:
            print('Detonation Delay Level:', level,' Usable: Small wired device Effect: The device can be attached to almost any type of detonation cypher to delay its activation. The user can set the timer for one minute, ten minutes, or 28 hours. Provided that the delay or detonation is not found and dismantled ahead of time, the detonation explodes at the preset time.')
        elif cypher_roll == 110:
            print('Detonation Trigger Level:', level,' Wearable: Wristband transmitter (long range) and a small patch or bundle of nanowires Effect: The nanowires can be attached to almost any type of detonation cypher. The user can then remotely trigger the device using the wristband transmitter. The detonation must be within long range, but it doesn’t need to be in the user’s vision.')
        elif cypher_roll == 111:
            print(' Device Enhancer Level:', level,' Usable: Tiny metal and synth chip Effect: If affixed to another cypher or artifact, that device is enhanced in one of the following ways (roll a d6): 1 The device now also inflicts 4 points of damage if used on a target other than the user. If the device already inflicts damage, the damage is increased by 2 points. If  used on an artifact, this effect lasts for 28 hours after the first use. 2 The device, when activated, also projects a force field around the user that lasts for an hour. This field provides +2 to Armor. If the device already creates protective Armor, that Armor gains +1 instead. This functions once, regardless of whether the enhanced device is a cypher or an artifact. 3 The device, when activated, also adds 1 to the user’s Might Edge, Speed Edge, and Intellect Edge for one hour. This functions once, regardless of whether the enhanced device is a cypher or an artifact. 4 If the device has immediate range, the range is increased to short. If short, it is increased to long. If long, it is increased to 200 feet (61 m). Such changes to the device last for 28 hours. If the device does not have a ranged effect, it instead affects the user when activated so that the user moves a long distance on an action for 28 hours. This latter effect can be used once. 5 The device, when activated, also makes the user invisible for an hour. While invisible the user is specialized in stealth and Speed defense tasks. This effect ends if he does something to reveal his presence or position—attacking, performing an esotery, using an ability, and so on. If this occurs, he can regain the remaining invisibility effect by taking an action to focus on hiding his position. This functions once, regardless of whether the enhanced device is a cypher or an artifact. 6 The device now also restores a total of 4 points each time it is activated. The user can allocate those points among his stat Pools as desired, but the Pools cannot go above their maximum. If the device already restores points to Pools, it restores 2 additional points. If used on an artifact, this effect lasts for 28 hours after the first use.')
        elif cypher_roll == 112:
            print('Dimensional Sheath Level:', level + 4,'Wearable: Belt, headband, bracelet Usable: Handheld device Effect: User is enveloped in invisible energy for six hours. During this time, she has +1 to Armor against any type of energy attack (including those that normally ignore Armor) and is immune to any effect that would change her phase state, send her to another universe, teleport her, or do anything similar.')
        elif cypher_roll == 113:
            print('Dimensional Trap Level:', level + 4,'Usable: Complex device Effect: One creature or object within immediate range disappears and is drawn into the device, where it remains for 28 hours. When the effect ends, the target reappears in an open space (chosen by the user of the device) within immediate range.')
        elif cypher_roll == 114:
            print('Disintegration Gel Level:', level + 3,'Usable: Synth tube containing gel Effect: This tube produces a fist-sized amount of gel. When applied to a specific material, the gel vaporizes it at a rate of about 1 inch (3 cm) per round. The gel works for two rounds per cypher level. It has no effect on other materials. Roll d100 for the material affected: 01–35 Metal 36–39 A specific metal (GM’s choice) 40–71 Stone 72–81 Metal or stone 82–98 Synth 99–00 Organic matter (inflicts damage equal to the cypher level on a living creature)')
        elif cypher_roll == 115:
            print('Displacement Cloak Level:', level + 4,'Wearable: Cloak, cape, mantle Effect: For the next ten minutes, the user disappears and an image of her appears somewhere within immediate range. The image is a perfect copy of the user and mimics her physical movements and actions. The difficulty of her Speed defense rolls is reduced by three steps until the effect ends.')
        elif cypher_roll == 116:
            print('Dissonance Cube Level:', level + 4,'Usable: Complex device Effect: Activation causes the device to emit a subsonic noise for seven hours. At the end of each hour, any metal object within long range of the device takes 4 points of ambient damage.')
        elif cypher_roll == 117:
            print('Distance Activator Level:', level + 1,'Usable: Handheld device with a small, detachable nodule Effect: When the nodule is detached and connected to any other cypher, the user of the distance activator can activate that cypher from a range of up to 1 mile (2 km).')
        elif cypher_roll == 118:
            print('Distortion Field Emitter Level:', level + 2,'Internal: Subdermal injection Wearable: Helmet, headband, metallic choker Usable: Complex device Effect: Activation creates an invisible field that extends out from the device to short range for the next hour. Numenera devices do not function while in the field.')
        elif cypher_roll == 119:
            print('Reassembler \nLevel:', level + 2,'Usable: handheld device Effect: Reassembles any broken down machine within long range and powers it for one hour. ')
        elif cypher_roll == 120:
            print('Drastic Propulsion Level:', level,' Wearable: Small black box with a hook that attaches to a piece of clothing Effect: When activated, the device propels the user quickly in the direction he desires, allowing him to cover twice the usual amount of ground each round. If the user is holding tightly to another person or creature, that person or creature moves with him at the same speed. The effect lasts for one minute.')
        elif cypher_roll == 121:
            print('Dreamachine Level:', level,' Wearable: Hood, mask, head halo Usable: Standalone device Effect: The device creates pulsing light, sound, or some other combination of stimuli designed to alter the brain’s electrical oscillations. When the user sits within close range of the device for at least ten minutes with his eyes closed, he enters a hypnagogic state. This allows his mind to open to the wonders of the datasphere, granting him the answer to a single question.')
        elif cypher_roll == 122:
            print('Dry Water Level:', level,' Usable: Tiny marble made from ceramic, stone, or glass Effect: The device activates when exposed to water. It instantly expands into water with a volume of 1 gallon (4 L) per cypher level.')
        elif cypher_roll == 123:
            print('Duplicator Level:', level + 1,'Usable: Synth cylinder etched with fine, glowing lines Effect: When one end of the device is touched against a creature, a mass of gelatin sprays out the other end. Within three rounds, the gelatin creates what appears to be an exact living copy of the touched creature, including clothing and equipment, but it’s a spongy facade. The copy is a level 1 creature with minimal intelligence that follows simple commands, but complex thought and emotions are beyond its capabilities. The copy lasts up to 28 hours, at which time it melts and evaporates.')
        elif cypher_roll == 124:
            print('Dynamic Hourglass Level:', level,' Usable: Handheld device Effect: When the user activates the device, she disappears. She is removed from existence until the next round ends, at which point she returns to the same spot she left (or the nearest open space to that spot). At any time within the next 28 hours, she can take an extra action on her turn.')
        elif cypher_roll == 125:
            print('Ear Worm Level:', level + 2,'Internal: A tiny worm covered in sharp hairs Effect: The cypher activates when placed on someone’s face. The worm crawls up the side of the user’s face and enters his ear canal (or the closest thing to an ear canal the user has). It then embeds the bristles coating its body into the canal. For the next 28 hours, the user can understand any language he hears and has an asset for any task that involves listening. When the effect ends, a fleshy moth flies out of his ear.')
        elif cypher_roll == 126:
            print('Echo Crystal Level:', level + 4,'Usable: Crystal nodule affixed to a melee weapon Effect: When the device is activated, the crystal projects a second weapon in the air formed from solidified light. It follows the weapon it copies, floating through the air and mimicking the original’s movements. Whenever the user takes an action to attack with the original weapon, he makes an additional attack with the copy as part of the same action. The second weapon inflicts the same damage as the original. After 28 hours, the copy dissipates into a cloud of sparkling motes.')
        elif cypher_roll == 127:
            print('Ecstasy Glass Level:', level,' Wearable: Spectacles, goggles, helmet with visor Usable: Six joined glass spheres Effect: The device takes over the user’s senses for one hour and floods them with profound pleasure. The user cannot see, hear, smell, taste, or feel anything in her surroundings during this time. Instead, she experiences whatever she most desires, and she believes that she is engaged in an activity that produces great and lasting pleasure. The experience might be eating a sumptuous meal, engaging in a sexual act with one or more people she desires, or simply sitting comfortably in a beautiful landscape. When the effect ends, she feels restored and may immediately make a recovery roll. This recovery roll does not count against the limits on the number of recovery rolls that she can make in a day.')
        elif cypher_roll == 128:
            print('Effulgent Body Level:', level,' Internal: Syringe, pill, ingestible liquid Effect: Injects a fluorescent protein gene into the user, causing her to glow with a bioluminescent light that illuminates the area around her (within close range) as though it were daylight. The effect lasts for one hour.')
        elif cypher_roll == 129:
            print('Ejection Nodule Level:', level + 1,'Usable: Crystal nodule affixed to a melee weapon Effect: For the next hour, each time the weapon the nodule is attached to strikes a solid creature or object hard enough to inflict damage (but no more than once per round), the target of the strike teleports to a random location within a radius of 100 × the cypher level in feet.')
        elif cypher_roll == 130:
            print('Electronic Nose Level:', level + 2,'Wearable: Small nodule that affixes to nose, synth nose that attaches over a real one, clipon nose ring Effect: This device enhances the wearer’s sense of smell, allowing him to detect odor signatures of various biological, biochemical, or chemical compounds for one hour. Those with knowledge of the numenera can attempt to “set” the nose to a desired substance just prior to using it (difficulty equal to the cypher level), or the GM can roll ahead of time: 01–10 Explosives or detonations 11–30 Disease 31–40 Blood 41–50 Poison 51–75 Chemical traps 76–00 User’s choice')
        elif cypher_roll == 131:
            print('Emoacoustic Weapon Level:', level + 2,'Wearable: Mask Usable: Handheld device Effect: This device allows the user to change the emotion of a single target in short range with a sonic burst that only the target will hear. The user can choose one of these emotions or states: anger, despair, fear, joy, calm, great hunger. This artificial state lasts for ten minutes (or as the situation afterward dictates).')
        elif cypher_roll == 132:
            print('Energy Module Level:', level + 2,'Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 4 task) that produces energy, such as a ray emitter or a force shield projector. Once attached, it no longer counts against a character’s cypher limit. The level of the device it is attached to is increased by 2. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 133:
            print('Energy Siphon Level:', level,' Usable: Small metal device Effect: When activated, this small metal device hovers around the user, and any energy attack (such as a nano’s force blast or a beam from a ray emitter) strikes the cypher instead. The device is not harmed by the attack. Once activated, the energy siphon functions for one hour.')
        elif cypher_roll == 134:
            print('Energy Token Level:', level + 4,' Usable: Glowing ball of energy Effect: This cypher functions when it is touched by a living creature (perhaps even before it can be identified), although it can be manipulated by tools such as tongs and safely stored if well away from a creature. Normal gloves or a leather bag is not enough to keep it from activating. The ball bathes a living creature touching it with energy of a type and effect depending on its color (roll a d20): 1–2 Blue: Reorganizes brain connections; +1 to Intellect Edge for one hour. 3–4 Red: Restructures skeletal structure; +1 to Might Edge for one hour. 5–6 Green: Alters musculature; +1 to Speed Edge for one hour. 7–8 Yellow: Alters respiratory system; grants immunity to dangerous gases. User can also breathe a puff of poisonous vapor at a victim in immediate range that inflicts 2 points of Speed damage (ignores Armor) for a number of rounds equal to cypher level. The effect lasts for one hour. 9–10 Orange: Changes physical density; +1 to Armor, and user deals 2 additional points of damage with melee attacks. 11–12 Violet: Tunes dimensional phase of entire body; user can move through solid matter at a rate of 6 inches (15 cm) per round for ten minutes. 13–14 Brown: Alters cellular relationship with gravity; user can move through the air as easily as on a solid surface for ten minutes. 15–18 Black: Infuses cells with disruptive energy; inflicts 5 points of damage to user, and then user’s touch inflicts 8 points of damage to others for ten minutes. 19–20 White: Alters ocular system; user gains x-ray vision and can see through up to 10 inches (25 cm) of matter for one minute.')
        elif cypher_roll == 135:
            print('Eraser Level:', level + 4,' Usable: A small metallic device Effect: Causes an object that can fit inside a 5-foot (2 m) cube or one creature it touches to instantly disappear from existence.')
        elif cypher_roll == 136:
            print('Erosion Ray Level:', level + 4,' Usable: Handheld device Effect: Emits a beam at an object within short range. The beam weakens an amount of material that can fit inside a 10-foot (3 m) cube. The target does not appear to change, but it assumes the hardness of thin paper. A creature can easily tear chunks from the object or punch through it. If the user targets a section of floor, anything weighing at least 5 pounds (2 kg) that moves across that section falls through it. The effect can also weaken structures such as bridges, walls, and the like at the GM’s discretion.')
        elif cypher_roll == 137:
            print('Essence Transfer Level:', level + 2,' Usable: Handheld device Effect: Allows one willing character to transfer points from his Pools to another character’s Pools. The transferring character can’t reduce a Pool below 1, and the receiving character can’t raise a Pool above its normal maximum.')
        elif cypher_roll == 138:
            print('Exalted Vapor Level: ', level,' Internal: Electronic smoking implement Wearable: Smoking mask Effect: Allows the user to inhale a potent chemical that restores a number of points equal to the cypher level to one random Pool. Roll d100: 01–50 Might Pool 51–75 Speed Pool 76–00 Intellect Pool')
        elif cypher_roll == 139:
            print('Explosive Nodule Level:', level + 2,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, each time the weapon the nodule is attached to strikes a solid creature or object, it releases a pulse of concussive force that throws the target a short distance away from the user. This force knocks the target and the user to the ground.')
        elif cypher_roll == 140:
            print('Extra Time Level:', level + 3,' Wearable: Belt, ring Usable: Handheld device Effect: After using his action to activate this device, time slows down for the user, and he can take up to three additional actions while the rest of the world seemingly stands still. He can attack, move, make a recovery roll, or take any other allowed action. Actions are resolved normally. However, this process takes a toll. For every extra action he takes, the user suffers 3 points of damage.')
        elif cypher_roll == 141:
            print('Eye in the Sky Level:', level,' Usable: Handheld device Effect: When activated, part of this device shoots 800 feet (244 m) into the air, projecting everything it sees onto a screen on the other portion of the device. The eye in the sky floats for an hour, all the while projecting what it sees.')
        elif cypher_roll == 142:
            print('Eyebug Level:', level + 2,' Usable: Small mechanical insect and a small eyepiece lens Effect: Once activated, this device moves on its own for one hour, following a single, simple verbal command with surprising intelligence. For example, if directed to find a way into the chamber to the south, it will search around, attempting to find the most direct path (if one exists), even one that is not known to the user. If told to find the nearest ithsyn, it will search around on its own until it finds the target (or until its hour is up). The device cannot be given multiple objectives, nor can it be given multistep directions. Most important, during the entire time, the user can see everything it can see through the eyepiece. The eyebug can see in the dark as easily as in the light.')
        elif cypher_roll == 143:
            print('Eyestalk Graft Level:', level + 1,' Wearable: A large bulbous eye with a 6-inch (15 cm) stalk Effect: This organic object grafts directly and immediately onto the flesh of the user’s head. The eyestalk functions for 28 hours, during which time the user has an asset for all perception tasks and can look surreptitiously around corners.')
        elif cypher_roll == 144:
            print('Fact Finder Level:', level,' Wearable: Glove with a mechanical device in the palm, headband with mechanical device Effect: When someone wears the device and it is activated, the wearer should be asked three simple questions. These questions allow the device’s mechanics to calibrate to the wearer’s response. After that, the device will shock the wearer (doing damage equal to the cypher level) every time he says something that is not true. The effect lasts for five questions (in addition to the original calibration questions).')
        elif cypher_roll == 145:
            print('Fallback Clone Level:', level + 4,' Wearable: Two headbands Effect: To activate this device, the user must place a few drops of blood, strands of hair, nail clippings, or a piece of flesh in a sealed, water-filled tank with one of the headbands and wear the other one. The headband in the tank facilitates the rapid growth of a clone in one month. The clone is a fully grown creature, identical in every physical way to the user. However, it has no consciousness and remains in a comatose state in the tank. Once the clone has matured, if at any time the user dies while wearing the headband, her consciousness is transferred into the clone, regardless of distance. All skills, abilities, and knowledge are transferred. The user does not need to wear the headband throughout the process (if, for example, she is worried about her cypher limit)—just at the beginning to spur the clone’s growth. However, if she dies while not wearing the headband, no transfer occurs.')
        elif cypher_roll == 146:
            print('Fangs of the Reaver Level:', level + 4,' Usable: 2-inch (5 cm) metal sphere Effect: Upon activation, the sphere opens to reveal nasty metal teeth. It flies at a single target within short range that the user chooses, and it attacks as a creature of a level equal to the cypher level. It continues to attack that target for a number of rounds equal to the cypher level or until the target is dead, whichever comes first.')
        elif cypher_roll == 147:
            print('Faraway Ear Level:', level,' Wearable: Earring, helmet Usable: Handheld device Effect: When this device is activated, the user can pinpoint any spot she can see, up to 1,000 feet (305 m) distant, and hear whatever could normally be heard (as soft as a whisper) at that location for ten minutes.')
        elif cypher_roll == 148:
            print('Fast Hail Level:', level,' Usable: Cooled capsule filled with pressurized compound Effect: When firmly shaken and then projected via a ranged weapon of any kind, the capsule explodes, sending pressurized streams of large water droplets into the air. Within one minute, the droplets form hailstones about 2 inches (5 cm) in diameter. Everything within the hailstorm takes damage equal to the cypher level. The storm lasts for 10 minutes.')
        elif cypher_roll == 149:
            print('Firebreather Level:', level + 2,' Wearable: Mouth guard, mouth sprayer, long tube Effect: The wearer breathes fire onto a foe in immediate range, doing damage equal to the cypher level. Inserting the device is an action. However, breathing fire is an Enabler and can be used in addition to a melee attack or movement.')
        elif cypher_roll == 150:
            print('Flame Catcher Level:', level + 4,'Usable: Complex device Effect: Causes all fire within a short distance to safely flow into the device. At any time within the next seven hours, anyone holding the device can release the stored flames in a stream about 1 foot (0.3 m) wide that extends out to short range. The flames inflict damage equal to the cypher level to one target within range.')
        elif cypher_roll == 151:
            print('Flame Hand Level:', level + 2,' Wearable: Glove with a large metal device fitted over it Effect: Although this cypher is a glove, the wearer cannot use his hand while wearing it—a heavy metal device with a long tube on the end fits over the glove, encompassing his entire hand. When activated, this device sprays a stream of flaming liquid up to short range that inflicts damage equal to the cypher level. The wearer can spray this stream around to affect multiple targets and hit as many as are next to each other in range. (If he need not worry about hitting friendly targets, he could potentially attack all foes within range.)')
        elif cypher_roll == 152:
            print('Flesh Eater Level:', level,' Wearable: Wristband sprayer (long range) Usable: Balloon or ceramic sphere (thrown, short range) Effect: Bursts in an immediate radius, eating away any organic matter that it comes into contact with. Living creatures take damage equal to the cypher level.')
        elif cypher_roll == 153:
            print('Floating Bubble Level:', level,' Wearable: Ring, bracelet Usable: Handheld device Effect: Upon activation, the user is encapsulated in a bubble of force for ten minutes. This bubble floats at least 1 foot (0.3 m) in the air at all times but moves as the user wishes (requiring an action to do so, just like normal movement) vertically or horizontally, up to a short distance each round. The user cannot penetrate the bubble, and neither can forces from the outside. Not even ambient damage gets through. Dealing at least 50 points of damage to the bubble (which has no Armor) destroys it. Damaging the bubble does not harm the user inside until the bubble is destroyed, at which point he falls from whatever height the bubble was at, which is at least 1 foot (0.3 m) in the air.')
        elif cypher_roll == 154:
            print('Flow Level:', level + 1,'Internal: Pill, ingestible liquid, ingestible powder Effect: Enables the user to move more rapidly by harnessing momentum gained from movement. Once per round, when the user takes an action to move, she gains another action that she must use at once. She can use this action only to move. The effect wears off after one hour.')
        elif cypher_roll == 155:
            print('Flowstone Level:', level,' Usable: Steel or glass jar containing thick grease Effect: The user activates the item by applying the contents to a stone surface. There is enough grease to coat a 5-foot (2 m) radius area. It takes one minute for the stone to absorb the grease. At the end of this time, the stone gains the consistency of soft clay to a depth of 5 feet (2 m). The effect lasts for one hour. At the end of this time, the stone returns to its normal hardness.')
        elif cypher_roll == 156:
            print('Fluttering Recorder Level:', level,' Usable: Tiny insect made from metal Effect: Activation causes the device to sprout tiny wings and flutter up into the air, waiting for instructions. The user can give the device specific directions to travel to a place within 3 miles (5 km) of where it was activated. The cypher follows the directions it was given, exactly as they were given, until it can travel no farther or it arrives at its destination. There, it waits for one hour, recording everything it sees and hears. At the end of this time, the cypher flies back to where it received the instructions and plays back the recording by projecting the images it witnessed onto a flat surface and playing the audio through the speakers in its body. It repeats the recording ', level,' times and deactivates.')
        elif cypher_roll == 157:
            print('Flying Cap Level:', level + 2,'Wearable: Hat, helmet Effect: Three metal poles extend out from the top of the device, which clamps onto the user’s head and cannot be removed for the duration. Two poles fold down on either side of the user’s head, while the third rises straight up and sprouts four blades that begin spinning. The blades function as a propeller and lift the user into the air. She can control the direction of the movement by using the poles to either side. The device allows her to fly by making a Speed roll (level 2) each round. She can fly a short distance each round in combat or about 1 mile (2 km) each minute. The device operates for 3d20 minutes before breaking up and deactivating. If the user is still in the air when it stops working, she falls.')
        elif cypher_roll == 158:
            print('Foam Limb Level:', level + 1,'Usable: Canister Effect: If sprayed upon a creature, the foam builds an arm with a hand that mimics one of the creature’s existing limbs in appearance, if possible. (If not applicable, the default limb is a long, sinewy arm with a three-fingered hand.) The foam arm hardens to the consistency of the creature’s flesh and can be used by the creature as if it were its own. The new arm does not grant the creature additional actions or attacks in a round, but it can be useful for carrying things. If the arm is harmed, the creature suffers no ill effect. The arm lasts for 28 hours.')
        elif cypher_roll == 159:
            print('Foam Sprayer Level:', level + 1,' Usable: Canister Effect: This device sprays foam on a target within immediate range. There is enough foam to cover up to three humans standing next to each other (or one larger target). Different kinds of foam have different effects. Roll a d6 to determine the foam in a given canister: 1 Hardens: All movement is halved, and the difficulty of all physical actions is increased by two steps for ten minutes. 2 Caustic: The foam burns like acid, inflicting 4 points of damage on the first round and 2 points of damage on the second round before becoming harmless. 3 Caustic and hardens: All movement is halved, the difficulty of all physical actions is increased by two steps for ten minutes, and the target suffers 4 points of damage. 4 Dampens energy: If sprayed upon any numenera item (or if the target is in possession of numenera items), the item’s effective level is lowered by 4 for ten minutes. If this effect reduces the level of the item to 0, the item will not function for that time. Nonpowered numenera items, like pills, are not affected. 5 Dissolves metal: The level of a metal item covered in the foam is lowered by 4 permanently. If this effect reduces the level of the metal to 0, the item is destroyed. 6 Dissolves metal and dampens energy: The level of a metal item covered in the foam is lowered by 4 permanently. If this effect reduces the level of the metal to 0, the item is destroyed. Numenera items coated by the foam also have their level effectively lowered by 4 for ten minutes. If this effect reduces the level of the item to 0 or less, the item will not function for that time. Nonpowered numenera items, like pills, are not dampened.')
        elif cypher_roll == 160:
            print('Fool Killer Level:', level + 3,' Usable: 2-inch (5 cm) crystal tetrahedron Effect: When activated, this crystal flies into the air and seeks the least intelligent sentient creature in long range, which takes one round. After finding its target, the crystal fires a bolt of energy similar to lightning at the creature. The bolt inflicts 10 points of Intellect damage (ignores Armor).')
        elif cypher_roll == 161:
            print('Freeze Inducer Level:', level + 3,'Usable: Complex device, handheld device Effect: This item is cold to the touch and may freeze to solid surfaces when not in use. The item is activated by being pressed against an object or creature weighing no more than 200 pounds (91 kg). Any liquid contained in the object freezes; a living creature takes a number of points of damage equal to the cypher level.')
        elif cypher_roll == 162:
            print('Fungal Garden Level:', level + 2,'Usable: Vial filled with multicolored dust Effect: When a user pours out the contents of the vial, the dust sinks into any earthen or sandy surface it touches. One hour later, a field of mushrooms grows from the ground in a long radius centered on the spot where the dust fell. The mushrooms grow until they reach about 10 feet (3 m) tall on average. Each mushroom has a wide, colorful cap that spreads out in a 6-foot (2 m) radius. Touching a mushroom causes spores to fall from the cap onto anything below. Each time this happens, roll a d6 to see what the spores do to all creatures they touch. Roll a d6 for effect: 1–2 Bliss. The target experiences profound feelings of joy and happiness for one day. 3–4 Sadness. The target experiences profound feelings of sadness for one day. 5–6 Hallucinations. The target experiences visual and auditory hallucinations for one day. The hallucinations increase the difficulty of any task that involves seeing or hearing by one step.')
        elif cypher_roll == 163:
            print('Gel Suit Level:', level + 2,' Usable: A large container filled with gel Effect: To activate the device, the user must place his hand or foot into the container. The gel flows over his appendage and spreads across his body until it completely encases him. The gel retains its semiliquid consistency for 28 hours. While the gel covers the user, it prevents him from taking damage from acid, cold, electricity, or fire. In addition, whenever he takes damage from being struck by an object, he temporarily gains +1 to Armor until the next round ends as the gel briefly hardens in response to the hit.')
        elif cypher_roll == 164:
            print('Ghostly Duplicate Level:', level + 1,'Wearable: Bracelet, necklace, ring Usable: Handheld device Effect: When activated, an incorporeal duplicate of the user appears and remains for ten minutes. The duplicate does not have a mind of its own. Rather, the user controls both forms, but only one at a time. Switching consciousness between forms is an action. While the user’s consciousness focuses on one form, the other stands motionless. The duplicate moves at the same speed as the user’s normal form, but there is no limit to how far apart the two can be. The duplicate is ghostly and translucent. It can pass through solid matter and cannot be harmed except by special transdimensional weapons and effects. It likewise cannot affect normal matter in any way. While moving as the incorporeal duplicate, the user gains an asset for all stealth tasks. When the duplicate’s duration ends (or it is somehow destroyed), the user’s mind returns to his normal body. If the normal body is slain, the user stays in the duplicate, but only for the remaining duration.')
        elif cypher_roll == 165:
            print('Ghostly Intruder Level:', level + 3,' Usable: Handheld device Effect: Teleports the user to a location within sight and within long range. When she arrives, she is invisible for up to ten minutes. While invisible, she is specialized in stealth and Speed defense tasks. This effect ends if she does something to reveal her presence or position, such as attacking, performing an esotery, using an ability, moving a large object, and so on. If this occurs, she can regain the remaining invisibility effect by taking an action to focus on hiding her position.')
        elif cypher_roll == 166:
            print('Ghostly Veil Level:', level,' Usable: Metamaterial compound in a jar, tube, or box (enough for one application) Effect: When applied to armor or a weapon, the metamaterial refracts light around the object, rending it nearly invisible for one hour. For anyone wearing veiled armor or using a veiled weapon, the difficulty of all tasks involving sneaking, being stealthy, and hiding is decreased by one step.')
        elif cypher_roll == 167:
            print('Glass Flame Pellets Level:', level + 1,' Usable: Handful of glass pellets Effect: If thrown—as a group—at the floor, the pellets burst into flame, filling the immediate area with fierce flames that burn for 28 hours, inflicting 6 points of damage to anyone in or passing through the area. There is just barely enough time for a character to drop the pellets and move out of the area of the fire in one action.')
        elif cypher_roll == 168:
            print('Glass Scorpion Level:', level + 1,' Usable: Small scorpion made of glass Effect: When activated, the glass scorpion immediately moves in the direction it is pointed until it comes upon a living creature at least the size of a hound. It then attacks with the needlelike stinger in its tail as a creature of a level equal to the cypher level. The scorpion injects a poison that inflicts 3 points of damage per round for a number of rounds equal to the cypher level. The Glass Scorpion is a level 1 creature that has 3 health.')
        elif cypher_roll == 169:
            print('Glowing Tracker Level:', level,' Wearable: Wristband projector (long range) Usable: Handheld projector (long range); can be thrown against a hard object (short range) Effect: The device explodes in a shower of gel filled with neon gas, covering everything within immediate range in brilliant green and orange. The color can be seen in the dark up to 1 mile (2 km) away and lasts for one hour.')
        elif cypher_roll == 170:
            print('Goss Level:', level,' Usable: A small, moist tongue Effect: To activate the cypher, the user must place it under her tongue and then speak for up to one minute. The device records everything she says. At the end of this time, she can place it anywhere she chooses. For the next day, the device repeats whatever she said in her voice and tone to anyone who moves within 10 feet (3 m) of it. Once the device repeats the recording, it makes no further noise until another creature approaches, at which point it begins the speech all over again. When the effect ends, the device breaks up into chunks of foul-smelling filth.')
        elif cypher_roll == 171:
            print('Grasshopper Level:', level + 2,'Wearable: Wrist projector, shoulder launcher (launched, long range) Usable: Firm synth ball (thrown, short range) Effect: When thrown, the grasshopper bounces ', level,' times about 5 feet (2 m) apart, setting off an explosion of shrapnel in each place it lands. Each explosion deals damage equal to the cypher level to all creatures in the immediate area of the bounce.')
        elif cypher_roll == 172:
            print('Gravity Dampener Level:', level,' Wearable: Medallion, ring, boots Effect: The device automatically activates whenever its user falls 10 feet (3 m) or more. The user floats down until he lands safely, taking no damage from the fall.')
        elif cypher_roll == 173:
            print('Gravity Nodule Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, the weapon the nodule is attached to seems to defy some element of gravitational pull, sliding faster through the air to seek and strike its target. The nodule essentially turns a heavy weapon into a medium weapon (usable in one hand) or a medium weapon into a light weapon (lowering the difficulty of attacks by one step). If attached to a light weapon, the nodule reduces the difficulty of attacks by another step. Damage remains unchanged in all cases.')
        elif cypher_roll == 174:
            print('Ground Orb Level:', level,' Usable: Handheld device Effect: Unfolds into a clear, padded synth orb about 8 feet (2 m) in diameter, with a large door that swings open. Once inside, the user can strap herself in and voice-program the orb with a location. The orb will roll to said location with the user inside, increasing travel speed along a road to about 5 miles (8 km) per hour and overland travel speed to about 4 miles (6 km) per hour during long-term movement. Unfolding the orb is an action. Getting inside and programming it is also an action.')
        elif cypher_roll == 175:
            print('Grow Ray Level:', level + 2,' Usable: Projector ray Effect: An inanimate object in short range grows twenty times its normal size and remains that way for 28 hours. The object’s mass increases as well, but not at the same rate—only enough to keep it from collapsing in on itself.')
        elif cypher_roll == 176:
            print('Growth Harness Level:', level + 2,' Wearable: Harness that fits around the user’s torso Effect: This device draws mass to the user from another dimension, allowing her to grow 50 percent larger for one hour. During this time, she gains 12 points to her Might Pool and deals 2 additional points of damage with all melee attacks.')
        elif cypher_roll == 177:
            print('Growth Serum Level:', level,' Internal: Liquid that is injected or swallowed Effect: The user permanently grows a foot taller. This process is painful and takes 28 hours, during which time the affected character is impaired.')
        elif cypher_roll == 178:
            print('Growth Stimulator Level:', level + 4,' Usable: Spray bottle, aerosol projector Effect: One plant touched by the liquid grows to ten times its normal, full-grown size in ten minutes. If conditions can’t support the plant, it soon dies.')
        elif cypher_roll == 179:
            print('Grub Armor Level:', level + 1,'Usable: Canister of dried worms Effect: This cypher requires a bit of water to activate the dried worms in the can. Once activated, the grubs grow to enormous size in ', level,' rounds and swarm over the user’s body, providing +2 to Armor for one hour. Further, if the user is targeted by an effect that specifically affects a single creature, such as something that controls or reads her mind, one of the grubs is affected instead, effectively rendering the user immune to such things for the duration. This does not apply to straightforward physical attacks of any kind.')
        elif cypher_roll == 180:
            print('Gyre Loop Level:', level + 2,' Usable: Complex device, handheld device Effect: Generates a strong wind that blows in a path 5 feet (2 m) wide and 500 feet (152 m) long. The wind blows for one hour. The wind is strong enough to scatter papers and loose, lightweight objects, cause flames to gutter out, and drive back tiny creatures. The wind can also fill a sail to propel a wind-powered vehicle. The user can change the direction of the wind by simply moving the device so it faces a different way.')
        elif cypher_roll == 181:
            print('Habiliment Mirage Level:', level,' Wearable: Lapel pin, bracelet, ring Effect: The user activates the device and scans the resulting small beam of light over a piece of clothing, armor, or other accoutrement within long range. The device then creates a hologram of that outfit over and around the user, making it seem as if he is wearing it, right down to the details. The illusion lasts for one hour or until the device is removed from the user’s person.')
        elif cypher_roll == 182:
            print('Hand of the Conqueror Level:', level + 3,' Wearable: Thin glove Effect: When activated, this thin glove becomes as tough as the hardest metal. Punch attacks made by the wearer inflict 1 additional point of damage. Further, the wearer’s hand can’t be harmed. He can handle hot lava or stick his hand into a grinder and suffer no ill effects (though the grinder might be wrecked). The effect lasts for 28 hours.')
        elif cypher_roll == 183:
            print('Hanging Cocoon Level:', level,' Usable: Handheld device Effect: After being given a firm shake, this device expands into a tapered, hanging, semienclosed tent large enough for one person. It can easily be hung from anything that will support the weight of a human. Opening and hanging the cocoon is a single action. Climbing into it is also an action. It lasts for one day before it begins to dissolve.')
        elif cypher_roll == 184:
            print('Harassing Companion Level:', level + 2,' Usable: Metal cube Effect: When activated, this cube becomes a small flying automaton that harasses a target for one minute. It flies at the target, getting in the way of his eyes, his movements, and so on. The difficulty of the target’s actions is increased by one step. At any time, the user can take an action to command the automaton to bother a different target within short range.')
        elif cypher_roll == 185:
            print('Head Transference Collar Level: 8 Usable: Adjustable metal ring Effect: This collar fits around the neck of most creatures the size of a human or so. When activated, it slices the head cleanly from the body and preserves the head (and mind) of the creature for up to ten minutes, during which time the creature is fully conscious. If the headless body of another creature that has been dead for less than one hour is available, the head preserved by the collar can be grafted onto that body. Henceforth, the head now controls its new body as if it had always been its own. This is very likely to alter Might and Speed Pools (but not Intellect Pool) and possibly other qualities as well.')
        elif cypher_roll == 186:
            print('Healing Nodule Level: ', level + 1,' Usable: Crystal nodule affixed to a melee weapon Effect: Once activated, this nodule functions for ten minutes. Whenever the weapon that the nodule is affixed to strikes a foe (or any hard surface), 1 point is restored to the wielder’s Might Pool. The nodule cannot restore more than 1 point per round.')
        elif cypher_roll == 187:
            print('Health Symbiote Level: ', level,' Internal: Inhalable powder Usable: Injector Effect: Activation inflicts 1 point of ambient damage as the symbiote becomes established in the user’s system. For the next 28 hours, the user is immune to diseases, poisons, and other toxins.')
        elif cypher_roll == 188:
            print('Health Viewer Level:', level,' Wearable: Contact lenses, monocle, goggles Usable: Small transparent panel Effect: Allows the user to see through clothing and skin to view a creature’s insides. Lead blocks the special vision. The user can use this ability as an asset for any healing-related tasks. Once activated, the cypher functions for ten minutes.')
        elif cypher_roll == 189:
            print('Heartbeat Lock Level:', level,' Usable: A 3-foot (1 m) coil of thin copper wire with a flat round disk on each end Effect: By placing the disks against the user’s chest for one minute, the device becomes synchronized with her heartbeat. After this, if the disks are pushed together, they form a seal that can be broken only when the device is exposed to the original heartbeat. Opening the lock destroys the locking mechanism.')
        elif cypher_roll == 190:
            print('Heartburst Level:', level + 4,' Internal: Pill, implant Wearable: Ring, bracelet, pendant Effect: This device is keyed to the heartbeat of the user. If he dies, the device explodes, inflicting damage equal to the cypher level to all within immediate range.')
        elif cypher_roll == 191:
            print('Heartlink Level:', level + 1,'Internal: Pill, implant Wearable: Ring, bracelet, pendant Effect: This device is keyed to the heartbeat of the user, so that if he dies, a designated intelligent creature will be informed telepathically.')
        elif cypher_roll == 192:
            print('Heat Sensor Level:', level,' Internal: Pill, injector Wearable: Goggles, spectacles, contact lenses Usable: Handheld device with a screen Effect: For one hour, the user can perceive objects and creatures based on the heat they emit. This may allow him to see otherwise invisible or hidden targets, or even certain objects inside other objects if their temperatures are vastly different.')
        elif cypher_roll == 193:
            print('Heat Sheath Level:', level + 1,' Usable: Spray canister Effect: This spray can coat up to one melee weapon per cypher level, but all of the canister’s contents must be sprayed at once. Coated weapons inflict 1 additional point of damage from the heat they now generate. The coating wears off after 28 hours.')
        elif cypher_roll == 194:
            print('Heat Stone Level:', level,' Wearable: Lump of rock hanging from a necklace or set in a ring Effect: The device activates when the user would take damage from heat or fire. The device reduces the damage to 0 and makes the user immune to heat and fire for one hour.')
        elif cypher_roll == 195:
            print('Heatvision Lenses Level:', level,' Internal: Eye drops Wearable: Eyeglasses, goggles, contact lenses Effect: Allows the user to see infrared light for one hour. Warm creatures and objects register as bright reds, oranges, and yellows, while cool areas appear blue, purple, or black. The device allows the wearer to see in total darkness, though fine detail is impossible. A hot light source (such as the sun) effectively blinds the user while the source is in his field of view.')
        elif cypher_roll == 196:
            print('Heliolithic Halo Level:', level,' Wearable: Metallic ring 6 inches (15 cm) in diameter Effect: When activated, the ring hovers about 3 inches (8 cm) over a living creature and creates a psychic shield of white light to protect that creature. For the protected creature, the difficulty of all Intellect defense tasks is decreased by one step for one hour. Requires a sun prayer to activate (activation is an action).')
        elif cypher_roll == 197:
            print('Helping Hand Level:', level + 1,'Usable: A metallic, seven-fingered hand Effect: When activated, the hand hovers near the user for 28 hours. During that time, it acts as the user’s third hand—holding objects, opening doors, turning dials, and so on. The helping hand can also make attacks as the user might, with weapons provided to it, but all such attacks are modified by two steps to the user’s detriment.')
        elif cypher_roll == 198:
            print('Hidden Reviver Level:', level,' Wearable: Elaborate hair pin, locket necklace, double bracelet Effect: This device is always disguised as a wearable object. When worn, the device does not count against your cypher limit. To use the device, you must first dismantle the disguised object and then rebuild it into its proper form as a handheld device. Then it can revive a depleted artifact for a single additional use. One action to build the reviver from the parts, and one action to attempt to use it.')
        elif cypher_roll == 199:
            print('History Tap Level:', level,' Wearable: Small disk that attaches to forehead, electronic bracelet, thick collar, stretchy gloves Effect: As soon as you put on the device, it begins to pulse with a heat that runs along your skin and directly to your brain. If you think of a human or visitant that you’ve heard of but never met, the device grants you access to one random moment in that individual’s life. You see the moment as if in a dream and may remember only parts of it once the experience is over.')
        elif cypher_roll == 200:
            print('Homunculus Level:', level + 2,'Internal: Pill, ingestible liquid Usable: Injector Effect: Causes a small blister to appear somewhere on the user’s body ', level,' days after activation. Every day thereafter for six days, the blister grows. After six days, the blister becomes so large that the difficulty of all the user’s rolls increases by one step. On day twelve, the blister reaches its ultimate size: a massive, fluid-filled sac that leaves the user incapacitated for a full 28 hours. When the last hour ends, the blister splits open and leaks a yellow slick of phlegmy substance. In the midst of the mess is a level 1 creature about 18 inches (46 cm) tall. The creature can talk in any language the user knows and accompanies him wherever he goes, following his instructions. It vaguely resembles the user but is ugly and misshapen. It knows everything the user knows, and when it helps him perform a task other than attack or defend, the difficulty of the task is decreased by one step.')
        elif cypher_roll == 201:
            print('Hover Disk Level:', level + 1,' Usable: A metal disk about 2 feet (0.6 m) across Effect: The user can stand on the disk, and for ten minutes it moves as she desires, up to a long distance each round. In a combat situation, she can take an action (other than moving) and still move a long distance. Because the disk is attuned to her thoughts, falling off is possible only if she loses consciousness or is struck by a tremendous force (usually one that inflicts more than 8 points of damage in one blow).')
        elif cypher_roll == 202:
            print('Hover Module Level:', level + 2,'Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 4 task). Once attached, it no longer counts against a character’s cypher limit. The cypher or artifact it is attached to can be placed in the air and will remain there until someone grabs it and deactivates the hover property. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 203:
            print('Image Caster Level:', level,' Usable: Complex device, handheld device Effect: Projects an ephemeral image within long range that looks real. The image looks like the user, speaks like the user, and moves as the user desires within long range for up to one hour. Physical interaction with the image shows it to be without substance.')
        elif cypher_roll == 204:
            print('Indestructible Oil Level:', level,' Usable: A small amount of oil, likely in a jar or flask Effect: If a character coats an inanimate object with this oil, the object becomes almost indestructible (treat as level 10 for durability). One dose is enough for a single object about the size of a sword, a shield, or a small case.')
        elif cypher_roll == 205:
            print('Inertia Shield Level:', level + 4,'Wearable: Belt, body harness Effect: An energy field surrounds the user for ten minutes. No physical object can penetrate the shield if that object is moving with any force that could be constituted as an attack. The field would deflect a strike from a broadsword or a bolt fired from a crossbow. Attacks using physical objects inflict no damage on the user until the effect ends.')
        elif cypher_roll == 206:
            print('Inflatable Companion Level:', level + 2,'Usable: Self-inflating blow-up companion Effect: Small device self-inflates into a companion that is roughly 4 feet (1 m) tall. It is a creature of a level equal to the cypher level and can understand verbal commands of the character who activates it. Once the companion has been activated, commanding it is not an action. It can make attacks or perform actions as ordered to the best of its abilities, but it cannot speak. The companion has short-range movement but never goes farther than long range away from the character who activated it. The companion is not artificially intelligent or capable of initiating action other than performing its purpose, as designated by its form. The GM should roll d100 ahead of time to decide what form the companion takes. 01–50 Attack creature: Takes the form of an aggressive creature in the Ninth World that does damage equal to the cypher level. The creature lasts for ten minutes. 51–75 Protective automaton: Takes the form of a sentient defense system (such as a floating shield) that absorbs 1 point of damage that would normally be taken by the user each round. The system lasts for one hour. 76–00 Distracting humanoid: Takes the form of a humanoid figure that attempts to create a distraction. This causes the foe to become dazed, increasing the difficulty of all its tasks by one step. The humanoid lasts for three rounds.')
        elif cypher_roll == 207:
            print('Inflatable Suit Level:', level,' Internal: Pill, ingestible liquid Wearable: Full bodysuit Effect: Causes a number of bags to suddenly inflate all over the user’s body. The inflated bags protect him from damage sustained from impacts, such as one resulting from a fall or a great concussive force. The bags remain inflated for one minute and then deflate with a tremendous noise. While the bags are inflated, the difficulty of the user’s Might rolls and Speed rolls is increased by one step.')
        elif cypher_roll == 208:
            print('Insanity Mask Level:', level,' Wearable: A metal mask with tiny holes in odd places and a locking mechanism in the back Effect: Anyone wearing the mask begins to slowly lose her mind. The mask causes ', level,' + 2 points of Intellect damage each round for a number of rounds equal to the cypher level. Alternatively, if someone’s Intellect Pool is already at 0, she can attempt to gain Intellect points by wearing the mask. Wearers who start with 0 in their Intellect Pool gain ', level,' – 2 Intellect points each round for a number of rounds equal to the cypher level. If the resulting number is negative, the wearer takes those points out of the next Pool in succession. For example, if the wearer is at 0 Intellect points and rolls a natural 1, she loses 1 point from her Might Pool. If her Might Pool is already at 0, the point of damage comes out of her Speed Pool instead.')
        elif cypher_roll == 209:
            print('Instant Boat Level:', level + 3,' Usable: Handheld device Effect: With the addition of water and air, this small device expands into a simple boat. The boat is 10 feet long by 4 feet wide (3 m by 1 m) and is made from a type of lightweight molded foam that begins to disintegrate after a day.')
        elif cypher_roll == 210:
            print('Instant Companion Level:', level + 1,' Usable: Fist-sized organic pod Effect: If submerged in water, the pod grows quickly. In one minute, it grows into a houndlike beast of a level equal to the cypher level, with appropriate health, damage inflicted, and so on, plus 1 point of Armor. The hound obeys the user’s commands (as best as it can, with only animal-level intelligence) for 28 hours or until it is slain, whichever comes first, at which point it dissolves into thick liquid. Instant Guardian Level: ', level,' Usable: Fist-sized organic pod Effect: If submerged in water, the pod grows quickly. In one minute, it grows into a batlike creature of a level equal to the cypher level. The creature sits on the user’s shoulder for 28 hours or until the user is attacked. The guardian moves to intercept the attack in its entirety. That is the only action it will take.')
        elif cypher_roll == 211:
            print('Instant Shield Level:', level,' Wearable: Ring, earring, hair pin, wristband, lapel pin Usable: Spray canister Effect: When activated by a simple voice command, the device instantly sends out a spray of molecules that harden into a protective wall in the air. The wall is 4 feet by 4 feet (1 m by 1 m). It provides Armor equal to the cypher level for two rounds. Activation is an action.')
        elif cypher_roll == 212:
            print('Instant Weapon Level:', level + 2,'Wearable: Ring, earring, hair pin, wristband, lapel pin Usable: Spray canister Effect: When activated by a simple voice command, the device instantly emits a temporary light beam. For one round, the beam does damage equal to the cypher level to a foe in close range. The weapon must be activated and used as a single combined action.')
        elif cypher_roll == 213:
            print('Instant Wings Level:', level,' Wearable: Backpack Effect: When activated, silken wings pop out of this backpack, allowing the wearer to glide (if falling or leaping from a height) for great distances, moving a long distance each round, and landing safely on the ground. The wings last until the wearer lands or for one hour, whichever comes first.')
        elif cypher_roll == 214:
            print('Interaction Advisor Level:', level + 2,'Internal: Pill, ingestible liquid Wearable: Temporary tattoo, amulet, headband, crystal worn on temple Effect: The device allows the user to access the datasphere to analyze other sentient creatures and anticipate their needs, motives, emotions, and so on. Wording, gestures, and even body language suggestions are offered. For one hour, the user has an asset for all interaction tasks.')
        elif cypher_roll == 215:
            print('Internal Detector Level:', level,' Internal: Syringe, pill, ingestible liquid Effect: Injects a fluorescent protein gene into the user, causing her skin to glow with a bioluminescent color that reflects the conditions in the surrounding environment (within long range). Works in both air and water. Lasts for one hour. Blue: poison or other dangerous gasses Green: dangerous levels of radiation or chemical compound Yellow: unknown dangerous compound Orange: unknown safe or beneficial compound Purple: hallucinogenic compound No glow: nothing detected')
        elif cypher_roll == 216:
            print('Invulnerable Mesh Level: 10 Wearable: Bodysuit Usable: Spray canister Effect: Grants +10 to Armor for one hour.')
        elif cypher_roll == 217:
            print('Jolter Level:', level + 2,' Wearable: Harness with wires connecting to a metal rod that can be held or affixed to the forearm Effect: When activated, this cypher generates a bolt of wild electricity that extends to short range before arcing into the ground or a target on the ground chosen by the user. The bolt inflicts damage equal to the cypher level, but the jolter is difficult to aim or control. The difficulty for any attack with the device is increased by one step, and a roll of 1 or 2 on the die suggests that a different target (if any) was struck. The jolter emits the bolt for four rounds, each round inflicting the same damage, but using it each round is an action and requires a new roll. There is no way to turn the jolter off once activated, so activating it is a four-round commitment. A user that does not control a jolter in a round will be struck by the bolt of electricity herself.')
        elif cypher_roll == 218:
            print('Jonah Ice Level:', level + 4,' Usable: Liquid contained in a tiny metal canister Effect: Adding the liquid to water raises the water’s freezing point to 100 °F (38 °C). The water, as well as any other water in contact with it, freezes solid unless temperatures exceed the new freezing point. Anything in the water freezes with it and suffers 6 points of damage. Affected water returns to normal 1d20 days later.')
        elif cypher_roll == 219:
            print('Kinetic Rod Level: 1 Usable: A metallic rod with an insulated handle (similar to a club) Effect: The user strikes the device against a solid surface, and the device absorbs the kinetic energy from the impact. The next time the user hits a target with an attack using the rod, the device releases the kinetic energy and inflicts 2 additional points of damage. Thereafter, this device functions as an ordinary club.')
        elif cypher_roll == 220:
            print('Leap Belt Level:', level + 1,' Wearable: Clamps onto belt Effect: When attached to a standard leather belt, this device allows the wearer to leap up to long range in a single bound (vertically, horizontally, or both), landing perfectly.')
        elif cypher_roll == 221:
            print('Lie Eater Level:', level + 3,'Usable: Cone-shaped device with two tiny tendrils Effect: This biomechanical device feeds on brain waves associated with deception. When a creature that it is pointed at lies, the tips of the tendrils light up and wave about. Once activated, the device functions for ten minutes.')
        elif cypher_roll == 222:
            print('Life Sensor Level:', level + 2,'Wearable: Spectacles, goggles, helmet with visor Usable: Handheld device with display Effect: Reveals the exact locations of every living creature within long range. At the end of each minute of operation, the user rolls a d6. On a 1, the device deactivates.')
        elif cypher_roll == 223:
            print('Light Binder Level:', level + 4,'Usable: Explosive device Effect: Two rounds after activation, the device explodes in a short radius. All light in the area (any place in the area illuminated by light or dim light) becomes solid, trapping everything in the area in place for one minute. Nothing in the area can move, and nothing from outside the area can enter it until the effect ends. Rendering any area dark, such as by blocking a source of light, frees anything in the darkness that was affected by the device.')
        elif cypher_roll == 224:
            print('Light Flyer Level:', level + 1,' Usable: Small metal rod Effect: Once activated, the rod creates a winged glider about 12 feet (4 m) across beneath the user’s feet. The flyer can move a long distance in a round, and it moves at the whim of the rider (requiring no action). It lasts for four hours, although if the user gets off the glider before then, it disappears, the effect ended.')
        elif cypher_roll == 225:
            print('Light Shield Level:', level + 2,' Wearable: Wristband device Usable: Handheld device Effect: Emits a field around the wearer for five minutes. While the wearer is in an area of light or dim light, he has additional Armor equal to the cypher level.')
        elif cypher_roll == 226:
            print('Light Steed Level:', level + 1,'Wearable: Wristband, ring Usable: Handheld device Effect: Projects a holographic image of a powerful mammalian quadruped made of glowing light. For eight hours, the image takes on a solid form—still made of light—that moves as directed by the user. The steed is a level 3 creature that cannot make attacks but moves a long distance each round. It discorporates if “slain.”')
        elif cypher_roll == 227:
            print('Light Writer Level:', level,' Wearable: Wristband projector Usable: Handheld projector Effect: Causes glowing writing to appear in the air and remain there for 28 hours. The user can use the device to write up to twenty-five words. The words emit dim light out to a short distance.')
        elif cypher_roll == 228:
            print('Lightning Lance Level:', level + 2,' Usable: Handheld projector (long range) Effect: Shoots a jagged bolt of lightning at one target within range that inflicts electrical damage equal to half the cypher level. The lightning then leaps to strike a different target within a short distance of the first target and inflicts the same damage.')
        elif cypher_roll == 229:
            print('Living Weaponmaster Nodule Level: 10 Usable: Crystal nodule affixed to a melee weapon Effect: When activated, this nodule allows the weapon to which it is affixed to float into the air and attack on its own. It attacks all creatures other than the user within immediate range, striking all that are lower than level 10 (it attacks PCs as a level 10 NPC) and inflicting damage appropriate to the type of weapon. The weapon fights on its own in this manner for ten rounds (it cannot be stopped by the user).')
        elif cypher_roll == 230:
            print('Lobal Sheath Level:', level,' Internal: Pill, ingestible liquid, syringe Effect: Coats the user’s brain with a protective sheath, offering additional Armor against Intellect damage for one hour. Armor protection is equal to the cypher level.')
        elif cypher_roll == 231:
            print('Lotus Paste Level:', level,' Usable: A bottle, tube, or jar filled with hydrophobic crystal paste, enough to completely cover two items (such as a piece of armor and a weapon, or two artifacts) Effect: Covering an object with this paste renders it completely liquid- and fireproof. In addition, the object essentially becomes selfcleaning, repelling dirt from its surface. Action to apply paste. If someone is wearing armor or using a weapon or an artifact coated in lotus paste, he gains +2 to Armor against fire- and liquidbased attacks for 28 hours.')
        elif cypher_roll == 232:
            print('Lutin (Bioengineered Insects) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Handheld projector (long range). Can also be thrown against the ground or other hard object in short range. Effect: Bursts in a cloud of small engineered insects within short distance. The cloud lingers for ', level,' rounds unless conditions indicate otherwise. Roll to determine the effect: 01–50 Eaten alive. Living creatures with exposed skin suffer damage equal to the cypher level from bites and stings. 51–75 Choking. Living creatures that breathe lose their actions to choking and coughing for a number of rounds equal to the cypher level. 76–00 Blindness. In the second round after the explosion, living sighted creatures are blinded by tiny webs spun across their eyes for a number of rounds equal to the cypher level.')
        elif cypher_roll == 233:
            print('Lutin (Combos) Level:', level + 1,' Wearable: Wristband projector (long range) Usable: Handheld projector (long range). Can also be thrown against the ground or other hard object in short range. Effect: Bursts in a cloud within short distance. The cloud lingers for ', level,' rounds unless conditions indicate otherwise. Roll to determine the effect: 01–50 Spores and seeds. Explodes in a shower of green and yellow spores and seeds. Roll on the (Engineered Spores) table for effect. The seeds implant themselves in living creatures after two rounds, causing additional damage equal to the cypher level. 51–75 Shrapnel and gel. Roll on the Lutin (Metal Shrapnel) table for shrapnel effect. The gel causes the shrapnel to adhere to living creatures. As a result, the effect lasts for a number of additional rounds equal to the cypher level. 76–00 Moths and light drops. The moths hatch from stasis cocoons at the moment of the explosion. Their reflective wings enhance the light drops, focusing the light into ray beams that do ', level,' + 4 points of damage to all creatures within long range.')
        elif cypher_roll == 234:
            print('Lutin (Engineered Spores) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Handheld projector (long range). Can also be thrown against the ground or other hard object in short range. Effect: Bursts in a cloud of bioengineered spores within short distance. The cloud lingers for ', level,' rounds unless conditions indicate otherwise. Roll to determine the effect: 01–50 Amnesia. Living creatures that breathe and think permanently lose all memory of the last minute. 51–75 Choking. Living creatures that breathe lose their actions to choking and coughing for a number of rounds equal to the cypher level. 76–00 Hallucinogenic. Living creatures that breathe lose their actions to hallucinations and visions for a number of rounds equal to the cypher level.')
        elif cypher_roll == 235:
            print('Lutin (Light Drops) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Handheld projector (long range). Can also be thrown against the ground or other hard object in short range. Effect: Bursts in a cloud of contained light drops within short distance. The cloud lingers for ', level,' rounds unless conditions indicate otherwise. Roll to determine the effect: 01–50 Blindness. Living sighted creatures are blinded by the refractions of light for a number of rounds equal to the cypher level. 51–75 Sleep. Living sighted creatures are soothed by the warm glow of the light and fall asleep for a number of rounds equal to the cypher level or until woken by a violent action or an extremely loud noise. 76–00 Dazzle. Living sighted creatures are distracted by the dazzling array of lights and colors, and they become dazed for a number of rounds equal to the cypher level. During this time, the difficulty of all tasks they perform is modified by one step to their detriment. If a light drops lutin is combined with a metal shrapnel lutin (task difficulty 9), the resulting cypher creates a swirling vortex of energized metal shards in an immediate area. The vortex lasts for one minute and inflicts 10 points of damage each round to anyone within it.')
        elif cypher_roll == 236:
            print('Lutin (Metal Shrapnel) Level:', level + 2,'Wearable: Wristband projector (long range) Usable: Handheld projector (long range). Can also be thrown against the ground or other hard object in short range. Effect: Bursts in a cloud of metal shrapnel within short distance. Roll to determine the effect: 01–50 Sharp. Living creatures with exposed skin suffer damage equal to the cypher level from the sharp edges of the shrapnel. 51–75 Corrosive. Living creatures with exposed skin suffer damage equal to the cypher level from corrosive-laden shrapnel. 76–00 Electrical. The shrapnel contains small amounts of electric charge. Living creatures with exposed skin suffer electrical damage equal to the cypher level. If a light drops lutin is combined with a metal shrapnel lutin (task difficulty 9), the resulting cypher creates a swirling vortex of energized metal shards in an immediate area. The vortex lasts for one minute and inflicts 10 points of damage each round to anyone within it.')
        elif cypher_roll == 237:
            print('Lutin (Nanites) Level:', level + 2,'Wearable: Wristband projector (long range) Usable: Handheld projector (long range). Can also be thrown against the ground or other hard object in short range. Effect: Bursts in a cloud of nanites within short distance. The cloud lingers for ', level,' rounds unless conditions indicate otherwise. Roll to determine the effect: 01–50 Absorb. Nanites absorb all physical damage dealt by creatures within the explosive range for one round. This has no effect on Intellect damage. 51–75 Power up. Nanites enhance all numenera devices within range, adding ', level,' to their damage (or level) if used in the next two rounds. 76–00 Brain buster. Nanites do Intellect damage equal to the cypher level to all thinking creatures in range, ignoring Armor.')
        elif cypher_roll == 238:
            print('Magnetic Boots Level:', level,' Wearable: Magnets fit onto boots Effect: These extraordinarily powerful electromagnets affix to the soles of standard leather boots. With subtle toe movements, the wearer can activate or deactivate the magnets (no action required), allowing him to climb up a metal wall or remain, unmoved, while standing on a metal surface. The magnets’ power lasts for one hour.')
        elif cypher_roll == 239:
            print('Magnetic Ink Level:', level,' Usable: Small container of ink Effect: When used to tattoo flesh, this ink embeds powerful magnets in the subject’s skin. The magnets are powerful enough to hold up to 5 pounds (2 kg) of metal. The ink can be applied only once, and there’s only enough to make a tattoo about 3 inches (8 cm) across, but once applied, it is permanent.')
        elif cypher_roll == 240:
            print('Magnetic Winch Level:', level + 3,'Usable: Small metal box Effect: When activated, this metal box breaks into two halves joined by a very strong and thin metal cable, which can be extended up to 120 feet (37 m). When a second switch is pressed, the boxes each become very strong magnets. When a third switch is pressed, the cable is retracted by a motor that is powerful enough to pull 5,000 pounds (2,268 kg) of dead weight until the two boxes are joined again.')
        elif cypher_roll == 241:
            print('Malady Maker Level:', level + 1,'Usable: Short metal baton Effect: When a living creature of a level lower than the cypher is struck by this baton (a medium weapon), it is also afflicted by a sudden and powerful nausea, making it lose its action for the next three rounds. Even after the malady maker ability is used, the baton remains an effective medium weapon.')
        elif cypher_roll == 242:
            print('Mass Destructor Level:', level + 4,'Usable: Solid black cube about the size of a human fist encased in a larger clear cube Effect: When activated, the clear cube begins to dissolve, which takes ten minutes. After the outer cube dissolves fully, the black cube causes all eligible victims (living creatures the size of a small dog or larger) in long range to belch forth a cloud of black vapor. This vapor fills the immediate area around the victim, inflicting damage equal to the cypher level on the victim and all other living creatures within the cloud. One round later, all eligible victims within long range of every affected victim belch forth the same cloud (even if they already did so before). This continues until no creatures are affected. The cypher is a horrific doomsday device that could easily destroy an entire city or wipe out an army.')
        elif cypher_roll == 243:
            print('Mass Nodule Level:', level + 1,' Usable: Crystal nodule affixed to an object or a creature Effect: If attached to an object or an unresisting creature, the nodule adheres for one hour. The object or creature’s weight increases by a factor of ten, rendering most creatures unable to move, and rendering most objects unmovable by creatures whose level is less than the cypher level.')
        elif cypher_roll == 244:
            print('Matter Converter Level:', level + 2,'Internal: Pill Usable: Complex device Effect: Converts material that can fit inside a 5-foot (2 m) cube into different material of the user’s choice. If this is an internal cypher, the user must consume the material and then excrete or surgically remove the new material in whatever manner the GM deems appropriate.')
        elif cypher_roll == 245:
            print('Memory Cube Level: 1 Usable: Small cube made of glass or crystal Effect: Removes one memory from the user’s mind and stores it inside the device, where it remains forever. Anyone holding the device can see a replay of the memory as the user experienced it. The user has no recollection of the memory, though she can become familiar with it through repeated viewings.')
        elif cypher_roll == 246:
            print('Memory Dust Level:', level,' Usable: Capsule containing nanites and visible dust particles Effect: Opening the capsule and sprinkling its contents in an area about 10 feet by 10 feet (3 m by 3 m) causes the nanites to loosely create a projection of the events that recently occurred in that area, essentially re-enacting the previous ten minutes. The rendering is mostly created from large shapes and big movements. Smaller details are more difficult to make out.')
        elif cypher_roll == 247:
            print('Memory Gel Level:', level + 2,' Usable: Gel contained in metal or plastic tube with a screw cap Effect: Pouring out the tube’s contents activates the device. The gel spreads over any object within immediate range that can fit inside a 10-foot (3 m) cube. Once the gel covers the object, it stays put for one minute, and then it withdraws and forms into a tiny, hard ball. At any time thereafter, a character can throw the ball a short distance. If it strikes a hard surface, the ball expands and takes the shape of the thing it covered. The material is as hard as metal and lasts until destroyed.')
        elif cypher_roll == 248:
            print('Mental Coupling Level:', level + 3,' Wearable: Headband, glove Usable: 2-foot-long (0.6 m) synth cable Effect: Allows one thinking creature to speak telepathically with another creature that it touches. Although the connection lasts for only one minute, vast amounts of data can be exchanged if both creatures are willing.')
        elif cypher_roll == 249:
            print('Mental Director Level:', level,' Wearable: Needled patch that adheres to flat, hairless skin Effect: Once applied, the patch “reads” the user’s muscle action, allowing her to remotely (within long range) take a single action with another object that is her size or smaller as though she were touching it. For example, she could detonate a device or push open a door. She must actually perform the desired action in order for the cypher to read her muscle movement.')
        elif cypher_roll == 250:
            print('Mental Thieves Level:', level + 4,'Internal: Subdermal injection Effect: The user exhales a cloud of spores as he puts a question to a creature within immediate range. The spores infiltrate the target’s body, find the answer in its thoughts, and forcefully eject themselves from the body, inflicting 2 points of damage to the target. The spores fly through the air and reenter the user’s body, at which point he immediately learns the answer to the question, subject to the limits of the target’s knowledge.')
        elif cypher_roll == 251:
            print('Message Capsule Level:', level,' Usable: Synth cylinder about 1 foot (0.3 m) in length Effect: Upon activation, a message of up to one minute in length can be recited to the cylinder. When the message is complete and the user provides a detailed description of the intended recipient (signifying title and/or name), the cylinder fades from view. Within the next 100 hours, the cylinder appears to the recipient, broadcasts the message, and crumbles into dust.')
        elif cypher_roll == 252:
            print('Message Detonation Level:', level,' Usable: Synth cylinder about 1 foot (0.3 m) in length Effect: It takes an action to encode the cylinder with a detailed description of the intended recipient, signifying his title and/or name. Then the cylinder fades from view. Within the next 100 hours, it appears to the recipient and explodes as a detonation in an immediate radius, inflicting damage equal to the cypher level. Roll d100 for the type of damage: 01–10 Cell-disrupting (harms only flesh) 11–30 Corrosive 31–40 Electrical discharge 41–50 Heat drain (cold) 51–75 Fire 76–00 Shrapnel')
        elif cypher_roll == 253:
            print('Metal Patch Level:', level,' Usable: Small metal plate Effect: When placed on a flat surface, the device affixes itself and rapidly expands until it becomes a plate that is 6 inches (15 cm) thick with a radius of up to 10 feet (3 m). Once in place, the device cannot be removed without destroying it.')
        elif cypher_roll == 254:
            print('Metamagnetizer Level:', level,' Usable: Handheld device Wearable: Glove, wristband Effect: The device creates a sudden increase in the magnetic field of a random nonliving substance that isn’t usually magnetized, causing it to become drawn toward the cypher in one round. The device exerts a strong pull (holding or moving up to 10 pounds [5 kg]) within short range and a weaker pull (holding or moving up to 5 pounds [2 kg]) within long range. Roll d100 for the substance that it attracts: 01–10 Synth 11–30 Stronglass 31–40 Wood 41–50 Stone 51–75 Fabric 76–00 Leather')
        elif cypher_roll == 255:
            print('Mind Control Implant Level: ', level,' + 4 Internal: Pill Wearable: Disk that adheres to forehead, temporary tattoo Usable: Injector Effect: This cypher consists of two devices— an injection or pill, and a control disk or temporary tattoo. They are usually found together. For ten minutes, the disk or tattoo enables long-range mental communication with—and control of—anyone who took the injection or pill. The controller can bid the target creature to do anything it could do normally.')
        elif cypher_roll == 256:
            print('Mind Killer Level: ', level,' + 3 Usable: 2-inch (5 cm) crystal dodecahedron Effect: When activated, this crystal flies into the air and seeks the most intelligent creature in long range, which takes one round. After finding its target, the crystal fires a bolt of energy similar to lightning at the creature that inflicts 10 points of Intellect damage (ignores Armor).')
        elif cypher_roll == 257:
            print('Mind Module Level: ', level,' + 2 Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 6 task). Once attached, it no longer counts against a character’s cypher limit. The cypher or artifact it is attached to is now possessed of its own telepathic machine intelligence and can function on its own, obeying verbal or telepathic commands. For example, a detonation can be told to explode whenever someone in a particular uniform comes near. A windrider can be commanded to fly to a location on its own. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 258:
            print('Mind Oculus Level: ', level,' Wearable: Glass contact lens, monocle, spectacles Effect: Allows the wearer to create a mental connection to any living, sentient creature whose eyes they can look into for at least thirty seconds. Removing all language barriers, the mind oculus allows the wearer to ask a question that the creature should know the answer to, and get a truthful answer. If the creature is disagreeable to the exchange, the device allows only one question and answer. If the creature is agreeable, the device allows up to five questions within a ten-minute period.')
        elif cypher_roll == 259:
            print('Mind Sled Level: ', level,' + 2 Internal: Pill, ingestible liquid Usable: Injector Effect: The user falls unconscious, and one round later, a luminous crystal bloodlessly emerges from her head (the crystal is not considered a cypher). When the crystal is touched by another creature, the consciousness of the user wakes in the body of that creature (and the host’s consciousness is temporarily submerged). For all intents and purposes, the user is the creature in all ways except personality. The user transfers back into her own body 28 hours later. If her body died in the meantime, there’s a chance that her consciousness will remain in the host body, but most often, her personality merely burns out.')
        elif cypher_roll == 260:
            print('Mini Gate Level: ', level,' + 2 Usable: Metal sphere Effect: When activated, this device creates a tiny portal at the user’s wrist and another at a spot within long range that she can see. Her hand emerges from the second gate, allowing her to manipulate objects, attack with a light weapon, or pull a small object through the gate. The gate lasts for one round per cypher level.')
        elif cypher_roll == 261:
            print('Miniaturized Weapon Level: 1 Usable: A miniature weapon (usually a sword or dagger) Effect: When activated, the device instantly grows into the full-sized weapon that it resembles.')
        elif cypher_roll == 262:
            print('Mist Animator Level: ', level,' + 3 Wearable: Synth glove Usable: Handheld device Effect: Allows the user to control the movement and shape of a gaseous substance. The amount of gas cannot be increased or decreased, but it can be moved a short distance in a single round, be reshaped so that the mist envelops selected targets, or be dispersed harmlessly. The animator functions for one minute.')
        elif cypher_roll == 263:
            print('Mist Energizer Level: ', level,' + 3 Wearable: Headband, ring Usable: Handheld device Effect: Alters the composition of a gaseous cloud no larger than 10 feet by 10 feet by 10 feet (3 m by 3 m by 3 m) so that it inflicts damage equal to the cypher level to anyone that enters it. Damage continues every round that a creature is within the energized mist, which lasts for ten minutes. The gaseous cloud can simply be the normal air, but it could also be an already poisonous vapor or some other gas.')
        elif cypher_roll == 264:
            print('Mist Producer Level: ', level,' + 1 Usable: Handheld device Effect: Emits a cloud of poisonous gas that inflicts damage equal to the cypher level on anyone within immediate radius. The mist remains for two rounds.')
        elif cypher_roll == 265:
            print('Momentum Dampener Level: ', level,' Usable: Small mechanical device Effect: Projects an immobile field out to a short distance from the device that lasts for one minute. Any creature or object that comes into the edge of the field immediately stops moving without harm. Projectiles simply fall to the ground. Creatures stop moving. Until the effect ends, it is not possible to physically move through the field.')
        elif cypher_roll == 266:
            print('Mood Patch Level: ', level,' + 2 Wearable: Adhesive patch that activates when slapped Effect: Once activated, the patch transfers a substance that makes the wearer feel an emotion, enter a particular state of mind, or forget something unpleasant. Roll d100: 01–25 Moods ranging from tranquil to ecstatic for one hour 26–50 Moods ranging from melancholy to suicidal for one hour 51–75 Completely truthful (1–3 on d6) or pathological liar (4–6 on d6) for one hour 76–00 Permanently erases one memory chosen by the wearer')
        elif cypher_roll == 267:
            print('Motion Activator Level: ', level,' + 1 Usable: Small synth nodule Effect: When attached to another cypher or artifact, the motion activator causes it to activate if anything larger than a small dog moves within immediate range. Once activated, it cannot be deactivated.')
        elif cypher_roll == 268:
            print('Muscle Cart Level: ', level,' + 3 Usable: Small metal box with wheels Effect: When activated, this small cart vastly increases its mass and begins to move forward. It can pull up to 10,000 pounds (4,536 kg) for one hour, moving about 10 feet (3 m) per round regardless of terrain (within reason), but only in its original direction.')
        elif cypher_roll == 269:
            print('Mystery Box Level: 10 Usable: Mechanical object fitted with red button Effect: The device disappears when activated, and the GM secretly rolls 2d20 to see what happens. 2 Vanish. A singularity appears in the space left by the cypher and drags everything within immediate range into another reality or dimension. 3 Storm. A violent storm gathers in the sky over the area where the cypher was used and rages for one week before dissipating. 4 Glow. Everything within immediate range emits faint light for one hour. 5 Starfall. A meteorite falls from the sky and strikes a spot within 10 miles (16 km), destroying everything within 1 mile (2 km) of where it lands. Weird Death. Roll 2d6 to determine an age. The first roll is the first digit of the age, and the second roll is the second digit. Every living thing of that age within 1 mile (2 km) immediately dies. 7 Death Proof. No living thing within 1 mile (2 km) can die for the next 28 hours. 8 Petrifaction. All plant matter within 1 mile (2 km) turns to stone. 9 Drought. All water within 1 mile (2 km) is instantly destroyed. 10 Rust. All ferrous objects within 1 mile (2 km) turn to rust. 11   Warping Energy. All characters within long        range gain a harmful mutation or a          beneficial mutation (50% chance of        either). 12 Temporal Distortion. Every living thing within short range is flung 1d20 months into the future. 13 Revision. One NPC ceases to exist. 14 Transmute Gender. The user’s gender changes or is removed altogether (50% chance of either). 15 Weakness. The user’s Might Pool is permanently reduced by 1. 16 Rigidity. The user’s Speed Pool is permanently reduced by 1. 17 Forgetfulness. The user’s Intellect Pool is permanently reduced by 1. 18 Blindness. Each sighted creature within short range cannot see for 28 hours. 19 Horrible Summons. A level 10 creature from another dimension appears and attacks. 20 Radiation. A burst of radiation spreads out from the spot where the device disappeared and inflicts 6 points of ambient damage to all creatures within short range. For any creature that takes this damage, the difficulty of all tasks is increased by one step for 28 hours. 21 Wretched Mutants. Each creature within short range gains a harmful mutation. 22 Antigravity. Gravity ceases to function everywhere within long range. Anything that is not rooted to the ground flies upward a short distance per round for three rounds. After this time, gravity is restored, and everything that went up comes back down, probably taking falling damage. 23 Dreadful Summons. Three level 3 creatures from another dimension appear and attack. 24 Deafness. Each creature that can hear and is within a short distance cannot hear for 28 hours.25  Catatonic. The user enters a catatonic state that persists for 1d20 hours. 26 Mutation. The user gains two harmful mutations. 27 Befuddled. For the user, the difficulty of all tasks is increased by three steps for one hour. 28 Unexpected Development. The user gains two cosmetic mutations. 29 Mind Transfer. The user swaps minds with the nearest character. The players swap characters. 30 Psychic Connection. All characters within immediate range can communicate telepathically regardless of distance for the next 1d20 days. 31 Foliage. Plants sprout from the ground and spread out to a distance of 1 mile (2 km). 32 Awakening of the Flesh. The user gains a beneficial mutation. 33 Strength. The user’s Might Pool is permanently increased by 1. 34 Quickness. The user’s Speed Pool is permanently increased by 1. 35 Brilliance. The user’s Intellect Pool is permanently increased by 1. 36 Fold Space. The user and everyone within short range teleport to a destination of the user’s choice anywhere in the world. 37 Cypher Spawn. ', level,' randomly determined cyphers appear on the ground in a pile. 38 Artifact. A randomly determined artifact appears on the ground. 39 Vitality Surge. All characters within immediate range increase their stat Pools by 1 for 28 hours. 40 Cosmic Awareness. For the user, the difficulty of all tasks is reduced by three steps for one hour.')
        elif cypher_roll == 270:
            print('Navigator Daemon Level: ', level,' + 2 Usable: Small handheld device Effect: The user names a location or the coordinates of a location. The device projects a beam of light that creates a tiny, flying level 1 creature. It takes a minute for the creature to form, and then it wings off to lead the user to the stated destination. After 28 hours, the creature dissipates into motes of light that fade away, whether or not the user has reached the destination.')
        elif cypher_roll == 271:
            print('Nectar Dispenser Level: ', level,' Usable: Small canister Effect: This device produces a thick, delicious liquid that provides nutrition and sustains up to three people for one day (or one person for three days) if there is a container to hold the nectar.')
        elif cypher_roll == 272:
            print('Needle Sphere Level: ', level,' + 1 Usable: Metal and synth sphere Effect: Upon activation, the sphere floats in the air next to the user for one round per cypher level. Each round, it fires a large needle (more like a dart) that inflicts 3 points of damage at a target designated by the user within long range. (This occurs on the user’s action in addition to her normal actions.) The player makes the attack rolls, and although she cannot use Effort or skills to modify her rolls, the difficulty of each attack is decreased by two steps.')
        elif cypher_roll == 273:
            print('Needleburst Level: ', level,' + 4 Usable: A crystal with many jagged protrusions Effect: This device is activated when the user plays a certain high-pitched note within long range of it. (This may require the user to have a pitch-pipe, flute, or other such instrument, but it’s possible to sing the note as well if one is talented.) When activated, the device explodes in a short radius with needlelike crystal shards, inflicting damage equal to the cypher level.')
        elif cypher_roll == 274:
            print('Neuron Disruptor Level: ', level,' + 4 Usable: A metal cylinder with several buttons and dials Effect: When activated, the device releases a pulse that travels out to a 1-mile (2 km) radius. All living things in the area whose level is lower than the cypher level become catatonic for 28 hours.')
        elif cypher_roll == 275:
            print('Nevermind Level: ', level,' + 2 Internal: Pill, ingestible or injectable liquid Wearable: Earring, ring, circlet Effect: The wearer’s mind can’t be telepathically sensed or contacted for 28 hours. If the wearer has telepathic abilities or psychic attacks, they’re inaccessible. On the other hand, during this period, defense rolls against all kinds of psychic and mental attacks are modified by two steps to the wearer’s benefit.')
        elif cypher_roll == 276:
            print('Numbing Oil Level: ', level,' Wearable: Gloves that secrete oil Usable: Small flask of oil Effect: Skin touched by this oil instantly loses almost all sensitivity for one round. This makes things like pickpocketing or surreptitious injections far easier (provides two assets to such actions). Once used, the oil remains active on the glove or applicator for ten minutes.')
        elif cypher_roll == 277:
            print('Numenera Analyzer Level: ', level,' Internal: Brain implant Wearable: Eyeglasses, goggles, helmet Usable: Small mechanical device Effect: Automatically identifies all cyphers and artifacts within immediate range.')
        elif cypher_roll == 278:
            print('Numenera Net Level: ', level,' + 2 Usable: A square of fine mesh Effect: Before this device can be activated, at least three cyphers must be activated within a short distance of it. Once this occurs, the net becomes charged for 28 hours. The next time the user uses a cypher while in possession of the net, he can transfer energy from the net to the cypher so that the cypher can be used one additional time.')
        elif cypher_roll == 279:
            print('One Perfect Cut Level: ', level,' + 4 Usable: Knife, dagger, or similar blade Effect: A user can use the blade to cut through 5 feet (2 m) of any material it touches one time. If used as a weapon, the cypher deals damage equal to the cypher level and ignores Armor.')
        elif cypher_roll == 280:
            print('Orbital Armor Level: ', level,' Usable: Three small clear balls attached to each other with stretchy synth. One ball has a simple push button. Effect: When activated and thrown into the air, the balls set up an orbit around the user, protecting her from incoming piercing, striking, or other physical damage for ten minutes. The device provides Armor equal to the cypher level, but it doesn’t protect against Intellect damage. Activation is an action.')
        elif cypher_roll == 281:
            print('Orbital Launcher Level: ', level,' + 4 Wearable: Glove of synth Usable: Small handheld device Effect: One unanchored item within immediate range that weighs no more than 50 pounds (23 kg) is launched upward at a chosen angle with a steady, sustained velocity that sends the object into the void over the course of several hours. If the cypher is used underground or directed to launch the item toward some sort of barrier, the cypher doesn’t activate.')
        elif cypher_roll == 282:
            print('Organ Patch Level: ', level,' Usable: Complicated handheld device with control panel Effect: The device is used to take a sample of the user’s skin. The user can set the control panel to choose a single organ he would like to regrow (typically something the size of an ear, a finger, a toe, or an eyeball). Shortly thereafter, the device produces a strip about 4 inches by 2 inches (10 cm by 5 cm) of a sticky, fleshlike substance that the user places on his arm or leg. In 28 hours, he has a newly grown organ. Once the organ is fully grown and properly placed, it self-sticks and begins to grow connections to the user’s body. If allowed to attach for 28 hours without taking damage, the new organ becomes permanent.')
        elif cypher_roll == 283:
            print('Ostracized Vapor Level: ', level,' Wearable: Smoking mask Usable: Electronic smoking implement Effect: Allows the user to inhale a potent chemical that changes his body chemistry for ten minutes, causing him to give off pheromones that have a variety of effects. The GM should roll d100 ahead of time to determine the effect: 01–50 Makes the user smell like prey to the closest nonhuman creature (within long range) 51–75 Makes the user smell like a predator to the closest nonhuman creature (within long range) 76–00 Makes the user smell exactly like the closest nonhuman creature (within long range)')
        elif cypher_roll == 284:
            print('Overwatch Defender Level: ', level,' + 4 Usable: Sphere on a tripod Effect: Once activated, this device functions for 28 hours. If a creature with hostile intent comes within long range, the device creates a force field around itself (and anything nearby) that encapsulates an immediate radius. This force field has 100 health; anyone wishing to get in or out of the field must batter their way through. It lasts until destroyed or for one hour, whichever comes first. Once the force field is down, the device is no longer active.')
        elif cypher_roll == 285:
            print('Overwatch Slayer Level: ', level,' + 3 Usable: Sphere on a tripod Effect: Once activated, this device functions for 28 hours. If a creature with hostile intent comes within long range, the device immediately fires a blast of energy that inflicts damage equal to the cypher level. It continues to fire, once per round, for a number of rounds equal to the cypher level. Once the device is done firing, it is no longer active.')
        elif cypher_roll == 286:
            print('Pain Inverter Level: ', level,' Internal: Pill, ingestible liquid, inhalable powder Usable: Injector Effect: For one hour after activation, whenever the user takes damage, she has an asset for her next roll made before the next round ends.')
        elif cypher_roll == 287:
            print('Panoramic Capture Ball Level: ', level,' Usable: Synth ball about 6 inches (15 cm) in diameter, with an electronic device inside and a series of glass lenses Effect: When the user throws the ball into the air and it reaches its peak, it records a picture through each of its 1d20 + 5 lenses, capturing them all on a screen in a single panoramic image.')
        elif cypher_roll == 288:
            print('Parous Cypher Ball Level: ', level,' Usable: Synth ball about 6 inches (15 cm) in diameter, with a large, sealable slit in the side Effect: The parous ball can hold one cypher (as long as it is no larger than a typical handheld device). Once the cypher is sealed in the ball, it must remain there for 28 hours. At that point, the cypher is released. Thereafter, for a number of hours equal to the cypher level, the ball releases exact duplicates of the cypher, one per hour. While the original cypher is in the ball, it doesn’t count against the character’s cypher limit. The duplicates do not count against the character’s limit until all duplicates are expelled.')
        elif cypher_roll == 289:
            print('Parous Oddity Box Level: ', level,' Usable: Synth box about 6 inches (15 cm) square, with a large, sealable seam along one side Effect: The parous box can hold one oddity (as long as it is no larger than a typical handheld device). Once the oddity is sealed in the box, it must remain there for 28 hours. At that point, the oddity is released. Thereafter, for a number of hours equal to the cypher level, the box releases a random oddity, one per hour. Each new oddity is different from the one that was originally put in the box.')
        elif cypher_roll == 290:
            print('Perma-Damp Level: ', level,' + 4 Usable: Spray canister Effect: Coats something that can fit within a 5-foot (2 m) cube with gel. The gel remains damp for ', level,' hours. Anything covered by the gel has Armor equal to the cypher level against corrosive, electrical, and fire damage. When the effect ends, the gel grows and becomes spongy, like cake. It provides bland nourishment for up three human-sized characters for one day.')
        elif cypher_roll == 291:
            print('Permanent Handle Level: ', level,' Usable: Handle-shaped metal and synth piece Effect: When activated, this device permanently bonds (on a molecular level) to whatever it touches, giving that object a handle. It inflicts damage equal to the cypher level to any living creature it bonds to.')
        elif cypher_roll == 292:
            print('Photon Igniter Level: ', level,' + 4 Wearable: Wristband Usable: Handheld device Effect: Emits a beam at one target within long range. If the beam strikes the target, it changes how the target interacts with light energy for one minute. Until the effect wears off, it inflicts damage based on the level of light to which the target is exposed at the start of each round. Light inflicts 3 points of damage, dim light inflicts 2 points of damage, and very dim light inflicts 1 point of damage. If you cobble together a photon igniter with a mini gate (task difficulty 7), you create a cypher that emits a beam at one target within long range that inflicts 8 points of damage and teleports the target in a random direction up to 20 feet (6 m) away.')
        elif cypher_roll == 293:
            print('Photonic Fabricator Level: ', level,' + 2 Usable: Complex handheld device Effect: Creates one item of solidified light (user’s choice) anywhere within immediate range. The item cannot have moving pieces and must normally be made from a rigid material. For example, a user could create a broadsword, ladder, or shield, but not a backpack, buzzer, or bow. The item emits dim light in a short radius and lasts for 28 days before fading away.')
        elif cypher_roll == 294:
            print('Photonic Hand Level: ', level,' + 2 Wearable: Wristband projector (long range) Usable: Handheld projector (long range) Effect: Creates a glowing copy of the user’s hand at a spot within range. The hand is 10 feet (3 m) tall and made from solid light. When activated, the hand attacks a target within immediate range of it. The hand inflicts 4 points of damage and prevents the target from moving for one minute. While held in this way, the target has +2 to Armor.')
        elif cypher_roll == 295:
            print('Photonic Smasher Level: 1d10 Wearable: Wristband projector (short range) Usable: Handheld projector (short range) Effect: Creates a glowing bludgeon about 5 feet (2 m) tall that floats in the air in an open space within range. When the bludgeon appears, it immediately attacks a target within short range of it and, if it hits, inflicts 4 points of damage. The bludgeon remains for one minute, and whenever the user takes an action, he can move the bludgeon a short distance and attack with it.')
        elif cypher_roll == 296:
            print('Piezoelectric Engine Level: ', level,' + 2 Wearable: Medallion, headband with small mechanical disc Usable: Handheld device Effect: Creates an invisible energy barrier in a short radius from the device that lasts for one hour. The barrier moves with the device. The barrier converts any sound that reaches it into light. Soft noises cause the barrier to emit very dim light out to a short distance, normal conversation produces dim light out to a short distance, and loud noises produce light out to a long distance.')
        elif cypher_roll == 297:
            print('Pain Editor Level: ', level,' + 1 Usable: Small metallic disk Effect: When applied to a creature’s head, the disk immediately unleashes microfilaments that enter the brain. Within five minutes, the microfilaments release a chemical compound that provides a decreased sensation of pain. Adds 1 to the creature’s Might Pool for one hour.')
        elif cypher_roll == 298:
            print('Portable Biolab Level: ', level,' Usable: Glass orb Effect: Inside the orb is a complex, self-sustaining ecosystem that creates a useful compound, plant, or creature. When the glass is broken, the lab-produced item becomes available to the user. Although the creation inside could be almost anything, common options include: 01–10 Inhalable gas that allows the user to see in complete darkness as if it were daylight for one hour 11–30 Bioluminescent grubs that, when eaten, cause the user’s skin to glow green for one hour 31–40 Drinkable purple liquid that adds 5 to the Pool of the user’s choice for one hour 41–50 Orange-petaled flower that increases stamina when eaten, adding 1 to the user’s Might Edge for one hour 51–75 Red speckled mushroom that, when licked, causes the user’s mind to open, decreasing the difficulty of all skills related to perception, telepathy, and telekinetics by one step for 28 hours. 76–00 Blue-green moss that, when rubbed on skin, makes the skin tacky and sticky. The difficulty of all tasks elated to keeping a good grip (including climbing, balancing, and lockpicking) is decreased by one step for 28 hours.')
        elif cypher_roll == 299:
            print('Portable Steed Level: ', level,' + 2 Usable: Complex device Effect: The box unfolds into a mechanical steed. The steed is a level 3 creature that is large enough to carry two human-sized riders. The steed serves for seven hours and then shatters into ', level,' oddities.')
        elif cypher_roll == 300:
            print('Portable Vortex Level: ', level,' + 4 Usable: Small, disk-shaped device Effect: One round after activation, the device breaks apart and creates a cyclone. The cyclone is 30 feet (9 m) across at its base, 90 feet (27 m) tall, and 60 feet (18 m) across at the top. When it forms, it sets off in a direction away from the user, traveling a long distance before it dissipates. As it moves, the vortex inflicts damage equal to half its level to anything it touches. The vortex is strong enough to pick up creatures and objects not anchored in place that weigh up to 500 pounds (227 kg) and throw them a long distance away, which inflicts damage equal to half the vortex level when the target lands.')
        elif cypher_roll == 301:
            print('Portal Ring Level: ', level,' + 4 Usable: Small metallic ring Effect: The cypher automatically affixes itself to any flat surface on which it is placed. It instantly widens until it reaches 5 feet (2 m) in diameter or until the ring reaches an edge, at which point it stops expanding. The surface inside the ring vanishes, opening a hole through the material or to a depth of 5 feet (2 m).')
        elif cypher_roll == 302:
            print('Power Siphon Level: ', level,' + 1 Usable: Handheld device Effect: Transfers power from one device to another. This device can drain power from one cypher to fuel another that has been used but is still intact, or from one artifact to recharge another that has been depleted.')
        elif cypher_roll == 303:
            print('Prismatic Field Projector Level: ', level,' + 3 Usable: Large device Effect: To be activated, this device must be placed on level ground. It creates a field of scintillating force around the user that provides Armor equal to the cypher level. However, the device can’t be moved once activated, which means the user can’t move from where she stands. The force field lasts for ten minutes.')
        elif cypher_roll == 304:
            print('Projectile Module (Homing) Level: ', level,' + 1 Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 4 task) that fires solid projectiles, like a slugspitter or a compactor. Once attached, it no longer counts against a character’s cypher limit. The projectile(s) of the cypher or artifact it is attached to now hone in on the desired target, reducing the difficulty of the attack roll by one step. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 305:
            print('Projectile Module (MindBlasting) Level: ', level,' + 1 Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 4 task) that fires solid projectiles, like a slugspitter or a compactor. Once attached, it no longer counts against a character’s cypher limit. The projectile(s) of the cypher or artifact it is attached to now are ghostly psychic missiles that inflict Intellect damage rather than normal damage, and they ignore Armor. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 306:
            print('Projectile Module (Poison) Level: ', level,' + 1 Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 4 task) that fires solid projectiles, like a slugspitter or a compactor. Once attached, it no longer counts against a character’s cypher limit. The projectile(s) of the cypher or artifact it is attached to now also carry a poison that inflicts 4 points of Speed damage that ignores Armor. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 307:
            print('Projectile Module (Teleport) Level: ', level,' + 1 Usable: Small metal and synth plate Effect: This cypher must be attached to another cypher or artifact (a level 4 task) that fires solid projectiles, like a slugspitter or a compactor. Once attached, it no longer counts against a character’s cypher limit. The projectile(s) of the cypher or artifact it is attached to now teleport through barriers to get to the target, but the target must be seen. The attack ignores Armor and can even pass through solid barriers. The module cannot be removed from the device without destroying both the module and the device.')
        elif cypher_roll == 308:
            print('Psychic Focus Level: ', level,' Internal: Pill, injection Wearable: Headband, crystal placed on temple or forehead Usable: Handheld device Effect: Increases the intensity of the user’s next mental ability, such as a mental Onslaught esotery or the use of psychokinesis. Damaging attacks inflict 2 additional points of damage, and other abilities have double the normal range or duration (user’s choice).')
        elif cypher_roll == 309:
            print('Purgspitter Level: ', level,' + 2 Usable: Handheld device Effect: This device spits out a tentacled creature called a purg up to long range. The purg is a level 2 creature that adheres to whatever it strikes, producing a keening screech and a strong odor for 28 hours. Grasping with powerful tentacles and an even more powerful natural adhesive, the purg is difficult to remove. To do so, the purg must be slain and scraped away, a task with a difficulty equal to the level of the device. If the purg is slain but not removed, the screech ends, but the stench remains.')
        elif cypher_roll == 310:
            print('Purity Level: ', level,' Usable: Liquid in a metal or glass canister Effect: Pouring the canister’s contents into another liquid or onto solid material instantly eradicates any toxins, poisons, diseases, or other contaminants in that liquid or material. The purity liquid also prevents the target from being contaminated by such things for 28 hours.')
        elif cypher_roll == 311:
            print('Pushpull Beam Level: ', level,' + 3 Usable: Handheld device Effect: This device emits a beam up to long range. The user chooses whether the beam will push or pull. Either way, an unsecured object or creature will be moved a long distance toward or away from the device with the strength of ten humans. The beam lasts for one round.')
        elif cypher_roll == 312:
            print('Pyrolytic Pulser Level: ', level,' + 2 Wearable: Wristband projector, headband projector, shoulder- or arm-mounted launcher (long range) Usable: Handheld projector Effect: Sends out a series of rapid-fire encapsulated heat pellets up to 200 feet (61 m). The pellets burst into flame upon contact, causing disintegration damage equal to the cypher level to all creatures within immediate range of the explosion.')
        elif cypher_roll == 313:
            print('Quadraturin Level: ', level,' Usable: Gel in a tube Effect: This substance warps space, expanding it. When applied to a surface, it expands the space around that surface—for example, making an interior room larger. The tube has enough gel to cover an area of about 10 feet by 10 feet by 10 feet (3 m by 3 m by 3 m), expanding it into an area of about 50 feet by 50 feet by 50 feet (15 m by 15 m by 15 m).')
        elif cypher_roll == 314:
            print('Radiant Web Level: 1d10 Usable: Handheld projector (short range) Effect: Creates a mesh of invisible light across a plane up to 10 feet (3 m) wide and tall. The paper-thin mesh inflicts damage equal to the cypher level to any creature that passes through it. (A target can take this damage only once per round regardless of how many times it passes through the mesh.) Anything reduced to 0 health by the mesh is sliced into pieces that are 1 inch (3 cm) wide and tall.')
        elif cypher_roll == 315:
            print('Ranged Protector Level: ', level,' Wearable: Two rings, circlets, bracelets, or belts Effect: This cypher comes as a pair of items, but one is the master of the other. When the master item is activated, the creature wearing the other item is surrounded by a force shield that provides Armor equal to the cypher level for ten minutes. While one character could wear both items, many people use ranged protectors to put a shield around a pet, a child, or a defenseless charge who cannot normally activate a cypher. The master item can be activated from any range to surround its counterpart with the protective shield.')
        elif cypher_roll == 316:
            print('Ranged Retaliator Level: ', level,' + 2 Wearable: Two rings, circlets, bracelets, or belts Effect: This cypher comes as a pair of items, but one is the master of the other. When the master item is activated, the other item pulses with electricity that inflicts damage equal to the cypher level. The master item can be activated from any range to damage the wearer of the other item.')
        elif cypher_roll == 317:
            print('Ray Emitter (Molecular Rearrangement) Level: ', level,' + 3 Wearable: Wristband projector, shoulder- or arm-mounted launcher (long range) Effect: Emits a ray that causes random molecular rearrangement on a small scale. The ray inflicts damage equal to the cypher level at a range of 200 feet (61 m). Wounds inflicted on living creatures are twisted and bizarre, with tissue literally turned into another substance, another state (liquid or gas), or even energy. Damage to inorganic objects is similarly strange.')
        elif cypher_roll == 318:
            print('Reanimator Level: ', level,' + 4 Internal: Injectable liquid Wearable: Disk with a strap to be fastened to the head Usable: Metal bolt injected into the head Effect: If a mammalian or reptilian creature has not been dead for more than 28 hours, this device restores a basic semblance of life by reactivating its nervous system. The creature does not have the knowledge, skills, personality, or memories of its former self. It’s just a mindless shell that can perform basic motor functions: walk, run, or otherwise move; pick up and hold objects; and make crude attacks. The reanimated creature obeys the verbal commands of the user and operates for one hour before collapsing. Although the GM makes the final call, small creatures are typically level 1, and others are level 2.')
        elif cypher_roll == 319:
            print('Regrow Level: ', level,' Usable: A metal canister filled with bright blue ointment Effect: When the entire contents of the canister are smeared on the stump of a missing limb or another body part, the ointment causes the body to regrow the missing part. The user must roll a d6: on a 1 or 2, the body part is half the normal size; on a 3 or 4, it’s normal size; on a 5 or 6, it’s twice the normal size. Regardless of the result, the body part is the same color as the ointment.')
        elif cypher_roll == 320:
            print('Rejuvenating Shield Level: ', level,' + 2 Internal: Injector Wearable: Ring, bracelet Usable: Small handheld device Effect: When activated, the device surrounds the user with a field of white energy that remains for ten minutes. During this time, the user gains +2 to Armor. Further, during each of the first ten rounds, she regains 1 point to one of her stat Pools (her choice each round; cannot exceed normal Pool maximums).')
        elif cypher_roll == 321:
            print('Rejuvenation Field Level: ', level,' + 2 Usable: Handheld device Effect: This device projects a nimbus of energy that fills the immediate area. All characters within the area regain a number of points equal to the cypher level in one Pool. Roll a d100: 01–50 Might Pool 51–75 Speed Pool 76–00 Intellect Pool Creatures and NPCs in the area regain the points to their health.')
        elif cypher_roll == 322:
            print('Remake Level: ', level,' + 2 Internal: Pill, injectable liquid, inhalable powder Wearable: Dermal patch Usable: Injector Effect: The user can permanently move up to 4 points from one stat Pool to another.')
        elif cypher_roll == 323:
            print('Remote Scarificator Level: ', level,' + 2 Wearable: Wristband projector, shoulder- or arm-mounted launcher (long range) Effect: Shoots out a device that extends twelve blades upon hitting its target. If the scarificator hits a living creature, it does damage equal to the cypher level and causes the creature to bleed slowly for up to one hour. If it hits nonliving material, it shaves off strips of the material and creates a permanent mark.')
        elif cypher_roll == 324:
            print('Remote Sensorium Level: ', level,' Usable: Moldable synth Effect: Allows the user to create a replica of one of her sensory organs and place it in a remote location up to 1 mile (1.6 km) away, thus enhancing that particular sense. She can see, hear, touch, taste, or smell things that are within short range of the replicated organ as if she were also within short range.')
        elif cypher_roll == 325:
            print('Reproductive Bud Level: ', level,' + 1 Usable: An expandable organic sac Effect: This organic device allows a character to reproduce asexually. First the sac is grafted onto a character for 28 hours. Then it is removed and placed in a warm, moist environment. Half a year later, it bursts open and reveals a living, infant clone of the character.')
        elif cypher_roll == 326:
            print('Repulsion Field Level: ', level,' + 2 Wearable: Belt, harness, amulet Effect: Emits a field around the user that lasts for one minute. Whenever he would take damage from a physical object such as a weapon or an arrow, the field emits a pulse of energy that inflicts 2 points of ambient damage to everything within immediate range, and then the user moves an immediate distance away from the source of the damage.')
        elif cypher_roll == 327:
            print('Reset Level: 10 Wearable: Amulet, headband, helmet Usable: Small handheld device Effect: Utterly erases the last five minutes of time. Everything goes back to the way it was and no one except the user remembers what happened during the lost five minutes.')
        elif cypher_roll == 328:
            print('Revealer Dart Level: ', level,' Wearable: Wristband projector (short range) Usable: Handheld projector (long range) Effect: The device fires a metal dart at a single target within range. Upon striking the target, the device flashes bright red and issues a soft ringing that lasts for one hour. If the target tries to remove the dart, it delivers a current of electricity that inflicts 3 points of damage that ignores Armor. Until the effect ends, the user has an asset on all attack rolls against the target.')
        elif cypher_roll == 329:
            print('Reviver Level: ', level,' Internal: Injectable liquid, pill Effect: The device causes an unconscious, sleeping, or comatose character to wake up immediately, completely alert. This treatment does not repair damage or cure illness.')
        elif cypher_roll == 330:
            print('Root Spike Level: ', level,' Wearable: Wristband or headband projector (short range) Usable: Handheld projector (long range) Effect: Shoots a single thorn at a target within range. The thorn inflicts 2 points of damage and wraps the target in a mesh of roots and vines that anchor it in place for one minute or until it or another creature uses an action to free it.')
        elif cypher_roll == 331:
            print('Rynrad Skin Level: ', level,' Wearable: Full-body skinsuit designed to be worn over armor, complete with hood, mask, and chemical bladder Effect: When fully enclosed in a rynrad skin, the wearer pushes the release button on the chemical bladder, and the suit begins to seep invisible streams of rynrad poison into the surrounding area. Rynrad poison does nerve damage (equal to the cypher level) to all living creatures in long range for two rounds. The suit protects the wearer from the effects of all poisons and grants +1 to Armor against piercing attacks for one hour.')
        elif cypher_roll == 332:
            print('Sanity Assassin Level: ', level,' + 1 Internal: Pill, ingestible or injectable liquid Wearable: Lipstick, false fingertip, ring with needle Usable: Injector Effect: This is a poison or drug that drives the affected target mad for 28 hours. The madness can take many forms (usually at least somewhat dependent upon the individual), but it can include hallucinations, paranoia, hearing voices, or simply a skewed outlook on reality. The madness is very strong and affects most or all of the target’s actions, but it is not entirely debilitating.')
        elif cypher_roll == 333:
            print('Screaming Madness Level: ', level,' + 2 Usable: Small red polygon Effect: One round after activation, this device emits a loud, piercing noise. Living creatures within immediate range suffer 2 points of Intellect damage (ignores Armor), and for all those affected, the user makes a second roll. Those affected by the second roll are driven mad temporarily. Roll d100 to determine the expression of this insanity, which lasts for one minute. 01–20 Run off in a random direction for a short distance and then attempt to hide 21–30 Attack the nearest creature with whatever means is closest at hand 31–60 Do nothing but cover ears and scream 61–80 Fall down and roll on the ground 81–90 Drop whatever is held and cover eyes and face with hands 91–00 Activate most powerful available ability, cypher, or artifact that is not an attack (if none, roll again) and then hide The noise continues for five rounds, and the damage and madness continue each round, affecting those that remain in or enter the area.')
        elif cypher_roll == 334:
            print('Second Sight Symbiote Level: ', level,' Internal: Inhalable powder Usable: Injector Effect: Activation inflicts 1 point of damage as the symbiote establishes itself in the user’s system. For the next hour, the user has an asset for all perception-based tasks.')
        elif cypher_roll == 335:
            print('Secret Finder\nLevel: ', level + 4,'Form: Handheld device Effect: Tapping into the datasphere, the user names one place, creature, or object and immediately learns his distance from the thing named and the direction he must travel to reach it.')
        elif cypher_roll == 336:
            print('Secret Pocket Level: ', level,' Wearable: Shirt, jacket, pants Effect: The article of clothing has a special pocket. The pocket’s opening connects to an extradimensional space that’s about the size of a 3-foot (1 m) cube. The opening appears to be a normal pocket, but it can stretch to permit entry by an object capable of fitting into the extradimensional space. Placing an object in the space causes the pocket to shut until the user takes an action to open it. While the pocket holds an object, it cannot be opened by anyone except the person who placed the object inside it. Anyone inspecting the clothing finds no sign that the pocket or object exists. Furthermore, the clothing’s weight is unchanged regardless of the weight of the object placed in the pocket. When the user removes the object from the pocket, the pocket closes behind it and the space collapses.')
        elif cypher_roll == 337:
            print('Security Clamp Level: ', level,' + 2 Usable: Mechanical device Effect: When activated and placed on an object that can be opened or closed, the device prevents the object from opening by normal means. The only way to open the object is to destroy it.')
        elif cypher_roll == 338:
            print('See You Goggles Level: ', level,' Wearable: A near-matching set of goggles or glasses, each with a tiny mechanical viewer on the side Effect: When two people wear these goggles at the same time and activate the viewers, each can see what the other person sees. There is no range restriction, as the devices seem to connect to each other via some lingering element of the datasphere. The goggles work for a number of hours equal to the cypher level.')
        elif cypher_roll == 339:
            print('Seed Boat Level: ', level,' Usable: A small seed or pellet Effect: Dropping the cypher into a pool of water at least 10 feet (3 m) in diameter causes the device to absorb the water and instantly grow into a flat-bottomed boat. The boat is large enough to hold ten human-sized creatures.')
        elif cypher_roll == 340:
            print('ZERO POINT FIELD\nLevel: ', level + 3,'\nEffect: Renders an inanimate object outside the effects of most energy for one minute. This means the object cannot be harmed, moved, or manipulated in any way. It remains in place (even in midair).')
        elif cypher_roll == 341:
            print('Sense Record Level: ', level + 2,'Wearable: Helmet, goggles Usable: Small metal and glass device Effect: The device emits a bright flash and then records ten seconds of images, sounds, and smells of everything within short range. At any time thereafter, the user can activate the device again to replay the recording. The device overlays its surroundings with a hologram of what it recorded. The device can replay the recording only once.')
        elif cypher_roll == 342:
            print('Sensory Disruptor Level: ', level + 2,'Wearable: Wristband projector (close range) Usable: Handheld projector (close range) Effect: Shoots out a single projectile that contains a bundle of nanowires. Upon contact with a living creature, the nanowires unfold and inject themselves into the skin, causing an instant sensory response within the target. Roll d100 for the effect: 01–10 Synesthesia: The target senses sound as light and color as taste, causing disorientation. The target loses his next two actions. 11–30 Perceptual deprivation: The target’s visual senses are overwhelmed, causing temporary blindness. The difficulty of all tasks attempted by the target is increased by one step. The effect lasts for ten minutes. 31–40 Ultrasensation: The target’s senses overload, causing a heightened response to stimuli. On his next round, he attempts to flee. 41–50 Fear override: The target’s senses are dulled, causing him to ignore pain and fear. He rushes in, increasing the difficulty of all actions by one step. The effect lasts for ten minutes. 51–75 Off balance: The target’s sense of balance is disrupted, causing him to fall prone for one round. 76–00 Hallucinations: The target experiences an auditory or visual hallucination, causing him to lash out at nothing and miss all attacks during his next action.')
        elif cypher_roll == 343:
            print('Shadow Net Level: ', level + 2,'Wearable: Wristband projector (long range) Usable: Square of dark cloth Effect: Causes the area within short range to become darkness for one hour. The darkness negates any light that is brought into the area or that would otherwise shine into the area.')
        elif cypher_roll == 344:
            print('Shrink Ray Level: ', level + 2,'\nUsable: Ray projector (short range) Effect: Shrinks one human-sized or smaller creature or object within range to onetwentieth of its normal size. It remains at this size for 1d20 hours. For an affected creature, the difficulty of all Might-related tasks is increased by two steps.')
        elif cypher_roll == 345:
            print('Shudder Stones Level: 1\nUsable: Smooth piece of brittle stone\nEffect: Breaking the device activates it. The two halves vibrate when they are separated by more than 10 feet (3 m) and continue to vibrate until they are brought back to within this distance or for 28 hours, after which time the device ceases to function.')
        elif cypher_roll == 346:
            print('Sidestep Portal Level: ', level,' Wearable: Cloak, cape, bodysuit Usable: Piece of cloth Effect: The user steps sideways and disappears into an extradimensional space, where she can remain for as long as she wishes. The space is an empty void of pale grey light in which the user floats. She can perceive nothing outside this space, and nothing outside it can perceive her. She experiences the passage of time and may act normally while in the space, though it cannot connect to the datasphere or interact with the world outside in any way. When the user emerges from the space, she returns to the spot she left or an open space nearest to that spot, and the extradimensional space vanishes. Anything left in the space is lost.')
        elif cypher_roll == 347:
            print('Signal Detector Level: ', level,' Wearable: Monocle, spectacles, helmet with visor Usable: Small handheld device Effect: Grants the user an asset on his Intellect roll to find cyphers and, on a success, allows him to roll a d6 and add the number to the total number of cyphers found.')
        elif cypher_roll == 348:
            print('Sleep Watch Level: ', level,' Wearable: A flat insect with seven legs that must be fitted onto the user’s face Effect: The insect sinks a dozen threads into the user’s skull until they reach his brain. The device remains active for 28 hours. During this time, the user perceives through the bug and has an asset for any task to perceive. If he sleeps during this time, he can wake up whenever he chooses.')
        elif cypher_roll == 349:
            print('Sleeper Spray Level: ', level,' Wearable: Wrist-mounted sprayer (immediate range) Usable: Spray canister Effect: This aerosol compound causes any living creatures that breathe it in to fall asleep instantly. The effect lasts for ten minutes.')
        elif cypher_roll == 350:
            print('Smart Bugs Level: ', level,' Internal: Pill or tablet (dissolved in liquid) that releases genetically designed microbes Effect: Upon ingestion, the microbes enter the body and begin to do the task they were created for: targeting and enhancing a specific part of the body. The GM should roll d100 ahead of time to determine the effect:')
        elif cypher_roll == 351:
            print('Brain bugs: The user experiences a heightened mental acuity that makes it feel like her brain is tingling. Grants +2 to her Intellect Edge for one hour. 51–75 Fast-twitch bugs: The user’s muscles begin to quickly tighten and release, creating the sensation that her muscles are jumping beneath her skin. Grants +2 to her Speed Edge for one hour. 76–00 Meat bugs: A few seconds after ingesting the microbes, any lingering sense of exhaustion or pain slips away from the user’s muscles. Grants +2 to her Might Edge for one hour.')
        elif cypher_roll == 352:
            print('Snake Eye Level: ', level,' Usable: A synth cable 50 feet (15 m) long Effect: The eyelike sensor on one end of this cable allows anyone holding the other end to see what it sees. Lasts for one hour.')
        elif cypher_roll == 353:
            print('Snake in the Grass Level: ', level,' Usable: Mechanical homing automaton about 3 feet (1 m) long and 6 inches (15 cm) in diameter Effect: The device can safely and secretly carry messages or other small objects across long distances and then return home undetected.')
        elif cypher_roll == 354:
            print('Snow Lens Level: ', level,' Internal: Eye drops, eye injector, eye smear Wearable: Disposable goggles, glasses, glass contact lenses, full face mask with special lenses Effect: Protects wearer from snowblindness, extremely bright light, and other light- or vision-based damage. User gains +1 to Armor against these types of attacks for 28 hours.')
        elif cypher_roll == 355:
            print('Solar Reviver Level: ', level,' Usable: Sticky, bendable patch Effect: When applied to a device such as a cypher or an artifact during daylight hours, the patch increases the effect of the next use of the device (such as providing additional damage or healing equal to the patch’s level, increasing the distance from close range to long range, and so on). When applied to an expired device, the patch repowers it once, allowing it a single additional use.')
        elif cypher_roll == 356:
            print('Solid Light Gloves Level: ', level,' Wearable: Ring, bracelet Effect: The user’s hands are sheathed in gloves made of solid light for one hour. The user can touch or handle dangerous substances as though he had 12 Armor. This protection does not apply to combat situations.')
        elif cypher_roll == 357:
            print('Solid Light Retribution Level: ', level + 1,'\nWearable: Bracelet, ring Usable: Handful of metal spheres Effect: When activated, metal spheres fly into the air and project a large shield of solid light that protects the user as a normal shield (reducing the difficulty of Speed defense rolls by one step). Anyone who attacks the user and misses strikes the shield instead, creating a backlash of energy that inflicts 4 points of Intellect damage (ignores Armor). It lasts for one hour.')
        elif cypher_roll == 358:
            print('Sound Amplifier Level: ', level,' Wearable: Full bodysuit, headband, metallic disk that hangs from a chain Usable: Small handheld device Effect: Amplifies sounds within immediate range so they can be heard up to 1 mile (2 km) away. The amplified noise lasts for a few minutes. Until the effect ends, everyone within immediate range of the device becomes deafened while it emits sounds.')
        elif cypher_roll == 359:
            print('Sparkle Level: ', level + 4,'\nUsable: Handheld device Effect: Causes ', level,' glowing lights to shoot from the end of the device, travel a long distance, and explode in a flash of brilliant colors that blinds anyone in an immediate radius for one minute.')
        elif cypher_roll == 360:
            print('Spatial Distorter Level: ', level,' Wearable: Harness, necklace, helmet Usable: Handheld device Effect: Emits a field around the user that lasts for one minute. The field makes her appear to be far away to creatures that are more than an immediate distance from her. This distortion decreases the difficulty of her Speed defense rolls by one step when she is attacked by creatures at that distance.')
        elif cypher_roll == 361:
            print('Speed Heal Level: ', level + 2,'\nInternal: Pill, ingestible liquid Usable: Injector Effect: At the end of each minute for the next hour, the user adds 1 point to his Might Pool, up to the Pool’s maximum. This is especially useful for someone who is taking frequent or long-term damage.')
        elif cypher_roll == 362:
            print('Spike Balls Level: ', level + 2,'\nUsable: A bag or other container filled with 100 black marbles Effect: Pouring the balls from the container causes them to roll across the ground to a point you choose within short range. The balls then spread an immediate distance from that point, sprout spikes, and disappear. The balls inflict 1 point of damage to anything that moves across the ground they cover. They last for a number of hours equal to the cypher level.')
        elif cypher_roll == 363:
            print('Spine Spheres Level: ', level,' Usable: Clear synth tube filled with living, spiny spheres Effect: Each of these bioengineered, poisonous devices is about the size of a thumbnail. Once activated, they scatter across the floor, covering an area of immediate radius, and then become invisible. Anything passing through the area steps on at least one sphere, and those who are affected by the poison suffer Speed damage equal to the cypher level, fall prone, and cannot stand for one round.')
        elif cypher_roll == 364:
            print('Standstill Level: ', level,' Wearable: Wristband projector (close range) Usable: Handheld projector (close range) Effect: This device projects an electric shock that causes a living target’s muscles to seize up, rendering him immobile for one round.')
        elif cypher_roll == 365:
            print('Stasis Field Emitter Level: ', level + 2,'\nWearable: Wristband Usable: Flat, round synth device Effect: Emits a wave of energy at a target within short range. The energy inflicts 4 points of radiation damage and, if the target’s level is equal to or lower than the cypher level, the target cannot take actions for one round.')
        elif cypher_roll == 366:
            print('Stealthy Serpent Level: ', level + 2,'\nUsable: Metal disk that is actually a tightly coiled strand Effect: When activated, this cypher uncoils to form a small metal serpent about 2 feet (0.6 m) long. It remains animate for one round per cypher level. It can be given a single command that must be something it can accomplish within its allotted time. Once the command is carried out, the serpent deactivates, even if its time is not yet up. It is a level 2 creature, but it moves with stealth as level 5. It can bite once for 2 points of damage and inject a poison that inflicts 4 points of Speed damage (ignoring Armor) if the victim fails a Might defense roll.')
        elif cypher_roll == 367:
            print('Steel Sentinel Level: ', level + 4,'\nUsable: A 10-foot (3 m) tall featureless humanoid assembled from metal components Effect: The device activates and becomes a level 5 creature for one hour or until destroyed. The device accompanies you and follows your instructions until the effect ends. As a level 5 creature, it has a target number of 15 and a health of 15, and it inflicts 5 points of damage. If the device is reduced to 0 health, it is destroyed and the effect ends.')
        elif cypher_roll == 368:
            print('Still Field Level: ', level + 2,'\nWearable: Vest, belt, bracelet, jumpsuit Usable: Handheld device Effect: For 28 hours, the user does not register on any device that senses or tracks movement or uses sonar or similar means. A creature that relies on sonar or similar methods of sensing cannot perceive the user.')
        elif cypher_roll == 369:
            print('Stone Form Level: ', level +2,'\nInternal: Pill, ingestible liquid Wearable: Gel Usable: Injector Effect: Causes the user’s body to become a stone statue for 28 hours. While in this form, he is immune to damage inflicted by energy and has 4 Armor. He is in a catatonic state until the effect wears off.')
        elif cypher_roll == 370:
            print('Stone Guts Level: ', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: Any time within ', level,' hours after activating the device, the user can vomit the contents of his stomach anywhere within immediate range. The liquid hardens to the consistency of concrete within a few seconds of being exposed to air. The amount of vomit is enough to cover a human-sized creature. A covered target cannot move until it breaks free or someone else frees it by shattering the rocklike shell. The difficulty of this task is equal to the cypher level.')
        elif cypher_roll == 371:
            print('Stone Melt Level: ', level + 2,'\nUsable: Spray canister Effect: A quantity of stone that can fit inside a 5-foot (2 m) cube becomes sand when sprayed by this cypher.')
        elif cypher_roll == 372:
            print('Store-all Level: ', level,' Usable: Small box-shaped container with hinged lid Effect: A user can pull and stretch the box, increasing its dimensions to a maximum size of a 50-foot (15 m) cube. The container’s size can only be increased, not decreased, and once stretched out, it can never be restored to its original size. When the lid is closed, the box is watertight.')
        elif cypher_roll == 373:
            print('Stronghold Level: ', level,' Wearable: Unfolding synth harness Effect: Allows the user to lift and carry twice as much weight as normal with minimal exertion for one hour.')
        elif cypher_roll == 374:
            print('Summoning Staff Level: ', level + 3,'\nUsable: Metallic staff with a small attached cylinder Effect: This device requires two separate actions to fully activate. The first action involves the small cylinder, which has a glass lens on one end. With the cylinder, the user locates a random ultraterrestrial being (whose level is equal to or less than the cypher level) dwelling somewhere other than the Ninth World. The being becomes visible in the lens. On the next action, the user can use the staff to open a portal and pull the ultraterrestrial into this world. The ultraterrestrial cannot resist, but once it arrives, it is not automatically compelled to do anything. Unless it can return under its own power or through some other means, it is in this world to stay.When the user finds an ultraterrestrial in the first step of this process, he can choose not to bring it into this world, but he cannot use the device to find another being.')
        elif cypher_roll == 375:
            print('Swarm Herder Level: ', level,' Wearable: Adheres to temple and launches projectile Usable: Handheld device that launches projectile Effect: The device launches a tiny pointed capsule that moves at great speed. If it hits a living creature, it punctures the skin or exoskeleton and explodes, instantly releasing a compound of pheromones and impulsecontrolling nanites. In response, the creature attempts to round up other members of its herd or group and move them away from combat to an area of perceived safety. If the creature is solitary, the cypher has no effect (or may cause it to attempt to round up whatever other creatures are nearby, including the PCs, as though they were part of its herd). The effect lasts for ten minutes.')
        elif cypher_roll == 376:
            print('Sweeping Glove Level: ', level + 3,'\nWearable: Synth glove Effect: With a gesture (an action), the wearer can make any creatures or objects within immediate range fly backward up to 20 feet (6 m), essentially putting them in short range. Creatures affected suffer 2 points of ambient damage and are prone. The wearer can select which targets to affect. This glove functions for three rounds, during which time the wearer can perform this action each round.')
        elif cypher_roll == 377:
            print('Synth Corroder Level: ', level + 3,'\nWearable: Glove Usable: Wandlike device Effect: This device can be used in two ways. Either it can destroy a touched object made of synth that is small enough to be held in a human’s hands, or it can destroy a 4-foot-by4-foot-by-4-foot (1 m by 1 m by 1 m) area of a larger object made of synth. The object must have a level lower than the cypher level.')
        elif cypher_roll == 378:
            print('Talio’s Compass Level: ', level,' Usable: Handheld device Effect: Pinpoints a source of metal within living tissue and can draw it out. If used to remove a dangerous object (such as a projectile) from a living creature, the device restores a number of points equal to the cypher level to the creature’s Might Pool. If used to discover and remove a beneficial or benign object (such as an implant) from a living creature, the device does 2 points of damage.')
        elif cypher_roll == 379:
            print('Targeting Oculus Level: ', level + 1,'\nWearable: Mask with single glass lens Effect: When applied to a creature’s head, the mask completely envelops the head for one hour. During this time, the creature can breathe and sense normally, and all of its ranged attacks are modified by one step to its benefit.')
        elif cypher_roll == 380:
            print('Task Drone Level: ', level,' Usable: Small winged device with a tendril ending in an hand Effect: When activated, this drone flies up to a long distance and performs one simple task with its tendril arm, such as pull a lever, open a door, lift an object, or push an object. Returning to the user can be a part of the task (so the drone can go get something and return with it). The drone has the strength of a normal human and is a creature of a level equal to the cypher level, with 1 Armor. It cannot make attacks and ceases to function after it performs its single task.')
        elif cypher_roll == 381:
            print('Teleport Seal Level: ', level + 3,'\nUsable: Handheld device or crystal shard Effect: When activated, this device prevents all teleportation within 1 mile (2 km). No extradimensional gates function, and no phasing is possible in this area. The seal lasts for 28 hours.')
        elif cypher_roll == 382:
            print('Teleport Trap Level: ', level + 2,'\nUsable: Paper-thin, flexible synth disk the size of a plate Effect: When the device is activated, the next person to touch the disk is teleported to a spot designated by the user, up to a long distance away. The destination must be a place known to be open (the target cannot teleport into solid matter), but it could be 100 feet (30 m) in the air, at the bottom of a deep pool, or a similarly inhospitable place.')
        elif cypher_roll == 383:
            print('Teleporter (Mass) Level: ', level + 4,'\nWearable: Belt, wristband, ring Usable: Complex device, handheld device Effect: The user teleports herself and a number of other creatures equal to the cypher level. They can travel up to 100 × the cypher level in miles to a location she has previously visited. The group arrives safely with anything that they can carry, either individually or as a group.')
        elif cypher_roll == 384:
            print('Temporal Sheath Level: ', level + 4,'\nWearable: Belt, headband, bracelet Usable: Handheld device Effect: The user is enveloped by invisible energy for six hours. During this time, she has +1 to Armor against any type of energy attack (including those that normally ignore Armor) and is immune to any effect that would alter time, hold her in stasis, or do anything similar.')
        elif cypher_roll == 385:
            print('Tendril Gloves Level: ', level + 2,'\nWearable: Synth gloves that glow with traceries of light Effect: When the device is activated, the wearer can produce a 10-foot (3 m) tendril of solid light from each of his palms. These tendrils are prehensile and dexterous and as strong as the wearer. They can manipulate objects; wrap around, lift, and move objects; or be used as medium weapons. The tendrils remain for ten minutes.')
        elif cypher_roll == 386:
            print('Tether Level: ', level,' Usable: Handheld projector (short range) Effect: Fires a metal spike at a target within range that inflicts 2 points of damage. Then, as part of the same action, the spike shoots a second metal spike at a different target within immediate range of it that inflicts the same damage. The spikes are connected by a tether. Until either target uses an action to remove the spike, neither target can move away from the other.')
        elif cypher_roll == 387:
            print('Third Man Level: ', level,' Usable: Handheld device Effect: When activated, the device creates the perception of an unseen presence among the party. This presence provides a sense of comfort and support to all members of the group (except the one who activated the device), giving them each an asset to a task of their choosing for one hour.')
        elif cypher_roll == 388:
            print('Three-Part Alarm Level: ', level,' Usable: Handheld device Effect: When activated, three sensor pieces detach from the main device. Each piece can be placed anywhere within a half mile (1 km) of the main device. For 28 hours, if anything larger than a small dog moves within an immediate distance of one of the sensors, the main device indicates this fact and tells the user which sensor was activated.')
        elif cypher_roll == 389:
            print('Time Auger Level: ', level,' Usable: Handheld drill-like device Effect: Allows the user to “drill” through time the way that one might drill through wood. The user doesn’t move through time, nor is he able to affect the past or the future. Instead, he creates a timehole that allows him to see thirty seconds into the future for the next ten minutes. As soon as he moves his eye away from the timehole, it collapses.')
        elif cypher_roll == 390:
            print('Time Capsule Level: ', level,' Usable: A metallic container large enough to hold a human-sized creature Effect: Anything placed inside the container does not experience time’s passage for 1d20 years. At the end of this period, or if the contents are removed before then, the cypher becomes inert.')
        elif cypher_roll == 391:
            print('Time Delay Level: ', level,' Usable: Very small nodule Effect: This device can be affixed to any other cypher and activate it by timer. The user can set the timer for up to one week.')
        elif cypher_roll == 392:
            print('Tranquility Pod Level: ', level,' Wearable: Submersion hood Effect: This device wraps around the user’s head to provide a unique sensory experience, eliminating all external sounds, smells, and sights. Instead, the wearer experiences soothing sounds, soft light, and gentle vibrations. If he wears the pod for ten minutes, the experience restores a number of points equal to the cypher level to a single Pool of his choosing.')
        elif cypher_roll == 393:
            print('Transdimensional Gate Level: ', level + 4,'\nWearable: Belt with device, amulet, or ring Usable: Small handheld device Effect: This device creates a portal that leads to a different dimension, level of existence, or reality. It is automatically keyed to a specific destination determined by the GM, but a character can attempt to reorient it to another extradimensional destination that she is aware of (task difficulty equal to the cypher level). The portal is about 5 feet (2 m) in diameter and remains open for one minute, unless the user wishes it to close earlier (closing the portal is an action).')
        elif cypher_roll == 394:
            print('Transference Beam Level: ', level + 3,'\nUsable: Large handheld device Effect: This device turns the user and up to six other individuals within immediate range into energy, which is then projected (at the speed of light) as a beam to a target destination that is in line of sight. When the beam reaches its destination, the travelers are turned back into matter along with their equipment, and their Might and Speed Pools are at maximum.')
        elif cypher_roll == 395:
            print('Transformation Torque Level: ', level,' Usable: Necklace made of malleable metal and biotech elements Effect: Placing the necklace around your neck activates the device, which then sends small projections (similar to cilia) beneath the skin. These projections release a genetic compound that causes a mutation in the wearer for one hour. Additionally, the necklace houses a visage changer, which allows the wearer to hide his mutation if desired. If that’s the case, the wearer gets the effects of the mutation but others cannot see, hear, or otherwise sense the mutation. Different necklaces have different effects. Roll d100: 01–50 Causes a beneficial mutation 51–80 Causes a powerful mutation 81–90 Causes a harmful mutation 91–95 Causes a distinctive mutation 96–00 Causes a cosmetic mutation To determine the specific mutation caused by the device, GMs can choose or roll randomly on the mutation tables on page 124 in the Numenera corebook.')
        elif cypher_roll == 396:
            print('Transient Inscriber Level: ', level,' Usable: Handheld spray device or bottle and liquid brush, filled with a swarm of tiny bioluminescent, hydroponic creatures Effect: The device allows the user to write or draw a message on any living or nonliving object, covering up to 3 feet by 3 feet (1 m by 1 m). After a few minutes, the hydroponic creatures begin to dry out and their glow fades, rending the image invisible. The message or image can be seen again by adding a drop of liquid to the general surface area. This causes the creatures to glow again for about one minute before they extinguish fully.')
        elif cypher_roll == 397:
            print('Transposer Level: ', level + 2,'\nWearable: Belt with device, amulet, or ring Usable: Handheld device Effect: The user swaps positions with a creature of roughly similar size that it can see within long range.')
        elif cypher_roll == 398:
            print('True Speak Level: ', level + 2,'\nUsable: Injector Effect: When the solution is injected into a creature, that creature cannot knowingly speak a lie for one hour.')
        elif cypher_roll == 399:
            print('Truth Inducer Level: ', level + 2,'\nWearable: Glove, synth finger overlay, temporary fingertip tattoo Effect: One creature touched by the device answers questions truthfully for one minute.')
        elif cypher_roll == 400:
            print('Variable Tool Level: ', level,' Usable: Small handheld device Effect: The device becomes a mundane weapon, adventuring item, or common or rare special item for one hour.')
        elif cypher_roll == 401:
            print('Verdant Nectar Level: ', level,' Internal: Ingestible liquid Usable: Injector Effect: Causes the user’s skin to turn green for ten days. Until the effect wears off, the user does not need to eat during a day provided that he spends at least four hours in sunlight during that day. The hours need not be consecutive.')
        elif cypher_roll == 402:
            print('Vision Subjugator Level: ', level + 1,'\nUsable: Handheld device Effect: Inhibits brain function in a target within short range for one hour so that the target’s vision is affected. The user can specify one category of creatures, objects, substances, and so on that the victim cannot see. The effect  is extremely specific, so that if “humans” are selected, the victim cannot see people but would still see clothing worn, objects carried, and so on. Possible categories might include (but are not limited to): metal, vapor, water, mammals, synth, weapons, numenera, the color blue, and plants. It’s worth noting that this does not grant the victim X-ray vision. If he cannot see stone and he stands next to a stone wall, his brain creates what he sees instead out of whole cloth based on the context of what he can see. This can lead to seriously delusional behavior.')
        elif cypher_roll == 403:
            print('Vocal Changer Level: ', level,' Internal: Pill, injection Wearable: Choker collar Effect: Changes the pitch, timbre, pronunciation, and other audio characteristics of one creature to match those of another (or as desired). The change lasts for 28 hours.')
        elif cypher_roll == 404:
            print('Volcanic Heart Level: 10\nUsable: Handheld device Effect: This device does nothing upon activation or in the next two rounds. In the fourth round, it begins to create intense heat. This heat does 12 points of damage to all creatures within immediate range, 6 points of damage to all within short range, and 3 points of damage to all within long range. This effect lasts for three rounds. After that, damage within all ranges starts to fade at a rate of 1 point of damage per round.')
        elif cypher_roll == 405:
            print('War Mites Level: ', level  +1,'\nUsable: Spray canister Effect: A stream of tiny mites sprays out of the canister when this cypher is activated. They strike a single target in immediate range. The target is covered by these bioengineered mites, which immediately begin biting and stinging the target. The target takes 1 point of damage each round for a number of rounds equal to the cypher level. Further, during each of these rounds, the target is distracted, and the difficulty of all tasks it undertakes is increased by one step.')
        elif cypher_roll == 406:
            print('Warming Pouch Level: ', level,' Usable: Cloth bag Effect: When you put an object into the cloth bag and activate the string closure, the object heats to human body temperature within one minute. If the object isn’t removed, the pouch will keep it at body temperature for 28 hours.')
        elif cypher_roll == 407:
            print('Water Repellant Plates Level: ', level + 1,'\nWearable: Boots, shoes Usable: Metal plate Effect: When activated, this device repels water so strongly for one hour that it can force up to 200 pounds (91 kg) of pressure away from the user. If the plates were in a pair of shoes, a character could appear to walk on water. The plates could also be used to allow an object to float across the surface of the water.')
        elif cypher_roll == 408:
            print('Water Weapon Level: ', level + 2,'\nWearable: Wrist-mounted device Usable: Handheld device Effect: Fires a bolt of energy through water at a target within long range, inflicting damage equal to the cypher level. The energy must have water to conduct it or the device will not function, so both weapon and target must be at least partially submerged.')
        elif cypher_roll == 409:
            print('Way Back Level: ', level,' Wearable: Belt bag Effect: When activated and hung from the user’s belt, bag, or similar gear, the device releases contained droplets of radioluminescent light every 50 feet (15 m). The droplets stay dark for one day, then crack with light and become visible for five days.')
        elif cypher_roll == 410:
            print('Weaver Drone Level: ', level,' Usable: A spiderlike automaton equipped with a 50-foot (15 m) spool of strong synth cable Effect: Responding to simple voice commands, the weaver drone can climb almost any surface, releasing the strong synth cable out behind it as it travels in a simple or complex pattern. Once the cable runs out, the drone anchors itself (and the end of the cable) to a designated place and shuts down permanently. As long as the cable is anchored by the drone, it can sustain the weight of up to two average-sized people at a time.')
        elif cypher_roll == 411:
            print('Wing Symbiote Level: ', level + 2,'\nWearable: A large winged insect that attaches to the user’s spine Effect: The device inflicts 2 points of damage to the user as it digs its claws into her spine and uses a tendril to burrow into her brain stem. For the next 28 hours, the user can fly by making a Speed roll (level 1) each round. In combat, she moves a short distance each round, but on extended trips, she can move up to 40 miles (64 km) per hour.')
        elif cypher_roll == 412:
            print('Witless Powder Level: ', level,' Usable: A thin metal tube with a fragile powder cartridge in the center Effect: To activate the device, the user blows through one end of the tube to propel the cartridge’s contents out the other at a creature within immediate range. If the creature is hit by the powder, and its level is equal to or lower than the cypher level, it becomes stunned for one minute. During this time, if the user speaks to the target in a language the target can understand, she can implant a suggestion in the target’s mind. This suggestion is a course of activity the target must follow under the specific conditions the user describes. The course of activity can be anything she chooses, though it cannot be anything that poses a significant risk to the target’s life, property, or loved ones. The conditions can be as general or as specific as the user decides. If the described conditions happen during the next 28 hours, the target behaves as instructed.')
        elif cypher_roll == 413:
            print('Wrist Launcher Level: ', level,' Wearable: Wrist-mounted device Effect: Launches a small object (such as a dart, a stone, or a detonation cypher) up to long range. If the object is hard (preferably pointed), it inflicts 4 points of damage. A detonation inflicts its own explosive damage.')
        elif cypher_roll == 414:
            print('X-ray Extractor Level: ', level + 4,'\nUsable: Glass panel with selection of dials Effect: When held up against a solid surface, this panel allows the user to see through up to 2 feet (0.6 m) of material. The selection of dials allows him to discriminate between various items within the material, permitting him to see buried objects, supports in walls, or organs in a body. A successful difficulty 4 Intellect roll vaporizes a visualized discrete object or a portion of it. An unsuccessful roll disintegrates a random chunk of material, gouging a hole in the solid surface. The device operates for one minute, and it works only if the cypher’s level is higher than the material’s level.')
        elif cypher_roll == 415:
            print('AMBER AMPLIFIER Level: ', level + 1,'\nUsable: Nodule that connects to a cypher, artifact, installation, or similar device Effect: The connected device’s next single use produces an effect as if the device were 4 levels higher (to a maximum of level 10).')
        elif cypher_roll == 416:
            print('ASTUTE WEAPON NODULE Level: ', level + 2,'\nUsable: Nodule that affixes to a melee weapon Effect: When the cypher is attached to a weapon, the weapon gains limited intelligence, a semblance of a personality, and the ability to speak for 28 hours. During this period, attacks the wielder makes with the weapon are eased as long as the user maintains a good relationship with the temporary intelligence invested in the weapon. If the user has the ability to gain a follower, they could choose the newly imbued weapon to be that follower. If so, it retains its intelligence indefinitely as a level 3 automaton that provides two additional knowledge-based modifications (in addition to its ability to provide an asset to attacks using itself).')
        elif cypher_roll == 417:
            print('BEAST LURE Level: ', level + 2,'\nUsable: Bulky device that must be set on the ground as part of its activation Effect: The nearest “savage beast” whose level is up to 1 less than the cypher’s level (such as a ravage bear or broken hound) within 3 miles (5 km) is lured by the cypher, makes its way to the cypher’s location, and calmly remains there for up to one hour. During this time, the user can impart a basic concept or question to the beast, and the beast can convey a simple answer in return. If the beast is attacked, the calming effect immediately ends.')
        elif cypher_roll == 418:
            print('BRIDGE BUILDER Level: ', level + 2,'\nUsable: Bulky handheld device Effect: When activated, the cypher splits into two pieces. If either piece is moved to a location up to a very long distance away and activated, a wave of nanobots sweeps out from the activated piece, moving at a rate of a short distance each round. In the wave’s wake is left a strip of solid grey material 10 feet (3 m) wide and 1 foot (30 cm) thick. Eventually the wave and the strip behind it connect to the other cypher piece endpoint, creating a stable road-like surface between them. The strip swerves around objects, terrain features, and structures, but it bridges ravines and other gaps in the landscape that are less than 300 feet (90 m) wide. The strip becomes a permanent fixture of the landscape.')
        elif cypher_roll == 419:
            print('CALM CENTER Level: ', level,' Minimum Crafting Level: 3 Internal: Pill, ingestible liquid Wearable: Badge Effect: The user becomes utterly calm, seeming to emanate peace and assurance. Merely being near the user provides a balm. All creatures in short range can retry one failed task, attack, or defense roll sometime during the next minute.')
        elif cypher_roll == 420:
            print('CHIURGEON ORB Level: ', level + 1,'\nUsable: Metallic orb Effect: When activated, the chiurgeon orb tumbles away in the direction the user throws it as if unaffected by gravity, moving at a rate of an immediate distance each round for about a minute. The orb’s surface becomes suffused with healing nanobots, and as it passes within 30 feet (6 m) of living creatures, they regain points to their Pools (or health) equal to the cypher’s level if they are hurt. The moving orb bounces off fixed surfaces, and thus might be set to bounce back and forth across a field of conflict for the duration of the effect. When a minute has passed, the orb tumbles to the ground, inert. If used during a conflict between ranked communities or hordes, the affected force regains health equal to one third the cypher’s level (minimum 1) for that community action.')
        elif cypher_roll == 421:
            print('CITY SHROUD Level: ', level+ 4,'\nUsable: Bulky handheld device Effect: When activated, the cypher splits into two pieces. If either piece is moved to a location up to 1 mile (1.5 km) away from the other and activated, the area between them becomes the outermost diameter of a sphere of visual distortion. It hides any artificial structures within from anyone viewing the location from outside the area. The effect lasts for 28 hours. Outside viewers see only a continuation of the natural landscape around the affected area. The cypher can be used to hide a small community, ruins, or some other site, assuming it fits within an area no more than 1 mile across.')
        elif cypher_roll == 422:
            print('CLEAN BRIGHT Level: ', level,' Minimum Crafting Level: 3 Usable: Handheld projector Effect: Over the course of the next hour, scrubbing nanobots move across (and into) a nearby structure of up to 5,000 square feet (465 square m). The structure is cleaned and tidied as if subject to the expert attention of a reliable cleaning service.')
        elif cypher_roll == 423:
            print('COGNITIVE DEFENDER Level: ', level,'\nInternal: Pill, ingestible liquid Wearable: Badge Effect: The user gains +3 Armor against effects that would inflict Intellect damage for 28 hours. During this same period, negative mental feelings related to anxiety, depression, inability to cope with frustrating experiences, feelings of incapacitating rage, and similar feelings are mollified. If any such effects are hindering the character’s actions, they are alleviated during this period as well.')
        elif cypher_roll == 424:
            print('COLOSSAL FORM Level: ', level + 4,'\nUsable: Injection Effect: Nanobot infusion slowly increases the user’s mass over the course of one hour. At the end of the hour, the user has reached a height of 30 feet (9 m), which lasts for about an hour. While colossal, the character adds 15 points to their Might Pool, adds 2 to their Might Edge, gains +1 to Armor, and deals 4 additional points of damage with melee attacks. However, their Speed defense tasks are hindered by three steps. If used as part of a conflict involving a ranked horde or community, treat the user as a rampaging beast with a rank of 2 during that community action.')
        elif cypher_roll == 425:
            print('CORPSE LIKENESS Level: ', level + 1,'\nUsable: Metallic orb Effect: This cypher has a two-part activation. First, it must be placed on a humanoid corpse that has not decayed for more than a few days. After one minute, the cypher takes on a red glow, indicating that it’s ready. Whoever next picks up the orb takes on the likeness of the corpse, a likeness that persists for about 28 hours. In casual settings, the user can pass as whoever the corpse was before they died, and the user gains two assets to passing themselves off as the corpse if they come under active scrutiny.')
        elif cypher_roll == 426:
            print('DEATH PROTECTOR Level: ', level + 3,'\nWearable: Harness-like overwear Effect: If the wearer is debilitated or killed, the wearer’s body (assuming it remains mostly intact) is flushed with emergency nanobots that take control of the body so that it takes discrete steps to protect and repair itself. During the next minute, even if the user is dead, the body moves away from danger by the safest available route. At the end of this duration, the user makes a one-action recovery roll (again, even if dead; this returns the user to life). The roll does not count against the limit on recovery rolls that a character can make in a day.')
        elif cypher_roll == 427:
            print('DECEPTION BUD Level: ', level,' Minimum Crafting Level: 2 Usable: Small sphere of flesh and metal Effect: When applied to a creature’s head, the sphere immediately unleashes microfilaments that enter the brain. For the next 28 hours, the bud whispers helpful advice that grants two assets to any tasks related to running a con, picking a pocket, fooling or tricking someone, sneaking something by a guard, and so on. The bud dries up and falls off after it has provided its benefit, leaving only a tiny blemish.')
        elif cypher_roll == 428:
            print('DETONATION (PEACE) Level: ', level,' + 4 Minimum Crafting Level: 7 Wearable: Wristband projector (long range) Usable: Handheld projector (long range) Effect: The cypher explodes and releases a massive burst of afferent particles that affect all living creatures within very long range, preventing creatures of up to level 4 from initiating attacks (though they can defend themselves). Each time an affected creature is attacked, it gains another opportunity to try to free itself from the effect. If used during a conflict with a ranked community or horde, the conflict is stalled during that community action (unless extreme actions are taken to shake the combatants out of their peaceful trance).')
        elif cypher_roll == 429:
            print('DETONATION (TRACER) Level: ', level,' + 1 Minimum Crafting Level: 4 Wearable: Wristband projector (long range) and associated handheld device Usable: Handheld projector (long range) and associated handheld device Effect: This detonation comes in two parts. One part explodes in an immediate radius, inflicting shrapnel damage equal to the cypher level. The other part allows a user to trace anyone caught in the detonation for up to one week; the user learns the direction and distance of the affected targets.')
        elif cypher_roll == 430:
            print('ECLIPSE PROJECTOR Level: ', level,' + 4 Minimum Crafting Level: 7 Usable: Bulky device Effect: If used while the sun is in the sky, the cypher creates a total eclipse in an area 10 miles (16 km) in diameter, centered on the location where the cypher was activated. The eclipse lasts for up to ten minutes. If used as part of a negotiation with a horde or a not particularly sophisticated community, the appearance of the darkness grants two assets to any negotiation or intimidation tasks.')
        elif cypher_roll == 431:
            print('EXPLORATION GRAFT Level: ', level,' + 2 Minimum Crafting Level: 6 Usable: Small metallic disc Effect: When applied to a creature’s head, the disc immediately unleashes microfilaments that enter the brain. Within five minutes, the creature is trained in tasks related to navigation. If the creature is already trained or specialized in such tasks, this graft has no effect. Once the graft attaches, the effect is permanent, and this device no longer counts against the number of cyphers that a PC can bear, but the disc remains. A creature with an exploration graft who attempts the long-term task Discover  New Area of Interest accomplishes that task in half the normal time.')
        elif cypher_roll == 432:
            print('EXTROVERSION REVEALER Level: ', level,' Minimum Crafting Level: 3 Internal: Pill, ingestible liquid Wearable: Badge Effect: The user gains +2 Armor against effects that would inflict Intellect damage for 28 hours. During this same period, the user finds it easy to engage with large groups of people, even strangers, without becoming embarrassed or otherwise mentally conflicted, which provides an asset to all tasks related to positive social interaction.')
        elif cypher_roll == 433:
            print('FOLLOWER SEED Level: ', level,' Minimum Crafting Level: 2 Usable: Oblong metallic seed roughly 1 inch (2.5 cm) in diameter Effect: When the seed is placed in drit and activated, a level 2 humanoid automaton grows from that spot. The automaton provides the effects of a follower for the user for up to ten hours. Different seeds grow different kinds of followers, including those presented on the Follower Seed Table. Some of these followers provide services rather than a modification to a PC’s tasks, as indicated on the table. FOLLOWER SEED TABLE d10 Follower Modifications or Special Qualities 1 Chef Provides the PC with one quality meal before ten hours elapses 2 Admirer Tells impressive stories about the PC and grants asset to any task to impress others 3 Carpenter Grants asset to any commonplace crafting task involving wood and structures 4 Mender Adds +1 to PC recovery rolls and grants asset to healing tasks 5 Scholar Provides answers to moderately difficult questions (up to level 4) 6 Tailor Provides the PC with one quality set of clothing before ten hours elapses 7 Porter Carries one additional cypher for the PC (increasing cypher limit) for ten hours 8 Mason Adds +1 Armor to an allied ranked community for ten hours 9 Scout Provides crucial intel on enemy horde or community that increases allied community’s rank by +1 during next community action 10 Creature Provides the benefit of one level 2 creature follower')
        elif cypher_roll == 434:
            print('HORDE HORN (CONFUSION) Level: ', level,' + 2 Minimum Crafting Level: 5 Usable: Device with hornlike speaker Effect: The cypher creates an audible effect a very long distance across centered on a location within 1 mile (1.5 km) that the user can see. Creatures in the area whose level is up to 3 less than the cypher’s level become confused and disperse. The effects last for up to 28 hours. If used during a conflict between ranked communities or hordes, the affected horde disbands, or the affected community’s fighting force does not take the field. The effect ends early if battle is still joined by an enemy force.')
        elif cypher_roll == 435:
            print('HORDE HORN (ENERVATION) Level: ', level,' + 2 Minimum Crafting Level: 5 Usable: Device with hornlike speaker Effect: The cypher creates an audible effect a very long distance across centered on a location within 1 mile (1.5 km) that the user can see. Creatures in the area take 3 points of damage and their defense rolls are hindered for 28 hours. If used during a conflict between ranked communities or hordes, the affected force’s rank is reduced by 1 for the duration.')
        elif cypher_roll == 436:
            print('HORDE HORN (INSPIRATION) Level: ', level,' + 2 Minimum Crafting Level: 5 Usable: Device with hornlike speaker Effect: The cypher creates an audible effect a very long distance across centered on a location within 1 mile (1.5 km) that the user can see. Creatures in the area regain 3 health and gain an asset to their attacks for one hour. If used during a conflict between ranked communities or hordes, the affected force’s rank is increased by 1 for the duration of that community action.')
        elif cypher_roll == 437:
            print('INFRASTRUCTURE MENDER Level: ', level,' + 1 Minimum Crafting Level: 4 Usable: Metallic square with silvery tendrils Effect: The user attaches this cypher to a wall or other structure. On the following round, it extends its exposed tendrils into the object, and the tendrils spread beneath its surface and into any adjoining inert objects and structures, strengthening their integrity, a process that takes about an hour. Once complete, the effect adds 1 level to all commonplace structures connected to the initial structure within long range and repairs 3 points of damage to the infrastructure of a ranked community. (If a ranked community’s infrastructure isn’t damaged, it gains 3 points of infrastructure.)')
        elif cypher_roll == 438:
            print('INSTANT BIOREACTOR Level: ', level,' + 4 Minimum Crafting Level: 7 Usable: Handheld device Effect: This small device expands into a bioreactor that fixes itself in place. The bioreactor provides an asset to tasks related to crafting biologicals. The bioreactor and all its components are made from a form of shapemetal, and the bioreactor is permanent and immobile once created.')
        elif cypher_roll == 439:
            print('INSTANT FLOOD Level: ', level,' + 2 Minimum Crafting Level: 4 Usable: Boxy mechanism with dial Effect: When the cypher is activated, sterile water begins to pour out of the mechanism at a prodigious rate, enough to fill a low-lying area a long distance across to a depth of about a foot (30 cm) within a minute. If collected, the water is potable. The water continues to pour out of the cypher for a number of minutes equal to the cypher level. If the terrain isn’t conducive to receiving so much water, this could create a dangerous situation. Treat a flood surge as a ranked disaster that persists for about an hour. The flood’s rank is equal to one third the cypher level (minimum rank 1).')
        elif cypher_roll == 440:
            print('IRON TAMER Level: ', level,' + 4 Minimum Crafting Level: 10 (special crafting requirement includes the addition of a live sample of iron wind) Usable: Bulky device that must be set on the ground to use Effect: The cypher suppresses an instance of iron wind up to a long distance across for ten hours, which might be long enough for the larger storm (if there is one) to subside.')
        elif cypher_roll == 441:
            print('KAON PRESERVER Level: ', level,' Minimum Crafting Level: 4 (special crafting requirement includes the addition of 2 units of kaon dots) Usable: Handheld device filled with tiny, glowing blue vortices of concentrated force Effect: The cypher preserves in perfect stasis one object or creature whose level is equal to or less than the cypher’s level. The stasis lasts for a specified period or until another kaon preserver—or a raw unit of kaon dot—is successfully applied to break it.')
        elif cypher_roll == 442:
            print('LEADERSHIP BUD Level: ', level,' Minimum Crafting Level: 2 Usable: Small sphere of flesh and metal Effect: When applied to a creature’s head, the sphere immediately unleashes microfilaments that enter the brain. For the next 28 hours, the bud whispers helpful advice that grants two assets to any tasks related to persuasion, gaining insight into another creature’s true thoughts and feelings, detecting falsehoods, and inspiring others. The bud dries up and falls off after it has provided its benefit, leaving only a tiny blemish.')
        elif cypher_roll == 443:
            print('MATTER EVAPORATOR Level: ', level,' + 2 Minimum Crafting Level: 6 Usable: Bulky backpack-like device with a connected tube Effect: The cypher shoots a spray of thick, bubbling fluid that dissolves and erases an object about as large as a human within immediate range. The target’s level must be equal to or less than the cypher’s level.')
        elif cypher_roll == 444:
            print('MIMETIC REPLICATOR Level: ', level,' + 1 Minimum Crafting Level: 6 (special crafting requirement includes the addition of 4 units of mimetic gel) Usable: Device containing translucent goo with attached handle and control Effect: The cypher duplicates an object no larger than something the user can easily hold in one hand. The object’s level must be equal to or less than the cypher’s level.')
        elif cypher_roll == 445:
            print('MORALE TRAUMA Level: ', level,' + 2 Minimum Crafting Level: 5 Usable: Cylindrical device with red sphere on top Effect: The cypher broadcasts a deleterious psychic influence to creatures within immediate range that propagates outward to other nearby creatures, affecting each in turn in a spreading ripple that can reach up to a very long distance, assuming there are enough creatures to propagate the effect. An affected creature loses its will to fight and may bolt and run. The effect lasts for about a minute. If used as part of a conflict against a ranked community or horde, a community’s combat force or horde whose rank is equal to or less than half the cypher’s level leaves the field during that community action.')
        elif cypher_roll == 446:
            print('NULL ORB Level: ', level,' + 1 Minimum Crafting Level: 3 Usable: Metallic orb Effect: When activated, the null orb tumbles away in the direction the user throws it as if unaffected by gravity, moving at a rate of an immediate distance each round for about a minute. The orb’s surface becomes charged with entropic energy, and as it passes within 30 feet (6 m) of living creatures, damage equal to the cypher’s level is inflicted on them. The moving orb bounces off fixed surfaces, and thus might be set to bounce back and forth across a field of conflict for the duration of the effect. When a minute has passed, the orb tumbles to the ground, inert. If used during a conflict between ranked communities or hordes, the affected force suffers damage equal to one third the cypher’s level (minimum 1).')
        elif cypher_roll == 447:
            print('OTHERSPACE WEAPON NODULE Level: ', level,' + 1 Minimum Crafting Level: 4 Usable: Nodule that affixes to a melee weapon Effect: This nodule can be “keyed” so that it becomes associated with an otherspace location (an alternate dimension) that the user can reach. Otherwise the nodule is keyed to a random otherspace location. Once the cypher is attached to a melee weapon, at the weapon user’s option, targets struck by the weapon can be transferred to the keyed location instead of taking damage. The weapon retains this quality for up to 28 hours or until ten creatures have been transferred, whichever occurs first.')
        elif cypher_roll == 448:
            print('QUANTIUM BACKTRACKER Level: ', level,' + 2 Minimum Crafting Level: 6 (special crafting requirement includes the addition of 3 units of quantium) Usable: Device filled with glittering points of light with attached handle and control Effect: The cypher moves the user one round back in time, allowing them to relive the previous round and even change what action they took.')
        elif cypher_roll == 449:
            print('QUANTIUM BOOST Level: ', level,' + 1 Minimum Crafting Level: 4 (special crafting requirement includes the addition of 3 units of quantium) Usable: Device filled with glittering points of light with attached handle and control Effect: The cypher moves the user forward in time about a minute. For the user, no time passes, but for everyone else, the user is simply gone for about a minute.')
        elif cypher_roll == 450:
            print('RALLY BEACON Level: ', level,' + 1 Minimum Crafting Level: 5 Usable: Bulky backpack-like device with a mast rising about a foot (30 cm) Effect: The cypher grants all creatures within short range at the time of activation +1 to Speed Effort and +1 Armor for one hour. If used as part of a conflict against a ranked community or horde, the affected combat force has +1 Armor during that community action.')
        elif cypher_roll == 451:
            print('RAMPAGING FORM Level: ', level,' + 4 Minimum Crafting Level: 9 Usable: Injection Effect: A nanobot infusion turns the user into an uncontrolled beast for one hour. While changed, they attack any and every living creature within short range. In addition, they gain +3 Armor, 10 points to their Might Pool, 3 to their Might Edge, 10 points to their Speed Pool, and 3 to their Speed Edge. While in beast form, they can’t spend Intellect points for any reason other than to try to change back to their normal form before the duration ends (a task with a difficulty equal to the cypher’s level). If used as part of a conflict involving a ranked horde or community, treat the user as a rampaging beast with a rank of 3 during that community action.')
        elif cypher_roll == 452:
            print('ROAD BUILDER Level: ', level,' + 4 Minimum Crafting Level: 7 Usable: Bulky handheld device Effect: When activated, the cypher splits into two pieces. If either piece is moved to a location up to 10 miles (16 km) away and activated, a wave of nanobots sweeps out from the activated piece, moving at a rate of 1 mile (1.5 km) per hour. In the wave’s wake is left a strip of solid grey stonelike material 10 feet (3 m) wide and 1 foot (30 cm) thick. Eventually the wave and the strip behind it connects to the other cypher piece endpoint, creating a stable road-like surface between them. Tunnels with a navigable space 30 feet (9 m) high are created through natural and artificial barriers, and bridge-like struts are extended to support the strip over ravines and other gaps. The strip swerves around objects and structures of level 4 and higher. The strip becomes a permanent fixture of the landscape.')
        elif cypher_roll == 453:
            print('RODULE OF BRANDING Level: ', level,' Minimum Crafting Level: 2 Useable: Rod 1 foot (30 cm) long Effect: The user permanently marks the forehead (or other specified location that the user is able to touch) of a target with a simple symbol, glyph, or two or three words of the user’s choice. The brand could be punitive, could mark the target as a member of some society or group, or could be merely decorative.')
        elif cypher_roll == 454:
            print('RODULE OF INQUISITION Level: ', level,' Minimum Crafting Level: 2 Useable: Rod 1 foot (30 cm) long Effect: The user rapidly gains complete knowledge of an object or creature touched with the rodule if its level is equal to or less than the cypher’s level. Information includes the target’s special qualities, special abilities, weaknesses (if any), level, and so on. If the object is an artifact or a complex piece of equipment whose level is no higher than the rodule’s level + 4, the user understands how to use it.')
        elif cypher_roll == 455:
            print('SALVAGE ASSISTANT Level: ', level,' + 2 Minimum Crafting Level: 5 Usable: Bulky handheld device Effect: When used as part of a salvage attempt to find shins, cyphers, artifacts, and iotum, this device grants two advantages. First, it provides an asset to the initial salvage task. If salvage is discovered, either it grants an asset to the user’s attempt to find a specific kind of iotum, or it gives the user one additional roll on the Random Salvage Result table.')
        elif cypher_roll == 456:
            print('STEALTH COATING Level: ', level,' + 1 Minimum Crafting Level: 4 Usable: Handheld device Effect: The cypher disperses stealth particles over the surface of an object (or several objects) that can fit in an area 10 feet (3 m) on a side. The object is no longer visible to casual observation, and tasks specifically made to find or perceive the treated object(s) are hindered by two steps. The effect lasts until the objects are moved or damaged.')
        elif cypher_roll == 457:
            print('STRUCTURAL REINFORCER Level: ', level,' + 2 Minimum Crafting Level: 6 (special crafting requirement includes the addition of 2 units of smart tissue) Usable: Bulky backpack-like device with a connected tube Effect: When sprayed on a structure in immediate range, skin-like material reinforces the structure up to a short distance on a side, increasing its level by 1 per cypher level. Additional uses of this type of cypher on the structure provide no additional benefit.')
        elif cypher_roll == 458:
            print('SUSTENANCE GRAFT Level: ', level,' + 2 Minimum Crafting Level: 6 Usable: Small metallic disc Effect: When applied to a creature’s head, the disc immediately unleashes microfilaments that enter the brain. Within five minutes, the creature is trained in tasks related to living off the land, including finding sources of food and water. If the creature is already trained or specialized in such tasks, the graft has no effect. Once the graft attaches, the effect is permanent, and this device no longer counts against the number of cyphers that a PC can bear, but the disc remains. A creature with a sustenance graft who attempts the long-term task Build Up Food or Water Stores accomplishes that task in half the normal time.')
        elif cypher_roll == 459:
            print('ACIDIC RESONATOR Level: ', level,' + 2 Usable: Bulky handheld device Effect: When activated, any exposed metallic weapons within short range bead with acid for about an hour, granting affected weapons 1 additional point of damage when used in combat. If the use is coordinated with attackers who make up a community’s or horde’s combat force, the community or horde inflicts +1 damage during the next community-scale combat interaction.')
        elif cypher_roll == 460:
            print('COMMUNITY BEACON Level: ', level,' + 2 Usable: Handheld device Effect: When activated, the cypher splits into two pieces. One piece is affixed to a numenera structure, and the other is kept by a character. The character can then use the connection between the two pieces to trigger a spatial warp any time within the next 28 hours. The spatial warp returns the user and all targets within immediate range to a location next to the numenera structure, no matter how far apart the character and the structure were.')
        elif cypher_roll == 461:
            print('CRAFTER’S EYES Level: ', level,' + 2 Wearable: Thick lenses on frames worn over eyes Effect: Informative images formed on the inner lenses allow the user to automatically succeed on any one crafting subtask whose level is equal to or less than the cypher’s level.')
        elif cypher_roll == 462:
            print('DECEPTION FILTER Level: ', level,' Internal: Pill, ingestible liquid Wearable: Badge Effect: User cannot knowingly tell a lie for one hour.')
        elif cypher_roll == 463:
            print('DESTINY NODULE Level: ', level,' Usable: Crystal nodule affixed to tool Effect: For the next 28 hours, each time the tool the nodule is attached to is used to repair, craft, or modify an object or structure, the tool provides the user an additional asset to the task.')
        elif cypher_roll == 464:
            print('DETONATION  (HORDE SUPPRESSOR) Level: ', level,' + 1 Wearable: Wristband projector (long range) Usable: Handheld projector (long range) Effect: Explodes to release a burst of neurotoxic mist affecting all creatures within long range, hindering all attacks for about an hour. If effectively targeted during a conflict against a ranked horde or community, the affected horde or community inflicts 1 point of damage less than normal during that community action.')
        elif cypher_roll == 465:
            print('EFFORT ENHANCEMENT Level: ', level,' + 2 Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: For the next 28 hours, the user can access a thin connection to the datasphere to gain a very specific effect. When applying Effort to a task related to a predetermined skill, the user can apply one free level of Effort. The skills encoded are generally restricted to the following. 01–10 Melee attacks 11–20 Ranged attacks 21–40 Understanding numenera 41–50 Salvaging numenera 51–60 Crafting numenera 61–70 Persuasion 71–75 Healing 76–80 Speed defense 81–85 Intellect defense 86–90 Swimming 91–95 Riding 96–00 Sneaking')
        elif cypher_roll == 466:
            print('EMOTION SMOOTHER Level: ', level,' Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: For the next hour, the character loses access to the part of their mind that registers and produces emotion. This allows the user to experience situations they might not otherwise be able to handle, to fairly weigh options without emotional shortcuts, or to tell completely convincing lies because they are no longer generating micro-expressions or other telling responses due to emotional inconsistency.')
        elif cypher_roll == 467:
            print('FARSPEAKER Level: ', level,' Usable: Handheld device Effect: For the next ten minutes, the user can be heard at any distant location that they can see, as long as nothing physically blocks the intervening space. They can also hear sounds made in return. The area in which the user can speak and hear is up to a short distance across in the target location.')
        elif cypher_roll == 468:
            print('GRAVITY CHANGER Level: ', level,' + 2 Useable: Metal plates Effect: Once placed, the plates change the direction of gravity within an area up to a short distance in diameter. The gravitic warp could be continuous across the affected area, or it could bend and curve, changing directions within the area up to a number of times equal to the level of the cypher. Once gravity is warped, it cannot be changed and persists for 28 hours.')
        elif cypher_roll == 469:
            print('HARMONY LAMP Level: ', level,' Useable: Crystal orb, nodule, disc Effect: For an hour after activation, the cypher emits a combination of colored light, sound, odor, and healing nanobots that permeate an area up to a short distance across. All positive interaction tasks made in the area gain an asset. Creatures who’ve made up their minds about a topic may be open to revisiting the issue. PCs add +1 to recovery rolls made in the area.')
        elif cypher_roll == 470:
            print('HEALTH RESONATOR Level: ', level,' + 2 Usable: Bulky handheld device Effect: When activated, creatures within short range each gain 2 points of health (or 2 points to Might for PCs) for about an hour. If the use is coordinated with attackers who make up a community’s or horde’s combat force, the force has +2 health during that community action.')
        elif cypher_roll == 471:
            print('HIDING ALARM NODULE Level: 7 Usable: Crystal nodule affixed to installation Effect: For the next 28 hours, each time the installation to which the nodule is attached is struck hard enough to inflict damage (but not more than once per round), the structure or installation goes out of phase for one hour. The installation must fit in a cube up to a short distance wide, tall, and deep. All contents of the out-of-phase structure also go out of phase, unless they somehow leave the structure.')
        elif cypher_roll == 472:
            print('IMMOBILIZER Level: ', level,' + 2 Usable: Handheld device Effect: The user directs one end of the cypher at a target within short range, which is then subject to an attack by a projected mass of rapidly expanding and hardening foam. The target is held immobile in the hardened mass of foam for one hour, after which the mass turns to powder.')
        elif cypher_roll == 473:
            print('INFRASTRUCTURE DRILL Level: ', level,' + 1 Usable: Large sphere with a thick screw protrusion Effect: The user attaches this cypher to a wall or other structure. On the following round, it drills into the object and keeps going beneath the surface for the next hour, creating a series of tunnels that weaken the integrity of the structure and connecting structures. This decreases the level of all commonplace structures connected to the initial structure within long range and inflicts 3 points of damage to a ranked community’s infrastructure.')
        elif cypher_roll == 474:
            print('INSTALLATION ENHANCER Level: ', level,' + 3 Wearable: Bulky device and several metal plates Effect: When securely attached to an installation, it increases the level of the entire installation up to the level of the cypher for about one hour (no effect on installations of a level equal to or higher than the cypher).')
        elif cypher_roll == 475:
            print('INSTALLATION MOVER Level: ', level,' + 2 Wearable: Bulky device and several metal plates Effect: When securely attached to an installation, it allows the entire installation to be moved to another location within very long range (which is normally a difficult task). The transfer requires that the user be able to push the installation to the new location, but for the duration of about an hour, the installation seems almost weightless. During the transfer, the installation does not function.')
        elif cypher_roll == 476:
            print('INSTANT ITEM Level: ', level,' Wearable: Bulky amulet Effect: This cypher has a two-stage activation. The first stage occurs when the wearer keys an object that they can hold in one hand to the cypher. The object falls into a subspace pocket and remains indefinitely or until a user activates the cypher a second (and final) time, immediately retrieving the stored item.')
        elif cypher_roll == 477:
            print('INSTANT WALL Level: ', level,' + 1 Usable: Handheld device Effect: With the addition of water and air, the small device expands into an immobile plane up to 10 feet (3 m) tall, 30 feet (9 m) long, and 2 feet (60 cm) thick. It is made from a form of shapestone and is permanent and immobile once created.')
        elif cypher_roll == 478:
            print('INSTANT WORKSHOP Level: ', level,' + 2 Usable: Handheld device Effect: This small device expands into a workbench that fixes itself in place. The workbench provides an adjustable-height work surface with light and a variety of attached tools suitable for working with commonplace objects, numenera objects, and structural components. The workshop enables crafting tasks by providing the appropriate tools and workspace, though it does not provide shelter from the elements. The workbench and all its components are made from a form of shapemetal, and the workbench is permanent and immobile once created.')
        elif cypher_roll == 479:
            print('IOTUM STABILIZER Level:', level + 1,' Usable: Bulky handheld device Effect: When used as part of a salvaging task, the field emitted by the cypher stabilizes all iotum within short range so that an additional ', level,' units of iotum are recovered. The additional iotum must be of the same kind that has already been discovered, and the iotum must be of a level equal to or less than the level of this cypher.')
        elif cypher_roll == 480:
            print('IOTUM UPGRADER Level:', level +2,' Usable: Bulky handheld device Effect: When attached to 1 unit of iotum, that iotum can then be used as if it were a unit of iotum 1 level higher in a crafting task. For example, an upgraded unit of io (level 1) could be used as if it were a unit of responsive synth (level 2) for the purpose of one crafting task, or a unit of quantium (level 5) could be used as if it were a unit of protomatter (level 6).')
        elif cypher_roll == 481:
            print('IRON WIND RESISTANCE Level: 7 Internal: Pill, ingestible liquid Usable: Injector Effect: Grants the user two assets to defense tasks made to resist the effects of an instance of the iron wind (and attempts to resist any ongoing effects instigated by previous iron wind contact, if any) for the next 28 hours.')
        elif cypher_roll == 482:
            print('MECHANICAL WRIGHT Level:', level + 3,' Usable: Complex device Effect: Crafts one numenera object or structure whose level can be no higher than the mechanical wright’s level minus 3 (minimum level 1), as long as a numenera plan is provided to work from. Crafting occurs over the course of the next 28 hours, regardless of the target device’s level. Components, including parts and iotum, are contributed from the mechanical wright, which becomes completely integrated into the new numenera device over the course of the crafting process.')
        elif cypher_roll == 483:
            print('OBJECT REPLICATOR Level:', level + 1,' Usable: Crystal nodule affixed to object that weighs up to 10 pounds (5 kg) Effect: Replicates three additional copies of most objects whose level is equal to or less than this cypher’s level. A unit of iotum can be replicated, but not functioning cyphers, artifacts, or similar devices.')
        elif cypher_roll == 484:
            print('ORGAN FACTORY Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: Over the course of 28 hours, the user grows an external, fully viable living organ or limb. This is a somewhat painful process that dazes the user for the last half of the process. The completely grown organ or limb can be transferred to another creature simply by placing it on their body and waiting a few rounds. If the recipient creature has sustained damage to the same kind of organ or limb, the newly grown one replaces it over the course of about a minute (during which time the recipient creature is stunned). Otherwise, the duplicate organ or limb withers and dies. Duplicate organs must be used within one week. All force-grown organs and limbs are sealed within a partially living, protective, translucent caul. The cypher can produce one of the following, chosen by the user at the time of the cypher’s use: 01–04 Heart 36–45 Foot 05–08 Lung 46–55 Full arm 09–12 Brain 56–65 Full leg 13–16 Blood 66–75 Nose 17–20 Ribs 76–85 Mouth 21–25 Eye 86–95 Stomach 26–30 Ear 96–00 Intestines 31–35 Hand')
        elif cypher_roll == 485:
            print('PHASING GLOVES Level:', level + 1,' Wearable: Gloves Effect: These gloves can selectively phase through solid objects whose level is no higher than the cypher level in a fashion that allows the wearer to see what they are touching, providing an asset for anyone attempting to repair a disabled object or structure. Someone wearing the gloves could also search behind walls and under floors using the gloves. The gloves retain their phasing ability for up to one minute per cypher level. If used as part of a salvaging task, the gloves grant two assets.')
        elif cypher_roll == 486:
            print('PSYCHIC DEFENSE NODULE Level:', level + 2,' Usable: Crystal nodule affixed to side of head Effect: For the next 28 hours, each time the wearer of the nodule is affected by an attack that attempts to sway their actions or beliefs or that inflicts Intellect damage, they instead go into stasis for one round and remain unaffected. While in stasis, they also lose their next turn. Attacks against a wearer in stasis are made as if the wearer were protected by a force field whose level is equal to the cypher’s level.')
        elif cypher_roll == 487:
            print('RAGE THROWER Level:', level + 2,' Usable: Bulky handheld device attached to large tanks and a wide hose Effect: When activated, creatures within short range are coated with a fine mist of insinuating nano particles that enter their blood and stimulate their behavior for about an hour, making them more violent but less able to feel pain. This grants them +1 Armor but an inability to use Effort from their Intellect Pool. If the use is coordinated with attackers who make up a community’s or horde’s combat force, the force is treated as a marauding horde during that community action.')
        elif cypher_roll == 488:
            print('RETRIEVER Level:', level + 3,' Wearable: Glove of synth and small nodule Usable: Small handheld device and small nodule Effect: These cyphers always come in at least two parts: a nodule and some kind of retrieving device. The nodule can be attached to an item your size or smaller. When the cypher is activated, that item is teleported to the device.')
        elif cypher_roll == 489:
            print('SALVAGE GRAFT Level:', level + 1,' Usable: Small metallic disc Effect: When applied to a creature’s head, the disk immediately unleashes microfilaments that enter the brain. Within five minutes, the creature is trained in tasks related to salvaging numenera. If the creature is already trained or specialized in salvaging numenera, this graft has no effect. Once the graft attaches, the effect is permanent, and this device no longer counts against the number of cyphers that a PC can bear, but the disc remains.')
        elif cypher_roll == 490:
            print('SHAPEMETAL Level: 6 Usable: Canister containing a silvery, shapeable clay Effect: This metallic clay can be shaped and greatly expanded to create individual tools or objects such as a hammer, a ladder, or a basic structure such as a wall, bench, floor, staircase, and so on, as long as the total volume created could fit in a 10-foot (3 m) cube. Once formed, the structure or objects are permanent.')
        elif cypher_roll == 491:
            print('SLASH-RETARDANT SPRAY Level:', level + 2,'Usable: Bulky handheld device attached to large tanks and a wide hose Effect: For the next 28 hours, walls and structures sprayed with these repairing nanites are treated as if 1 level higher. If an hour is spent spraying down the outer walls and defense structures of a ranked community, that community gains +1 Armor during any conflict that happens over the next 28 hours.')
        elif cypher_roll == 492:
            print('STEALTH THROWER Level:', level + 2,' Usable: Bulky handheld device attached to large tanks and a wide hose Effect: When activated, creatures within short range are coated with a fine mist of dull nano particles that render them more difficult to pick out from their surroundings for about an hour, granting them an asset to stealth tasks. If the use is coordinated with attackers who make up a community’s or horde’s combat force, the force is treated as a stealthy horde during that community action.')
        elif cypher_roll == 493:
            print('SUMMONING ALARM NODULE Level: 6 Usable: Crystal nodule affixed to installation Effect: For the next 28 hours, each time the structure or installation to which the nodule is attached is struck hard enough to inflict damage (but not more than once per round), whoever attached the nodule is teleported from any location within very long range to a location standing next to the installation.')
        elif cypher_roll == 494:
            print('SUSTENANCE IMPLANT Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: For the next number of days equal to the cypher level, the wearer feels no ill effects from not eating or from overeating. They also gain an asset to any defense tasks to withstand poison.')
        elif cypher_roll == 495:
            print('TRAIL BLAZER Level:', level,' Wearable: Single boot with attached device Effect: For the next 28 hours, each time the boot touches down on solid ground, it deposits a patch of nanites that mark the area with a symbol. At any time before the duration expires, the wearer (and up to one other person that can be carried along) can use an action to instantly teleport back to any of these symbols. The teleportation effect brings the cypher’s duration to an end.')
        elif cypher_roll == 496:
            print('TRANSDIMENSIONAL SENSE Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: The user can see out-of-phase, invisible, and transdimensional creatures, objects, and sources of energy within long range for 28 hours. If ingested by a creature who attempts to salvage a particular kind of iotum during a salvage task, the effects of this cypher grant the user one free level of Effort if they first use a level of Effort on that task.')
        elif cypher_roll == 497:
            print('TRAVEL BUBBLE Level:', level + 4,' Useable: Handheld device Effect: The user and any additional targets that can fit into a space an immediate distance in diameter are encapsulated in a spherical force field for up to ten hours or until the user collapses it. The sphere hovers at all times and moves as the user wishes vertically or horizontally up to a short distance each round. If the sphere is destroyed or collapsed, whatever it contains falls to the ground.')
        elif cypher_roll == 498:
            print('ADHESION CLAMPS Level:', level,' Wearable: Gloves Usable: Handles with powerful suction cups Effect: Allows for automatic climbing of any surface, even horizontal ones. Lasts for ten minutes per cypher level.')
        elif cypher_roll == 499:
            print('ANTIVENOM Level:', level + 2,' Internal: Pill, ingestible liquid Usable: Injector Effect: Renders user immune to poisons of the same level or lower for one hour per cypher level and ends any such ongoing effects, if any, already in the user’s system.')
        elif cypher_roll == 500:
            print('ATTRACTOR Level:', level + 4,' Wearable: Glove of synth Usable: Small handheld device Effect: One unanchored item your size or smaller within long range (very long range if the cypher is level 8 or higher) is drawn immediately to the device. This takes one round. The item has no momentum when it arrives.')
        elif cypher_roll == 501:
            print('BANISHING NODULE Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, each time the weapon the nodule is attached to strikes a solid creature or object, it generates a burst of energy that teleports the creature or object struck an immediate distance in a random direction (not up or down). The teleported creature’s actions (including defense) are hindered on its next turn (hindered by two steps if the cypher is level 5 or higher).')
        elif cypher_roll == 502:
            print('BLINKING NODULE Level:', level,' Usable: Crystal nodule affixed to armor Effect: For the next 28 hours, each time (but not more than once per round) the wearer of the armor the nodule is attached to is struck hard enough to inflict damage, they teleport an immediate distance in a random direction (not up or down). Since the wearer is prepared for this effect and their foe is not, the wearer’s defenses are eased for one round after they teleport (eased by two steps if the cypher is level 5 or higher).')
        elif cypher_roll == 503:
            print('CATHOLICON Level:', level + 2,' Internal: Pill, ingestible liquid Usable: Injector Effect: Cures any disease of the cypher level or lower.')
        elif cypher_roll == 504:
            print('Catseye Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: Grants the ability to see in the dark for five hours per cypher level.')
        elif cypher_roll == 505:
            print('CHEMICAL FACTORY Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: After one hour, the sweat of the user produces ', level,' doses of a valuable liquid (these doses are not considered cyphers). They must be used within one week. Effects vary: 01–04 Euphoric for ', level,' hours 05–08 Hallucinogenic for ', level,' hours 09–12 Stimulant for ', level,' hours 13–16 Depressant for ', level,' hours 17–20 Nutrient supplement 21–25 Antivenom 26–30 Cures disease 31–35 See in the dark for one hour 36–45 Restores a number of Might Pool points equal to cypher level 46–55 Restores a number of Speed Pool points equal to cypher level 56–65 Restores a number of Intellect Pool points equal to cypher level 66–75 Increases Might Edge by 1 for one hour 76–85 Increases Speed Edge by 1 for one hour 86–95 Increases Intellect Edge by 1 for one hour 96–00 Restores all Pools to full')
        elif cypher_roll == 506:
            print('COMPREHENSION GRAFT Level:', level + 1,' Usable: Small metallic disk Effect: When applied to a creature’s head, the disk immediately unleashes microfilaments that enter the brain. Within five minutes, the creature can understand the words of a specific language keyed to the graft (two languages if the cypher is level 5 or higher). This is true even of creatures that do not normally have a language. If the creature could already understand the language, the cypher has no effect. Once the graft attaches, the effect is permanent, and this device no longer counts against the number of cyphers that a PC can bear.')
        elif cypher_roll == 507:
            print('CONTROLLED BLINKING NODULE Level:', level + 2,' Usable: Crystal nodule affixed to armor Effect: For the next 28 hours, each time the wearer of the armor the nodule is attached to is struck hard enough to inflict damage (but no more than once per round), they teleport to a spot they desire within immediate range. Since the wearer is prepared for this effect and their foe is not, the wearer’s defenses are eased for one round after they teleport (eased by two steps if the cypher is level 6 or higher).')
        elif cypher_roll == 508:
            print('Datasphere Siphon Level:', level,' Internal: Pill, ingestible liquid Wearable: Temporary tattoo, amulet, headband, crystal worn on temple Usable: Small handheld device, crystal Effect: Tapping into the datasphere’s knowledge, the user can learn the answer to one question (two questions if the cypher is level 4 or higher, three questions if the cypher is level 6 or higher).')
        elif cypher_roll == 509:
            print('DENSITY NODULE Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, each time the weapon the nodule is attached to strikes a solid creature or object, the weapon suddenly increases dramatically in weight, causing the blow to inflict an additional 2 points of damage (3 points if the cypher is level 4 or higher).')
        elif cypher_roll == 510:
            print('DETONATION Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device (thrown, short range) or handheld projector (long range) Effect: Explodes in an immediate radius, inflicting damage equal to the cypher level. Roll for the type of damage: 01–10 Cell-disrupting (harms only flesh) 11–30 Corrosive 31–40 Electrical discharge 41–50 Heat drain (cold) 51–75 Fire 76–00 Shrapnel')
        elif cypher_roll == 511:
            print('DETONATION (DESICCATING) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Bursts in an immediate radius, draining moisture from everything within it. Living creatures take damage equal to the cypher level. Water in the area is vaporized.')
        elif cypher_roll == 512:
            print('DETONATION (FLASH) Level:', level + 2,'Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Bursts in an immediate radius, blinding all within it for one minute (ten minutes if the cypher is level 4 or higher).')
        elif cypher_roll == 513:
            print('DETONATION (GRAVITY) Level: ', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Bursts in an immediate radius, inflicting damage equal to the cypher level by increasing gravity tremendously for one second. All in the area are crushed to the ground for one round and cannot take physical actions.')
        elif cypher_roll == 514:
            print('DETONATION (MASSIVE) Level:', level + 2,' Wearable: Wristband projector (very long range) Usable: Handheld projector (very long range) Effect: Explodes in a short-range radius, inflicting damage equal to the cypher level. Roll for the type of damage: 01–10 Cell-disrupting (harms only flesh) 11–30 Corrosive 31–40 Electrical discharge 41–50 Heat drain (cold) 51–75 Fire 76–00 Shrapnel')
        elif cypher_roll == 515:
            print('DETONATION (MATTER DISRUPTION) Level:', level + 4,' Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Explodes in an immediate radius, releasing nanites that rearrange matter in random ways. Inflicts damage equal to the cypher level.')
        elif cypher_roll == 516:
            print('DETONATION (PRESSURE) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device (thrown, short range) or handheld projector (long range) Effect: Explodes in an immediate radius, inflicting impact damage equal to the cypher level. Also moves unattended objects out of the area if they weigh less than 20 pounds (9 kg) per cypher level.')
        elif cypher_roll == 517:
            print('DETONATION (SINGULARITY) Level: 10 Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Explodes and creates a momentary singularity that tears at the fabric of the universe. Inflicts 20 points of damage to all within short range, drawing them (or their remains) together to immediate range (if possible). Player characters in the radius move one step down the damage track if they fail a Might defense roll.')
        elif cypher_roll == 518:
            print('DETONATION (SONIC) Level:', level + 2,'Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Explodes with terrifying sound, deafening all in an immediate radius for ten minutes per cypher level.')
        elif cypher_roll == 519:
            print('DETONATION (SPAWN) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Bursts in an immediate radius, blinding all within it for one minute and inflicting damage equal to the cypher level. The burst spawns ', level,' additional detonations; on the next round, each additional detonation flies to a random spot within short range and explodes in an immediate radius. Roll for the type of damage dealt by all detonations: 01–10 Cell-disrupting (harms only flesh) 11–30 Corrosive 31–40 Electrical discharge 41–50 Heat drain (cold) 51–75 Fire 76–00 Shrapnel')
        elif cypher_roll == 520:
            print('DETONATION (WEB) Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device (thrown, short range) or handheld projector (long range) Effect: Explodes in an immediate radius and creates sticky strands of goo that last 1 hour. PCs caught in the area must use a Might-based action to get out, with the difficulty determined by the cypher level. NPCs break free if their level is higher than the cypher level.')
        elif cypher_roll == 521:
            print('DISRUPTING NODULE Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, each time the weapon the nodule is attached to strikes a solid creature or object, it generates a burst of nanites that directly attack organic cells. The affected target takes 1 additional point of damage (2 points if the cypher is level 4 or higher, 3 points if the cypher is level 6 or higher) and loses its next action.')
        elif cypher_roll == 522:
            print('EAGLESEYE Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: Grants the ability to see ten times as far as normal for one hour per cypher level.')
        elif cypher_roll == 523:
            print('FIREPROOFING SPRAY Level:', level + 4,' Usable: Spray canister Effect: An object sprayed by this cypher has Armor against fire damage equal to the cypher’s level for 28 hours.')
        elif cypher_roll == 524:
            print('FLAME-RETARDANT WALL Level:', level,' Wearable: Belt, ring, bracelet Usable: Handheld device Effect: Creates an immobile plane of permeable energy up to 20 feet by 20 feet (6 m by 6 m) for one hour per cypher level. The plane conforms to the space available. Flames passing through the plane are extinguished.')
        elif cypher_roll == 525:
            print('FORCE CUBE PROJECTOR Level:', level + 3,' Wearable: Belt, ring, bracelet Usable: Handheld device Effect: Creates an immobile cube composed of six planes of solid force, each 30 feet (9 m) to a side, for one hour. The planes conform to the space available.')
        elif cypher_roll == 526:
            print('FORCE NODULE Level:', level,' Usable: Crystal nodule affixed to armor Effect: For the next 28 hours, the armor the nodule is attached to is bolstered by a powerful force field, adding 2 to the Armor it provides (adding 3 to the Armor if the cypher is level 5 or higher).')
        elif cypher_roll == 527:
            print('FORCE SCREEN PROJECTOR Level:', level + 3,' Wearable: Belt, ring, bracelet Usable: Handheld device Effect: Creates an immobile plane of solid force up to 20 feet by 20 feet (6 m by 6 m) for one hour per cypher level. The plane conforms to the space available.')
        elif cypher_roll == 528:
            print('FORCE SHIELD PROJECTOR Level:', level + 3,' Internal: Subdermal injection Wearable: Belt, ring, bracelet Usable: Handheld device Effect: Creates a shimmering energy shield around the user for one hour, during which time they gain +3 Armor (+4 Armor if the cypher is level 5 or higher).')
        elif cypher_roll == 529:
            print('FRICTION-REDUCING GEL Level:', level,' Usable: Spray canister Effect: Sprayed across an area up to 10 feet (3 m) square, this gel makes things extremely slippery. For one hour per cypher level, movement tasks in the area are hindered by three steps.')
        elif cypher_roll == 530:
            print('FRIGID WALL PROJECTOR Level:', level + 2,'Usable: Complex device Effect: Creates a wall of supercooled air up to 30 feet by 30 feet by 1 foot (9 m by 9 m by 30 cm) that inflicts damage equal to the cypher level on anything that passes through it. The wall conforms to the space available. It lasts for ten minutes.')
        elif cypher_roll == 531:
            print('GAS BOMB Level:', level + 2,' Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range) Effect: Bursts in a poisonous cloud within an immediate distance. The cloud lingers for ', level,' rounds unless conditions dictate otherwise. Effects vary: 01–10 Thick smoke: occludes sight while the cloud lasts. 11–20 Choking gas: living creatures that breathe lose their actions to choking and coughing for a number of rounds equal to the cypher level. 21–50 Poison gas: living creatures that breathe suffer damage equal to the cypher level. 51–60 Corrosive gas: everything suffers damage equal to the cypher level. 61–65 Hallucinogenic gas: living creatures that breathe lose their actions to hallucinations and visions for a number of rounds equal to the cypher level. 66–70 Nerve gas: living creatures that breathe suffer Speed damage equal to the cypher level. 71–80 Mind-numbing gas: living creatures that breathe suffer Intellect damage equal to the cypher level. 81–83 Fear gas: living creatures that breathe and think flee in a random direction in fear (or are paralyzed with fear) for a number of rounds equal to the cypher level. 84–86 Amnesia gas: living creatures that breathe and think permanently lose all memory of the last minute. 87–96 Sleep gas: living creatures that breathe fall asleep for a number of rounds equal to the cypher level or until awoken by a violent action or an extremely loud noise. 97–00 Rage gas: living creatures that breathe and think make a melee attack on the nearest creature and continue to do so for a number of rounds equal to the cypher level.')
        elif cypher_roll == 532:
            print('GRAVITY NULLIFIER Level:', level + 3,' Internal: Subdermal injection Wearable: Belt, boots, ring, bracelet Usable: Small platform on which the user must stand Effect: For one hour, the user can float into the air, moving vertically (but not horizontally without some other action, such as pushing along the ceiling) up to a short distance per round. The user must weigh less than 50 pounds (22 kg) per level of the cypher.')
        elif cypher_roll == 533:
            print('GRAVITY-NULLIFYING SPRAY Level:', level + 2,' Usable: Spray canister Effect: A nonliving object up to the size of a human (two humans if the cypher is level 6 or higher) sprayed by this cypher floats 1d20 feet in the air permanently and no longer has weight if carried, though it needs to be strapped down.')
        elif cypher_roll == 534:
            print('HEAT NODULE Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, each time the weapon the nodule is attached to strikes a solid creature or object, it generates a burst of heat, inflicting an additional 2 points of damage (3 points if the cypher is level 4 or higher, 4 points if the cypher is level 6 or higher).')
        elif cypher_roll == 535:
            print('HUNTER/SEEKER Level:', level,' Wearable: Arm- or shoulder-mounted launcher Usable: Complex device, handheld device Effect: With long-range movement, this intelligent missile tracks and attacks a specified target (target must be within sight when selected). If it misses, it continues to attack one additional time per cypher level until it hits. For example, a level 4 hunter/seeker will attack a maximum of five times. Different hunter/seekers have different effects: 01–50 Inflicts 8 points of damage. 51–80 Bears a poisoned needle that inflicts 3 points of damage plus poison. 81–90 Explodes, inflicting 6 points of damage to all within immediate range. 91–95 Shocks for 4 points of electricity damage, and stuns for one round per cypher level. 96–00 Covers target in sticky goo that immediately hardens, holding them fast until they break out with a Might action (difficulty equal to the cypher level + 2).')
        elif cypher_roll == 536:
            print('Holo PROJECTOR Level:', level,' Wearable: Headband with device on forehead Usable: Handheld device with glass panel Effect: Projects one of the following immobile images in the area described for one hour. The image appears up to a close distance away (long distance if the cypher level is 4 or higher, very long distance if the cypher level is 6 or higher). Scenes include movement, sound, and smell. 01–20 Terrifying creature of an unknown species, perhaps no longer alive in the world (10-foot [3 m] cube) 21–40 Huge machine that obscures sight (30-foot [9 m] cube) 41–50 Beautiful pastoral scene (50-foot [15 m] cube) 51–60 Food that looks delicious but may not be familiar (10-foot [3 m] cube) 61–80 Solid color that obscures sight (50-foot [15 m] cube) 81–00 Incomprehensible scene that is disorienting and strange (20-foot [6 m] cube)')
        elif cypher_roll == 537:
            print('INFERNO WALL PROJECTOR Level:', level + 2,' Usable: Complex device Effect: Creates a wall of extreme heat up to 30 feet by 30 feet by 1 foot (9 m by 9 m by 30 cm) that inflicts damage equal to the cypher level on anything that passes through it. The wall conforms to the space available. It lasts for ten minutes.')
        elif cypher_roll == 538:
            print('INFILTRATOR Level:', level,' Internal: Phases into eye, phases out when used Wearable: Adheres to temple and launches projectile Usable: Handheld device that launches projectile Effect: Tiny capsule launches and moves at great speed, mapping and scanning an unknown area. It moves 500 feet (150 m) per level, scanning an area up to 50 feet (15 m) per level away from it. It identifies basic layout, creatures, and major energy sources. Its movement is blocked by any physical or energy barrier.')
        elif cypher_roll == 539:
            print('INSTANT SERVANT Level:', level,' Usable: Handheld device Effect: Small device expands into a humanoid automaton that is roughly 2 feet (60 cm) tall. Its level is equal to the cypher level and it can understand the verbal commands of the character who activates it. Once the servant is activated, commanding it is not an action. It can make attacks or perform actions as ordered to the best of its abilities, but it cannot speak. The automaton has short-range movement but never goes farther than long range away from the character who activated it. At the GM’s discretion, the servant might have specialized knowledge, such as how to operate a particular device. Otherwise, it has no special knowledge. In any case, the servant is not artificially intelligent or capable of initiating action. It does only as commanded. The servant operates for one hour per cypher level.')
        elif cypher_roll == 540:
            print('INSTANT SHELTER Level:', level + 3,' Usable: Handheld device Effect: With the addition of water and air, the small device expands into a simple one-room structure with a door and a transparent window (two rooms with an internal door if the cypher is level 7 or higher). The structure is 10 feet by 10 feet by 20 feet (3 m by 3 m by 6 m). It is made from a form of shapestone and is permanent and immobile once created.')
        elif cypher_roll == 541:
            print('INTELLECT ENHANCEMENT Level:', level + 2,' Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: Substance adds 1 to Intellect Edge for one hour (or adds 2 if the cypher is level 5 or higher).')
        elif cypher_roll == 542:
            print('INVISIBILITY NODULE Level:', level,' Usable: Crystal nodule affixed to armor Effect: For the next ten hours per cypher level, the armor the nodule is attached to is invisible, making the wearer appear to be unarmored.')
        elif cypher_roll == 543:
            print('KNOWLEDGE ENHANCEMENT Level:', level,' Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: For the next 28 hours, the character has training in a predetermined skill (or two skills if the cypher is level 5 or higher). Although the skill could be anything (including something specific to the operation of one device or something similar), common skills include: 01–10 Melee attacks 11–20 Ranged attacks 21–40 Understanding numenera (sometimes specific to one device) 41–50 Repairing (sometimes specific to one device) 51–60 Crafting (usually specific to one thing) 61–70 Persuasion 71–75 Healing 76–80 Speed defense 81–85 Intellect defense 86–90 Swimming 91–95 Riding 96–00 Sneaking    LIGHTNING WALL PROJECTOR Level: ', level,' + 2 Usable: Complex device Effect: Creates a wall of electric bolts up to 30 feet by 30 feet by 1 foot (9 m by 9 m by 30 cm) that inflicts damage equal to the cypher level on anything that passes through it. The wall conforms to the space available. It lasts for ten minutes.')
        elif cypher_roll == 544:
            print('LIVING SOLVENT Level:', level,' Usable: Canister containing slime Effect: Once released, this organic slime dissolves 1 cubic foot of material each round. After one round per cypher level, the slime dies and becomes inert.')
        elif cypher_roll == 545:
            print('MACHINE CONTROL IMPLANT Level:', level + 2,' Internal: Pill Wearable: Disk that adheres to forehead, temporary tattoo Usable: Injector Effect: When activated, the cypher splits into two pieces. One is affixed to a numenera device and the other to a character. The character can then use their mind to control the device at long range, bidding it to do anything it could do normally. Thus, a device could be activated or deactivated, and a vehicle could be piloted. The control lasts for ten minutes per cypher level, and once the device is chosen, it cannot be changed.')
        elif cypher_roll == 546:
            print('MAGNETIC ATTACK DRILL Level:', level + 2,' Usable: Small sphere with a thick screw protrusion Effect: The user throws this cypher at a target within short range, and it drills into the target for one round, inflicting damage equal to the cypher level. If the target is made of metal or wearing metal (such as armor), the attack is eased.')
        elif cypher_roll == 547:
            print('MAGNETIC MASTER Level:', level + 2,' Wearable: Gloves with metal plates Usable: Small pyramid-shaped metallic device Effect: Establishes a connection with one metal object within short range that a human could hold in one hand. After this connection is established, the user can move or manipulate the object anywhere within short range (each movement or manipulation is an action). For example, the user could wield a weapon or drag a helm affixed to a foe’s head to and fro. The connection lasts for ten rounds per cypher level.')
        elif cypher_roll == 548:
            print('MAGNETIC SHIELD Level:', level + 2,' Wearable: Gloves with metal plates Usable: Small pyramid-shaped metallic device Effect: For ten minutes per cypher level, metal objects cannot come within immediate range of the activated device. Metal items already in the area when the device is activated are slowly pushed out.')
        elif cypher_roll == 549:
            print('MEMORY LENSES Level:', level,' Wearable: Contact lenses, eyeglasses, or goggles Effect: Allows the wearer to mentally record everything they see for thirty seconds per cypher level and store the recording permanently in their long-term memory. This cypher is useful for watching someone pick a specific lock, enter a complex code, or do something else that happens quickly.')
        elif cypher_roll == 550:
            print('MENTAL SCRAMBLER Level: ', level + 2,'Usable: Complex metal and glass device Effect: Two rounds after being activated, the device creates an invisible field that fills an area within short range and lasts for one minute. The field scrambles the mental processes of all thinking creatures. The effect lasts as long as they remain in the field and for ', level,' rounds after, although an Intellect defense roll is allowed each round to act normally (both in the field and after leaving it). Each mental scrambler is keyed to a specific effect. Roll for effect: 01–30 Victims cannot act. 31–40 Victims cannot speak. 41–50 Victims move slowly (immediate range) and clumsily. 51–60 Victims cannot see or hear. 61–70 Victims lose all sense of direction, depth, and proportion. 71–80 Victims do not recognize anyone they know. 81–88 Victims suffer partial amnesia. 89–94 Victims suffer total amnesia. 95–98 Victims lose all inhibitions, revealing secrets and performing surprising actions. 99–00 Victims’ ethics are inverted.')
        elif cypher_roll == 551:
            print('METAL DEATH Level:', level + 2,'Wearable: Wrist-mounted sprayer Usable: Canister with hose Effect: Produces a stream of foam that covers an area about 3 feet by 3 feet (1 m by 1 m), transforming any metal that it touches into a substance as brittle as thin glass. The foam affects metal to a depth of about 6 inches (15 cm).')
        elif cypher_roll == 552:
            print('MONOBLADE Level:', level + 2,'Internal: Injection into fingertip Wearable: Glove Usable: Device similar to hilt Effect: Produces a 6-inch (15 cm) blade that’s the same level as the cypher. The blade cuts through any material of a level lower than its own. If used as a weapon, it is a light weapon that ignores Armor of a level lower than its own. The blade lasts for ten minutes.')
        elif cypher_roll == 553:
            print('MOTION SENSOR Level:', level + 2,'Internal: Injection into spine Wearable: Amulet Usable: Disk that can be affixed to the floor or another surface Effect: Indicates when any movement occurs within short range, or when large creatures or objects move within long range (the cypher distinguishes between the two). It also indicates the number and size of the creatures or objects in motion. Once activated, it operates for one hour per cypher level.')
        elif cypher_roll == 554:
            print('PERSONAL ENVIRONMENT FIELD Level:', level + 2,'Wearable: Belt, medallion, ring Usable: Handheld device Effect: Creates an aura of temperature and atmosphere that will sustain a human safely for 28 hours. The aura extends to 1 foot (30 cm) around the user (double that radius if the cypher is level 7 or higher). It does not protect against sudden flashes of temperature change (such as from a heat ray). A small number of these cyphers (1%) accommodate the preferred environment of a nonhuman, nonterrestrial creature.')
        elif cypher_roll == 555:
            print('PHASE CHANGER Level:', level + 1,' Wearable: Belt, medallion, ring Usable: Handheld device Effect: Puts the user out of phase for one minute (two minutes if the cypher is level 6 or higher). During this time, the user can pass through solid objects as though they were entirely insubstantial, like a ghost. They cannot make physical attacks or be physically attacked.')
        elif cypher_roll == 556:
            print('PHASE DISRUPTOR Level:', level + 2,'Usable: Complex device, plate that affixes to surface, elaborate spray atomizer Effect: Puts a portion of a physical structure (like a wall or floor) out of phase for one hour. It affects an area equal to one 5-foot (1.5 m) cube per cypher level. While the area is out of phase, creatures and objects can pass freely through it as if it were not there, although one cannot see through it, and it blocks light.')
        elif cypher_roll == 557:
            print('POISON (EMOTION) Level:', level + 2,'Internal: Pill, ingestible or injectable liquid Wearable: Lipstick, false fingertip, ring with needle Usable: Injector Effect: The victim feels a specific emotion for one hour. 01–20 Anger. Likely to attack anyone who disagrees with them. Very hard to interact with; all interaction tasks are hindered by two steps. 21–40 Fear. Flees in terror for one minute when threatened. 41–60 Bliss. Cannot focus on any task or take any actions for 1 minute. 61–75 Sadness. All tasks are hindered. 76–85 Complacency. Has no motivation. All tasks are hindered by two steps. 86–95 Joy. Easy to interact with in a pleasant manner; all pleasant interaction tasks are eased. 96–00 Love. Much easier to interact with; all interaction tasks are eased by two steps, but temporary attachment is likely.')
        elif cypher_roll == 558:
            print('POISON (EXPLOSIVE) Level:', level + 1,'Internal: Pill, ingestible or injectable liquid Wearable: Lipstick, false fingertip, ring with needle Usable: Injector Effect: Once this substance enters the bloodstream, it travels to the brain and reorganizes into an explosive that detonates when activated, inflicting 10 points of damage (ignoring Armor). Roll to determine the means of detonation: 01–25 The detonator is activated (must be within long range). 26–40 A specified amount of time passes. 41–50 The victim takes a specific action. 51–55 A specific note is sung or played on an instrument within short range. 56–60 The victim smells a specific scent within immediate range. 61–80 The victim comes within long range of the detonator. 81–00 The victim is no longer within long range of the detonator.')
        elif cypher_roll == 559:
            print('POISON (MIND-DISRUPTING) Level:', level + 2,'Internal: Pill, ingestible or injectable liquid Wearable: Lipstick, false fingertip, ring with needle Usable: Injector Effect: The victim suffers Intellect damage equal to the cypher’s level and cannot take actions for a number of rounds equal to the cypher’s level.')
        elif cypher_roll == 560:
            print('PSYCHIC COMMUNIQUE Level:', level + 2,'Internal: Pill Wearable: Device that adheres to temple Usable: Metallic disk Effect: Allows the user to project a one-time, one-way telepathic message of up to ten words per cypher level, with an unlimited range, to anyone they know.')
        elif cypher_roll == 561:
            print('RAY EMITTER Level:', level + 2,'Internal: Subdermal implant Wearable: Contact lens, glove, ring, wristband, headband, belt buckle, shoulder-mounted device Usable: Handheld device Effect: Allows the user to project a ray of destructive energy up to very long range that inflicts damage equal to the cypher’s level. 01–50 Heat/concentrated light 51–60 Cell-disrupting radiation 61–80 Force 81–87 Magnetic wave 88–93 Molecular bond disruption 94–00 Concentrated cold')
        elif cypher_roll == 562:
            print('RAY EMITTER (NUMBING) Level:', level + 2,' Internal: Subdermal implant Wearable: Contact lens, glove, ring, wristband, headband, belt buckle, shoulder-mounted device Usable: Handheld device Effect: Allows the user to project a ray of energy up to long range (very long range if the cypher is level 6 or higher) that numbs one limb of the target, making it useless for one minute. A small number of these devices (5%) induce numbing that lasts for one hour.')
        elif cypher_roll == 563:
            print('RAY EMITTER (PARALYSIS) Level:', level + 2,' Internal: Subdermal implant Wearable: Contact lens, glove, ring, wristband, headband, belt buckle, shoulder-mounted device Usable: Handheld device Effect: Allows the user to project a ray of energy up to very long range that paralyzes the target for one minute. A small number of these devices (5%) induce paralysis that lasts for one hour.')
        elif cypher_roll == 564:
            print('REALITY SPIKE Level: ', level + 4,' Usable: Metallic spike Effect: Once activated, the spike does not move—ever—even if activated in midair. A Might action will dislodge the spike, but then it is ruined.')
        elif cypher_roll == 565:
            print('REJUVENATOR Level:', level + 2,' Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: Substance restores a number of points equal to the cypher’s level to one random Pool. Roll 1d100: 01–50 Might Pool 51–75 Speed Pool 76–00 Intellect Pool')
        elif cypher_roll == 566:
            print('REMOTE VIEWER Level:', level,' Usable: Device that splits into two parts when activated, one with a glass screen Effect: For one hour per cypher level, the glass screen on one part shows everything going on in the vicinity of the other part, regardless of the distance between the two parts.')
        elif cypher_roll == 567:
            print('REPAIR UNIT Level:', level + level,' Wearable: Shoulder- or arm-mounted launcher, belt-mounted device Usable: Handheld device Effect: Device becomes a multiarmed sphere that floats. It repairs one designated numenera device (of a level equal to or less than its own) that has been damaged but not destroyed. The repair unit can even create spare parts, unless the GM rules that the parts are too specialized or rare (in which case, the unit repairs the device entirely except for the specialized part). Repair time is 1d100 + 20 minutes.')
        elif cypher_roll == 568:
            print('RETALIATION NODULE Level:', level,' Usable: Crystal nodule affixed to armor Effect: For the next 28 hours, anyone striking the armor the nodule is attached to triggers a small burst of electricity that inflicts 1 point of damage (2 points if the cypher is level 4 or higher, 3 points if the cypher is level 6 or higher). No action or roll is required by the armor’s wearer.')
        elif cypher_roll == 569:
            print('SHEEN Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: For one week, the user’s cells are coated with a protective veneer that resists damage (+1 to Armor, or +2 to Armor if the cypher is level 5 or higher) and eases Might defense rolls by two steps. However, healing is more difficult during this time; all recovery rolls suffer a –1 penalty.')
        elif cypher_roll == 570:
            print('SHOCK NODULE Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, each time the weapon the nodule is attached to strikes a solid creature or object, it generates a burst of electricity, inflicting 1 additional point of damage (2 points if the cypher is level 4 or higher, 3 points if the cypher is level 6 or higher).')
        elif cypher_roll == 571:
            print('SHOCKER Level:', level + 4,'Internal: Subdermal implant Wearable: Ring, palm disk Usable: Short rod Effect: Delivers a powerful burst of electricity that shocks any creature touched, inflicting damage equal to the cypher’s level.')
        elif cypher_roll == 572:
            print('SKILL BOOST Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: Dramatically but temporarily alters the user’s mind and body so that one specific physical action they can perform is eased by three steps. Once activated, this boost can be used a number of times equal to the cypher’s level, but only within a 28-hour period. The boost takes effect each time the action is performed, so a level 3 cypher boosts the first three times the action is attempted. The action can be one of a number of possibilities: 01–15 Melee attack 16–30 Ranged attack 31–40 Speed defense 41–50 Might defense 51–60 Intellect defense 61–68 Jumping 69–76 Climbing 77–84 Running 85–92 Swimming 93–94 Sneaking 95–96 Balancing 97–98 Perceiving 99 Carrying 00 Escaping')
        elif cypher_roll == 573:
            print('SLEEP INDUCER Level:', level,' Internal: Pill, ingestible liquid Wearable: Fingertip cusp, ring, glove Usable: Injector, gas sprayer Effect: Touch or ingestion puts the victim to sleep for ten minutes or until awoken by a violent action or an extremely loud noise.')
        elif cypher_roll == 574:
            print('SONIC HOLE Level:', level + 2,'Wearable: Wristband, ring, belt-mounted device Usable: Small handheld device Effect: Draws all sound within long range into the device for one round per cypher level. Within the affected area, no sound can be heard.')
        elif cypher_roll == 575:
            print('SOUND DAMPENER Level:', level + 2,' Internal: Implant Wearable: Wristband, ring, belt-mounted device, boots Usable: Small handheld device Effect: Dampens all sound within immediate range for one minute per cypher level, providing an asset for all creatures in the area to attempt stealthy actions.')
        elif cypher_roll == 576:
            print('SPATIAL WARP Level: 5 Usable: Small metal ring Effect: When affixed to another numenera device that affects a single target at range, that range is increased to 1 mile (1.5 km) with no penalties. Space is temporarily warped in terms of seeing and reaching the target. If direct line of sight is important to the device’s effect, it remains important. Creating the spatial warp functions as one use of the device.')
        elif cypher_roll == 577:
            print('SPEED BOOST Level:', level + 2,'Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: Substance adds 1 to Speed Edge for one hour (or adds 2 if the cypher is level  5 or higher).')
        elif cypher_roll == 578:
            print('STIM Level: 6 Internal: Pill, ingestible liquid Usable: Injector Effect: Eases the next action taken by three steps.')
        elif cypher_roll == 579:
            print('STRENGTH BOOST Level:', level + 2,'Internal: Pill, ingestible liquid Wearable: Adhesive patch that activates when slapped Usable: Injector Effect: Substance adds 1 to Might Edge for one hour (or adds 2 if the cypher is level 5 or higher).')
        elif cypher_roll == 580:
            print('SUBDUAL FIELD Level:', level + 3,'Usable: Complex device Effect: Two rounds after being activated, the device creates an invisible field that fills a specified area (such as a cube of a certain size) within long range of the device. The field lasts for one minute. It affects the minds of thinking beings within the field, preventing them from taking hostile actions. The effect lasts as long as they remain in the field and for ', level,' rounds after, although an Intellect defense roll is allowed each round to act normally (both in the field and after leaving it).')
        elif cypher_roll == 581:
            print('TELEPATHY IMPLANT Level:', level + 2,' Internal: Pill Wearable: Disk that adheres to forehead, temporary tattoo Usable: Injector Effect: The user activates the device and targets one creature within close range. For one hour per cypher level, the device enables two-way long-range mental communication between the user and the target. This lasts for one hour per cypher level. Sometimes multiple cyphers of this type are found together and allow communication between all of them.')
        elif cypher_roll == 582:
            print('TELEPORTER (BOUNDER) Level:', level + 2,' Wearable: Belt, wristband, ring, full bodysuit Usable: Complex device, handheld device Effect: User teleports up to 100 × the cypher level in feet (30 × cypher level in m) to a location they can see. They arrive safely with their possessions but cannot take anything else with them.')
        elif cypher_roll == 583:
            print('TELEPORTER (TRAVELER) Level:', level + 4,' Wearable: Belt, wristband, ring, full bodysuit Usable: Complex device, handheld device Effect: User teleports up to 100 × the cypher level in miles (160 x the cypher level in km) to a location they have previously visited. They arrive safely with their possessions but cannot take anything else with them.')
        elif cypher_roll == 584:
            print('TEMPORAL VIEWER Level:', level + 4,'Wearable: Wristband Usable: Complex device, handheld device Effect: Displays moving images and sound, up to ten minutes per cypher level in length, depicting events that occurred at the current location up to one year prior. The user specifies the time period shown by the viewer.')
        elif cypher_roll == 585:
            print('TIME DILATION NODULE (DEFENSIVE) Level:', level,' Usable: Crystal nodule affixed to armor Effect: For the next 28 hours, the wearer of the armor moves in seemingly random, rapid jumps, a few inches to one side or the other, when attacked. This is an asset that eases attacks by two steps (three steps if the cypher is level 6 or higher).')
        elif cypher_roll == 586:
            print('TIME DILATION NODULE (OFFENSIVE) Level:', level,' Usable: Crystal nodule affixed to a melee weapon Effect: For the next 28 hours, the attacker moves at almost instantaneous speeds when they swing the weapon, easing their attacks by two steps (three steps if the cypher is level 6 or higher).')
        elif cypher_roll == 587:
            print('TRACER Level:', level,' Wearable: Wristband Usable: Handheld device Effect: Fires a microscopic tracer that clings to any surface within short range (long range if the cypher is level 4 or higher, very long range if the cypher is level 6 or higher). For the next 28 hours, the launcher shows the distance and direction to the tracer, as long as it is in the same dimension.')
        elif cypher_roll == 588:
            print('VISAGE CHANGER Level:', level,' Internal: Pill or injection that produces temporary subdermal, malleable implants Usable: Tube of moldable paste Effect: Changes the appearance of one humansized creature, providing an asset to disguise tasks (easing them by two steps if the cypher is level 5 or higher). The change takes ten minutes to apply and lasts for 28 hours.')
        elif cypher_roll == 589:
            print('VISUAL DISPLACEMENT DEVICE\nLevel:', level,'\nForm: Wearable: Belt or bracelet Usable: Handheld device\nEffect: Projects holographic images of the wearer to confuse attackers. The images appear around the wearer. This gives the wearer an asset to Speed defense actions for ten minutes per cypher level.')
        elif cypher_roll == 590:
            print('VOCAL TRANSLATOR Level:', level,' Internal: Pill, ingestible liquid Wearable: Headband Usable: Disk that must be held to forehead Effect: Translates everything said by the user into a language that anyone can understand for 28 hours per cypher level.')
        elif cypher_roll == 591:
            print('WARMTH PROJECTOR Level:', level,' Internal: Subdermal implant Wearable: Bodysuit, belt Usable: Injector Effect: Keeps the user warm and comfortable in the harshest cold temperatures for 28 hours. During this time, the user has Armor equal to the cypher level that protects against cold damage.')
        elif cypher_roll == 592:
            print('WATER BREATHER Level:', level,' Internal: Pill, ingestible liquid Usable: Injector Effect: Allows an air breather to extract oxygen from water for five hours per cypher level so they can breathe underwater.')
        elif cypher_roll == 593:
            print('X-RAY VIEWER Level:', level + 2,' Usable: Glass panel Effect: When held up against a solid surface, this panel allows the user to see through up to 2 feet (60 cm) of material. The panel works only if the cypher’s level is higher than the material’s level. The effect lasts for one minute per cypher level.')
        elif cypher_roll == 594:
            print('PROTECTIVE SERVANT Level:', level + 2,'Usable: Synth pellet (thrown, short range) Effect: Inflates into a humanoid shape about the user’s size. This is a level 3 creature that can understand the verbal commands of the character who activates it. Once it is activated, commanding it is not an action. It can make attacks or perform actions as ordered to the best of its abilities, but it cannot speak. The servant operates for 28 hours, unless the user is attacked before that time, whereupon it “hugs” the character that activated it, stretching to completely cover the character’s normal skin, adhering and conforming to the character’s body shape. This coating doesn’t impair the character. In fact, it grants the character an additional +1 to Armor and an asset to Might defense tasks for up to one hour.')
        elif cypher_roll == 595:
            print('Disease Capsule Level:', level + 2,'Internal: Pill Effect: When ingested, this cypher removes and contains a disease, with a level equal to or less than the cypher level, from the user. After containment of the disease, the pill expels from the user’s mouth ', level,' hours later, and can be safely kept for an unlimited time (it still counts as a cypher). If administered to someone, an expelled pill transmits the encapsulated disease. When found, it’s almost impossible to tell a used disease capsule from a fresh one.')
        elif cypher_roll == 596:
            print('Emotion Wiper Level:', level,'  Internal: Pill or injection Effect: This cypher automatically balances the mood of the user, by causing or channeling a counter response to extreme emotions like depression, anxiety, aggression, psychological stress, sexual arousal, jealousy, guilt or fear.')
        elif cypher_roll == 597:
            print('Energy-Draining Bug Level:', level + 2,' Usable: Small egg-shaped metal container Effect: When activated, this cypher turns into a tiny insectlike construct (a creature whose level is equal to the cypher level) that immediately	flies toward a target chosen by the user within long range. The target must succeed in a Speed defense roll to avoid having a random cypher drained. At the beginning of the next turn – assuming the user is still alive– the bot will fly back to him, releasing the energy stolen from the target’s cypher via its sting. The energy restores the user an amount of points, to any stat Pools he wishes, equal to the level of the drained cypher.')
        elif cypher_roll == 598:
            print('Helper Clamps Level:', level,'  Wearable: Two adhesive head clamps Effect: Enhance the cooperation between two living creatures for one hour. When activated, each user must wear one of the clamps on his head. If they attempt a complementary action (page 101 of the Numenera corebook), they reduce the	difficulty of the action attempted by the other character by one step (instead of gaining a bonus to their rolls).')
        elif cypher_roll == 599:
            print('Liquid Wisdom Level:', level + 2,'Internal: Ingestible liquid Effect: Gives the user a preternatural danger sense for one hour. As a result, the user automatically senses ambushes or traps with a level equal or less then the cypher level.')
        elif cypher_roll == 600:
            print('Solipsistic Ink Level:', level,'  Usable: Small vial of ink Effect: Half of the ink can be used to write a small message (maximum 25 words). After a very short while, the text become unreadable as its prints change into meaningless glyphs. The other half of the liquid can be drunk by a subject. The ink embeds powerful nanobot in the drinker’s brain, allowing him to decipher the message hidden in the text.')
        elif cypher_roll == 601:
            print('Synesthetic Inducer Level:', level,' Wearable: Disk that must be held to forehead Usable: Pill or injection Effect: Allows the user to perceive the surrounding environment through a synesthetic vision for one hour. As a result, this cypher prevents all negative effects related to blindness, deafness, anosmia, loss of touch or taste, as well as balance disorder.')
        elif cypher_roll == 602:
            print('Architectural Analyzer Level:', level,' Form:  Handheld device, Visor Effect:  Using this Cypher on a building within sight grants you a wide variety of facts about its construction, including all entrances, number of windows, and any glaring structural weaknesses.  For the next 28 hours you enjoy an Asset on rolls related to harming or reinforcing the building.')
        elif cypher_roll == 603:
            print('Biological Interface Level:', level,' Form:  Organic pod attached to skin Effect:  Allows you to access to biologically based computer systems for the next 28 hours, and provides two Assets on related tasks.')
        elif cypher_roll == 604:
            print('Chemical Suit Level:', level + 1,' Form:  Skintight suit Effect:  Provides 5 points of Armor against chemical attacks and effects for the next 8 hours.')
        elif cypher_roll == 605:
            print('Automaton Interrogator Level:', level + 2,' Form:  Hovering sphere, Visor Effect:  One automaton within line of sight provides you with all of the answers it knows about a particular topic.  The Cypher even translates its machine language into Truth for you to understand')
        elif cypher_roll == 606:
            print('Bypass Key Level:', level + 1,' Form:  Small glowing device Effect:  Once used, this key grants you access through a single electronically locked door.  Grants you two Assets when dealing with any computer systems behind that door, due to your perceived level of access.')
        elif cypher_roll == 607:
            print('Data Assistant Level:', level,' Form:  Small disk that projects a holographic person Effect:  An intelligent assistant program assists you for the next 8 hours, memorizing any information you encounter for later retrieval and providing an Asset on tasks related to data manipulation.')
        elif cypher_roll == 608:
            print('Disassembly Glove Level:', level + 1,' Form:  Glove studded with buttons Effect:  Once donned, you may activate the glove to attack a nearby machine for 8 damage as its components fly apart.  This power is at your command through the glove for the next hour.')
        elif cypher_roll == 609:
            print('Electrical Overload Level:', level + 1,' Form:  Handheld device Effect:  Destroys one powered device or system within Long distance, such as a security panel or force field generator. ')
        elif cypher_roll == 610:
            print('Defense Doll Level:', level + 2,' Form:  Bronze toy Effect:  The doll comes to life as a level 4 creature, attacking anything that attempts to harm you for the next four hours.')
        elif cypher_roll == 611:
            print('Dissection Harness  Level:', level + 1,' Form:  Harness with many tiny robotic arms bearing drills and saws Effect:  Provides +2 damage on all of your attacks made against targets within Immediate range for the next hour.')
        elif cypher_roll == 612:
            print('Energy Visor Level:', level,' Form:  Visor Effect:  Provides vision of all power flowing through walls and other surfaces, allowing you to find sources of power or devices being powered by an energy source, depending on where you start.  This effect lasts for 8 hours.')
        elif cypher_roll == 613:
            print('Equipment Movement Ray Level:', level + 2,' Form:  Handheld device, glove Effect:  Allows you to move any object you concentrate on, as though using telekinesis, up to two tons on weight.  This ability may be used on multiple pieces of equipment, but it only lasts for ten minutes.')
        elif cypher_roll == 614:
            print('Floorplate Lifter Level:', level,' Form:  Handheld device Effect:  For the next 8 hours you may use this device to pull up floor plates.  This may allow you access to electrical or other more dangerous utility systems, or creatures hiding within the floors.')
        elif cypher_roll == 615:
            print('Gravity Negation Harness Level:', level + 1,'Form:  Harness Effect:  Temporarily negates gravity from affecting you, causing you to float weightlessly.  You do not suffer falling damage unless flung at the ground somehow.  Allows you to “fly” nearly any direction you are pushed.  Effect lasts for one hour.')
        elif cypher_roll == 616:
            print('Field Disruptor Level:', level + 1,'Form:  Handheld device, Visor Effect:  Shuts down one forcefield within Immediate distance.  Will not work on the Shimmering Spire’s forcefield (it’s too powerful).')
        elif cypher_roll == 617:
            print('Forcefield Hole Level:', level,' Form:  Handheld device Effect:  Makes a two meter wide hole in a forcefield or wall.')
        elif cypher_roll == 618:
            print('Guided Mutation Monitor Level:', level + 4,' Form:  Handheld device Effect:  If used while you are being mutated, allows you to choose rather than roll your mutation from the table.')
        elif cypher_roll == 619:
            print('Holographic Cover Level:', level + 1,'Form:  Handheld device Effect:  Creates a one meter wide by three meter tall forcefield that’s virtually impervious to damage.  The field remains vertical wherever you place it for ten minutes, during which time it can be used for cover in combat or to hold something up.')
        elif cypher_roll == 620:
            print('Laser Sword Level:', level + 3,' Form:  Handheld device Effect:  A handle projects a coherent blade of energy capable of cutting through nearly any material.  You may use it to simply cut holes in things, or in combat where it deals 8 ambient damage on each hit.  The beam lasts for ten minutes.')
        elif cypher_roll == 621:
            print('Liquid Director Level:', level + 2,' Form:  Glove and wristband Effect:  Once activated, you become able to direct the movement of any liquid you can see through concentration.  Even large pools of water or other, stranger materials can be moved at up to ten feet (3 meters) per round.  This ability lasts for 8 hours.')
        elif cypher_roll == 622:
            print('Item Summoner Level:', level,' Form:  Glove Effect:  Summons to you an object that you have touched before.  This object must be small and light enough to be held in one hand.  The object flies through the air to your location, though if it is far away it may take up to several hours to get there.')
        elif cypher_roll == 623:
            print('Lift Plate Level:', level + 1,' Form:  Large metal plate Effect:  This plate, when activated, will take you and up to 4 other people on a flight up into the sky. You can direct the speed and stopping point, and can descend back down. Only moves vertically. Lasts 8 hours.')
        elif cypher_roll == 624:
            print('Media Defense Helmet \nLevel:', level,' Form:  Helmet with visor Effect:  You are immune to the negative effects of media overload or other attacks on your senses.  This effect lasts for 4 hours.')
        elif cypher_roll == 625:
            print('Nervous System Rejuvenator \nLevel:', level + 2,'Form:  Injector, pill Effect:  You regain 10 points to your Speed pool and are cured of any disease affecting your nervous system.')
        elif cypher_roll == 626:
            print('Peacekeeper Medallion \nLevel:', level + 1,' Form:  Silver Badge Effect:  Automatons will not attack you.  This effect lasts for 2 hours.')
        elif cypher_roll == 627:
            print('Portable Diplomat \nLevel:', level,' Form:  Handheld device projecting a holographic person Effect:  For the next 8 hours you have a personal diplomat at your disposal, capable of speaking nearly any language and providing two Assets on related social rolls.  Some people don’t like talking to holograms, however, and see this as an insult.')
        elif cypher_roll == 628:
            print('Oddity Multiplier \nLevel:', level + 1,'Form:  Metal box Effect:  An Oddity within your possession is duplicated, up to two times.')
        elif cypher_roll == 629:
            print('Personal Countermeasure  \nLevel:', level + 1,' Form:  Belt, bracelet Effect:  Firing defensive lasers and putting up small forcefields, you gain a +6 bonus to your Armor against all ranged attacks for the next 4 hours.')
        elif cypher_roll == 630:
            print('Robotic Uniter \nLevel:', level + 1,'Form:  Handheld device Effect:  You link two automatons together so that if one is loyal or friendly to you, so is the other.  From this point forward the two machines are linked, sharing some of their knowledge and intelligence with one another.')
        elif cypher_roll == 631:
            print('Sensitivity Suit \nLevel:', level,' Form:  Skintight suit Effect:  You become extremely sensitive to touch, granting you two Assets on perception related tasks as you feel the air, vibrations in the ground, and other nearly undetectable information.  This effect lasts for 4 hours.')
        elif cypher_roll == 632:
            print('Temporal Dilator \nLevel:', level,' Form:  Handheld device Effect:  You bend time slightly, allowing you to reroll one roll you just made.  Activating this Cypher does not take an action, so long as it’s already in your hand.')
        elif cypher_roll == 633:
            print('Trap Detector \nLevel:', level + 1,' Form:  Handheld device Effect:  For the next 4 hours, so long as this device is in one hand, you notice all technological traps within Short distance.')
        elif cypher_roll == 634:
            print('Step Skipper \nLevel:', level,' Form:  Boots, belt Effect:  You teleport slightly ahead of yourself on each step, allowing you to double the distance you move.  This effect lasts for one hour.')
        elif cypher_roll == 635:
            print('Tourist Teleporter  \nLevel:', level,' Form:  Handheld device, Visor Effect:  You and up to four other people are teleported to another area within long range.  The location you arrive in will be relatively safe, overlook a nice vista, and is near where there once were food vendors.')
        elif cypher_roll == 636:
            print('Wall Walker Gloves \nLevel:', level + 2,'Form:  Gloves Effect:  You can scale walls easily on your hands, taking your move as usual up vertical surfaces.  You may not carry items while doing so.  This effect lasts for 4 hours.')
        elif cypher_roll == 637:
            print('Electric Shroud \nLevel:', level+2,'Form: Cape or veil Effect: You become invisible to all automatons and electronic devices for a number of hours equal to the level')
        elif cypher_roll == 638:
            print('Skyview Display \nLevel:', level + 2,'Form: Holographic display Effect: You gain an aerial view of your surrounding area, up to 10 miles in each direction. This lasts for a number of minutes equal to the level')
        elif cypher_roll == 639:
            print('Sun Bender \nLevel:', level + 1,'Wearable: Glove Usable: Handheld device Effect: Choose an outdoor circular area within long range, up to 20 yards (18.29 meters) in diameter. This area becomes lit up by daylight, no matter the actual time of day, lasting for one hour. If used in the middle of the afternoon, this cypher has little effect. ')
        elif cypher_roll == 640:
            print('Force Sphere \nLevel:', level + 3,'Wearable: Shoulder pad Usable: Handheld device Effect: A beam from the sky projects a stationary spherical forcefield around your body, protecting you from all external damage for one minute, but keeping you from interacting with anything outside the sphere')
        elif cypher_roll == 641:
            print('Grav Bomb \nLevel:', level,'Form: Spherical device with detonator Effect: Can be thrown a short distance. Explodes in an immediate radius, increasing the pull of gravity in the immediate area for ten minutes. The difficulty of all physical actions attempted in the area is increased by level of cypher. Moving through (or out of) the area is the equivalent of moving a long distance.')
        elif cypher_roll == 642:
            print('Acid Spray \nLevel:', level, 'Form: Cylinder that projects one eggshaped device up to a long distance. Explodes in an immediate radius, spraying acid that inflicts 6 points of damage.')
        elif cypher_roll == 643:
            print('Heat Beam \nLevel:', level, 'Form: Synth device that can be strapped to one’s wrist. Emits a beam of energy up to a long distance, inflicting 5 points of damage from the heat. All creatures within immediate range of the target suffer 1 point of damage as well.')
        elif cypher_roll == 644:
            print('Quick Patch \nLevel:', level,'Form: adhesive patch that activates when slapped on flesh. Immediately restores 4 points to the target’s Speed Pool.')
        elif cypher_roll == 645:
            print('Singing Crystals \nLevel:', level,'Form: Glimmering pair of crystals. When the devices are activated, any sound produced near one crystal is emitted by the other. Range is unlimited, and the crystals remain active for 28 hours.')
        elif cypher_roll == 646:
            print('Blinding Poison \nLevel:', level,'Form:thick liquid that can easily be applied to a blade or needle. Anyone affected by this poison has his vision inverted; for ten minutes, all he can see is the inside of his own eyes and optic nerves (effectively, he is blind). ')
        elif cypher_roll == 647:
            print('Proximity Mine \nLevel',level,'Form: Small synthsteel canister. Effect: Three rounds after activation, it begins to sense movement within immediate range. If it detects motion, it explodes with flame in an immediate radius for 6 points of damage.')
        elif cypher_roll == 648:
            print('Speech Enhancer \nLevel:', level,'Form: Nanites in a solution in an injector. Effect: A creature injected is trained in persuasion for the next 28 hours.')
        elif cypher_roll == 649:
            print('Teleforce Wall \nLevel:', level,' Form: Handheld device. Effect: Produces a force field that is up to 20 feet wide and 20 feet tall. Anyone touching the wall is instantly teleported backward 15 feet. Lasts', level * 10, 'Minutes')
        elif cypher_roll == 650:
            print('Sleep Beetle \nLevel:', level,'\nForm: Tiny insect automaton.\nEffect: User chooses a target within sight, and the missile tracks and attacks that target. If it misses, it continues to attack until it hits or it misses four times. If it hits, it injects a poison that puts the victim in a coma for one minute.')
        elif cypher_roll == 651:
            print('Sadness Mist \nLevel:', level, '\nForm: Set of tubes.\nEffect: Sprays a stream of liquid up to a short distance. Where it impacts, it forms a cloud of mist in an immediate radius. All creatures in the cloud drop what they are holding and become horribly sad for one minute, during which the difficulty of all actions is increased by two steps.')
        elif cypher_roll == 652:
            print('Nanite Armor \nLevel:', level,'\nForm: Needle that can be inserted into flesh.\nEffect: While inserted, it creates a shimmering energy shield around the user for one hour, during which time he gains +3 to Armor.')
        elif cypher_roll == 653:
            print('Foam Grenade \nLevel:', level,'\nForm: Small synthsphere.\nEffect: Can be thrown a short distance. Explodes in an immediate radius, spraying foam that extinguishes flame (and smells very bad).')
        elif cypher_roll == 654:
            print('Language Helper\nLevel:', level,'\nForm: Handheld device.\nEffect: When the user speaks into the device, her words are translated into all languages understood by everyone within immediate range, with the audio of each translation aimed at the appropriate listeners. Functions for four hours.')
        elif cypher_roll == 656:
            print('Rockglue\nLevel:', level,'\nForm: Powder in a tube.\nEffect: Mixed with water, this powder instantly hardens into a rocklike material. Can cover an area up to 15 feet by 15 feet (5 m by 5 m).')
        elif cypher_roll == 657:
            print('Teleporter\nLevel:', level,'\nForm: Handheld device.\nEffect: User can teleport up to a long distance away and, if desired, bring one other creature of the same size.')
        elif cypher_roll == 656:
            print('Force Ring\nLevel:', level,'\nForm: ring with a crystal.\nEffect:Allows the user to project a ray of raw force up to 200 feet (61 m) that inflicts 5 points of damage from the impact')
        elif cypher_roll == 657:
            print('Thought Reader\nLevel:',level,'\nForm: rod with some switches.\nEffect: When activated, the user learns the surface thoughts of all creatures within immediate range. The effect lasts for one round.')
        elif cypher_roll == 658:
            print('Liquid Speed\nLevel:',level,'\nForm:liquid in an injector. If a creature is injected, it gains +1 to its Speed Edge for one hour.')
        elif cypher_roll == 659:
            print('Locator\nLevel:',level,'\nForm: Handheld Device. Once the device is touched to a creature or object, for the next 28 hours, the holder of the crystal knows the distance and direction to the creature or object, as long as it is in the same dimension.')
        elif cypher_roll == 660:
            print('Warmth Vest\nLevel:',level,'\nForm: mesh vest. Once activated, the vest keeps the wearer at a comfortable temperature for 28 hours. During this time, the wearer gains +4 to Armor against cold or heat damage.')
        elif cypher_roll == 661:
            print('Liquid Armor\nLevel:',level,'\nForm: liquid in a tube. Hardens and toughens the drinker’s flesh for one hour, granting +1 to Armor.')
        elif cypher_roll == 662:
            print('Food Cleanser\nLevel:', level, '\nForm: small synth cube. When activated by pressing one side, the cube emits a burst of energy in short range. All poisons, food and water contaminants, and dangerous viral organisms in the area are immediately eliminated.')
        elif cypher_roll == 663:
            print('Fear Beam\nLevel:',level,'\nForm: Handheld device.\nEffect: Fires a beam at three different targets within long range at the same time. Affected targets cower in fear, losing all actions, for two rounds.')
        elif cypher_roll == 664:
            print('DEATH VISION\nLevel:', level + 3,'\nUsable: Glove with attached device\nEffect: Touched target sees a vision of its final moments of life, stunning the target so that it loses its next turn. The target’s final moments of life could be minutes, months, or years away.')
        elif cypher_roll == 665:
            print('DETONATION (KILLS TIME)\nLevel:', level + 4,'\nWearable: Wristband projector (long range)\nUsable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range)\nEffect: Bursts in an immediate radius, decaying time in the area. Living creatures take damage equal to the cypher level that ignores Armor, and they are aged the same number of years as the cypher level.')
        elif cypher_roll == 666:
            print('FOREKNOWLEDGE\nLevel:', level + 3,'\nWearable: Adheres to the temple\nEffect: User knows exactly what will happen next round, and thus can treat any task attempted in the subsequent round as routine if the difficulty of the task does not exceed the cypher’s level. If the task difficulty does exceed the cypher’s level, the foreknowledge gained is less certain, but the difficulty of any attempted task is reduced by two steps.')
        elif cypher_roll == 667:
            print('TIME SLIP\nLevel:', level + 2 ,'\nUsable: Metallic sphere\nEffect: User and all allies within long range are instantly transferred 1d20 + 5 hours into the future. For them, no time elapses. For all other creatures, it’s as if the targets ceased to exist during the intervening period.')
        elif cypher_roll == 668:
            print('Reducer\nLevel:', level + 2,'\nComplex handheld device that shrinks the user to one-tenth her normal height for one hour. The user retains her mass. The user’s stats do not change, but she gains an asset for stealth tasks and Speed defense rolls.')
        elif cypher_roll == 669:
            print('Memory milk\nLevel:', level + 2,'\nLuminescent milky fluid that, if drunk, causes the imbiber to vomit a soupy mixture that contains copies of all his memories, which can be accessed by drinking the mixture.')
        elif cypher_roll == 670:
            print('Camo cloak\nLevel:', level,'Wearable: A square of thin synth that can be wrapped around a human like a cloak. When activated, the fabric takes on the colors and textures of everything around the wearer for ten minutes. This effect reduces the difficulty of hiding or sneaking by two steps.')
        elif cypher_roll == 671:
            print('REGENERATION ENGINE\nLevel:', level,'\nInternal: Pill, ingestible liquid\nWearable: Adhesive patch that activates when slapped\nUsable: Injector\nEffect: Each time the user uses a cypher, an artifact, or a special ability from her type or focus during the next 28 hours, she also restores a number of points to her Pools equal to the regeneration engine’s level.')
        elif cypher_roll == 672:
            print('MIND REJUVENATOR\nLevel:', level + 2,'Internal: Pill, ingestible liquid\nWearable: Adhesive patch that activates when slapped\nUsable: Injector\nEffect: Substance adds +1 to the user\’s Intellect Edge for one hour. In addition, the user’s maximum Intellect Pool increases by 4 for three days.')
        elif cypher_roll == 673:
            print('CORPSE REVIVER\nLevel:', level + 2,'\nUsable: Synth spike\nEffect: Restores life to one corpse (if dead no longer than one minute and still essentially in one piece) or restores a number of points equal to the cypher level to a character\’s Pools.')
        elif cypher_roll == 674:
            print('ACCESS\nLevel:', level + 2,'\nUsable: Injector containing biomechanical amoeboids\nEffect: For one hour, the user can pass into or out of most structures whose level is less than or equal to the cypher level as if the solid barrier was insubstantial. In fact, the barrier becomes selectively permeable to the user and her equipment. She can pass into or out of structures of architecture, but doing so requires her full concentration over the course of three rounds.')
        elif cypher_roll == 675:
            print('DEEP ADAPTATION\nLevel:', level + 2,'\nUsable: Injector containing biomechanical amoeboids\nEffect: Physically adapts user to survive deep aquatic areas and hostile environments and provides immunity to high pressure and cold, the ability to breathe underwater, and the ability to see in dark water for a number of hours equal to the level. ')
        elif cypher_roll == 676:
            print('ELECTRIC JOLT\nLevel:', level + 2,'\nUsable: Injector containing biomechanical amoeboids\nEffect: For the next 28 hours, the user can generate an electrical burst at a target within short range that inflicts damage equal to the cypher level.Alternatively, her melee attacks deal 1 additional point of damage through electrical discharge.')
        elif cypher_roll == 677:
            print('Moisture Evaporator Grenade\nLevel:', level + 2, 'Wearable: Wristband projector (long range) Usable: Explosive device or ceramic sphere (thrown, short range) or handheld projector (long range)\nEffect: Bursts in an immediate radius, draining moisture from everything within the area. Living creatures take damage equal to the cypher level. Water in the area is sucked into a central globe.')
        elif cypher_roll == 678:
            print('Telepathic Emitter\nLevel:', level + 2,'Internal: Subdermal implant Wearable: Contact lens, glove, ring, wristband, headband, belt buckle, shoulder-mounted device Usable: Handheld device\nEffect: Allows the user to project a ray of energy up to 200 feet (60 m) that opens a telepathic communication channel between her and the target for one minute.')
        elif cypher_roll == 679:
            print('SERPENT BLOOD\nLevel:', level + 2,'Usable: Injector\nEffect: For 28 hours, the user’s touch becomes acidic, granting her a touch attack (that she is practiced with) that inflicts damage equal to the cypher level on a target.')
        elif cypher_roll == 680:
            print('VACUUM (Cypher)\nLevel: 1d6 + 3\nForm: Handheld device\nEffect: A target within long range is enclosed in a bubble of force that contains the target and a vacuum. The force bubble level is equal to the cypher’s. A living creature unsuited to a vacuum moves one step down the damage track each round in the bubble. However, at the point where they should die, they fall unconscious and remain so for about a minute. If the victim is immediately given aid, they can be revived. If not, they die.')
        elif cypher_roll == 681:
            print('DISPLACEMENT\nLevel: 1d6 + 3\nForm: Handheld device\nEffect: A target within immediate range is teleported 200 feet (61 m) in a direction specified by the user, even into an area the user can’t see, such as directly down into the ground. The victim displaced into an area that would normally be solid displaces enough matter to arrive without being immediately damaged or destroyed.')
        elif cypher_roll == 682:
            print('VANISHER\nLevel:', level + 2,'\nEffect: The user becomes invisible for ten minutes, during which time she is specialized in stealth and Speed defense tasks. This effect ends if she does something to reveal her presence or position—attacking, using an ability, moving a large object, and so on. If this occurs, she can regain the remaining invisibility effect by taking an action to focus on hiding her position')
        elif cypher_roll == 683:
            print('TISSUE REGENERATION\nLevel:', level + 4,'\nEffect: For the next hour, the user regains 1 point lost to damage per round, up to a total number of points equal to twice the cypher’s level. As each point is regained, he chooses which Pool to add it to. If all his Pools are at maximum, the regeneration pauses until he takes more damage, at which point it begins again (if any time remains in the hour) until the duration expires.')
        elif cypher_roll == 684:
            print('TELEPORTER (TRAVELER)\nLevel:', level + 4,'\nEffect: User teleports up to 100 × the cypher level in miles to a location he has previously visited or seen. He arrives safely with his possessions but cannot take anything else with him. ')
        elif cypher_roll == 685:
            print('TELEPORTER (BOUNDER)\nLevel:', level + 2,'\nEffect: User teleports up to 100 × the cypher level in feet to a location he can see. He arrives safely with his possessions but cannot take anything else with him.')
        elif cypher_roll == 686:
             print('STRENGTH ENHANCER\nLevel:', level,'\nEffect: The difficulty of any noncombat task involving raw strength—such as breaking down a door, lifting a heavy boulder, forcing open elevator doors, competing in a weightlifting competition, and so on—is decreased by two steps for one hour. ')
        else:
            print('Voice Trapper \nLevel: ', level + 2,'\nWearable: Bracelet or necklace Usable: Small handheld device\nEffect: Allows the user to speak with the voice of another creature for ten minute. Inorder to function properly, this cypher first needs to be activated and listen to a creature talking for at least one minute.')

def oddity():
    roll = random.randint(1, 10)
    if roll < 10:
        oddity_list = [
            'A transparent cylinder filled with living insects',
            'A metal cube that is searing hot on one side and freezing cold on the other',
            'A sealed synth canister filled with loose orbs the size of marbles',
            'A pair of vibrating crystal shards that defy gravity and always remain within 5 inches of each other.'
            'A oynx tablet that records your dreams when you sleep'
            'A spyglass that always shows the world suffering a terrible storm'
            'A small orb in which small birds fly but never eat or leave'
            'A white cube that turns red and emits a loud noise when within 5 feet of a fire',
            'A small synthsteel disc that when flipped remains suspended in the air, spinning indefinitely until it is grabbed again.',
            'A synth rod that makes your hair stand up when held',
            'A smooth palmsized synthsteel sphere, that when whispered to, retains the words given to it. Putting it up to your ear reveals that the sphere will repeat what was whispered to it until a new message is given to the sphere.',
            'A metal disk that depicts writhing tentacles. The rim of the disk has the word “NEVINYRRAL” on it.',
            'A large jar that contains a bubbling red liquid which produces no heat. When the jar is opened, the liquid disappears',
            'A pouch of cubes that when dissolved in water, turn the water into a tasty broth.',
            'A pouch of three dimensional shapes that adhere to each other, allowing for them to be stacked in various shapes and designs. Applying a little bit of force allows you to pull the shapes apart.',
            'A compass that always points to you',
            'A rounded pyramid made of polished stone that is inexplicably slippery and hard to pick up and hold.',
            'A rectangular prism with 16 buttons on it, each a different color. Pressing them causes a pleasant ringing noise like that of a bell. The pitch increases as you press the buttons from left to right.',
            'A small synthsteel cylinder that produces a small flame no matter the conditions',
            'A small rectangular device with a spray nozzle and 3 buttons on the side and 1 on the back where the thumb can be placed. Pressing the back button sprays a colorful paint and the color can be changed by pressing the side buttons in different combinations',
            'A synthsteel tube that when blowing air through makes a whistle ten times louder than normal.',
            'A small synth ball that, if dropped or thrown, lands five minutes in the future.',
            'An amber amulet that contains tiny iridescent insects moving through a maze-like track',
            'A carapace container that produces a continuous, soothing floral scent ',
            'A pair of silk gloves that are always soothingly warm when worn',
            'An amber lens through which the world seems to be broken into pleasing fragments of color',
            'A wristband that purrs and chitters contentedly if dipped in water every few days',
            'A watery sphere in which tiny creatures race round and round',
            'A rod that, when activated, creates a parasol of filmy insect-like wings',
            'Tiny stones in a box that jump and shake without being touched',
            'A carapace container that produces sounds like a chirping insect ',
            'A silk robe with designs that move and shift in pleasing patterns',
            'A brain and eyes in a jar. It appears to be living and aware'
            'A hairpin that is also a living plant'
            'A small cocoon containing a tiny humanoid made of glass which responds positively to music. ',
            'A set of 5 balls of glowing energy that can be held in the hand.  Each sparks and sizzles when moved. ',
            'A control device which alters the color spectrum in the area slightly when knobs are turns.  Blues become more purple, reds more orange, etc. ',
            'Ten feet of cable that moves when small sounds are made near it. ',
            'A metal bottle that releases horrible smells when opened. ',
            'A cube covered in buttons, each of which causes matter and energy to do strange things.  One freezes liquids for a few seconds, another makes fire solid for a moment, etc. ',
            'An oddly shaped stick that looks like a piece of frozen lightning. ',
            'A ring which projects a tiny spherical forcefield a small distance away. ',
            'A set of clothes which change color to complement whatever else you’re wearing. ',
            'A mouth-covering mask that produces helium when breathed through. ',
            'A scroll of unbreakable paper covered in ancient symbols and diagrams, including a crude map of a city. ',
            'An eye mask that causes nightmares when worn during sleep. ',
            'A rectangular display which replays a violent conflict in what appears to be a city block on which it was found.  It’s mostly video of alien-looking people fleeing robotic invaders. ',
            'A headband which causes another person nearby to experience your hunger. ',
            'A set of blocks that lock together magnetically when stacked in certain shapes. ',
            'A detailed spherical map of a distant world, with seemingly real-time weather. ',
            'A stylus that dispenses black ink, the use of which forces the bearer’s writing to look stylishly angular. ',
            'A pair of goggles which cause the wearer to see buildings that aren’t actually there, but seem to be generated by the bearer’s own imagination. ',
            'A hovering glow globe that follows you around, which will learn your language over the course of a month.  After this time, the globe will respond to complex verbal commands. ',
            'A gem which, when placed on the forehead, allows the bearer to see as though they were perched at the top of any chosen building within sight. ',
            'A mechanical centipede that eats rusted metal. ',
            'A triangular plate of transparent plastic that constantly displays moving images of strange people and places. ',
            'A four-armed jacket that keeps the wearer comfortably cool. ',
            'A pad of buttons which appears rather damaged at first, but becomes less broken and dirty over time, as though it were travelling through time backwards. ',
            'A metal hand which floats in the air, picking up whatever small object you think of.  Keyed to the mind of the last person to touch it. ',
            'A device covered in tubes and hoses.  Makes noise when near powerful numenera or human children. ',
            'A ceramic rod which, when held aloft, gives the bearer the feeling of jovial drunkenness.  Will not work on visitants, abhumans, or some mutants.',
            'Contact lenses which project all kinds of readings and lighted trails on the wearer’s vision. ',
            'A bottle filled with blue sand, each grain of which is attracted to ceramic objects like a magnet to metal. ',
            'A pair of gloves which allow touch-based interaction with various computer console systems.  With a snap of your fingers, lighted consoles are projected into the air around you. ',
            'A chain necklace with a glowing amulet which causes the wearer’s mind to wander. ',
            'A stretchy tab which can be chewed like gum and never loses its strange flavor. ',
            'A wind instrument that plays brassy music in a tone range that varjellen find intoxicating. ',
            'A pair of metal shoulder pads attached to a cape, strung together with chain and an important looking amulet. ',
            'A ceramic device which, when placed in a pocket, allows the bearer to lounge as though in a recliner, floating in space about a meter above the ground. ',
            'A set of five matching black and violet outfits, each covered in useful straps and pockets. ',
            'Headphones which wrap snugly around the back of the head, constantly playing calm ambient music. ',
            'A belt studded with brass disks, each of which glows a different color when the wearer becomes embroiled in combat, romance, or other intense situations. ',
            'Hooded robes in a black and red checker pattern, the cloth of which is utterly resistant to water. ',
            'A colorful 28in synth board with unknown writing that floats a few inches above the ground.  Performs poorly over water. ',
            'A thin rod that can bring small insects back to life with a touch. ',
            'A lighted plate of glass bearing an interactive map of a city quadrant, providing directions to a home. ',
            'A disk which projects a set of holographic spheres of various sizes, all orbiting a central cube. ',
            'A pair of shoes which grip extremely well to prior-world streets.  May even provide an Asset on certain tasks (running, jumping, etc.). ',
            'A metal box with more room on the inside than the outer volume would imply (about a cubic meter inside).  Can only store certain objects (prior world children’s toys). ',
            'A bracelet that will not allow the wearer to fall off high edges.  Instead the wearer is gently levitated back to the precipice.  ',
            'An intricate silver medallion which opens unlocked hatches and doors when walking toward them. ',
            'Bracers which make the wearer immune to the effects of strong winds. ',
            'A jewel carved into the shape of an elegant face. Laughs softly when the sun goes down. ',
            'A small metal bird that gets agitated when other automatons approach. ',
            'A crystal statuette engraved with indecipherable text. ',
            'A circular adhesive patch which makes the wearer’s dreams be about a specific alien world. ',
            'A metallic ball which hits with a heavy force when thrown. Able to knock down a person if well aimed. ',
            'A tiny statue of a frog-like goddess, comprised of a green glowing stone. ',
            'A tube of metal that appears in your hand whenever you think of it, so long as you’re not holding anything else and the tube is within Immediate range. ',
            'A black cape that blurs the edges of your visage, as though you were a mirage. ',
            'A handheld device which, when activated, forces you to think about the last person you killed. ',
            'A tab which, when held under the tongue, gives you a top down image of an elaborate tower in your mind. ',
            'A computer pad containing thousands of images of a happy family of visitants. ',
            'A small floating automaton which repairs your clothing when it rips or frays. ',
            'Sunglasses which don\'t fall off your face.Protects against most kinds of eye damage. ',
            'A white box containing a dozen tiny bugs, each one unique and beautiful.  So long as the bugs are in the box they will live forever. ',
            'A canister of sprayable paint, with a dial to select color. ',
            'A device on a tripod that can temporarily project a soft blanket onto an area or person. ',
            'Handheld scanner which can detect nearby crustaceans. ',
            'A mechanical insect that follows you around. After an hour of analyzing you, advertisements begin appearing on certain walls and other surfaces, custom tailored to your current dilemma, speaking in an unknown language. ',
            'Goggles that allow you to see through plastic. ',
            'An ink pen that writes on its own in an unknown language when you’re not using it.  Sometimes it draws diagrams of internal organs. ',
            'A small colorful synth object with a handle that fires a harmless beam of bright blue light from the other end. ',
            'A belt that makes the air extremely humid around you. ',
            'A bandana that keeps you from sweating. ',
            'Contact lenses which allow you to see transparent people that appear to be going about their lives, usually in places that were once cities in prior ages. They can not be interacted with. ',
            'A 3in pointer that burns triangle shapes into flammable objects. ',
            'Two ceramic disks which hover over your shoulders if placed there. ',
            'A shin sized metal disk which projects a holographic recording depicting an alien invasion of an unknown city. ',
            'A jacket made of metal hexagons. ',
            'A synth ball that bounces according to your will, so long as you concentrate on it. ',
            'A bowl that turns sweet food into sour food when placed inside it. ',
            'A marker that can only write on human skin. ',
            'A shard of synthglass that displays the image of the brain of whoever holds it. ',
            'An intricate bracelet which protects you from being teleported. ',
            'A stack of rectangular papers, each of which has similar writing and the face of the same important-looking alien on it. ',
            'A fold up synth map of the moon, showing several cities there. ',
            'A weightless rod of seemingly coherent red light that stays in whatever location and orientation you put it. ',
            'A sphere of liquid metal that can absorb an object, sealing it from light and air. ',
            'A spiral of metal that will not allow itself to be touched, rolling away from those who come near it. ',
            'Three feet (one meter) of ceramic chain that appears nearly unbreakable. ',
            'A one piece outfit for a child with a tail. ',
            'A small metal cylinder that steals negative thoughts when touched, storing them away for later.  Will expel those thoughts all at once into a person once the cylinder is “full.” ',
            'A cube of black chalk that can only place marks on metal. ',
            'A tiny replica of a shimmering tower that floats in the air and has a protective blue forcefield. ',
            'A bottle of lightly flavored water that refills itself whenever you walk several miles.  Tastes different with every refilling. ',
            'A wristband that squeezes tighter as you rise in elevation. Becomes loose as you descend. ',
            'A headband that allows you to completely ignore something or someone for ten minutes at a time.  You do not see or hear this thing or person during this time.  Mentally, you block out their existence. ',
            'An etched metal sphere that warps the shape of the ground around it slightly when placed on the floor. ',
            'A tiny synth cat that follows the verbal commands of the last person to touch it. ',
            'A golden rod that causes nearby computer screens to be disrupted and fuzzy.',
            'An odd, semi-translucent pink cuboid of solid glass. When placed on a flat surface, you can pass your hands through it as if it wasn\'t there, causing it to vibrate and play out pleasing notes based on motion of your hands inside the cuboid.',
            'A pentagonal trapezohedron full off odd holes covered in different materials. When you spin it, it floats just above your head and has the ability to color farts and other gases in a short distance until you take it back.',
            'A small synth tube, touching either end with a finger will record or playback a short memory, which end does which function changes randomly.',
            'A silver brooch in the shape of an ellipse which randomly animates and moves itself across the wearers clothing, like a wriggling worm.',
            'A sealed vial of viscous purple oil, when lit it gives off ultraviolet light for 1 hour before exhausted.',
            'A synthsteel rod with an emerald triclinic crystal embedded in its tip, it emits light when within a magnetic field.',
            'A thin solid light needle that emits soothing harmonics, materials it pierces harden.',
            'A thin solid light needle that emits harsh vibrations, materials it pierces soften.',
            'Twin metal poles stacked with crystalline disks, they spit sparks when brought together.',
            'A pair of living wood tongs that extrude tiny ceramic thorns to grasp objects.',
            'A pulsing crystal shard honeycombed with holes, it separates mixed fluids.',
            'A short section of azure steel pipe that grinds to powder objects that fall through it.',
            'A flat ceramic disk inset with glowing icons, it neatly divides soft materials placed onto it.',
            'A small burning flame made of solid light, it produces no heat.',
            'A 5 inch stronglass gear that turns on its own when exposed to sunlight.',
            'An azure steel spring that takes a remarkable amount of effort to compress.',
            'A narrow azure steel tube that sucks in air at one end, to blow it out the other.',
            'A 1ft rod of dark, oily metal that glows red hot during daylight hours.',
            'A bio-luminescent tentacle flower that wilts at night.',
            'A small, colorful pebble that (no matter what) some how finds its way back to you at sundown.',
            'A golden urn that pours any liquid into an invisible cup that materializes from nowhere.',
            'A thick pair of six-toed socks. When the wearer walks on wood, each step sounds like a hoof.',
            'A frame containing a 3 dimensional image of an unknown race of creatures projected just above its surface.',
            'A wooden walking stick that reappears somewhere behind you whenever you lost sight of it for a couple of hours.',
            'A silky glove that when the fingers are rubbed make a candle\'s amount of light',
            'A miniature prosthetic arm, bifurcated at the elbow into two forearms with a three-fingered hand on each end.',
            'A transparent sphere of synth with a madly spinning sphere of dull black colour hovering inside it.',
            'A small plastic box with a large red and large green button on it.  Upon hitting the red button, the machine records for 12 seconds.  Hitting the green button will play back anything that the machine heard.',
            'A metal ring about 5 inches in circumference.  When you blow air into the ring, it comes out on the other side as snow.',
            'A nearly transparent box that glows increasingly red the more people are looking at it.',
            'A large synth wheel with an electric display and a button on the side.  When the button is pressed a random picture of an unknown creature out of eight total pictures appears followed by a distinct noise for each. ',
            'A bottle of 12 large, green pills that when swallowed, causes the user to burp puffs of sparkling glitter for 1d4 hours.',
            'A large, 3 fingered glove of black synth which makes everything felt through it feel soft and smooth.',
            'A long hard strip of synth which when slapped forcefully against a small surface coils around it.',
            'A chrome box with two large slots in it. Items inserted into the slots are slowly heated until burnt.',
            'A thin black cuboid with a silver disc embedded in it. When exposed to electricity, it clicks and whirs loudly.',
            'A short but stout glass jar. Touching the jar causes different colors to appear inside when you\'re experiencing different emotions.',
            'An eyepiece made from brass that when you look into it, shows you a different world.',
            'A small glass disc, traced with gold lines which can display a three-dimensional image of any one item it\'s brought into contact with.',
        'A foot-wide ring of synthglass that when concentrated upon hovers and glows, giving off enough heat to keep a small group warm for as long as concentration is kept.',
        'A gem which changes color every morning.',
        'A messenger bag with many pockets, one of which holds a rotating (simulated?) galaxy.',
        'A handled rod made of crystal which removes rust from objects using bursts of sound when you point it.',
        'A square plate covered in dials and buttons which makes noise and light whenever anyone speaks near it.',
        'A loamy smelling backpack that adjusts its own straps for you when you put it on.',
        'A glove with three large fingers that puts out any small fire you touch with it.',
        'A glass rod that translates everything you say while holding it into a language you cannot understand.',
        'Arm and leg bands which cause electricity to dance across your body at all times.',
        'A large box with its own weather systems inside- often rainy.',
        'A pair of earrings which make your eyes glow whatever color you concentrate on while worn.',
        'A tube of gel which relieves pain on the skin of most people and induces labor in pregnant women.',
        'A spray canister which releases a gas that induces calm in rodents.',
        'A canister with 20 pills that cause you to feel optimism when one is ingested.',
        'A pair of red contact lenses that shield your eyes from intense light.',
        'An oddly shaped device which projects a blue laser at a particular star when it\'s visible in the night sky.',
        'A pair of utensils which make food spicy, and physically hot.',
        'A circular stone which causes you to smell like flowers while carrying it.',
        'A ceramic beetle which becomes animate and cleans the floor around you while you sleep.',
        'A collar which allows you to convincingly imitate seskii howls and growls.',
        'A magnetic badge which, when worn, alerts you mentally when someone you know comes within 25 meters of you.',
        'A flask that can hold three times its apparent volume of liquid.',
        'A shimmering, heavy coin with unfamiliar writing on it.',
        'A pen which writes in a different color depending on your mood.',
        'Two square yards of invisible cloth.',
        'A yard long bar of utterly indestructible metal.',
        'A pair of headbands which allow sleepers to share and participate in the same dream while wearing them.',
        'Two small spheres that circle each other when placed on a flat surface.',
        'A strange earpiece that randomly tunes in to static-filled alien transmissions.',
        'A jewel which glows in the presence of dangerous radiation.',
        'A metal nodule, when placed on the neck, makes you experience a brief memory of piloting a starship orbiting the earth.',
        'A mask for your mouth that allows you to speak to small insects (they can\'t speak back).',
        'A small container of effervescent liquid. It smells delicious.',
        'A floating globe that lights up when you take a bow.',
        'A piece of synthsteel in the shape of a teardrop that hums an ancient tune when bathed in starlight.',
        'A synth mat that is warm at night and cool in the day.',
        'A tan cloak that writhes as though alive.',
        'A disk that displays images of an alien world.',
        'A set of five plates that cannot be taken more than five meters away from each other.',
        'A translucent holographic image of a fish that can be carried around as though it were an object.',
        'An empty metal tube that constantly blows warm air through it.',
        'A long sheet of plastic that feels as soft as a bed when laid upon.',
        'An armband that causes you to cast no shadow when worn.',
        'A wrist band that makes your hand invisible when worn.',
        'A tiny pot of shimmering synth that becomes pliable and rubbery at body temperature, returning to its original form and state upon cooling.',
        'A synth stylus which will draw lines on any surface. The lines remain until either the stylus goes further than short range from the writing, or until nightfall, whichever comes first.',
        'A transparent plate showing lines of symbols. Touching the edges of the plate in specific places produce more symbols.',
        'A ceramic disk that speaks to you in a friendly voice whenever you\'re upset. You have no way of understanding the language, but it seems like it\'s trying to help.',
        'A small fur pouch with five pieces of tasty candy in it. Replenishes each evening.',
        'A bar of metal which constantly oozes a black, sticky, substance.',
        'A ring of metal with strange symbols carved into that glow randomly.',
        'An orb of unknown material that orbits the head of the last person to touch it.',
        'A tube that changes the color of any liquid poured through it.',
        'A bizarre whistle that emits floating motes of color when blown.',
        'A bracelet that can be activated to emit a random geometric holographic design around the wrist',
        'A 1-foot (0.3 m) bar that has the weight of steel but the flexibility of rubber',
        'A 1-foot (0.3 m) length of silver cord with both ends neatly cut',
        'A 1-inch square of folded black paper that can be unfolded until it becomes a 10-foot square of paper',
        'A 3-inch (8 cm) tall tornado that never stops moving when you hold it in your hand',
        'A 5-foot (2 m) length of string that hangs perfectly horizontal without being tied to anything',
        'A 6-inch (15 cm) metal bar that is impervious to all damage',
        'A bag of small green scales that sometimes seem to mold themselves into a tail',
        'A bag filled with marbles. The marbles outside the bag disappear after a short time and return to the bag.',
        'A ball of fur that squeals when submerged in water',
        'A ball of unbreakable twine that, when fully unraveled, is 100 feet (30 m) long',
        'A belt made of unknown leather and metal that makes you feel full all the time',
        'A bit of synth that is full of holes. The holes collect and hold fluid',
        'A bit of yeast in a synth packet that when placed in the sun for a day, creates a fully cooked loaf of bread',
        'A bizarrely shaped paintbrush that becomes coated with a sparkling clear substance that smells like the sea',
        'A black box from which issue faint calls of “Hello?”',
        'A black diamond that causes erotic dreams when it is placed under a sleeper’s head',
        'A black metal box that makes the sound of a broken hound when you shake it',
        'A black wedge that weighs 1 pound and becomes 1 pound heavier each minute it remains in your possession',
        'A bottle of clear liquid whose flavor changes to match whatever you most desire',
        'A bottle of ink that never goes dry or runs out',
        'A bottle of liquid that releases bubbles that glow in the dark',
        'A bottle of pills that have no nutritional value but take away feelings of hunger',
        'A box of toothpicks that each have a different and sometimes strange flavor',
        'A box of twenty oddly shaped stones in different shades of red that can be used like chalk but never run out',
        'A can of liquid propellant that turns all dust in the air into rainbow colors',
        'A ceramic bird with a razor-sharp metal beak',
        'A ceramic box holding a tiny worm with a head at each end',
        'A ceramic cup that lights up when it’s full of liquid',
        'A ceramic tile that etches itself with strange markings whenever someone speaks to it',
        'A charm bracelet that randomly adds new charms (and occasionally shins)',
        'A chime of synth objects that sounds like people talking',
        'A clear elastic sheet, 7 feet by 2 feet long, of unknown waterproof material that sparkles under starlight',
        'A clear synth hole punch that will make a tiny circular hole in almost any thin material',
        'A clock face that marks the passage of time with unreadable and unsolvable equations',
        'A coated piece of paper about 1 foot square that folds itself into a different complex design each day ',
        'A knitted square that adds a new row of stitches on its own',
        'A coin stamped with the profile of a man that changes each month',
        'A copper ring about the size of a bracelet that spins indefinitely.',
        'A crystal that always hovers an inch above a metal ring',
        'A crystal that creates a tiny flame when rubbed',
        'A crystal that prevents the person holding it from perspiring',
        'A crystal that sometimes attracts living things, such as insects and plants, to its surface.',
        'A crystalline stellated dodecahedron that turns red based on how much numenera is nearby',
        'A cube of ice that never melts',
        'A cup that turns any liquid poured into it into alcohol',
        'A dark glass trapezohedron that, if held behind someone’s head, makes him state his name',
        'A device that fits over your ears and plays strange noises that sound like atonal, mostly unpleasant music',
        'A double-handled mug that appears to be made for nonhuman hands',
        'A dozen small stones in a narrow, thin box that burst with vibrant colors when tossed into a fire',
        'A feather necklace that seems to attract all small birds in the area to you',
        'A fist-sized glass sphere that floats through the air, never straying more than 2 feet from a token',
        'A fist-sized hunk of wet flesh that never dries out and makes a purring noise when stroked',
        'A fist-sized metal object filled with holes that gives anyone touching it a brief glimpse of an endless sea',
        'A flexible synth mold of a creature you’ve never seen before, except in your dreams',
        'A floating orb that follows you around and makes whirring sounds.',
        'A floating orb that removes all odors from the air for a few minutes',
        'A fossilized curled shell that sometimes uncurls',
        'A glass ball filled with fluid through which swims a bloodshot eye trailing its nerve endings',
        'A glass ball that, when placed on the ground, rolls around in a circle until it’s picked up',
        'A glass box containing a living, beating heart wrapped in a golden mesh of wires',
        'A glass jar filled with an edible, creamy white substance that fills back to the top each day at dawn',
        'A glass pentagonal cupola 2 inches (5 cm) wide that makes one’s hair stand on end if touched',
        'A glass prism that provides a kaleidoscope of scents',
        'A glob of chewing putty that never loses its flavor or texture',
        'A gyroscopic toy top that spins indefinitely if undisturbed',
        'A hairpiece that does not seem to have been made for humans',
        'A handsized blob of silver goo that can be molded into a small shape but can’t separate or support weight. ',
        'A small box that every night produces small blue edible sacs full of water enough to fill one glass.',
        'A handheld shredder that seems to work only on plants',
        'A hat that disappears when the wearer wishes, but returns in a few hours',
        'A hat that rests just on top of your head but never blows or falls off',
        'A heart-shaped piece of synth that you can smoke through, and it always tastes faintly of wood',
        'A horn that, when blown, blows bubbles instead of making a sound',
        'A human-faced insect trapped in a piece of amber',
        'A jar full of glitter that always goes back into the jar in the morning, no matter what you used it on',
        'A jar of face paint that starts out black and changes color to match your mood while you wear it',
        'A jar of oil that, when spread on metal, makes the metal glow with a faint radiance',
        'A jar of putty that hardens after being exposed to air for one hour, but softens again if touched',
        'A large piece of fabric that does not reflect in mirrors',
        'A leaf pin that gradually turns different colors as time passes',
        'A leather belt with metal plates that glow faintly with light',
        'A leather headdress that turns your eyes black when worn',
        'A leather mask that, when worn, causes you to hear meaningless voices in your head',
        'A length of chain that glows blue if touched by sweat or salt water',
        'A lock of hair that whispers constantly',
        'A long piece of cloth never moved by the wind',
        'A long-handled spoon that brings everything in it to the perfect eating or drinking temperature ',
        'A living plant that turns into a different type of edible herb each night',
        'A mask made of a long jaw and sharp teeth. When you wear it, it makes your tongue numb.',
        'A mask with a set of eyes drawn on the outside. The eyes blink rapidly in bright sunlight.',
        'A mass of gel that vibrates in time to any sound',
        'A mesh teabag shaped like a star that can be used over and over and never seems to get used up',
        'A metal baton that feels as though it is filled with fluid',
        'A metal bell that releases the scent of animal dung when you ring it',
        'A metal box with a glass panel in the center that displays different undecipherable symbols each sunrise',
        'A metal cube that, when touched, turns to thick liquid for one minute',
        'A metal disk with a hole in it that reveals shapes in the clouds when you look through it',
        'A metal octahedron that, when held, causes the user’s voice to change pitch',
        'A metal ring that grows warm in cool temperatures or cool in warm temperatures',
        'A metal ring that issues a faint ringing noise when rubbed',
        'A metal rod that quickly melts ice touched to it, despite its cool temperature',
        'A metal sphere the size of a pebble that weighs 50 pounds (23 kg)',
        'A metal wand with a tip that glows in the dark',
        'A metal wedge that always points east when placed on the ground',
        'A miniature ball on a chain that hovers in the air',
        'A mirror that shows anything reflected in it, but something is always missing',
        'A monocle that shows different colored auras around people depending on the time of day they were born',
        'A mummified nonhuman hand that twitches as if still alive',
        'A needle with thread that never runs out but constantly changes color',
        'A net with holes so large you can’t imagine what it’s designed to capture',
        'A pair of 1-foot-tall (0.3 m) metal stilts that can strap onto boots or shoes',
        'A pair of black and blue feathers that float on the wind and flap in the presence of varjellens',
        'A pair of eyes made of bronze that appear slightly human and occasionally blink',
        'A pair of glasses that purr and coo softly when you breathe rapidly',
        'A pair of multifaceted lenses set into leather goggles that make the wearer see things as an insect would',
        'A pair of only slightly human-esque eyes made of bronze, which occasionally blink',
        'Rose-colored spectacles that shows others in the prime of their lives',
        'A small box that can freeze any object inside when it\'s closed',
        'A small cube that lowers the temperature in a small, enclosed room to freezing',
        'A petrified anomalous octopus with multiple branched arms',
        'A piece of cloth that polishes any metal object it touches',
        'A piece of felt that expands into a large, flat waterproof bowl',
        'A piece of flexible plastic that emits soft blue, green, or pink light when worn around the ankle or wrist',
        'A piece of lavarock that is cool to the touch but never stops flowing with bright red lava',
        'A piece of natural stone that, when you press your ear to it, makes noise that sounds like people screaming',
        'A piece of waterproof paper that can’t be crumpled and shows a map of somewhere unknown',
        'A plate of glass that turns frosty in freezing temperatures and sometimes shows handprints in the frost',
        'A pomander that always smells of freshly baked bread',
        'A porous stone that can be used like soap and has a fresh smell',
        'A pouch of powder that can be sprinkled over rotten meat to freshen it and make it safe to eat',
        'A pouch of six pellets that, when dropped into liquid, remove its flavor and color',
        'A small pouch that can be expanded into a tent large enough for 2 people',
        'A powerful magnet that appears to be in the shape of a stylized spider',
        'A preserved flower that lights up when you blow on it',
        'A pyramid made of heavy metal that always stands straight up from its narrowest end',
        'A quivering mass of gelatin that hardens whenever it is about to storm',
        'A ring that erases most scratches, scuffs, and ink when passed over them',
        'A ring that makes the wearer’s fingertips glow blue',
        'A ring that vibrates when the sun rises in your location',
        'A rolled-up piece of synth that plays music when it gets warm',
        'A rubber ball that creates a second rubber ball when thrown, that lasts for a few minutes before disappearing',
        'A rubber ball that when thrown, flies for 1 mile or hits a solid object and then falls',
        'A scarf that releases a soothing odor when you’re scared or hurt',
        'A self-stick bandage that changes size to fit any wound up to 4 inches (10 cm)',
        'A set of garish clothes that never get dirty or show signs of wear and tear',
        'A set of stick-on nails that were clearly created for someone with much larger hands than a normal human',
        'A set of tassels that attach to your clothing and flutter when you’re near someone you love',
        'A silver needle that always remains sharp but can puncture nothing',
        'A skull of an unknown creature that is covered in ornate tattoos that appear to move.',
        'A slab of clear synth that encases a dozen of fossils of some kind.',
        'A slab of petrified wood that glows with a soft green hue',
        'A small blue stone that floats wherever you put it, even the air, but it can hold no weight',
        'A small cloth bag that one can thrust objects inside. The bag always repairs itself.',
        'A small colored-glass sculpture of a bird that flaps its wings in sunlight',
        'A small disk that bears the image of the father of whoever is touching it',
        'A small grey bottle with a screw-off lid that looks like a piece of rock',
        'A small handheld box that projects a series of shadows on surfaces. The shadows seem to be asking for help.',
        'A small marble that howls in response to the sounds of laughter',
        'A small box with blue powder that causes profound feelings of ecstasy for a minute, followed by painful cramps',
        'A small metal box that changes the color of anything placed inside it',
        'A small metal box that makes a clicking noise when in the presence of smoke',
        'A small metal box that produces sounds of hysterical laughter when shaken',
        'A small metal container that keeps liquid poured inside lukewarm but makes it bitter',
        'A small pen that scratches and writes only on synthetic materials.',
        'A small ring that can be scanned over anything and becomes the color of the item scanned',
        'A small round mirror that reflects nothing during the day and reflects only the moon at night',
        'A small sphere nested within a cube, but the cube exists out of phase and cannot be touched',
        'A small square of cloth that is always clean, cool, and slightly damp',
        'A small stamp that creates a bizarre design on anything edible',
        'A small stone that sings a lullaby in an unknown tongue when you rub your thumb over it',
        'A small, ornate bead that adjusts to fit over any diameter of rope or string',
        'A soft, big-brimmed hat that sometimes drips water when it’s not raining',
        'A solid blue metal sphere, one inch in diameter, that floats 1 inch above any surface.',
        'A sponge that can absorb up to 10 gallons (38 L) of liquid',
        'A square of ice 3 inches by 3 inches by 1 inch that never melts, never feels cold, but chills liquids',
        'A sticky piece of synth that shows a series of bones and adheres to almost anything',
        'A stone snail that grows edible mushrooms instead of a shell',
        'A stone with a mouth carved into it that sometimes has a pinkish tongue',
        'A stronglass shell that sometimes has a ghostly visage of a crab inside it',
        'A stub of paper with writing on it that says something different to everyone who looks at it',
        'A synth ball that perfectly camouflages itself to whatever it’s touching. It turns white when you whistle.',
        'A synth bowl that nothing adheres to, so it’s always dry and clean',
        'A synth box that shows a new image of a place in the Ninth World every couple of days',
        'A synth bracelet with a tiny pocket that manufactures potable water every time it rains',
        'A synth dodecahedron that allows one to see for about two seconds through the eyes of a person touched',
        'A synth flower that stays mostly in bud form but blooms when you place it under certain people’s chins',
        'A synth hemisphere that occasionally puffs out harmless green mist',
        'A synth honeycomb about 3 inches (8 cm) square that produces a tangy blue syrup',
        'A small pyramid that gives off light for one hour at a random time each day ',
        'A tiny harp with strings made of glowing energy',
        'A synth sphere that always displays the current temperature with a moving set of lines',
        'A synth star about 3 inches that allows one to levitate about 1 inch for about three seconds once per day',
        'A synth neck chocker that makes the wearer so dizzy that it’s almost impossible to walk a straight line',
        'A teardrop-shaped bauble that always leans to the south',
        'A thin lightly glowing blue-green tube, six inches long. ',
        'A tiny box with a button that makes a faint chiming noise when pressed',
        'A tiny cage with no opening in which different creatures appear overnight, sometimes living, sometimes not.',
        'A tiny hose made of rubber that squirms around, as if it’s trying to connect to something',
        'A tiny mechanical beetle that crawls slowly on any flat surface. ',
        'A tiny mirror that reflects your face exactly as it looked yesterday',
        'A tiny square of foil that always feels warm to the touch',
        'A tiny stuffed seskii doll that growls when you kiss it',
        'A tiny synth cube with two metal prongs on one side that hum',
        'A tiny synth mouth that spits out words all day long, at random',
        'A tiny tiara that seems too small for even a newborn baby',
        'A tiny tube that, when blown through, produces small pebbles (and sometimes a surprisingly large rock)',
        'A tube of lip gloss that temporarily makes the user’s lips invisible',
        'A tube of purple smoke that changes to a liquid when exposed to sunlight',
        'A vial of red liquid that causes anything that touches even a drop to turn bright purple for 28 hours',
        'A glass that shows the image of three strangely garbed children playing and one frightened child watching you',
        'A winged circlet that whispers endlessly about jumping when worn',
        'A wire sculpture of a flower that releases petals when you blow on it. The petals “grow” back eventually.',
        'A wooden ball that cannot be burned, but freezing it turns it to vapor',
        'A wooden tube with a creature carved inside it. Every few days, the creature moves into a different position.',
        'An aerosol can that sprays sparkling paint that hangs in the air',
        'An amulet that, when worn, projects holographic images of fish swimming around you',
        'An ankle bracelet that sometimes eases muscle aches',
        'An antler from an unknown creature that continues to slowly grow',
        'A polygon about the size of a fist that spins whenever placed on the ground with a particular side down',
        'An egg-shaped stone that, when cracked open, squeals and then puts itself back together',
        'An empty hinged box that sounds like it’s full of rocks when shaken',
        'An incredibly soft pillow that sometimes cuts your hair while you sleep',
        'An invisible, empty, hollow cylinder that is 9 inches (23 cm) long',
        'An oblong metal object from which issues a faint ticking sound',
        'An oblong metal plate covered with strange inscriptions and diagrams',
        'An orange lens that lets you see a person’s spoken words float above his head in written form',
        'An unbreakable clear crystal sphere filled with green smoke',
        'An unbreakable glass cylinder 3 inches in length filled with swirling green goop, no openings.',
        'An armband that tightens slightly when within 100 feet (30 m) of abhumans',
        'A bag of sixteen rubber balloons',
        'A bag that contains dice, each with a different number of sides',
        'A bit of moldable synth that generates constant, soft static noise',
        'A blanket that makes a pleasant, soft humming noise while covering a living creature',
        'A blob of clay that takes on various mysterious shapes when left alone',
        'A blue crystal that glows as bright as a candle when held',
        'A bottle of twenty-four pills that make you vividly dream about your favorite memory when you next sleep',
        'A box filled with two dozen spherical magnets, each about the size of a pea',
        'A box that release puffs of lingering smoke that take on the shapes of faces, creatures, or other things',
        'A box that produces a 3-inch (7.5 cm) cube of a firm but gelatinous substance at the same time each day',
        'A box with a tiny group of musicians in it who play when it is opened and look horrified when it is closed',
        'A bracelet that renders you unable to reproduce while worn',
        'A bracelet with a tiny bell charm that rings like a massive bell when intentionally rung',
        'A brass device with nested circular plates that rotate and click',
        'A brush that produces a cleansing soap when used',
        'A button that seems to attach to any fabric',
        'An ever-burning candle that never melts or produces smoke',
        'A bag of sixteen rubber balloons',
        'A canister that produces an extremely foul odor and a puff of dark red smoke when opened',
        'A cape that billows as if blown by the wind when worn, even in still air',
        'A ceramic pot that produces a tiny puff of colored smoke once every hour and a half',
        'A ceramic ring that makes you feel as though gentle hands are caressing your body',
        'A chair that can be stored in an extradimensional space when activated',
        'A circular stone plate with a human face that occasionally changes expression or moves its mouth',
        'A clear synth globe with an arrow inside it that always points at the sun',
        'A cloth mask that gives anyone who wears it itchy hives for one hour',
        'A pen that can write and leave marks in the air. The writing disappears after 10 minutes.',
        'A cloth mask that makes each breath taste like mint',
        'A comb that glows when used',
        'Contact lenses that make your eyes seem completely white with no pupils',
        'A crystal antiprism about 4 inches (10 cm) across that is mildly repelled away from living flesh',
        'A crystal pendant that causes the wearer’s hair to stop growing',
        'A crystal that hums',
        'A crystal that pulses in time with the heartbeat of anyone holding it',
        'A crystal that shatters easily but then instantly reforms',
        'A cube that, when activated, disappears for one minute and then reappears in the same spot',
        'A cup that instantly boils any liquid poured into it',
        'A cylinder that clears the air of smoke, foul smells and the like in an enclosed room in one minute’s time',
        'A cylinder that, if you speak through it, makes your voice sound wavering and strange',
        'A device that emits a projection of a human face that changes expression based on the direction of the device',
        'A device that makes everyone within 10ft see the last two seconds again, though nothing can be changed',
        'An egg-shaped device that temporarily negates all odor within 3 feet (1 m)',
        'An egg-shaped metallic bauble that occasionally spins and speaks in a language no one knows',
        'An eight-inch (20 cm) length of synth cord that is invisible',
        'An eye lenses that glow in the dark',
        'A feathered hat that occasionally makes bird noises',
        'Five metallic plates that orbit around your head and display ever-changing, unknown symbols',
        'Five synth-sealed edible bars that provide nourishment for seven days each',
        'Five-inch (13 cm) square of cloth that is uncannily pleasant to touch',
        'A flute with buttons rather than holes so you can play music without blowing into it',
        'A fuzzy stuffed animal that makes growling noises when you squeeze it',
        'A tiny glass cube that is always cold',
        'A glass cube that shows what seems to be a live aerial view of an unknown, ruined city',
        'A glass orb that always drips perfumed water very slowly',
        'A glass panel that appears to show the surrounding area from a high vantage, but it is always completely wrong',
        'A glass plate that shows what seems to be a live image of the moon, but from a closer vantage',
        'A glove that, when worn, makes the wearer’s voice sound very high and squeaky',
        'A glowglobe that, if taken underwater, is never moved or disturbed by currents',
        'A glowing, 6-inch elongated teardrop made of synth that seems to have no weight and very little substance',
        'Glow-in-the-dark hair dye (enough for twenty uses)',
        'A goggles that allow you to see perfectly through steam or smoke',
        'A goggles that tint everything green',
        'A goggles that tint everything green 26 Series of thin plastic cards that show all kinds of unknown creatures',
        'A goggles with glowing lenses (although you can see through them normally)',
        'A green glass sphere that floats next to you and whistles when you are angry',
        'A hoop that sharpens any blade passed through it',
        'A jar of sixteen unknown seeds',
        'A large, clear synth bag that keeps food inside it fresh indefinitely',
        'Lenses that make everything appear upside-down',
        'Lenses that tint everything pink',
        'A mechanical lightning bug in a glass globe',
        'A living orange and green frog encased inside a clear stronglass bubble ',
        'A ecklace that, when worn, temporarily turns your hair grey',
        'A metal and glass disk that, when pressed against flesh, instantly etches a tattoo of a black scorpion',
        'Metal boots that sizzle and steam as if very hot, although their temperature is normal ',
        'A metal wristband that smells strongly of sugar',
        'A metal canister that fills with 4 quarts (3.8 liters) of water at the same time each day',
        'A metal hemisphere with a glass handle that constantly repeats words in an unknown language',
        'A metal rod bent into a triangle that frightens off small animals with its mere presence',
        'A metal rod that makes anyone who touches it sneeze, but never more than once every few minutes',
        'A metal sphere that floats like a balloon',
        'A metallic device that creates one sheet of new paper each day',
        'A metallic jar that maintains the temperature of liquid inside indefinitely',
        'A metallic mask that ﬁts perfectly on your face and changes expression when you do',
        'A metallic, pointed-toe boots designed to ﬁt a horse or a similar creature',
        'A mummiﬁed ﬁsh with feathered wings in a wooden box',
        'A necklace made of gears and other machine parts',
        'A neverending spray canister of harmless foam that evaporates quickly',
        'An octagon-shaped amulet that is black during the day and sky blue at night',
        'An oddly shaped synth box with a button on one side that, causes a random word to appear in a tiny display',
        'A pair of clear drinking glasses that change color depending on the contents.',
        'A pair of tiny metal rods that vibrate when brought within 1 inch of each other',
        'Pants that ﬁt perfectly and never seem to get dirty but are always chilly',
        'A pea-sized sphere that reduces the pull of gravity within about 4 feet (1.2 m), just enough to notice',
        'A pen that writes in invisible ink revealed only at a very low temperature',
        'An extremely strong and thin cable 8 feet long',
        'A plastic bottle containing a spray that cleans any stain and never runs out',
        'A plastic disk that displays ever-changing but meaningless symbols',
        'A plate of glass that, when you view the night sky through it, reveals ten times as many stars',
        'A powerful magnifying glass',
        'A purple goo that sometimes shows a lit map of unknown constellations',
        'A remote-controlled dragonﬂy with a tiny, handheld controller',
        'A rhomboid of solid stone that sometimes turns to liquid, but always reforms',
        'A ring that reduces the wearer’s sense of touch',
        'A rod that projects the two-dimensional image of an unknown creature on any flat surface',
        'A rose made of nigh-indestructible glass',
        'A round pendant with a blinking red light that syncs with the wearer’s heartbeat',
        'A saddle sized for a very small animal, such as a squirrel or a small cat',
        'A scarf that appears to be made of silk but is virtually indestructible and cannot be dirtied or stained',
        'A semicircular device of metal and glass that projects a harmless, thin red beam up to 50 feet when activated',
        'A series of thin plastic cards that show all kinds of unknown creatures',
        'A seven-inch (18 cm) square of cloth to which nothing—dirt, muck, tar, adhesive, etc.—will adhere',
        'A shirt that displays your muscles, bones, and internal organs when you wear it',
        'A pair of shoes that fit anyone who wears them but leave bizarre, seemingly random prints behind',
        'A pair of shoes that make the ground ripple like water when the wearer walks',
        'A pair of shoes that produce sound and light with each step',
        'A pair of shoes with such slippery soles that they are impossible to walk in',
        'A short metal rod that is insubstantial to all matter except the special synth glove that goes with it',
        'A silken string 3 feet (1 m) long that coils around whatever it touches',
        'A silver pendant with an invisible chain',
        'A single rubber glove that is extremely durable and resistant',
        'Six small, clear synth bags that can be sealed and are very durable',
        'Six-inch (15 cm) synth string that stretches to eight feet (2.4 m) without breaking',
        'Six-inch (15 cm) wand of glass that can be bent and even tied in a knot',
        'A small coin pouch that holds twice as much as it appears it should',
        'A small jar of black paint that reﬁlls itself each day',
        'A small jar that produces 1 ounce (28 g) of green paint when the sun rises',
        'A small leather case of cosmetics that never seem to run out',
        'A small metal container that makes a loud but brief, shrill tone when opened',
        'A small metal container that produces a peculiar (but not unpleasant) odor when opened',
        'A small metal disk with a crystal at its center that causes a buzzing noise in the ears of anyone holding it',
        'A small metal half-ring that forces anyone touching it to say “Fanoshil”',
        'A small mirror that shows someone other than you when you gaze into it',
        'A small mirrored cube that hangs motionless in the air where ever it is left.',
        'A small pink stone that, when placed under the tongue, causes harmless vapor to spill from your mouth',
        'A small rectangular device that makes a chirping sound at the same time each day',
        'A small rod that emits a voice saying the same thing in an unknown language every time a button is pushed',
        'A small sphere that always remains 1 inch from the tip of a short rod',
        'A small square cage that puts whatever single creature is inside it into stasis',
        'A small synth squares that taste good (but are inedible)',
        'A small wandlike device that keeps away normal insects in a 5-foot (1.5 m) radius',
        'A small, warm metal blade that gives a very close shave',
        'Spectacles that project strange images on the lenses so the wearer sees things that are not there',
        'A sphere that produces vigorous bubbles when placed in water',
        'A square of cloth that changes texture and color randomly',
        'Stockings that are always warm',
        'A synth cup that turns any liquid placed within it purple (no other change is made)',
        'A synth disk that will restore a rotten piece of fruit or a vegetable',
        'A synth full-face helmet with six eyeholes and a buzzing sound within',
        'A synth heptahedron that, when touched to other synth, makes everyone in an immediate radius very hungry',
        'A synth panel about 8 inches (20 cm) square that shows meaningless, complex diagrams',
        'A synth panel that constantly shows unknown creatures cavorting in a woodland of unknown plants',
        'A synth paper that absorbs ink (and stains) after one hour',
        'A synth rod that changes color based on who holds it (always the same color for the same people)',
        'A synth sleeves that fit over one’s fingertips',
        'A synth sphere that is always warm',
        'A synthetic pointed-toe boots designed to fit an aneen or a similar creature',
        'A teardrop-shaped object that forms salt crystals along the bottom surface',
        'The face of a person stretched and pressed between two panes of glass',
        'Three glowing synth rings that orbit whatever they are placed around (like a wrist)',
        'Three silver buttons 1 inch long that adhere to flesh but only if all three are attached',
        'Three shoes meant for an unknown, nonhuman creature',
        'Three silken gloves with six fingers each',
        'A tiny awl that inflicts no pain when it pierces flesh',
        'A tiny box that produces a small synth figurine in the image of someone within immediate range at random times',
        'A tiny glass cube that distorts visibility within 6 inches (15 cm) around it',
        'A tiny lidded box that opens, revealing the emptiness of space',
        'A tiny toy ornithopter made of a solid piece of material that seems indestructible',
        'A twenty red cigarettes that, when smoked, let you exhale monstrous shapes',
        'Two 5-inch (12.7 cm) metal and glass disks that hover around your wrists',
        'Two magnets that become one hundred times heavier when put together',
        'Two metal rings that sometimes become one',
        'Two small blue discs that are attracted to skin and are hard to pull off when they come in contact with you',
        'A two-headed animal fetus in a glass jar',
        'An unbreakable glass pyramid filled with what appears to be ice or snow',
        'An unbreakable stemmed glass that always looks empty, even when it’s full',
        'An unknown musical instrument that plays only soft, unpleasant sounds',
        'An unknown plastic device with lights that occasionally blink',
        'A wooden rod that increases in length by about 1 inch (2.5 cm) a month',
        'A wristband that buzzes when in complete darkness',
        'A small hand-sized box covered with numbered buttons.',
        'An empty tumbler that causes any liquid poured into it to become alcohol',
        'Several gears attached in unnatural and impossible angles: moving them causes a horrible shrieking sound.',
        'A crystal prism that refracts shadow instead of light.',
        'A flat synth disc that when thrown, it makes a high pitched whistling noise and returns to the thrower. ',
        'A sponge that can absorb 60 gallons of liquid. ',
        'A stone figure of a snake that changes positions after every full moon.',
        'A small silver rod which when rolled between your hands emits soft musical sounds.',
        'A small cube that, when tapped makes the same tapping noise for a few seconds.',
        'A small doll that mimics the movements of the last person to touch it. ',
        'A metallic rod that bends in unusual ways when you look directly at it, but rights itself when you look away.',
        'A synth mask that copies its wearer\'s facial expressions.',
        'A humanoid skull with ethereal green orbs in its eye sockets.',
        'A synth belt that, when worn, glows with faint blue light.',
        'A sphere of crystal with a tiny shard of obsidian at the exact centre.',
        'A palm sized ball that can bounce endlessly between two objects that are no more than 2ft apart.',
        'A flask that freezes any liquids stored in it at midnight, and unfreezes them at noon.',
        'A book with words that change every time it is read.',
        'A cube etched with tiny animals that move on each face and change shape when they cross onto a different face.',
        'A crown made out of ice that never melts.',
        'A piece of string that always emits smoke.',
        'A rod of indeterminate metal that changes its length at random every other day.',
        'A stone shaped like a head that occasionally speaks, asking nonsensical questions that change every time.',
        'A tiny book 1 inch in length filled with hundreds of thin pages written in an unknown language. ',
        'Light moves strangely through this glassine cube, forming square patterns of blue and purple colors.',
        'Plain, red leather boots, but when you touch them, you are filled with a wave of sadness.',
        'A glass sphere with a miniature scene of a river of tar running through a wasteland.',
        'A colorful creature with seven legs. It can be worn as an eye patch and shows colors in an unique way.',
        'A tiny stone ball that will howl at an ever-increasing intensity until it completely drowns out laughter.',
        'A small, squirming fishlike creature, that never requires food or other nourishment, and gibbers constantly.',
        'A synth globe that depicts an unknown world. The more you look at it, the more details you discover.',
        'Ear plugs which allows you to hear a random being. Overheard speech is completely alien each time.',
        'A pair of six-fingered gloves which are colorless. Their singular lack of color is nearly hypnotic.',
        'A tiny cage about the size of of an outstretched hand that puts tiny creatures into stasis.',
        'A cube that is warm to the touch. Lights and soft, slow vibrations emanate from within as the outside moves.',
        'A dusty white ball. When touched, it swirls with a myriad of colors that move with your fingers.',
        'A small reptilian tail made of green glass that sometimes moves.',
        'Goggles that makes sound visible.',
        'A large ring with an orange stone. When looking into the stone, you can see the life of another person. ',
        'A handkerchief that automatically cleans itself and emanates a nice smell when used.',
        'A looking glass that only shows your own back.',
        'A mechanic cricket that when whistled to, it will reproduce the same whistling every 5 minutes.',
        'An invisible rock, usually has some paint on the sides to find it.',
        'Two stones that float beside one another, they can be taken apart but when released, they will quickly return.',
        'A rope that when fingers are snapped, it will release itself from everything and coil nicely.',
        'One wig that when used in the head, will grow hair with colour and haircut based on the users thoughs.',
        'A flower that grows teeth instead of petals.',
        'An egg made of synthsteel that repeats whatever is said near it',
        'A small box that contains a mirror that reflects an hour into the past',
        'A small device with a singular button that when pressed makes a weird animal sound.',
        'A pin that when attached to the clothes, it shows the name of the person.',
        'A bracelet that makes a sound when close to food.',
        'A sphere of organic material, it changes shapes at random.',
        'A hat made of black glass that cleans your hair when used for 1 minute.',
        'A piece of rock that changes color depending on the weather.',
        'A necklace made of bones of no known creature.',
        'An earring that whispers optimistic words when needed.',
        'A device that produces a hologram of a Thuman but with a bestial face instead of the human one',
        'A small box that can fit a small object. The box can be collapsed and when assembled, the object retrieved.',
        'A pair of boots that make you great at dancing.',
        'A strap that can fit around the wrist that has a small display and shows the amount of oxygen in the air.',
        'A small cylinder that can transform water to a bitter and strong tasting beverage.',
        'A dish that when food is put on top of it, it heats it in 5 seconds to a perfect temperature.',
        'A pair of glasses that show everything as though it was night.',
        'A small cube with two buttons. The first takes a picture and the second shows a hologram of the picture.',
        'A 6 sided die that always rolls the number one thinks.',
        'A small picture book full of unknown creatures, lands and strangely dressed people.',
        'A small gold box with lots of decorations and strange writing.',
        'A sphere that is made of liquid, it is able retain its form, but is sticky to the touch. ',
        'A circular device, it emits certain soothing frequency making the user sleep better.',
        'A small cylinder of metal that heats any food it touches',
        '3 metal pieces that float around a 4th piece in the center.',
        'A white flower that always attracts bugs and never dies.',
        'A small lightless bubble that holds a seed, the bubble is unbreakable.',
        'A singing rock, it sings in a strange language every 6 hours, but the melody varies.',
        '25 strange coins in a pouch, they have the remnants of symbols that have been rubbed away over time.',
        'A pouch made of dark and unknown material, that makes whatever small object placed inside feel weightless.',
        'A burned synth device with buttons and a display. Can still be used to play a strange game with moving blocks.',
        '10 silver pills that make your eyes glow green.',
        'A hair clip made of organic material, the wearer can hear when a storm is coming.',
        'A green buckle that makes the wearer sense when someone is thinking about them.',
        'A book with colorful panels with drawings of people that move and talk.',
        'Three cans full of sweet liquid that makes you feel fresh.',
        'A digital clock with only 24 hours, it never runs out of power.',
        'A box that changes shape and color every 2 hours.',
        'A small handheld fan that only gives hot air.',
        'A cylinder that randomly reproduces strange sounds of birds.',
        'Two floating stones, when they touch it produces a small spark.',
        'A small metallic sculpture of a feathered lizard creature, that moves slightly when someone uses a Cypher.',
        'A cylindrical metal device, when activated, a red light comes from the top.',
        'A star shaped device, when activated it emits the sound of a whale.',
        'A whistle that when used, makes no sound, but attracts wild bestial animals around.',
        'A necklace with a beautiful green-blueish gem, that appears to contain a galaxy',
        'A box made of gold with beautiful designs, when opened it\'s always full of cigarettes and they never run out.',
        'A synth box with lots of synth miniatures (around 30) of different persons and creatures.',
        'Pointy synth teeth that attach to your teeth and function normally and can be taken out with little problem.',
        'A display that shows different designs and when placed on the skin, the user gets a tattoo of the design.',
        'A statue made of obsidian, it always cries blood at midnight.',
        'A black rock with blue cracks that\'s always vibrating.',
        'A small wooden box that shows a random area when opened. You can feel the sun, breeze or rain from the box',
        'A canister that emits human screams when activated.',
        'A circular device that tunes and replays the thoughts of random people.',
        'A glove that attracts an item that weights less than 1 kg.',
        'A pair of pants that glow in the dark.',
        'A bio-mechanic implant that pulsates as if still alive.',
        'A pair of small glass legs that always dances.',
        'A pair of gloves that can extend their fingers to 10 cms.',
        'A ring that makes your shadow move by itself.',
        'A synthsteel cylinder with a face, it speaks in an unknown language.',
        'A stone ball that grows strange herbs when left in the sun.',
        'Goggles that let you see heat from machines only.',
        'A headband that creates a holographic face over the users face, this face has some transparency.',
        'A pair of horns that attach to your head and function like they were yours, can be detached without problem.',
        'A device with a display of 10 minutes, if activated it counts down. At 0 it plays a strange melody and resets.',
        'A synthsteel tube that when pointed at an object 3 small wires emerge and touch the object for a few seconds.',
        'A bracer that when activated, produces a clean cloth and when deactivated the cloth goes back to the bracer.',
        'A cloak that makes the rain bounce of of it.',
        'Sandals that can make the wearer walk 6 steps in vertical position.',
        'A flute that instead of sounds, plays colors.',
        'A circular flat metal object of 50x50 cms, it lets the user float 10 cms above ground.',
        'A ring made of organic material, it let\'s you know if the food found in wilderness is edible.',
        'A scanner that detects eggs.',
        'A small globe of glass with a city inside, if touched or moved one can hear soft screams.',
        'A string of beads that, when touched, gives you a glimpse of a random person related to you by blood.',
        'A metal sphere, yet light as air, that floats a few feet above the ground when released.',
        'A handsized metallic, honeycomb-like structure that oozes a thick blue syrup that is messy but very delicious.',
        'A small object that looks like a shell and emits a sound that seems to attract birds from miles around.',
        'A tiny bit of quivering moss that squeaks when picked up or petted.',
        'Four tiny carved heads that chase each other around, jumping in and out of each other’s mouths.',
        'A thick leather strap that attracts sticks, stones, and insects like a magnet.',
        'A miniature planet inside a glass jar that has its own weather system.',
        'A small chair made out of beams of light that can be collapsed into a hand sized rod.',
        'The rough shape of a woman carved from soapstone, about 4ft high, with two bright green gems lodged into the face. When activated, the device begins to speak in a soft, slightly metallic voice in an unknown language. ',
        'Cube that stores and replays your worst memory. ',
        'Ceramic compass that directs you to the nearest Numenera. ',
        'Goggles that allow you to see into an augmented reality- another world laid on top of our own. ',
        'Rune covered monocle that allows you to see radio transmissions. ',
            'Pair of gloves that make your hand motions understandable to machines (go, stop, etc.). ',
            'Golden headband that makes you invisible to small robots. ',
            'Palm-sized disk that protects your possessions from computer viruses while you hold it. ',
            'Universal display screen that connects wirelessly to any electronic device. ',
            'Mask that makes you anonymous to machines you interact with. ',
            'Pocket-sized device that projects a holographic face. It speaks to you in an unknown language. ',
            'Glowing green triangle that can instantly slice through electrical cabling. ',
            'Glowing orange rectangle that can instantly graft electrical cabling together. ',
            'Smooth glass-like rock that stores and plays back any music you dream about. ',
            'Vial full of a glittering liquid that, when poured upon a computer, deletes most of its data. ',
            'Strip of shiny tape that enhances the autonomy of any robot it’s adhered to. ',
            'Rod that turns into any simple tool you imagine. ',
            'Chain bracelet that chimes if someone around you thinks about touching your Numenera items. ',
            'Small box that, when connected to a cyborg, forces them to behave with more regard for others. ',
            'Rectangular plate that displays the answer to nearly any math problem you ask it. ',
            'One meter of writhing black cabling that will connect any two devices together, burrowing into their circuitry and allowing them to communicate. ',
            'Bronze colored sphere that causes you to constantly think about attaching it to computers. ',
            'Metal spiral that, when placed inside of a machine, causes it to act with self preservation in mind. ',
            'Marble sized sphere that, when placed in the mouth, allows you to see the visual output of nearby electronic devices in your mind. ',
            'Button that, when pressed, causes nearby computer systems to be able to feel pain. ',
            'Cylindrical electrical power source that feeds on nearby life (-1 Might point per hour). ',
            'Rounded container that etches a symbol into any object placed inside.',
            'Metal sphere that appears to be magnetically attracted to large sources of information. ',
            'Container of bright orange paint that protects an electrical object covered in it from electrical shorts. ',
            'Shard of glowing, tangible data.',
            'Handheld tool that detects the presence of computer viruses in a device. ',
            'Device which fires a short narrow beam which disassembles small machines in a few minutes. ',
            'Contact lens that allows you to see through the eye of a nearby robot. ',
            'Silver necklace that gets hot when near hostile machines. ',
            'Metallic emblem that floats around your head in a circle. For some reason it makes you feel safe but whether it actually protects you or not is unknown. ',
            'Glass tube filled with an oil that protects cybernetic parts from corrosion and wear. ',
            'Floating sphere that follows you around, displaying tidbits of random information of the surrounding area on a small screen in a language you can\'t comprehend. ',
            'Thin, transparent card that is capable of storing information when inserted into most computers.',
            'Metal nodule that encrypts your thoughts against mind reading, but causes nose bleeds. ',
            'Holographic pet that eats data to survive. ',
            'Unpowered head of an android. ',
            'Set of black dice that always adds up to prime numbers. ',
            'Metal loop that constricts in the presence of computers. ',
            'Tinted window that reveals the inner components of machines when they’re viewed through it. ',
            'Long black glove that protects you from electrocution by the things you touch. ',
            'Helmet that allows you to hear the “thoughts” of all of the robots around you, but causes you to be emotionless and logical. ',
            'Red cube that appears to be recording information but has no visible way to retrieve it. ',
            'Metal and synth ring that allows you to control the volume of audio producing devices. ',
            'Eye patch that causes you to focus all of your attention on whatever electronic device is nearest to you, ignoring everything else in the world. ',
            'Container of liquid metal that sucks up all electricity in the immediate area. ',
            'Floating ceramic eyeball that flies around the room looking at people. ',
            'Shard of crystal that vibrates when you think about your past. ',
            'Goggles that show glowing lines connecting many of the stars when you view the night sky. ',
            'Trapezoidal display that records and plays back any artistic thoughts you have while holding it. ',
            'Stone cube that keeps electronics in the immediate area cool. ',
            'Hexagonal patterned net that isolates a device from the Datasphere when draped upon it. ',
            'Oblong device that glows and hisses when lies are whispered into it. ',
            'Grid patterned cloak that causes the wearer to become invisible to satellites, and those who scry through them. ',
            'Adapter socket for connecting a computer to a crystal harvested from a seskii. ',
            'Eye mask that flashes lights at your eyes, reprogramming your personality slightly. ',
            'Fist sized spider that weaves webs between large electronics, allowing them to communicate. ',
            'Wristband that projects a holographic knife that can only damage data in computer systems. ',
            'Crystal at the end of a chain, which points to the North when held. ',
            'Button encrusted rod that causes random images from the Datasphere to appear in the air. ',
            'Amulet that causes your hands to glow when you touch machinery. ',
            'Robotic salamander that perches on your shoulder and bites anyone who comes near you. ',
            'Glasses with rectangular lenses that change color depending on the “health” of computer systems you view through them.',
            'Floating pyramid that beeps on the hour. ',
            'Musical keyboard that can record and playback songs made on it. ',
            'Metal orb that can be affixed to the end of a staff - tugs you in the direction of large power sources. ',
            'Length of cable that, when connected to a machine, serves to make it more efficient. ',
            'Jar full of robotic insects that, if released, swarm onto any intelligent machine in the area. ',
            'Mask at the end of a stick, which speaks your innermost fears if placed in front of your face. ',
            'Small pack that can carry five times its apparent volume in metal tools. ',
            'Cylinder that projects a set of holographic schematics for building a massive structure. ',
            'Long tubular device that can receive and broadcast radio signals. Sometimes picks up interesting transmissions from someone named Vaux the Jack.  ',
            'Beautiful necklace encrusted with green jewels, each of which causes you to experience a different horrific vision of an apocalyptic war when you touch it. ',
            'Half of a broken crystal sphere, which hums and shakes just before rain storms. ',
            'Pod on a stand that, when set up and activated, causes all dust in the area to instantly disappear. ',
            'Metal necklace that allows you to sense whether a nearby computer system is in need of maintenance. ',
            'Book made of thin glass plates, which fills itself with illustrated fables you heard in your childhood when you hold it. ',
            'Red crystal that glows brightly in the presence of mechanical traps. ',
            'Belt made of chunky blocks of synth that allows you to easily stay up all night. ',
            'Small robotic creature that transforms into the shape of whatever animal you place it near.  ',
            'Mask for your mouth that allows you to speak in a machine language most automatons can understand. ',
            'A brightly-colored glove that walks around randomly for 1 minute on its own when placed on a hard, flat surface.  ',
            'An opalescent square of silken fabric that ripples and sparkles when touched. ',
            'A milky crystalline hemisphere that adheres powerfully to any exposed skin it touches for precisely 1 hour. ',
            'A dull metallic cube that randomly changes the color of any skin it touches for 10 hours. ',
            'A featureless miniature humanoid that sits atop the hand when placed and decorates it with strange ink designs.',
            'A ring that makes the wearer\’s finger nails take on multiple colors. ',
            'A disc that when flipped always lands on its edge. ',
            'A bead of glass or synth that glows faintly. but not enough to see or read by, ',
            'A 3x3 ft sheet of white synth that always washes clean when submerged in water for an hour. ',
            'A cube of red metal that only ever stands on a corner. ',
            'A transparent blue object made of synth that, when placed into a liquid, will maintain the temperature of the liquid for up to 1 day. ',
            'A yard (1m) long length of braided synth wire that rearranges itself into strange 3-dimensional forms every hour.',
            'A tiny pot of shimmering synth that becomes pliable and rubbery at body temperature, returning to its original form and state upon cooling. ',
            'An orb of unknown material that orbits the head of the last person to touch it. '
            'A pulsing seed pod that is always warm to the touch. ',
            'An odd little brush which carefully cleans any surface it is applied to, leaving it smelling vaguely of camphor. ',
            'A 10 cm length of slippery cord. Its thickness responds to the amplitude of sound. ',
            'A small disc of some sort of transparent material through which reveals a multitude of labels in an unknown language appears next to everything you look at through the disc. ',
            'A miniature figurine that dances when you blow on it. ',
            'A seed pod that sprouts edible fruit when dipped in water. ',
            'Pocket watch that doesn\'t have hands yet can be used as a sundial when placed in sunlight.',
        'A chipped glass bead that allows one to see great distances when looking through it. ',
        'A small metal table with tiny magnetized figures.  The table can be made to vibrate, causing the figures to move about randomly on the surface. ',
        'A floppy square of black synth with several oddly shaped holes cut into it revealing a freely rotating metallic-synth disc.  ',
        'A metal skeletal hand attached to a long pole.  Squeezing the grip at the end of the pole causes the hand to slightly flex its fingers.   ',
        'A black synth sphere filled with an unknown liquid.  On one side is a transparent section through which a small object with unknown writing can be seen. ',
        'A synth simulacra of a child that has eyes that open and close depending on its orientation. ',
        'A pendant of blue crystalline material from which tiny wisps of blue smoke constantly unfurl. ',
        'A tiny metal cylinder tipped with a small nodule which, when licked, delivers a slight electric tingle to the tongue. ',
        'A synth cylinder with a lens at one end. When looked into, random colored patterns can be seen. ',
        'A small, slim, featureless black rectangle of pliable, soft, but tough material. It tastes sweet but cannot be chewed or eaten. ',
        'A small rectangular device that emits maniacal laughter when shaken. ',
        'A small, clear tetrahedron that displays a different face every day. Usually the face is smiling, but on every fifth day it is weeping. No face is ever repeated. ',
        'A white synth disc on a metal chain. if held dangling in the air, it spins rapidly and blinks when a pregnant woman is nearby. Green for girl, orange for boy. ',
        'Piece of black cloth that when unfolded, displays an unknown island with several cities on it. Simple controls allow panning, zooming, rotation. Buildings with people and creatures are visible living out tiny little lives, but no other interaction is possible. '
        'Small blue synth bag. When opened on a surface, hundreds of tiny, green ants march out, find nearby small objects (coins, pins, buttons, beads etc.) and begin hauling them back towards the bag. ',
        'A pair of contact lenses which periodically blink horizontally. ',
        'A bag of sparkling plastic dust which slowly refills when emptied ',
        'A metallic disk which lights up in alignment to overhead satellites ',
        'A ceramic whistle which summons specific, nearby servitor androids ',
        'A folded piece of synth-paper with strange words and symbols that plays foreign music when unfolded. ',
        'A squishy ball, that changes colors when you clench it in your hand. ',
        'An apparently clear synth cube that displays a different vista "within" each face. ',
        'A synth torus filled with gel. ',
        'A three legged pair of trousers. ',
        'A mask that makes the wearer\'s face appear upside - down.',
        'A metal polygon that gives off random odors - pleasant and foul - when touched. ',
        'A squishy sphere that screams and wails when it\'s squeezed.',
        'A cracked mirror that shows the viewer as he was years ago, uninjured and in the prime of youth and health. ',
        'A squishy ball which returns when thrown ',
        'A triangular piece of cloth with strange markings, which when waved plays a strange tune. ',
        'A ceramic bucket which when filled with water, slowly empties to somewhere else. ',
        'A cloak which changes color to match whatever bird is closest. ',
        'A ring that moves from finger to finger each day. ',
        'A small container of golden fluid that, when poured out, pours itself back in. ',
        'A deck of oddly marked cards that shuffle themselves. ',
        'A lozenge of pliable synth that turns the holder\'s fingertips a random color for a day. ',
        'A tiny pot that fills itself with blue sand each day. 81. A pendant that makes the wearer\'s ears furry when worn.',
        'A small ring that spins on its edge at great speed for precisely 11 seconds. ',
        'A fist-sized pyramid of felt-like substance that pulses slowly but steadily. ',
        'A twist of wood-like substance in which the knots and grains slowly flow. ',
        'A disk of glass-like material that leaves a glowing pink impression of whatever was last pressed on it for up to an hour. ',
        'A transparent cube containing an hourglass-shaped vial. A figure is inside the hourglass on one side. When the cube is tilted, the figure disappears, and a different figure appears on the other side. Depending on how you tilt the cube, different figures may appear. ',
        'A glass sphere with a nearly(?) infinite progression of glass spheres within it. ',
        'A pair of shoes which reduce the weight of the wearer by 5 pounds ',
        'A pegboard with 10 pegs. The pegs change color based on patterns and/or proximity to other pegs ',
        'A non-shin coin which always reappears in the owners pocket, unchanged from its original form. ',
        'A peculiar device that removes all dirt and grease from the holder, depositing it as a ball at the holder’s feet. ',
        'A ball of sweet gum that emits light like a torch when chewed. ',
        'A golden ring with alien script that only becomes visible when subjected to flame. ',
        'An aerosol that leaves a mobile human face on any surface on which it is sprayed lasting for an hour. ',
        'An eyeball encased in crystal. ',
        'A hat designed for a two-headed being. ',
        'A fabric pocket that attaches itself to any fabric it is placed on. ',
        'A choker-like item that renders the wearer’s speech backwards when worn.',
        'A synth plate that keeps any food placed upon it hot or cold for up to an hour. ',
        'A capsule containing a biomechanical maggot that cleans the user’s teeth when placed in the mouth. ',
            'A handheld device containing a glowing green gem that darkens when no oxygen is present ',
            'A foot-long, egg-shaped object made from stitched leather ',
            'A black metal cylinder that holographically projects the history of an unknown plant or animal species when held ',
            'A cylindrical jar containing a pickled crustacean of unknown origin',
            'A small thumb-button storage cylinder that releases a key when pressed ',
            'An unusual cloak pin that emits a short musical fanfare when tapped ',
            'A handheld tube that sucks in dust when squeezed and captures it in a detachable compartment ',
            'A scintillating disk of unknown material that projects a holographic planet',
            'A dial that can be twisted to slowly click back to its origin, whereupon it emits a loud ringing noise ',
            'A hovering, fist-sized orb of metal that follows you around ',
            'The petrified cocoon of an unknown insect ',
            'A bronze gauntlet set with many slots, and which violently expels any object pressed into those slots ',
            'A box that projects a holographic message in an unknown language when opened ',
            'A rod that causes you to forget the last five minutes when you press a button near its tip ',
            'A palm-sized cylinder that emits a harmless ray of glowing blue light when squeezed ',
            'A bead that suppresses your hearing when secreted inside either ear, causing you to be deafened ',
            'A small storage cylinder containing one hundred tasteless blue pills that produce no discernible effect when swallowed',
            'A metal mechanical puzzle with no apparent solution ',
            'A metal spinning top that never tips over when spun ',
            'Two strips of cloth-like material, each coated with a soft, hair-like fuzz on one side ',
            'A simple wire pyramid that preserves any foodstuffs it is placed over ',
            'A star chart labeled in an unknown script ',
            'A rectangle of black glass that displays indecipherable symbols when you swipe your finger across it ',
            'A schematic that shows the inner workings of an impossibly complex device ',
            'An odd pair of comfortable shoes made from supple, multicolored material ',
            'A mechanical synthsteel puppy that playfully follows you around when activated ',
            'A talking bracelet that speaks only to correct your grammar',
            'A journal with writing that appears to be narrating your actions. ',
            'A synthsteel container one serving of disgusting but nutritious goop that refills itself slowly over the course of one week',
            'An instruction manual for activating a world-destroying device ',
            'A small supple disk that displays weird moving symbols when placed over either eye ',
            'A pair of tinted spectacles that reduce the glare of the sun when worn ',
            'An inflatable bedroll made from an unknown material, and which slowly deflates when used ',
            'A rod tipped with a blunt metal pincer whose grip can be adjusted by turning a screw ',
            'A battered helmet with a transparent orange visor that flips into place when donned ',
            'An animated map of a mysterious city that appears to be tracking the movements of five creatures ',
            'A cylinder of mist that holds your hair perfectly in shape when sprayed onto your head ',
            'A talking wand that tells you the name of any plant you point it at ',
            'A metal bracelet that displays the number of steps you’ve taken since you last slept ',
            'A tiny handheld device that projects a glowing dot onto whatever you point it at',
            'A wall chart of mysterious formulae arranged into a color-coded grid ',
            'A handheld device that solves any math problem you input using its buttons ',
            'A ball of speckled brown fur that appears to be alive ',
            'A large glass rectangle that displays a storm of black and white patterns when you press a button on its underside ',
            'A ball bearing that rolls back to the owner when thrown, defying gravity if it needs to.',
            'A crystal hanging from a silver necklace. The crystal changes color depending on the wearer’s mood.',
            'A strangely shaped piece of whittled driftwood with dozens of holes in it. When the correct hole is blown into, it mimics the sound of the ocean',
            'A sturdy leather cord tied into an intricate knot that writhes in the hands of the holder',
            'A box with a small metal cube inside. The cube melts at the temperature of human skin, so when held, the cube melts, but when exposed to cool air, it solidifies again.',
            'A glowing orb that has a hidden button on it. Pressing it reveals several smaller orbs inside, which escape the orb and start to orbit it, like planets around a star. Pressing the button again causes the spheres to retreat back into the glowing one.',
            'A dodecahedron made of glass that when activated projects a night sky, complete with shooting stars and constellations.',
            'A stone that is deceptively soft and squishy.',
            'A spool of thread that coils up when you touch the spool.',
            'Silver silk handkerchief 3in on a side. With a flick of the wrist it becomes as hard as thick steel.  A second flick reverts.',

        ]
        print(random.choice(oddity_list))
    else:

        material_list = [
        'synth',
        'metal',
        'glass',
        'energy',
        'wood',
        'rubber',
        'ceramics',
        'leather',
        'skin',
        'plant-matter',
        'stone',
        'stronglass',
        'azure steel',
        'float stone',
        'crystal',
        'fossilised shells',
        'cloth',
        'petrified wood',
        'putty',
        'felt',
        'copper',
        'fur',
        'sponge',
        'moldable synth',
        'soap',
        'wet flesh that never dries out',
        'frozen fire',
        'molded glass',
        'a series of interlocking rings',
        'inflatable pouches',
        'geometric shapes',
        'artificial animal parts',
        ]
        material_select = random.choice(material_list)

        effect_list = [
        'glows',
        'pulses',
        'vibrates',
        'points towards the nearest water source',
        'permanently tattoos images of birds',
        'changes texture randomly',
        'changes colour randomly',
        'shoots out harmless foam',
        'makes people itch',
        'makes everything appear upside-down',
        'makes everything look pink',
        'tastes amazing',
        'grows into a small hut in a week',
        'emits green smoke',
        'whispers in an unknown language',
        'emits faint calls of "I\'m waiting for you"',
        'makes your fingertips change colour',
        'emits clicking noises',
        'beeps',
        'emits light',
        'weighs nothing',
        'weighs as much as an average human',
        'continually fills with fluid',
        'emits bubbles',
        'orbits nearby creatures',
        'orbits nearby objects',
        'bursts with colour',
        'removes flavors from food',
        'always faces east',
        'always faces west',
        'always faces north',
        'always faces south',
        'always faces towards the sea',
        'always faces up',
        'always faces down',
        'always faces towards the nearest edible food',
        'floats',
        'hums',
        'creates a feeling of euphoria',
        'reflects images that are missing one detail',
        'twitches as if alive',
        'snores like a loud, sleeping man',
        'emits sounds and lights',
        'generates constant static noise',
        'makes everything taste minty',
        'makes everything taste disgusting',
        'makes everything taste delicious',
        'makes everything taste like burning',
        'floats like a balloon',
        'changes colour based on who holds it',
        'displays incorrect local maps on its surface',
        'becomes harder than the strongest metal',
        'can not be touched',
        'reduces gravity by barely noticable amounts',
        'can not be adhered to anything',
        'scares small animals',
        'numbs the sense of touch',
        'cleans things',
        'turns things purple for one hour',
        'causes sneezing',
        'thickens liquids',
        'turns liquids to alcohol',
        'turns into a gel for one minute',
        'always contains 14 marbles',
        'pulses in time with the heartbeat of the user',
        'sparkles under starlight',
        'makes people state their names out loud',
        'grants visions of the sea',
        'grants visions of the stars',
        'grants visions of strange creatures',
        'prevents perspiration',
        'feels warm to the touch',
        'feel cold to the touch',
        'smells like mint',
        'smells like vomit',
        'smells like flowers',
        'smells like freshly baked bread',
        'smells like excrement',
        'disappear, but always reappear 2 hours later',
        'makes everyone nearby hungry',
        'howls in pain and anguish',
        'shrieks a stream of profanities for 1 minute',
        'sometimes eases aches and pains',
        'whispers constantly that it loves you',
        'releases glow in the dark bubbles',
        'etches random designs on anything edible',
        'etches random designs on anything living',
        'changes to the same colour of your last meal',
        'changes to the same colour of last thing it touched',
        'temporarily changes your hair grey',
        'appears full of fluid, regardless of contents',
        'sounds like bells ringing',
        'sounds like children crying',
        'sounds like women laughing',
        'makes every word the holder hears seem incredibly rude and offensive',
        'changes colour as time passes',
        'speak a single, random word every 10 minutes',
        'turns your eyes black',
        'projects shadows onto nearby surfaces',
        'emits soothing smells',
        'plays pleasant music',
        'plays unpleasant, disturbing music',
        'emits nauseating smells',
        'purrs and coos softly',
        'levitates the wielder above solid surfaces by 1 inch at random intervals',
        'makes anything inside it glow',
        ]
        effect_select = random.choice(effect_list)

        trigger_list = [
        'wet',
        'stroked',
        'pressed against skin',
        'night falls',
        'in proximity to fire',
        'in proximity to laughter',
        'near children',
        'near men',
        'near women',
        'near varjellans',
        'near water',
        'near food',
        'near flesh',
        'eaten',
        'held closely',
        'stared at intently',
        'licked',
        'sniffed',
        'inserted into a bodily orifice',
        'thrown',
        'opened',
        'the moon is visible',
        'the sun is visible',
        'under starlight',
        'in the dark',
        'in direct sunlight',
        'touched',
        'yelled at angrily',
        'spoken to politely',
        'praised like a good pet',
        'near adults',
        'worn around a wrist or ankle',
        'worn around the neck',
        'work on the head',
        'desired',
        'cold',
        'warm',
        'hot',
        'immersed in water',
        'the sun rises',
        'the sun sets',
        'exposed to rotting meat',
        'exposed to living flesh',
        'exposed to plant-matter',
        'a storm is coming',
        'exposed to excrement',
        'placed behind someones head',
        'music is playing',
        'speaking',
        'blown on',
        'alone',
        'exposed to salt',
        'moving south',
        'moving east',
        'moving west',
        'moving north',
        'moving upwards',
        'moving downwards',
        'rotated clockwise',
        'rotated anticlockwise',
        'turned upside-down',
        'pressed against an ear',
        'pressed against an eye',
        'whistled at',
        'in the presense of profanities',
        'shaken',
        'juggled',
        'given to another person',
        'held in the mouth',
        'near corpses',
        ]
        trigger_select = random.choice(trigger_list)

        object_list = [
        'A crystal nodule',
        'A handheld device',
        'A large metallic disc',
        'A metallic sphere',
        'A canister',
        'A synth gauntlet',
        'A wristband device',
        'An amulet',
        'A figurine',
        'A circlet'
        'A bracelet'
        'A small smooth stone',
        'A cylindrical tube',
        'Goggles',
        'A glove',
        'An electronic module',
        'A small metallic disc',
        'An adhesive patch',
        'A small cube',
        'A skin graft',
        'A vial of moving slime',
        'A spinal graft',
        'A vial with small writhing worm',
        'A stuffed animal',
        '3 interlocked rings',
        'A box',
        'An indestructible tube',
        'A transparent glove',
        'A 3 fingered glove',
        'A large, stretchy sock',
        'A mask with 4 eye holes',
        'A belt buckle',
        'A ring',
        'An arm brace',
        'A 3 inch coil of string',
        '17 small dodecahedrons',
        'Statue of unknown animal',
        'A tablet etched with runes',
        'A clockwork rubar',
        'A bouncing ball',
        'A pink cuboid with silver edges',
        'A pair of spectacles too large for a human face',
        'A hooped earring',
        'A model of a pair of human-like eyes',
        'An inanimate spider',
        'Shoes',
        'A sphere',
        'A pendant',
        'A square of cloth',
        'A pyramid',
        'A rod',
        'A hemisphere',
        'A panel',
        'A glove',
        'A jar',
        'A container',
        'A small blade',
        'A small disc',
        'Eye lenses',
        'A brush',
        'A cup',
        'A mask',
        'A lidded box',
        'A never-ending spray-canister',
        'Lenses',
        'Goggles',
        'Spectacles',
        'A small stone',
        'A tile',
        'A harp',
        'A wand',
        'A needle',
        'A bottle of ink',
        'An inanimate insect',
        'A mummified alien hand',
        'A mummified alien foot',
        'A horn',
        'A vial of liquid',
        'A mirror',
        'Cigarettes',
        'A coin',
        'A bag',
        'A device',
        'A pouch of powder',
        'A flexible sheet',
        'A sponge',
        'A torc',
        'A necklace',
        'A piece of honeycomb',
        'A ball of goo',
        'An ankle bracelet',
        'An alien wig',
        'A small bird statuette',
        'A lock of hair held in a clasp',
        'A small stamp',
        'An antler from an unknown creature',
        'A hat',
        'A can',
        'An egg',
        'A circlet',
        'A tea kettle',
        'A spoon',
        'A fork',
        'A comb',
        'A living plant',
        'A preserved flower',
        'A small net',
        'A small mesh',
        'Chewing gum',
        'A sculpture of a fish',
        'A scarf',
        'A fist-sized, teardrop-shaped object',
        'A sculpture of a human mouth',
        'A 4-toed boot',
        'A box containing a living eyeball',
        '3 sea-shells',
        ]
        object_select = random.choice(object_list)

        roll = random.randint(1,4)
        if roll == 1:
            print(object_select, 'made of', material_select, 'that', effect_select, 'when', trigger_select)
        elif roll == 2:
            print(object_select, 'made of', material_select, 'that', effect_select )
        elif roll == 3:
            print(object_select, 'that', effect_select, 'when', trigger_select )
        else:
            print(object_select, 'that', effect_select )

def artifact():
    print('Artifact!')
    level = random.randint(1,6)
    artifact_roll = random.randint(1,426)
    if artifact_roll == 1:
        print('Smart Sleeping Bag \n Level: ', level,' Form: A cocoon-like synth sleeping bag Effect: This device grants the user +', level,' to his fourth recovery roll, providing he sleeps in the device for ten consecutive hours. Depletion: 1 in 1d20 ')
    elif artifact_roll == 2:
        print('Oneiric Intruder \n Level: ', level,'+3 Form: A small shapestone (page 77 of the Numenera corebook) canopic jar wired to a pair of head clamps Effect: When activated, this device grants the user access to the dreams of another living creature, who must be asleep (or unconscious) and connected to the artifact for at least ten minutes. This procedure is called “dream-walking”. While in this oneiric realm, the user falls in a coma-like state, unaware of his surroundings, and can gain access to the other creature’s knowledge, memories and secrets. An Intellect task (level 4) with an initial cost of 3 Intellect points	is	needed	to	access	any	specific	element	of	information.	The	user may end the connection at any time. Depletion: 1 in 1d20 ')
    elif artifact_roll == 3:
        print('Flash Precognition Spectacles \n Level: ', level,'+2 Form: A pair of thin synth or metal spectacles Effect: It takes one round to activate the spectacles. When activated, this device gives the wearer the ability to see things seconds before they happen. This is an asset in initiative and all Speed defense rolls. Depletion: 1 in 1d10 ')
    elif artifact_roll == 4:
        print('Abhuman Lure \n Level: ', level,' Form: A metallic spike with a box-like device on top Effect: When activated, the mechanism on top releases a series of sounds, odors, and illumination tuned to draw the attention of any abhumans within very long range for one hour. If any abhumans are in the area, at least one from any associated group comes to investigate unless they are higher level than the artifact, in which case they could choose to resist the temptation offered by the lure. Depletion: 1 in 1d10')
    elif artifact_roll == 5:
        print('Mechanic Gauntlet \n Level: 1 \n Form: Long metal glove. Effect: Allows it and your forearm to pass right through the casing on machinery, so that you can manipulate the components inside without opening it. ')
    elif artifact_roll == 6:
        print('Adamantine Cable \n Level: 1 \n Form: A 50-foot (15 m) length of black rope \n Effect: This length of rope has the flexibility of ordinary rope but a hardness greater than steel. The rope is impervious to all damage and cannot be cut. Depletion: —')
    elif artifact_roll == 7:
        print('Agony Scarab \n Level: ', level,' + 2 \n Form: A small beetle-shaped device \n Effect: To activate the device, a user must place the beetle on the bare skin of a living creature. The beetle immediately burrows into the flesh, inflicting 1 point of damage, and travels just under the skin until it lodges at the base of the creature’s spine. Once there, the beetle drills into the creature’s spine to control its nervous system. At the user’s spoken command, the beetle sends horrific pain shooting through the target’s body, and the target becomes stunned and loses his next action. The beetle then releases its hold on the target and tears free, inflicting 1 point of damage as it emerges through the skin and returns to the user, at which point it becomes dormant once more. Depletion: 1 in ', level,'')
    elif artifact_roll == 8:
        print('Aim True Goggles\nLevel: ', level,' Form: A pair of goggles, a pair of glasses, a full or half mask that covers the eyes with lenses Effect: By pressing small buttons on both sides of the device, the user activates the lenses. These special lenses block blue and violet rays, which can impair vision, thus enhancing the wearer’s sight. The difficulty of all ranged attacks is decreased by one step when wearing the goggles. Lasts for one hour. Depletion: 1 in 1d20 for lens activation (after depletion, the goggles can still be worn as normal goggles)')
    elif artifact_roll == 9:
        print('Amber Casement\nLevel: ', level,' + 4 Form: Series of short, rounded tubes and hoses about 12 inches (30 cm) long Effect: When activated, it solidifies the air in a 10-foot (3 m) cube of space, the center of which must be within short range of the device. The air is turned into an amberlike substance, and those trapped in it will likely suffocate or starve. Depletion: 1–4 in ', level,'')
    elif artifact_roll == 10:
        print('Amulet of Operation\nLevel: ', level,' Form: A plain metallic disk on a chain Effect: Once the amulet is keyed to a specific numenera installation, the installation cannot be used by anyone except the amulet’s wearer. Depletion: —')
    elif artifact_roll == 11:
        print('Amulet of Safety\nLevel: ', level,' Form: Plain metallic disk on a chain Effect: Once the amulet is keyed to a specific numenera weapon, the weapon cannot activate to harm the wearer. The amulet’s level must be at least as high as the weapon’s level. Depletion: —')
    elif artifact_roll == 12:
        print('Analyzing Shield\nLevel: ', level,' + 1 Form: Transparent synth shield Effect: The bearer can see through this shield, and it has a display that analyzes the best place to strike a foe viewed through it. The bearer can use points from their Intellect Pool (rather than the more typical Might or Speed) to increase the damage of their attacks by  3 additional points per level of Effort. Depletion: —')
    elif artifact_roll == 13:
        print('Annihilation Chamber\nLevel: ', level,' Form: A metal canister 3 feet (1 m) tall and 1 foot (0.3 m) in diameter, with a flip-up lid Effect: Anything placed inside the canister is instantly and permanently destroyed. Depletion: 1 in 1d100')
    elif artifact_roll == 14:
        print('Arc Maul\nThis is a wooden shaft about 3 feet (1 m) long with a numenera object affixed to the end. Scavengers have found that many numenera devices, when struck, produce a burst of energy of some kind—a flare of heat, an arc of electricity, or something weirder. In general, an arc maul is a heavy weapon that inflicts 2 additional points of damage with each hit. A depletion roll sometimes indicates that the artifact has run out of power, as normal, but sometimes it indicates that the device is too battered to continue serving as an effective weapon. Depletion: 1 in 1d20')
    elif artifact_roll == 15:
        print('Armored Flesh\nLevel: ', level,' + 2 Form: Appears to be a collection of organic armored plates, like a carapace or very large fish scales Effect: When placed on the wearer’s flesh, the armor grafts on permanently. It provides Armor equal to half its level (round up) but does not hinder movement or tire the wearer in any way (no Speed cost increase for applying Effort). On the contrary, the wearer’s maximum Might Pool is permanently increased by 2. However, the benefits come at a cost. Fibrous tendrils extend into the wearer’s flesh and eventually reach the spine and brain, inflicting damage in the form of 2 points of permanent maximum Intellect Pool reduction. This process takes one week. The lost points cannot be regained. Depletion: —')
    elif artifact_roll == 16:
        print('Armoring Cloth\nLevel: ', level,' Form: Typical clothing Effect: If this clothing is struck, it hardens upon impact, providing +1 to Armor. It then immediately returns to its normal state (which is in no way encumbering). This clothing cannot be worn with armor of any kind. Depletion: —')
    elif artifact_roll == 17:
        print('Augmentation heptagon\nLevel: ', level,' + 1 Minimum Crafting Level: 4 Form: Metallic seven-sided box large enough to insert both hands Effect: To activate, the user must insert both hands into the artifact and grasp the handles as an action. On the following round, an injection that inflicts 1 point of damage (ignores Armor) grants the user the capacity to apply one free level of Effort to a specific task as long as the user first applies a level of Effort to that task normally. This augmentation lasts for a period of three days. Each augmentation heptagon is keyed to a different kind of skill, including the following. Task 1 Balancing 2 Climbing 3 Crafting numenera 4 Deceiving 5 Healing 6 History 7 Initiative 8 Intimidation 9 Jumping 10 Leatherworking 11 Lockpicking 12 Perception 13 Persuasion 14 Pickpocketing 15 Riding 16 Salvaging numenera 17 Sneaking 18 Swimming 19 Understanding numenera 20 Woodworking Depletion: 1 in 1d20')
    elif artifact_roll == 18:
        print('Augmenter Harness\nLevel: ', level,' Form: A thick, wide belt with a mechanical device as a buckle and two bands that extend from the belt up and over the wearer’s shoulders Effect: The device enhances the wearer’s physical strength and power. She inflicts 1 additional point of damage with weapon attacks, and the difficulty of carrying or lifting tasks is reduced by one step. Depletion: 1 in 1d10 (check once each day while worn)')
    elif artifact_roll == 19:
        print('Automapper\nLevel: ', level,' Form: Thin metallic slab with lights and a toggle Effect: This slab tracks its own progression through the world, creating a virtual light map on its surface for about a month. At the end of that time, it resets itself and begins again. Depletion: —')
    elif artifact_roll == 20:
        print('Automated Bath\nLevel: ', level,' Form: A small metal-and-synth hovering sphere that has metallic arms, tubes, and cleaning tools Effect: This automaton cleans a nearby target on command if the target doesn’t resist. If allowed to finish, over the course of about a minute, the target is cleaned of all dirt and grime, their teeth are cleaned, their hair is washed and brushed, and their nails are trimmed. This also cleans the target’s clothing. Depletion: 1 in 1d100')
    elif artifact_roll == 21:
        print('Automated Cook\nLevel: ', level,' Form: Small metal and synth cube that has metallic arms and tools Effect: This automaton prepares food on command. It must be given raw materials (water and organic compounds), but with those it can prepare and serve a hot, nutritious, delicious meal. Depletion: 1 in 1d100')
    elif artifact_roll == 22:
        print('Autoscribe\nLevel: 1 Form: A severed hand fitted with a metal plate on the stump that holds a writing implement Effect: Speaking the command causes the hand to animate, rise up, and ready the writing implement to record whatever you say on whatever surface the implement touches. The hand deactivates when you speak the command again. Depletion: 1 in 1d100')
    elif artifact_roll == 23:
        print('Backpack guardian\nLevel: ', level,' Minimum Crafting Level: 4 Form: Heavy pack-like device composed of metal and synth components Effect: The device unfolds itself into a human-sized level 3 automaton for about an hour. The automaton follows the user, and if the user is physically threatened with violence, it provides an asset to the user’s Speed defense rolls. (Treat the automaton as a follower with only one modification, which is Speed defense.) Depletion: 1 in 1d20')
    elif artifact_roll == 24:
        print('Battle Armor\nLevel: ', level,' + 4 Form: Full suit of synth and steel armor, covering the entirety of the wearer’s body Effect: This armor is far hardier yet somewhat lighter than Ninth World smithing techniques could ever manage with steel. It is heavy armor but grants an additional +2 Armor (+3 Armor if the artifact is level 9 or higher) in addition to the 3 Armor that heavy armor usually provides. Further, it is entirely sealed and has its own eternally renewed internal atmosphere, which completely protects against poison gases and allows the wearer to operate in an airless environment. The suit’s Armor rating also applies to damage that often isn’t reduced by typical armor, such as heat or cold damage (but not Intellect damage). Depletion: — (At any time, the GM can rule that the armor has sustained enough damage that the atmosphere and environmental protections cease, but the suit still functions as armor.)')
    elif artifact_roll == 25:
        print('Battlesuit\nLevel: ', level,' + 4 Form: Full suit of synth and steel armor, covering the entirety of the wearer’s body Effect: This armor is far hardier yet somewhat lighter than Ninth World smithing techniques could ever manage with steel. It is heavy armor but grants an additional +3 to Armor in addition to the 3 Armor that heavy armor usually offers. Further, it is entirely sealed and has its own eternally renewed internal atmosphere, which completely protects against poison gases and allows the wearer to operate in an airless environment. The suit’s Armor rating also applies to damage that often isn’t reduced by typical armor, such as heat or cold damage (but not Intellect damage). In addition, the wearer gains +1 to their Might Edge and +5 to their Might Pool (+7 to their Might Pool if the artifact is level 9 or higher). Depletion: — (At any time, the GM can rule that the armor has sustained enough damage that the atmosphere and environmental protections cease and the Might enhancements no longer function, but the suit still functions as armor.)')
    elif artifact_roll == 26:
        print('Beam Lance\nLevel: ', level,' + 3 Form: Forearm bracer Effect: When mounted on a creature’s forearm, this weapon fires a beam of concentrated green light up to 200 feet (61 m), inflicting 6 points of damage. Alternatively, the beam can be shortened to 6 feet (2 m) in length and used as a melee weapon for one minute, inflicting 6 points of damage. Depletion: 1–3 in 1d100')
    elif artifact_roll == 27:
        print('Biometric Patch\nLevel: ', level,' Form: A patch of skin that must be grafted onto another artifact Effect: The patch bonds to whatever it touches and prevents creatures other than the user from using the artifact. To use the artifact, the user must place his lips on the patch, which reads the biometric signature and activates the artifact. Depletion: —')
    elif artifact_roll == 28:
        print('Blaster Goggles\nLevel: ', level,' + Form: Complex goggles with red-tinted lenses Effect: A wearer can tap the side of the goggles and cause them to emit a blaster pulse that travels a long distance. The pulse inflicts damage equal to the artifact level. If the user gets a major effect on an attack roll using this device, in lieu of extra damage, another major effect, or anything else, the pulse inflicts 6 additional points of damage to the target, and it inflicts 4 points of damage to all creatures and objects within immediate range of the target. Depletion: 1 in 1d20')
    elif artifact_roll == 29:
        print('Blister Glove\nLevel: ', level,' + 2 Form: Fingerless glove sewn from ratty denim, covered with rusted rivets Effect: If the wearer points with her gloved hand at a target she can see within long range, the target blisters across its extremities, feels extreme pain, and suffers ambient damage equal to the artifact level. Fleshy pustules also form on objects, the ground, and other structures near the target. Depletion: 1 in 1d20')
    elif artifact_roll == 30:
        print('Bloodblade\nLevel: ', level,' + 1 Form: A metal blade with spikes that must be inserted into the flesh of the wielder’s forearm Effect: When inserted into the wielder’s arm, this device inflicts 3 points of damage (ignores Armor). Thereafter, the wielder can use this weapon as a light weapon that inflicts 3 points of damage. Further, when the wielder wishes it (requiring no action), the blade can absorb 3 points from his Might Pool and turn them into a powerful poison. The poison coats the blade so that a victim suffers 5 additional points of damage if affected. Depletion: —')
    elif artifact_roll == 31:
        print('Blurred vista\nLevel: ', level,' + 3 Minimum Crafting Level: 6 Form: Box with several controls and handles Effect: The area within long range of the box becomes hazed for about an hour. The effect moves with and stays centered on the artifact for that period. Creatures within the area are unaffected, but tasks related to noticing the movements of those within the area by those outside the area are hindered. (However, the overall hazed area is obvious once noticed.) If the use is coordinated with a ranked horde, the horde is treated as if a stealthy horde for that community action, in addition to any other benefits it might possess. (When a stealthy horde first attacks, it gets a free one-sided community action in which it inflicts damage on its opponent and is not simultaneously attacked in return.) Depletion: 1 in 1d20')
    elif artifact_roll == 32:
        print('Bone Garden\nLevel: ', level,' + 2 Form: Long-needled injector filled with liquefied calcium Effect: The liquefied bone is injected directly into the bone marrow of the user. Within ten minutes, the user’s bones are fortified by the calcium injection, and his Might Pool is permanently increased by 2. Depletion: —')
    elif artifact_roll == 33:
        print('Boring Lance\nLevel: ', level,' + 1 Form: A long metal-and-glass tube fitted with a metallic device studded with controls Effect: When pointed at a solid surface within short range and activated, a cavity is immediately bored in the surface but only if the material composing it is less than or equal to the artifact’s level. The cavity is an immediate distance across and up to a short distance deep. If the surface being bored isn’t at least a short distance thick, the lance doesn’t continue into a different kind of material or into open air—it just stops (but it could be activated again to bore through that material). Depletion: 1 in 1d20')
    elif artifact_roll == 34:
        print('Bounding Boots\nLevel: ', level,' + 1 Form: Plain looking leather boots with small metal and synth devices worked into the sides Effect: The boots negate gravity enough to make jumping and running easier. The boots are an asset for jumping and running (easing by two steps for one of these skills if the artifact is level 6 or higher). Depletion: —')
    elif artifact_roll == 35:
        print('Box of Embers\nLevel: ', level,' Form: Very small synth panel or patch affixed to a melee weapon or other tool Effect: Once attached, this nodule causes the hilt of the weapon or tool to glow with a pulsing reddish-black light. The patch has no effect on the item during combat, but three small buttons on the side allow the user to control the other effects: light (a red glow that allows the user to see at night as if it were daylight), heat (enough to melt ice or keep one person warm even in freezing temperatures), and firestarting (while in this mode, blowing on the hilt will release enough embers from the weapon to start a fire). Depletion: —')
    elif artifact_roll == 36:
        print('Brain Bud\nLevel: ', level,' Form: Organic pod, almost like a small, hemispherical bit of fruit. Once grafted to a host, it takes on the appearance of the host’s flesh. Effect: The pod grafts onto any living host (must be near the brain) and injects complex chemicals that greatly improve brain activity. This increases the host’s maximum Intellect Pool by 5 (+7 if the artifact is level 6 or higher). Depletion: —')
    elif artifact_roll == 37:
        print('Brain Fogger\nLevel: ', level,' + 2 Form: Large backpack-sized device with a metallic wand connected with hoses and wires Effect: When activated, the brain fogger produces a prodigious amount of fog that moves with the prevailing air in a cloud a very long distance across. Attacks attempted by creatures within the fog are hindered. If deployed against a ranked community or horde, the target is treated as if one rank lower than normal during that community action. Depletion: 1 in 1d10')
    elif artifact_roll == 38:
        print('Breathing Field Spinner\nLevel: ', level,' Form: A 12-foot (4 m) tall collapsible metal tripod with a large metal globe at the top; the globe has a number of holes in it but is not hollow Effect: It takes two rounds to assemble and set up this device. It then requires an action to activate. When activated, the globe at the top begins to spin, sending out fresh, breathable air in all directions in a continuous wind up to a very long distance across (though current weather or air pressure can shrink that radius) for about an hour. Creatures within the area can breathe normally even if in a toxic atmosphere. Creatures are also protected from effects that move as a mist, fog, or spread of particulates, assuming those particulates can’t move under their own power. If deployed to protect from a ranked airborne threat of some sort, the rank of that threat is decreased by one step. Depletion: 1 in 1d20')
    elif artifact_roll == 39:
        print('Burning Egg\nLevel: ', level,' Form: A small metal, egg-shaped object with a button on top Effect: Pressing the button causes the device to flash once each round for three rounds. After this time, it emits a loud buzzing noise and releases a wave of invisible energy. The wave inflicts ambient heat damage equal to the artifact level on every living thing within a short distance. Depletion: 1 in ', level,'')
    elif artifact_roll == 40:
        print('Cacophony Blade\nLevel: ', level,' Form: A dull, heavy, medium-length sword, dripping oil, with a fine spiked chain running along the edge Effect: This sword is unwieldy and heavy. The difficulty of attacks made with this weapon is increased by one step. However, if the user activates the artifact, the spiked chain begins to rock back and forth, creating an awful shrieking noise. When the weapon hits a target, the chain catches and rips through the target, inflicting 4 additional points of damage. The damage penetrates (ignores) 2 Armor. Depletion: 1 in 1d20')
    elif artifact_roll == 41:
        print('Calridian Proboscis\nLevel: ', level,' + 2 Form: Prehensile, biomechanical proboscis about 3 inches (8 cm) long that can be surgically grafted anywhere on a person’s body Effect: Once grafted, the proboscis sniffs the air constantly, attempting to detect nanites. It provides the host with an asset on all tasks related to discovering (within long range) and identifying the numenera. The proboscis must be surgically and permanently grafted (a task with a difficulty equal to the artifact level). In skilled hands, the procedure takes about one hour. It works best if grafted in an area that is typically free of clothing or hair. Depletion: —')
    elif artifact_roll == 42:
        print('Carryall\nLevel: ', level,' Form: Metallic chest with tracked wheels on either side Effect: This device comes with a small module that can be worn on a belt. Rolling along on its wheels, the chest attempts to follow within immediate range of the module (though it can be directed to remain where it is). It moves a short distance each round. The chest can come to the module from a range of up to 10 miles (16 km) away (20 miles [32 km] if the artifact is level 6 or higher). The interior of the chest is mostly hollow and can hold up to 5,000 pounds (2,300 kg). The artifact must be newly activated each day. Depletion: 1 in 1d20')
    elif artifact_roll == 43:
        print('Cellular Annealer\nLevel: ', level,' + 4 Form: A small handheld device with a few simple controls Effect: This device emits a faint, short-range beam that affects only organic creatures and materials. A living target hit by the beam moves up one step on the damage track. A target that is not down on the damage track can immediately make a free recovery roll (or, for NPCs, regain a number of points of health equal to their level × 3). Depletion: 1 in 1d10')
    elif artifact_roll == 44:
        print('Cellular Disruptor\nLevel: ', level,' + 4 Form: Small handheld device with a few simple controls Effect: This device emits a faint short-range beam that affects only organic creatures and materials. Living targets hit by the beam move one step down the damage track. Nonliving organic targets are likely destroyed. This device is a rapid-fire weapon and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d10')
    elif artifact_roll == 45:
        print('Chameleon Cloak\nLevel: ', level,' + 4 Form: Very thin, lightweight, transparent cloth formed into a crude cloak Effect: When activated, the device takes on the colors and textures of everything around the wearer for ten minutes (one hour if the artifact is level 9 or higher). This eases hiding and sneaking tasks by two steps. Depletion: 1 in 1d100')
    elif artifact_roll == 46:
        print('Chiurgeon Sphere\nLevel: ', level,' + 2 Form: Small, spherical automaton about 8 inches (20 cm) in diameter Effect: This device comes with a small module that can be worn on a belt. Floating along, the automaton attempts to follow within immediate range of the module (though it can be directed to remain where it is). It moves a short distance each round. The sphere can come to the module from a range of up to 10 miles (16 km) away. If the module is worn by an organic creature and that creature takes damage, the automaton moves to repair the damage with cellular regenerating tools that restore ', level,' – 2 points per round (meaning that if a 1 or 2 is rolled, no damage is repaired that round). This requires no action on the part of the creature being healed. Each day, the automaton can attempt to render aid a number of times equal to its level. The artifact must be newly activated each day. Depletion: 1 in 1d20')
    elif artifact_roll == 47:
        print('Chronometer\nLevel: 1 Form: A wristband with a mechanical display in the middle Effect: The device keeps perfect time. The device also has a stopwatch and timer function. Depletion: —')
    elif artifact_roll == 48:
        print('Clawed Gauntlets\nLevel: ', level,' Form: Metal gauntlets Effect: With a flick of one’s hands (not an action), these gauntlets produce long steel claws that are medium weapons, inflicting 1 additional point of damage on each melee attack. Depletion: —')
    elif artifact_roll == 49:
        print('Cloak of Finery\nLevel: ', level,' + 1 Form: A multilayered cloak of glittering material Effect: This cloak is woven of smart fibers and studded with small devices designed to not only automatically tailor the cloak’s fit to its wearer but also highlight the wearer in the most attractive light possible, providing variable illumination, sound amplification, tone control, and even a limited ability to edit grammatical mistakes and pauses made by the wearer. When activated, the cloak provides an asset to all interaction tasks the wearer attempts for the next minute. Depletion: 1 in 1d20')
    elif artifact_roll == 50:
        print('Cloak of Unrest \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Multilayered cloak of various materials that seem to clash and contrast in a disharmonizing way Effect: This cloak is woven of smart fibers and studded with small psychic emitters designed to engender disharmony in living creatures in the area. When the cloak is activated for periods of up to one hour, creatures within short range who can see the wearer become more disagreeable, more prone to angry reactions, and less willing to forgive and forget slights. To most creatures, it’s not immediately obvious that the cloak is the source of their unrest. Tasks to stem violence, promote peace, and reach compromise in the affected community are hindered. Depletion: 1 in 1d2')
    elif artifact_roll == 51:
        print('Cognition Tester \n Level: ', level,' + 1 Form: A head-sized metallic box studded with dials and controls Effect: Using this device always takes at least two rounds because producing an effect requires that the user solve a newly generated cognitive puzzle by successfully manipulating the device’s controls, rotational planes, and other hidden inputs. Solving the puzzle is an Intellect task with a difficulty equal to the artifact’s level. If successful, the user is injected with the knowledge of a random numenera plan whose level is up to the level of the artifact. If the user fails the cognition test, they suffer 4 points of Intellect damage (but do not trigger a depletion roll). Depletion: 1 in 1d10')
    elif artifact_roll == 52:
        print('Cohesion Stabilizer \n Level: ', level,' + 4 Form: Wristband-mounted device with a few simple controls Effect: Any attempt to affect the integrity of the wearer’s physical form by disintegrating it, encasing it, changing its phase, teleporting it, or otherwise disrupting it fails if the wearer wishes it to fail. Doing so is not an action on the wearer’s part. The artifact’s level must be equal to or higher than the effect’s level. Depletion: 1 in 1d10')
    elif artifact_roll == 53:
        print('Communication Beads \n Level: 1 Form: A pair of tiny insects with strange sucker heads Effect: To activate this item, each insect must be placed inside an ear canal. If placed in the ears of two different creatures, each creature can hear the other speak regardless of the distance between them or the volume at which they speak. Depletion: 1 in 1d100 (checked each hour the devices are used)')
    elif artifact_roll == 54:
        print('Compactor \n Level: ', level,' + 2 Form: A tube that is 24 inches (61 cm) long and 5 inches (13 cm) wide Effect: When the tube is pointed at an inanimate, unsecured, solid object that is 10 to 30 inches (25 to 76 cm) across within immediate range, that object implodes, compacts into a ball no more than 4 inches (10 cm) across, and is drawn into the tube. Using another action, the user can project the ball up to long range with incredible force, inflicting 10 points of damage. Only one object can be compacted and loaded at a time. Depletion: 1 in 1d10')
    elif artifact_roll == 55:
        print('Concussion Mace \n Level: ', level,' + 2 Form: A metal baton that emits a soft blue light when gripped Effect: The baton functions as a club (a light weapon). However, if the wielder uses an action to activate it, the weapon hums with crackling energy for one round. During that round, the foe is stunned. Depletion: 1 in ', level,'')
    elif artifact_roll == 56:
        print('Control Spike \n Level: ', level,' + 4 Form: A long metal spike and separate viewscreen Effect: The device activates when the user hammers the spike into the head of a creature, which inflicts no damage. Upon doing so, the user can use the viewscreen to control the creature. The user decides what the creature says and does each round provided that they remain within long distance of each other. Removing the spike ends the effect. No hole or injury remains from the spike once it’s withdrawn. Depletion: 1 in 1d10 (checked each round the device is used)')
    elif artifact_roll == 57:
        print('Coolclothes \n Level: ', level,' Form: Full body jumpsuit Effect: These clothes keep the wearer’s body temperature at the same level as her surroundings. Not only do they keep her comfortable, they also make her invisible to creatures or automatons that use heat sources to sense (such as infrared vision). Depletion: —')
    elif artifact_roll == 58:
        print('Crawler Tank \n Level: 9 Form: A vehicle 12 feet (4 m) long, 6 feet (2 m) wide, and 6 feet (2 m) high Effect: This biomechanical vehicle pulls itself along with living tendrils and motorized treads, moving a short distance each round. The tank has two different weapons built into it. The main weapon is a twinned set of ray projectors that can fire up to a range of 500 feet (152 m) and inflict 8 points of damage. The secondary weapon is an emitter that releases a cloud of poisonous gas in an immediate radius. Anyone in the cloud suffers 4 points of damage (ignores Armor). The tank can move and activate one (but not both) of its weapons as a single action. In order to function, the tank must have an occupant, and there is room for only one human inside. The vehicle obeys thought commands from this occupant, who uses her action to give the tank new orders. If no new order is given, the tank continues to obey the previous order. Depletion: 1–4 in 1d100 (check once each day used)')
    elif artifact_roll == 59:
        print('Creation Lantern \n Level: ', level,' Form: Egg-shaped synth device with a hollowed center containing a metal orb Effect: When activated, the device scans a 5-foot (2 m) cube of material within a short distance and then creates a physical copy from solidified light in an open space within a short distance. The copy lasts for a number of hours equal to the artifact level. Depletion: 1 in 1d10')
    elif artifact_roll == 60:
        print('Crimson Polyhedron \n Level: 10 Form: Small red crystal Effect: This device must be embedded into the user’s body through a surgical procedure. The procedure takes about an hour in a skilled chiurgeon’s hands. If successful, the polyhedron ties itself to the user’s vital functions. The user can designate a cypher or artifact to be activated if she is ever rendered unconscious (as opposed to just asleep), impaired, or debilitated. A different device can be tied to each of these three states, but only one per state. The user can also designate one, some, or all of her cyphers and artifacts to activate in the event of her death. Depletion: —')
    elif artifact_roll == 61:
        print('Crown of Eyes \n Level: ', level,' Form: Metallic circlet set with several crystal spheres Effect: It takes one round to activate the crown. When activated, the crystal spheres separate from the crown and fly around the wearer at immediate range for an hour. The wearer can see anything the crystal spheres can see. This allows the wearer to peek around corners without being exposed to danger. This is an asset in initiative and all perceiving tasks. Depletion: 1 in 1d100')
    elif artifact_roll == 62:
        print('Cypher Bag \n Level: ', level,' Form: Synth bag Effect: This bag can contain up to one cypher per artifact level, as long as each is no larger than a typical handheld device. These cyphers do not count against a character’s limit. Depletion: 1 in 1d20 (check each time a cypher is added to the bag)')
    elif artifact_roll == 63:
        print('Cryogen Box \n Level: 1 Form: A 5-foot (2 m) cube made of metal with a door on the front Effect: The box’s interior is 34° F (1° C) and stays at that temperature indefinitely. Anything placed inside the box cools until it reaches this temperature. Depletion: —')
    elif artifact_roll == 64:
        print('Cryogen Rod \n Level: ', level,' Form: A smooth length of metal that has a bronze cube at one end Effect: When activated, the cube at the end of the device rapidly cools until it reaches absolute zero (approximately –460° F, or –273° C) and remains at that temperature for about one minute before warming back up to local temperature. The rod can be used as a club (a light weapon) that inflicts additional ambient damage equal to the artifact level. If the frozen tip is placed in any liquid, it causes all the liquid within a 50-foot (15 m) radius to solidify. The rod cannot be removed from the solid until it melts. Depletion: 1 in ', level,'')
    elif artifact_roll == 65:
        print('Crystal Armor \n Level: ', level,' + 1 Form: Suit of armor made of crystal Effect: This appears to be a harness of highly articulated plate armor, but the pieces are made of very thin crystal rather than metal. This is heavy armor. Any ray or beam attacks that strike the wearer are reflected back at the attacker. When the armor depletes, it turns to powder. Depletion: 1–2 in 1d100 (check once each day)')
    elif artifact_roll == 66:
        print('Crystal Helmet \n Level: ', level,' Form: A glass globe with a hole on the bottom. The hole is large enough for a human to place the globe over his head, and a soft band around the opening cushions its weight. Effect: When a user activates the device while wearing it, the band surrounding the hole fuses with his skin to make the globe airtight. The globe creates a breathable atmosphere for him that lasts for up to four hours or until he deactivates it (not an action). In addition, the globe allows him to perceive his surroundings clearly to a distance of 500 feet (152 km). However, the device interferes with his ability to hear and increases the difficulty of any task that involves hearing by one step. Depletion: 1 in 1d20')
    elif artifact_roll == 67:
        print('Cthonic Bore \n Level: ', level,' + 4 Form: A 10-foot long (3 m), 5-foot wide (2 m), and 7-foot tall (2 m) tracked vehicle made from steel equipped with an enormous drill on the front and a door on the back Effect: This vehicle can be piloted by someone who makes Intellect rolls (level 1) each round. Inside, there’s a seat for the pilot and two benches that run along either side for up to four people to sit comfortably. When activated, the device moves a short distance each round or up to 10 miles (16 km) per hour on extended trips. The device can also be used to tunnel through 10 feet (3 m) of earth or 5 feet (2 m) of stone each round. Depletion: 1–4 in 1d100')
    elif artifact_roll == 68:
        print('Cyclops Helm \n Level: ', level,' Form: A metal helmet that fits over the wearer’s entire head and has a single lensed eye in the front Effect: The wearer sees through the lens on the front of the helm via screens inside the helmet. It gives her an asset on all visual perception tasks. Depletion: —')
    elif artifact_roll == 69:
        print('Data Armor \n Level: ', level,' Form: A tiny metal disk with a glowing crystal in the center Effect: When placed just under the ear, tiny prongs sprout from the disk to anchor it in the flesh. The device reinforces the user’s mind with an information stream from the datasphere. The device adds 1 to her Intellect Edge. Depletion: —')
    elif artifact_roll == 70:
        print('Data Imager \n Level: ', level,' Form: A small handheld device Effect: When the device is activated, the user names one type of creature or object, and the device draws information about the subject from the datasphere, creating an image of it anywhere the user chooses within immediate range. The image is visual only, and any physical object that touches it passes right through it. The image remains for one minute. Depletion: 1 in 1d10')
    elif artifact_roll == 71:
        print('Dead Timeline Viewer \n Level: ', level,' + 1 Form: Metallic device mounted with a 6-inch (15 cm) crystal screen Effect: Holographic images flicker to life on the screen, showing the user in a situation that has never happened in this reality and that probably never will. With some study and experimentation, the user deduces that the images represent outcomes that would’ve occurred except for some decision the user made in the past that set them on their current course. Once that is understood, the user can attempt to use the device to explore a range of different hypothetical strategies for attempting to deal with a particular issue or problem and see how each might play out. Using the viewer eases the difficulty of a numenera crafting task, a salvage task, a negotiation that takes course over several days, or long-term play rolls that might be required to achieve success. Depletion: 1 in 1d20')
    elif artifact_roll == 72:
        print('Demonflesh \n Level: ', level,' + 1 Form: A ball of dark blue synth Effect: When activated, this ball liquefies and coats the body of the user for one hour, appearing to be a dark blue bodysuit veined with pathways of soft light. Demonflesh confers two abilities. First, the wearer can become invisible. While invisible, she is specialized in stealth and Speed defense tasks. This effect ends if she does something to reveal her presence or position—attacking, performing an esotery, using an ability, moving a large object, and so on. If this occurs, she can regain the remaining invisibility effect by taking an action to focus on hiding his position. Second, the demonflesh wearer can inflict 3 points of damage with a touch. This attack ignores Armor as it breaks down molecular bonds, disintegrating anything that comes in contact with it. Depletion: 1 in 1d20')
    elif artifact_roll == 73:
        print('Destabilizer \n Level: ', level,' Form: A synth cube made of smaller cubes Effect: The user activates the device and points it at a small stone or piece of metal within immediate range. The device causes the target to become unstable for one hour. If the target is thrown while unstable, it explodes in an immediate radius on impact, inflicting shrapnel damage equal to the artifact level. Depletion: 1 in ', level,'')
    elif artifact_roll == 74:
        print('Detachable Eye \n Level: ', level,' Form: Synthetic eyeball Effect: To use this device, the user must press it into an empty eye socket and hold it there for at least one minute while filaments plug into the brain. Once it’s properly installed, she can see through it as if it were a normal eye, and she can also see in areas of darkness as if they were lit. At any point, the user can use an action to pluck the device from her head. She can continue to see through the device while she is within 1 mile (2 km) of it. Depletion: —')
    elif artifact_roll == 75:
        print('Detextilizer \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Handheld device with multiple pronglike extensions Effect: Commonplace clothing worn by a creature within long range dissipates in a puff of dust if its level is equal to or less than this artifact’s level. Creatures must be successfully targeted by the artifact for the effect to function. Depletion: 1 in 1d20')
    elif artifact_roll == 76:
        print('Detonation Catalyst \n Level: ', level,' Form: Small handheld device with clips on wires Effect: When the device is affixed to a detonation cypher for one hour, the detonation is enhanced, inflicting 2 additional points of damage. If the detonation does not normally inflict damage, it now inflicts 2 points in addition to whatever effect it normally has. Depletion: 1 in 1d10')
    elif artifact_roll == 77:
        print('Devitilizer \n Level: ', level,' + 1 Minimum Crafting Level: 5 Form: Helmet, harness, gloves, and boots all connected by translucent synth tubing Effect: To activate, the user must put on the equipment, which causes their fluids to drain rapidly from their body over the course of one minute, leaving behind a leathery, doll-like inert object. A humansized user leaves behind a dried doll that is about 1 foot (30 cm) tall and weighs only a few pounds. The user is in stasis and remains so indefinitely until submerged in water, at which time they are resuscitated over the course of one minute. While desiccated, the doll-like form of the user has +2 to Armor. Depletion: 1 in 1d00')
    elif artifact_roll == 78:
        print('Digestion Parasite \n Level: ', level,' Form: A living grey worm with a mouth at either end Effect: The worm functions only if it is swallowed whole. Once ingested, it grows until it completely replaces the user’s digestive tract. Henceforth, the user receives sustenance from anything he ingests, even if that substance is poisonous, contaminated, or something that cannot normally be digested. The worm breaks down the substance and passes it while supplying the host with lifesustaining nutrients. Depletion: —')
    elif artifact_roll == 79:
        print('Dimensional Armor \n Level: ', level,' + 4 Form: Full suit of synth and steel armor, covering the entirety of the wearer’s body Effect: This armor is far hardier yet somewhat lighter than Ninth World smithing techniques could ever manage with steel. It is heavy armor but grants an additional +2 to Armor in addition to the 3 Armor that heavy armor usually provides. Further, when activated, it shifts the wearer’s phase randomly for ten minutes (one hour if the artifact is level 9 or higher), which hinders attacks on the wearer by two steps. This shifting effect is negated by special multidimensional weapons or attacks. Depletion: 1 in 1d10 (for the phase shifting ability, but after depletion, the suit still functions as armor)')
    elif artifact_roll == 80:
        print('Disruptor Blade \n Level: ', level,' + 1 Form: Sword or similar bladed weapon with devices affixed to the blade and hilt Effect: This weapon functions as a normal sword (or, rarely, an axe or a cleaver). However, if the wielder uses an action to activate it, the weapon radiates a field of molecular disrupting energy for one round. During that round, if it scores a hit, it inflicts an additional 10 points of damage. If the artifact is level 6 or higher, it is an asset on the attack roll. Depletion: 1 in ', level,'')
    elif artifact_roll == 81:
        print('Disruptive Sword \n Level: ', level,' + 1 Form: An energy-entwined broadsword Effect: This broadsword inflicts 1 additional point of damage from the disruptive energy projected around the blade. This energy cannot be turned on or off, and it eats through sheaths at a rate of about one a week. Depletion: 1 in 1d20 (check once each week)')
    elif artifact_roll == 82:
        print('Distance Imager \n Level: ', level,' + 1 Form: Synth cube with a screen and a number of controls Effect: When pointed at an enclosed structure within 1 mile (1.6 km), the screen shows the interior of that structure, room by room. The user can “move” through the structure (even through walls or other barriers) at a speed of just 10 feet (3 m) per round. One use of the item lasts for 10 rounds. Depletion: 1 in 1d10')
    elif artifact_roll == 83:
        print('Crystallization beam\nLevel:', level + 1,'\nHandheld device that projects a ray inflicting damage equal to the artifact level. Wounds transform living flesh to crystal, which then shatters on the next round, inflicting the same amount of damage again. Depletion: 1 in 1d10.')
    elif artifact_roll == 84:
        print('Drill Spear \n Level: ', level,' + 1 Form: Wooden shaft with an affixed spearhead that appears to be a metallic drill Effect: This spear functions as a normal spear. If the wielder uses it to attack a foe, upon a successful hit the wielder decides whether to activate the weapon. Upon activation, the wielder lets go of the spear and it drills into the foe, inflicting an additional 3 points of damage (5 points if the artifact is level 6 or higher). However, the wielder then is no longer holding the spear. The drilling function works only in melee combat because activation occurs after the foe is struck. Depletion: 1 in 1d20')
    elif artifact_roll == 85:
        print('Earth Caller \n Level: 10 Form: A metal staff about 5 feet (2 m) long that tapers down to a rounded point at one end Effect: When the narrow end is pushed into the ground and activated, the top half repeatedly lifts up and slams back into place. This action sends a tremor through the ground. It continues for ten minutes and then stops. If the device operates for the full time, a violent earthquake tears through the area in a 1-mile (2 km) radius. The quake persists for five minutes and causes widespread damage. Buildings made of wood, stone, or brick collapse; walls topple; cliffs crumble; ceilings cave in; some areas of ground rise up; and other areas sink. Characters inside collapsed buildings or beneath a crumbling cliff or falling wall are subject to a crush or huge crush, and they may have to dig themselves free as the GM decides. A crush inflicts 3 points of damage, and a huge crush deals 6. Furthermore, the force of the quake knocks creatures to the ground and prevents them from standing until the shaking stops. Depletion: Automatic')
    elif artifact_roll == 86:
        print('Ebon Eyes \n Level: ', level,' Form: A small bottle of black liquid with a dropper Effect: Placing a droplet in each eye turns the user’s eyes solid black. For the next 28 hours, he can see in areas of dim light or very dim light as if they were illuminated with bright light. The user’s eyes adjust to protect him from sudden light changes, and he can’t be blinded by light effects. Depletion: 1 in 1d10')
    elif artifact_roll == 87:
        print('Ecstasy Paralyzer \n Level: ', level,' + 2 Form: Handheld device with a few controls Effect: This long-range weapon fires a beam of energy that inflicts no damage. Instead, it affects the target’s mind, filling them with such pleasure that they lose their next turn. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d20')
    elif artifact_roll == 88:
        print('Electromagnetic Projector \n Level: ', level,' + 4 Form: A large, heavy, handheld device that has two long metal rods protruding from a cushioned metal stock. A small metal sphere floats between the rods near the base of the weapon. Effect: The device propels the sphere with incredible speed up to 10 miles (16 km). The sphere inflicts damage equal to the artifact level to whatever it strikes. Once used, the device must cool down for one minute before it can be used again. Each time the weapon is used, the user and everyone within an immediate distance becomes deafened for one hour unless they took precautions to protect their hearing— earplugs, for example. Depletion: 1 in ', level,'')
    elif artifact_roll == 89:
        print('Emitter Enhancer \n Level: ', level,' Form: Complex set of tubes and hinged rods Effect: When the device is fit over and around any kind of ray emitter cypher, the emitter inflicts 2 additional points of damage. If the emitter does not normally inflict damage, it now inflicts 2 points in addition to whatever effect it normally has. Depletion: 1 in 1d20')
    elif artifact_roll == 90:
        print('Empath’s lenses \n Level: ', level,' Minimum Crafting Level: 2 Form: Thick lenses built on a device worn on the upper face and eyes Effect: Informative images formed on the inner lenses help the user to identify microexpressions, body-language cues, mannerisms, and methods of speech of a target creature within immediate range, allowing the wearer a far deeper insight into what that entity thinks and feels for one minute. All interaction tasks made while the device is active gain two assets. Depletion: 1 in 1d20')
    elif artifact_roll == 91:
        print('Empty Field Generator \n Level: ', level,' Form: A 12-foot (4 m) tall collapsible metal tripod with a complex antenna array on top and a device with a control surface at the base Effect: It takes two rounds to assemble and set up this device. It then requires an action to activate. When activated, all creatures, structures, and other artificial alterations in the landscape are visually smeared out in a radius equal to a very long distance for one hour. From the outside of the area, nothing is visible except bare ground and innocuous brush. From within the field, creatures can see what’s around them normally, though all illumination drops by one category. This holographic illusion’s level is equal to the artifact’s level. Depletion: 1 in 1d20')
    elif artifact_roll == 92:
        print('Energy Converter \n Level: ', level,' Form: A mechanical plug that must be installed somewhere in the user’s body Effect: The device transforms physical energy into mental energy. Whenever the user would apply Effort on an Intellect roll, she may spend the points from her Might Pool instead. Depletion: 1 in 1d100 (check once each day)')
    elif artifact_roll == 93:
        print('Energy Nullifier \n Level: ', level,' + 1 Form: A 15-foot (5 m) tall collapsible tripod with a large directional crystal dish at the top and a control box in the center Effect: It takes two rounds to assemble and set up this device. Once set up, it takes an action to activate. The device affects an area a very long distance across that\'s less than 2 miles (3 km) away and in its direct line of sight. Energy-using devices whose levels are less than or equal to the artifact’s lose power for about one hour. This renders installations, artifacts, and many cyphers unusable for the duration. If deployed against a ranked community or horde that is reliant to even a small degree on artifacts and installations, the target is treated as if one rank lower for one hour. Depletion: 1 in ', level,'')
    elif artifact_roll == 94:
        print('Environment Suit \n Level: ', level,' + 1 Form: A full bodysuit made from synthetic material that’s covered with tubes and wires Effect: When worn, the suit protects the wearer from extreme temperatures and transforms her excretions into a foul-tasting but edible substance that can be retrieved from pouches in the legs. In addition, she suffers no ill effects from temperatures as cold as –58° F (–50° C) or as hot as 212° F (100° C). In addition, she takes no damage from extreme cold or heat. Depletion: 1 in d100 (check each day while the suit is worn)')
    elif artifact_roll == 95:
        print('Ephemeral Garb \n Level: ', level,' Form: A suit of transparent clothing Effect: The clothing has no appearance. The wearer looks like he is not wearing any clothing at all. However, the suit gives him +1 to Armor. Depletion: —')
    elif artifact_roll == 96:
        print('Eternal Journal \n Level: ', level,' Form: Leather- and metallic-bound book that is housed inside a stronglass case Effect: The pages of this book are designed to be written on with a finger, rather than a traditional writing utensil. The pages pick up the oils and skin cells shed from the writer’s finger, turning them into a soft grey ink. Whenever the book is returned to the stronglass case for more than 28 hours at a time, another blank page is created from the skin cells and added to the back. Depletion: —')
    elif artifact_roll == 97:
        print('Ever-Write \n Level: 1\nForm: A slender metal tube that ends in a point\nEffect: Someone can use the device to write on any surface, even liquid. The writing cannot be erased. Depletion: —')
    elif artifact_roll == 98:
        print('Everyoung Choker \n Level: ', level,' Form: A metal choker with a glowing crystal set on the clasp Effect: While wearing the device, the user shows no physical effects of aging and remains at the same age he was when he put on the device. If the device is removed, he ages normally. Depletion: 1 in 1d100 (check once each year)')
    elif artifact_roll == 99:
        print('Exequy \n Level: ', level,' + 1 Minimum Crafting Level: 3 Form: Helm that projects illusory images, sounds, and scents Effect: The wearer can trigger the helm as an action. On subsequent rounds, the helm produces a solemn atmosphere in an area up to a long distance around it, superimposing dark mourning clothes, candles, mournful music, and potentially additional visual and auditory effects (depending on the parameters set by the crafter). The atmosphere lasts for about an hour. If deployed in a ranked community or horde, the rank is increased by 1 for all tasks related to remembering those who have passed on, stirring up grief, and interrupting normal activities for the purpose of having a funeral procession. Depletion: 1 in 1d20')
    elif artifact_roll == 100:
        print('Exploding Arrow \n Level: ', level,' Form: Arrow with a tiny metallic device attached to it Effect: The arrow explodes when it strikes something, inflicting its level in damage to all within immediate range. Depletion: Automatic')
    elif artifact_roll == 101:
        print('Explorer\'s Gloves \n Level: ', level,' Form: Thick but flexible-fingered gloves with microscopic adaptive hairs on the palms Effect: The wearer can cling to or climb any surface for up to one hour. Even level 10 climbing tasks become routine while the gloves are activated, but taking any other action while climbing requires a new activation. Depletion: 1 in 1d20')
    elif artifact_roll == 102:
        print('Explorer\'s Lenses \n Level: ', level,' Wearable: Thick lenses built on a device worn on the upper face and eyes Effect: Informative images formed on the inner lenses help the user to navigate and explore by tracking location, likely trails, and potential openings for one hour. Navigation and perception tasks made while the device is activated gain two assets. Depletion: 1 in 1d20')
    elif artifact_roll == 103:
        print('Extraneous Arm / Tail \n Level: ', level,' Form: A metal arm\nEffect: Unlike a mechanical arm, this cybernetic limb is meant to be affixed to a position on a host body that would not normally have such a limb. This, then, could be seen as an additional arm, leg or tail. The arm must be surgically and permanently attached (a task equal to the artifact level). The procedure takes about an hour in a skilled chiurgeon’s hands. Once the limb is attached, the user has complete control over the limb and uses it naturally, which might end up allowing her to hold an additional object. If installed as an arm, she is granted an asset for all lifting tasks, but the extra arm does not confer additional actions. If installed as a leg, she is granted an asset for running tasks. If installed as a tail, she is granted an asset for balancing tasks. Depletion: —')
    elif artifact_roll == 104:
        print('Extreme Lenses \n Level: ', level,'\nForm: Synth eye cusps\nEffect: The wearer can refocus her eyes to see up to one hundred times farther than normal. Depletion: 1 in 1d20')
    elif artifact_roll == 105:
        print('Exuvia \n Level: ', level,' + 1 Form: Armor made of what appears to be large animal shells (or rather, what the shell of a human might look like, if humans had shells) Effect: This form-fitting biological armor can be donned very quickly and is very light and unencumbering. It is treated in all ways like light armor but offers +2 to Armor. Depletion: —')
    elif artifact_roll == 106:
        print('Eye-eating loop \n Level: ', level,' + 3 Minimum Crafting Level: 7 Form: Metallic staff with a hollow loop at the end whose inner edge bleeds darkness Effect: This artifact functions as a medium melee weapon. Unless covered, it also makes all bright light dim within immediate range. In addition, the wielder can call upon the following effects. Chill: If the wielder uses the artifact to strike a foe in melee, they can inflict additional damage to the target equal to the artifact level. Darken: The user greatly increases the light-draining effect of the loop, causing everything within long range to fall into complete darkness for about an hour. Ray: The wielder makes a long-range attack with a focused blast of chill darkness from the loop, inflicting damage equal to the artifact level and stunning the target for one round, causing it to lose its next turn. Terrify: If the darken function is used over the course of one community action to harass the enemy, the targeted community or horde inflicts 1 less point of damage during that interaction. Depletion: 1 in 1d20')
    elif artifact_roll == 107:
        print('Eye of the Sky \n Level: ', level,' Form: A large tube mounted on a flat platform with a viewscreen Effect: Inside the tube is a fist-sized orb with a dozen or so lenses positioned across its surface. When activated, the tube fires the orb to a distance of 1 mile (2 km) in whatever direction it is facing. Provided the orb does not encounter a solid surface en route to its destination, once it moves the full distance, it stops and captures a perfect image of everything it can see within 5 miles (8 km). It then slowly floats to the ground, where it can be retrieved. Placing the orb into the tube after it has been retrieved allows a user to see the image on the viewscreen. The device is typically used to create a detailed map of the surrounding environment. When fired, if the orb strikes a solid object in its path, it inflicts damage equal to the artifact level and immediately shatters, rendering the artifact worthless. Depletion: 1 in 1d100')
    elif artifact_roll == 108:
        print('Eyepiece of understanding \n Level: ', level,' + 2 Minimum Crafting Level: 6 Form: Narrow tube that can be sighted through Effect: Over the course of a minute, the user gains knowledge of an object or creature viewed through the artifact that is within very long range, including a general understanding of its abilities, weaknesses (if any), level, and so on. The target’s level must be equal to or less than the artifact’s level. Depletion: 1 in ', level,'')
    elif artifact_roll == 109:
        print('Eye Spy \n Level: ', level,' + 1 Form: Large synth sphere Effect: When activated, the sphere stores up to 28 hours of visual and audio information around it. The sphere can “see” and “hear” as far as an average human, and information is recorded from a 360-degree perspective around it. The information can be replayed on the sphere itself when it is activated again. Depletion: 1 in 1d20')
    elif artifact_roll == 110:
        print('Fabricator \n Level: ', level,' + 2 Form: A bulky metal frame with glass plates on each side and a metal compartment at the top Effect: Causes raw materials placed in the compartment to transform into a finished item, which appears inside the frame. The process of fabrication takes one minute. The device can be used to create just about any sort of item provided that it has a supply of raw materials needed to make the item. Depletion: 1 in 1d20')
    elif artifact_roll == 111:
        print('Fearmaker \n Level: ', level,' + 2 Form: 4-foot (1 m) tall collapsible tripod with a metal cone at the top Effect: It takes two rounds to assemble and set up this device, and then it takes an action to activate. When activated, the fearmaker affects the minds of all thinking creatures within long range in a 45-degree arc. Those affected are instilled with terror, making them drop what they’re holding and do one of the following: Roll Action 01–50 Flee for ', level,' rounds 51–90 Cower (losing their actions) for ', level,' rounds 91–00 Faint, remaining unconscious for one minute (or until roused by vigorous action) Depletion: 1 in ', level,'')
    elif artifact_roll == 112:
        print('Feather Cloak \n Level: ', level,' Form: A cloak made from golden feathers Effect: The feathers stiffen when struck to protect the wearer from injury. The user gains +1 to Armor while wearing the cloak. It also slows the fall of the wearer. Depletion: —')
    elif artifact_roll == 113:
        print('Febrifuge \n Level: ', level,' + 1 Form: A 12-foot (4 m) tall collapsible metal tripod with a large metal globe at the top; the globe has a number of holes in it but is not hollow Effect: It takes two rounds to assemble and set up this device. It then requires an action to activate. When activated, the globe at the top begins to spin, sending out a spray of pleasant-smelling, calming mist in all directions up to a very long distance for ten hours. The mist doesn\'t interfere with vision. All tasks and defense rolls by creatures within the area to resist or overcome infectious diseases are eased for the duration. If deployed to protect from a ranked infectious disease, the rank of that disease is decreased by 1. Depletion: 1 in 1d20')
    elif artifact_roll == 114:
        print('Fiber Optic Sleeves \n Level: ', level,' + 4 Form: Flexible, lightweight sleeves with integrated fiber optic wires, designed to go over existing armor Effect: These armor sleeves grant +1 to Armor in addition to whatever armor the user is currently wearing. Further, when active, the sleeves light up in a random, pulsing pattern for ten minutes. When used with melee attacks, this pattern confuses the target during that attack, modifying all defense actions by one step to its detriment. Depletion: 1 in 1d20 for the confusion ability (after depletion, the sleeves still function as armor)')
    elif artifact_roll == 115:
        print('Field Destabilizer \n Level: ', level,' + 3 Form: A 9-foot (3 m) tall collapsible tripod with a large directional crystal dish at the top and a control box in the center Effect: It takes two rounds to assemble and set up this device. Once set up, it takes an action to activate. When activated, this device collapses a force field within short range—or a short-range-diameter portion of a much larger force field—whose level is equal to or less than this artifact’s. A collapsed force field generally remains collapsed for at least 28 hours, if not permanently (but could be reactivated). A field destabilizer can also collapse effects that create illusions or wide-area transdimensional effects within the area. Depletion: 1 in 1d20')
    elif artifact_roll == 116:
        print('Fiery Hellmaker \n Level: ', level,' + 4 Form: 7-foot (2 m) tall collapsible metal stand with a large metal disk at the top and a control box in the center Effect: It takes two rounds to assemble and set up this device, and then it takes an action to activate. When activated, the disk fires a barrage of fiery long-range missiles in all directions. Everyone and everything within long range suffers damage equal to the artifact level, unless they are within 3 feet (1 m) of the device and keep their heads down. Depletion: 1 in ', level,'')
    elif artifact_roll == 117:
        print('Filtration Straw \n Level: ', level,' Form: Long, narrow synth tube Effect: Water that passes through this tube is purified. Most liquids other than water drawn through the tube come out as water (or mostly water). It neutralizes poisons, diseases, and other contaminants up to the artifact’s level. Depletion: —')
    elif artifact_roll == 118:
        print('Fingent Brace \n Level: ', level,' + 2 Form: A synth panel screen and wires that must be affixed to the head of a creature using a headband or brace, such that the wearer can glance to the side and see the screen Effect: This device shows a visual image of the details of a numenera plan, one at a time, provided the user has taken a few days to prep the device. (It can also hold other explicit directions or images, if desired.) If worn during a numenera crafting task for the majority of the time it takes to build an object or structure, the artifact provides one asset to the assessed difficulty of the crafting task. Depletion: 1 in 1d20 (check per month of use)')
    elif artifact_roll == 119:
        print('Finger Talkers \n Level: ', level,' Form: Six adjustable black rings and one black bracelet (which stores the rings when they are not in use) Effect: When worn on the thumb, pointer, and middle finger of both hands, the rings translate the wearer’s hand gestures into spoken words that are emitted by the bracelet. The bracelet also converts other people’s spoken words into text, which the wearer can read on a small screen on the side of the bracelet. While converting hand gestures into speech and speech into written language, the device also does any necessary translating. The device works automatically for most commonly used sign languages of the Ninth World, but if a user wishes to “train” the device to a new hand language, she must use it simultaneously with speaking for about an hour. Depletion: —')
    elif artifact_roll == 120:
        print('Flame Caster \n Level: ', level,' + 2 Form: A metal canister with a flexible hose emerging from the top and ending at a nozzle Effect: The device has two settings. The user chooses which setting to use when he activates it. The first setting causes the nozzle to emit a short beam of white-hot flames. The flames are hot enough to cut through 6 inches (15 cm) of steel each minute the device is used. It can also be used as a melee weapon that inflicts damage equal to the artifact level. The device burns for ten minutes and then deactivates. The second setting releases a ball of flame that travels a long distance and detonates at the end of this point or when it comes into contact with a solid object. When the ball explodes, it throws fire a short distance that inflicts 4 points of ambient damage. Depletion: 1 in ', level,'')
    elif artifact_roll == 121:
        print('Flame Suppressor \n Level: ', level,' + 3 Form: A 3-foot (1 m) wide, 6-foot (2 m) long, collapsible metal tube with a set of winding synth tubes wrapped around it Effect: This device launches a circular device high into the air that hovers overhead for a moment and then seeks out flames within a very long distance. Over the next hour, it draws moisture from the air and quenches any small fires it finds within the area. If deployed to protect against a ranked fire disaster, the fire’s rank is decreased by 2. Depletion: 1 in ', level,'')
    elif artifact_roll == 122:
        print('Flaming Torrent \n Level: ', level,' + 1 Form: Short synthsteel tube Effect: This sprays a gout of flame out to short range in a cone that is 30 feet (9 m) wide at the terminus, potentially affecting multiple targets that are close together. The flames inflict damage equal to the artifact level. Depletion: 1 in 1d20')
    elif artifact_roll == 123:
        print('Flesh-Render \n Level: ', level,' + 4 Form: A small handheld device fitted with a tiny tube Effect: This device projects a wide spray of sharp fragments that inflicts 2 points of damage to everyone within an immediate area, and 1 point of damage to everyone within a short area. The fragments also penetrate (ignore) up to 4 Armor. In other words, targets in range who have 4 Armor (or less) take 2 points of damage, targets with 5 Armor take 1 point of damage, and targets with 6 Armor (or more) take no damage. Depletion: 1 in ', level,'')
    elif artifact_roll == 124:
        print('Flexsteel Weapon \n Level: ', level,' Form: A weapon normally made from hard material such as a greatsword or battleaxe Effect: The weapon looks like it is made of steel, but when it is swung with force, it stretches. A wielder can stretch the weapon in his hands as if it were made of elastic material. When stretched in this way, it always snaps back to its original shape. The difficulty of attack rolls made using this weapon is increased by one step. However, if the attack misses, the user can repeat the attack roll once. If the second roll succeeds, the weapon inflicts half its normal damage. Depletion: —')
    elif artifact_roll == 125:
        print('Flicker Cloak \n Level: ', level,' + 2 Form: A long cloak made from material woven with circuitry Effect: Causes the user to flicker in and out of existence for ten minutes. At the end of each of her turns while wearing the cloak, she must roll a d6. On an odd number, nothing happens. On an even number, she disappears, ceasing to exist. At the start of her next turn, she reappears in the space she left (or an open space nearest to that space). She has no idea what happened during the time she ceased to exist. Depletion: 1 in 1d10')
    elif artifact_roll == 126:
        print('Flight Pack \n Level: ', level,' + 1 Form: A metal device worn on one’s back Effect: The wearer can move in the air for one hour, moving an immediate distance per turn in any direction. If desired, this speed can be increased to almost 100 miles (161 km) per hour for that hour, but doing so automatically depletes the artifact. Depletion: 1 in 1d20')
    elif artifact_roll == 127:
        print('Flood ward \n Level: ', level,' + 3 Minimum Crafting Level: 6 Form: Six-foot (2 m) tall collapsible metal tripod with a central tube that extends a spike into the earth when deployed Effect: It takes two rounds to assemble and set up this device. Once set up, it requires an action to activate and then another round for the powered internal spike to penetrate the ground. (The spike can penetrate any surface whose level is less than or equal to its own, but it cannot penetrate force fields.) When activated, this device repels cohesive volumes of fluid in excess of about 1,000 gallons (3,800 l) for 28 hours. The fluid is pushed to the perimeter of a very long distance in diameter, effectively making the area proof from floods for a day. Smaller cohesive volumes are not repelled. If deployed to protect from a ranked flood or similar threat, the rank of that threat is decreased by 3. Depletion: 1 in 1d10')
    elif artifact_roll == 128:
        print('Foldable Coach \n Level: ', level,' + 3 Form: A chest that folds out into a self-powered coach Effect: It takes two rounds to fold the coach out of its chest, whereupon it becomes a vehicle able to seat up to five humans. The vehicle has six hard synth wheels. When sealed inside, characters are not visible to external creatures, but they can see outside. Furthermore, characters inside gain +5 Armor to all attacks made from outside the coach. Each time it is set up, the coach responds to audible voice commands from passengers, and can travel for up to one hour per artifact level, with long movement on roads and short movement on rough or difficult terrain. It’s possible for up to four additional humansized creatures to ride on top of the coach while it travels. When exhausted, the vehicle folds back into its compact form, ejecting any passengers still within, and can’t be used again for several hours. Depletion: 1 in 1d20')
    elif artifact_roll == 129:
        print('Food Scanner \n Level: ', level,' Form: Handheld device with a number of controls and a wide dish at one end Effect: When activated and pointed at food, this device sounds an alarm if the food has any contaminants or poisonous substances. Depletion: 1 in 1d20')
    elif artifact_roll == 130:
        print('Food Tube \n Level: ', level,' Form: Synth tube Effect: The device produces a grey paste. Although the gruel tastes like warm, wet cardboard, it is highly nourishing and provides enough nutrition for one person for one day (two people per day if the artifact is level 5 or higher). Depletion: 1 in 1d10')
    elif artifact_roll == 131:
        print('Force Dome \n Level: ', level,' + 3 Form: 4-foot (1 m) tall collapsible tripod with a large glass globe at the top and a control box in the center Effect: It takes two rounds to assemble and set up this device, and then it takes an action to activate. When activated, this device projects a powerful force field dome with a diameter of short range. The field is immobile, impermeable, and impenetrable until it is brought down by a force (such as a device or creature) of a higher level. Otherwise, it lasts for 28 hours, during which time it has enough air to support six humans. Depletion: 1 in 1d20')
    elif artifact_roll == 132:
        print('Force impaler \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Handheld device with a cone-like projection Effect: The artifact collapses a force field in a manner designed to inflict damage on creatures sheltering on the opposite side of a force wall or inside a force dome. The device can target a force field within immediate range and collapse fields whose level is equal to or less than this artifact’s level. If successful, all creatures on the opposite side of (or inside) the force field and within short range of the field perimeter take damage equal to the level of the field just collapsed. If used against a ranked community that gains some benefit from force fields, the specific benefit provided by that field is removed during that community action. Depletion: 1 in 1d20')
    elif artifact_roll == 133:
        print('Force Shield \n Level: 1 Form: A wristband with a round device attached in the middle Effect: When activated, an energy field expands out from the device until it attains the size of a shield. The energy field functions as a shield for one hour. Depletion: 1 in 1d20')
    elif artifact_roll == 134:
        print('Glidon \n This artifact vehicle looks much like a circular covered wagon, except that it has no wheels. Instead, it hovers about 2 feet (0.6 m) above the ground thanks to a powerful repulsor field beneath it. The wagon part built atop the floating platform is entirely of Ninth World make. What’s more, the disk-shaped platform can’t move on its own, so people typically hitch it to a beast of burden that can pull it along. A glidon can carry far more weight than a typical wagon can (ten times as much, in fact) and offers a perfectly smooth ride. Depletion: —')
    elif artifact_roll == 135:
        print('Globe Projector \n Level: ', level,' + 2 Form: A short device with a narrow synth tube that flares at the end Effect: When activated, the device shoots a glittering orb at a target within short range. Upon striking the target, the orb expands into an opaque white bubble that completely envelops the target and then floats away at a rate of 10 feet (3 m) per round for ten minutes. It then pops and drops the target to the ground. Until the effect ends, nothing can pass through the bubble. Depletion: 1 in ', level,'')
    elif artifact_roll == 136:
        print('Glow Boots \n Level: ', level,' Form: A pair of leather boots Effect: The boots cause the wearer to leave behind faint footprints that reveal themselves in very dim light or darkness. The prints glow with faint light that is strong enough to be followed, but not strong enough to illuminate the area. The prints last for 28 hours before fading away. Depletion: —')
    elif artifact_roll == 137:
        print('Glowglobe Nest \n Level: ', level,' Form: Either a small synth bowl or a synth object with two or three round receptacles Effect: This device holds one to three glowglobes. After ten minutes of sitting in the nest, the globes are fully recharged and ready for use again. Some people speculate that these devices were once far more common. In particular, the nests must have been used heavily by whatever prior civilization used glowglobes so much that they are still ubiquitous. Depletion: —')
    elif artifact_roll == 138:
        print('Golden aura \n Level: ', level,' + 1 Minimum Crafting Level: 3 Form: Surplice-like cloak with bulky embedded devices Effect: The wearer can trigger the cloak as an action. On subsequent rounds, the cloak radiates a calming golden glow for about ten hours that provides dim light within short range. Characters within the glow add 1 to recovery rolls made in the light, and they have an asset on tasks related to persuasion, pleasant interaction, and Intellect defense. If deployed in a ranked community or horde, the rank is increased by 1 for community actions related to diplomacy, easing social disquiet, and so on. Depletion: 1 in 1d20')
    elif artifact_roll == 139:
        print('Gourmand’s lenses \n Level: ', level,' Minimum Crafting Level: 2 Form: Thick lenses built on a device worn on the upper face and eyes Effect: Informative images formed on the inner lenses help the user to identify palatable ingredients, suggest interesting gastronomic pairings, and access a catalog of recipes for about 28 hours per activation. The meals the wearer makes while the device is active are generally considered to be amazing feats of culinary accomplishment. If actively deployed on behalf of a community for one day, the community’s rank is +1 for purposes related to overcoming food shortages, famine, and similar ranked disasters for that day. Depletion: 1 in 1d20')
    elif artifact_roll == 140:
        print('Gravitevator \n Level: ', level,' + 1 Minimum Crafting Level: 3 Form: Heavy pack-like device composed of metal and synth components Effect: The device unfolds itself into a fixed platform about 3 feet (1 m) on a side for about an hour. Thereafter, any user who steps onto the platform can trigger the device to lift them with invisible hands of gravity to any stated height, up to a long distance above the pad. If the artifact is set up next to a structure, a user can step off the gravitic lift effect and onto the structure. Alternatively, a user could step off a structure and into the hands of the gravity lift, if one has been deployed beneath that area. Depletion: 1 in 1d20')
    elif artifact_roll == 141:
        print('Graviton Emitter \n Level: ', level,' + 2 Form: A handheld device with a dial and several buttons Effect: This long-range weapon fires a beam of gravitons that inflicts no damage. Whatever object or creature the beam hits emits a powerful gravity field that extends out to 30 feet (9 m) in all directions. Anything in the area “falls” toward the target unless it is fixed in place. A falling creature or object takes damage based on the distance it fell as normal when it strikes the target or another solid object in the way. Each creature or object struck by a falling object takes half the damage sustained from the fall. A creature flying through the area is unaffected provided that it continues flying. For attacks using projectile weapons in which the projectile passes through the affected area, the GM may increase the difficulty of the attack by one step. The weird gravity lasts until the end of the next round. Until then, any creature in the affected area functions as if gravity pointed to the target. The target cannot move until this effect ends. Depletion: 1 in ', level,'')
    elif artifact_roll == 142:
        print('Graviton Suppressor \n Level: ', level,' + 4 Form: A flat metal disk with a display and several buttons Effect: Once activated, it takes two rounds for the device to take effect. The device shuts off gravity within a short distance. Anything not bolted down or anchored in some way floats up 30 feet (9 m) and hangs there until the effect ends, one minute later. Anyone pulled outside of the area or still in the area when the effect ends falls to the ground. Depletion: 1 in 1d10')
    elif artifact_roll == 143:
        print('Gravity Suit \n Level: ', level,' + 1 Form: A light but tough full-body leather suit Effect: This light armor not only provides +1 to Armor as expected, but it also allows the wearer to reverse gravity for herself. In other words, she can choose to “fall” upward, walk across the ceiling as if it were the floor, and so on. This change in gravity orientation is true of everything she carries, but if she lets go of an object or drops something, normal gravity takes over for that object. It is an action to change the gravity orientation. Depletion: 1–2 in 1d100 (remains light armor even when depleted)')
    elif artifact_roll == 144:
        print('Greenstone Adaptor \n Level: ', level,' Form: A glowing stone laced with wires Effect: The device bonds to any artifact to which it is touched. The wires plug into the artifact and embed themselves in it. Henceforth, whenever a user rolls for depletion of that artifact, he can roll twice and use either result. This device is radioactive. At the end of each day during which a user spent any time around the device, he must make a Might roll with a difficulty equal to the artifact level. On a failure, the device inflicts radiation damage equal to half the artifact level (minimum 1 point). This damage ignores Armor. Depletion: —')
    elif artifact_roll == 145:
        print('Guardian Sphere \n Level: ', level,' Form: A black metal sphere fitted with a glowing red disk made of glass that moves across its surface Effect: The sphere follows whoever activated it around for one hour by rolling across the ground to stay within an immediate distance of the user. The sphere jumps over obstacles that are 3 feet (1 m) tall or less. Otherwise, it maneuvers around them if possible or stays put if not. Once per round, whenever the user is attacked by a foe that is within an immediate distance, the ball leaps toward the foe and sprouts long spikes from its body that inflict damage equal to the artifact level on a hit. After making this attack, the spikes retract and the sphere falls to the ground. Depletion: 1 in 1d20')
    elif artifact_roll == 146:
        print('Gut Worm \n Level: ', level,' + 2 Form: A 6-inch (15 cm) fleshy worm Effect: A user must swallow the worm whole to activate it. Until the worm is expelled two days later, the user must consume twice as much food as normal each day. Activating the device causes a fleshy tendril to burst from the user’s body, inflicting 1 point of damage that cannot be reduced in any way. The tendril is a level 2 creature under the user’s control. As a level 2 creature, it has a target number of 6, inflicts 2 points of damage, and has 6 health. The tendril cannot leave the user’s body. It can attack targets at a short distance from the user. Depletion: —')
    elif artifact_roll == 147:
        print('Hand of Annihilation \n Level: ', level,' + 3 Form: A metallic pincer that fits over the wrist Effect: When activated, this device creates a small orb of light that can be wielded as a medium weapon that annihilates the matter it touches, disintegrating it. This inflicts 10 points of damage, but it is very difficult and dangerous to use. The difficulty of attacks is increased by two steps, and a roll of 1 or 2 results in GM intrusion. The orb can be dispelled with an action. Having the orb in the pincer for an extended period of time (walking around outside of combat, for example) is dangerous, and GM intrusions should be common. Depletion: 1 in 1d10')
    elif artifact_roll == 148:
        print('Handy Hollow \n Level: ', level,' + 2 Form: A square piece of black cloth Effect: It takes one round to fold the black cloth across a flat surface such as on the ground, draped down a wall, and so on, to cover a 5 foot by 5 foot area (1.5 m by 1.5 m). The cloth becomes a permeable passage through the surface reaching up to 10 feet (3 m) through solid material. The permeability lasts for one hour and creates no instability in the surrounding structure. Depletion: 1 in 1d10')
    elif artifact_roll == 149:
        print('Hard Light Cutter \n Level: ', level,' + 2 Form: A short metal baton with a crystal mounted at the top and buttons along one side Effect: Activating this device causes a 3-foot (1 m) blade of solid light to extend from the baton’s tip and remain until deactivated (not an action). The blade inflicts damage equal to the artifact level. On a major effect, can dismember an opponent. Depletion: 1 in 1d100')
    elif artifact_roll == 150:
        print('Hard Light Goggles \n Level: ', level,' + 2 Form: A metal visor with a lens that, when looked through, tints everything red Effect: A wearer can tap the side of the goggles and cause them to emit a pulse of solidified light that travels a long distance. The light inflicts 4 points of damage. If the user gets a major effect on an attack roll using this device, the light inflicts 12 points of damage to the target, and it inflicts 4 points of damage to everything within a short distance of the target. After resolving this effect, roll for depletion again. Depletion: 1 in 1d10')
    elif artifact_roll == 151:
        print('Healing Sword \n Level: ', level,' Form: Typical sword with an odd-looking synth hilt Effect: The broadsword blade is a Ninth World-forged addition to the numenera hilt (which likely was not a sword hilt originally). When squeezed properly, the hilt injects a healing substance into the wielder’s body, restoring ', level,' points of any stat Pool they wish (', level,' + 2 points if the artifact is level 5 or higher). If the wielder is using the sword in battle, using the healing function does not require an action. Depletion: 1 in 1d10 (for the healing ability, but after depletion, it still functions as a sword)')
    elif artifact_roll == 152:
        print('Homing Volt Projector \n Level: ', level,' Form: Small handheld device Effect: Fires tiny pellets that veer toward organic targets and burst with a jolt of electricity that deals 5 points of damage (ignores Armor). Attacking inorganic targets increases the difficulty by two steps, but attacking an organic target decreases the difficulty by one step. Hiding behind inorganic cover provides no protection, but hiding behind organic cover (like a tree) increases the difficulty of attacking the target by one step. Depletion: 1 in 1d20')
    elif artifact_roll == 153:
        print('Hoop Staff \n Level: ', level,' + 3 Form: Long wooden staff with a 6-inch (15 cm) bronze hoop attached to the tip. The staff is of recent creation, but the hoop is not. Effect: Holographic images flicker to life in the hoop, warning of danger. The images are representative of the danger in some fashion. For example, approaching enemies look like threatening, amorphous creatures, and dangerous weather might look like lightning bolts coming from a cloud. At artifact level 8 and higher, the warnings come earlier and the images more accurately represent the threat. The GM decides when and how the staff warns of danger. For inexplicable reasons, sometimes it fails to deliver a warning. (Thus, it’s all right if the GM forgets about the staff occasionally.) Depletion: 1 in 1d100')
    elif artifact_roll == 154:
        print('Horde replicator \n Level: ', level,' + 2 Minimum Crafting Level: 7 Form: Long, narrow handheld device with sighting lens at one end Effect: A flechette fired from the artifact targets a creature within short range, inflicting 1 point of damage. A humanoid target of level 2 or less that is damaged becomes infected with bioreplicative nanobots that remake it over the course of about a minute if it fails three Might defense rolls before succeeding on two during that period (making one defense roll every few rounds). If the effect goes to completion, the target loses all interest in anything but fighting and destroying (becoming a level 2 creature if it is not already level 2). It also becomes compliant to the verbal command of anyone carrying the artifact for a period of three days. The target is infectious. Each creature it damages via unarmed attacks must make Might defense rolls as if targeted by the artifact or become another target, which is also infectious and amenable to the artifact bearer’s verbal instructions. The nanobot infection constrains the total number of converts to about a hundred active creatures, creating a rank 2 horde if enough targets are converted within ten hours. Three days after the first target was converted to a mindless warrior, the effect ends for all surviving converts simultaneously. They have little memory of the events that brought them to whatever their current circumstances are. Depletion: 1 in 1d20')
    elif artifact_roll == 155:
        print('Hot-Cold Stone \n Level: 1 Form: A small, round, flat mechanical device with four vents at the top Effect: When activated, the device changes the temperature in the area within a short distance. It can increase or decrease the temperature by up to 68° F (20° C), as the user decides. The effect lasts for up to seven hours. Depletion: 1 in 1d20')
    elif artifact_roll == 156:
        print('Hover Belt \n Level: ', level,' + 1 Form: Odd-fitting metallic mesh belt that has a metal box attachment with dial controls Effect: The wearer can float up into the air or back down again at a rate of 20 feet (6 m) per round. Using the complex controls, the wearer can move horizontally at a much slower pace (5 feet [1.5 m] per round) in a much less stable or controlled trajectory. At artifact level 6 or higher, the wearer floats twice as fast, vertically or horizontally. The belt works for ten minutes per use. Depletion: 1 in 1d20')
    elif artifact_roll == 157:
        print('Hover Square \n Level: ', level,' Form: Folded synth square that is 1 foot by 1 foot (30 cm by 30 cm) and unfolds into a square that is 8 feet by 8 feet (2.5 m by 2.5 m) Effect: When unfolded and activated, this piece of synth forms a platform that moves laterally as directed by someone atop it. The platform moves up to short range in a round. It can hold up to 5,000 pounds (2,300 kg), or 8,000 pounds (3,600 kg) if the artifact is level 5 or higher. Depletion: 1 in 1d20')
    elif artifact_roll == 158:
        print('Husk \n Level: ', level,' + 2 Form: A featureless, hairless humanoid creature Effect: Activating the device causes it to become a level 1 creature. The creature follows the user wherever it goes, but otherwise does nothing. As a level 1 creature, it has a target number of 3 and has 3 health. If reduced to 0 health, the device is destroyed. The first time a human or humanoid within short range of the creature dies, the creature absorbs the target’s personality, memories, and identity, and transforms to assume the target’s appearance in the prime of its life. In effect, the device becomes the creature. After nine years, the body dissolves into a slick of foul-smelling slime. Depletion: —')
    elif artifact_roll == 159:
        print('Hypno-Lenses \n Level: ', level,' + 2 Form: A pair of pink lenses held in a silver frame Effect: The wearer has an asset on any task that involves deceiving or persuading a creature that meets his gaze. Depletion: 1 in 1d20')
    elif artifact_roll == 160:
        print('Hypnotic Nanny \n Level: ', level,' Form: Fur-covered, squishy oval device about 3 feet by 1 foot (1 m by 0.3 m) Effect: When activated, the device croons and hums various songs and tunes, flashes in a series of calming, mesmerizing lights, and begins to vibrate softly. Creatures that listen for more than one minute are calmed and compelled to remain listening for as long as the effect lasts (one hour). During that hour, creatures of a lower level than the artifact fall asleep for 2d6 hours. Depletion: —')
    elif artifact_roll == 161:
        print('Illusory vista \n Level: ', level,' + 4 Minimum Crafting Level: 7 Form: Box with several controls and handles Effect: The area within long range of the box is replaced with an illusory scene crafted by the user. The effect moves with and stays centered on the artifact for that period. Creatures within the area are unaffected, but those outside the area might not notice anything unusual, or see a structure, community, or horde of creatures that isn’t really there. Depletion: 1 in 1d20')
    elif artifact_roll == 162:
        print('Image projector \n Level: ', level,' + 1 Minimum Crafting Level: 5 Form: Crystal square with embedded controls Effect: The user projects their image for up to a minute to a location they have previously visited. They see and hear what the projection does and can converse with creatures near it. The image is immaterial and can be dispersed with energy attacks. The projection can take no physical or mental actions other than observing, listening, and speaking. Depletion: 1 in 1d20')
    elif artifact_roll == 163:
        print('Imager \n Level: ', level,' Form: Small, rectangular handheld device with a clear synth panel Effect: This device captures a perfect image of a nearby scene. It can store thousands of images, and any stored image can be shown on the synth panel. When the device is depleted, all stored images are lost. Depletion: 1 in 1d100')
    elif artifact_roll == 164:
        print('Impact cloak \n Level: ', level,' + 1 Form: Cloak with attached hood Effect: Under normal circumstances, the hood and cloak are as flexible and fashionable as a normal garment of this type, without any penalties associated with wearing regular armor. However, if the wearer is subjected to a physical or energy attack, the garment immediately stiffens, redirecting the energy of the attack and protecting him as if he was wearing heavy armor for that instant. Depletion: 1 in 1d100 (check per attack)')
    elif artifact_roll == 165:
        print('Impossible Blade \n Level: ', level,' + 4 Form: A small, extremely thin blade with a short handle Effect: This tool can be used for very fine work, cutting or carving almost any (small) object with amazing precision. It allows for surgeries and crafting that would likely otherwise be impossible (it counts as two assets for such tasks). It can also be used as a weapon. In this capacity, it is a light weapon that ignores Armor. However, the blade is somewhat fragile, so using it as a weapon risks damaging it. Depletion: 1 in 1d20')
    elif artifact_roll == 166:
        print('Impulse Collar \n Level: ', level,' Form: A thick leather strap that wraps around one’s throat with a pulsing light set into a metal casing on the front of it Effect: While within short range of another living creature, the wearer can activate the device by pressing the light with his thumb and aiming it in the general direction of another person. The device picks up and broadcasts the general emotional state of that person. A blue light signifies indifference, red signifies anger, purple signifies arousal, and yellow indicates good will, friendship, or love. Activation is an action. Depletion: 1 in 1d20')
    elif artifact_roll == 167:
        print('Instability inducer \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Handheld device with three rod-like projections Effect: When the device is activated, an object (or a portion of a large structure up to an immediate distance in diameter) within long range begins to vibrate and buzz for about an hour. If the object is soundly struck during this period, it detonates and inflicts damage equal to this artifact’s level on everything within immediate range (and is itself destroyed). If the device is used continuously for about an hour against a defensive structure in a ranked community, 3 additional points of damage are dealt to the community’s infrastructure if it takes damage during that community action. However, this use automatically depletes the artifact. Depletion: 1 in 1d10 or automatic')
    elif artifact_roll == 168:
        print('Instant Bridge \n Level: ', level,' + 1 Form: Handheld device with a few controls Effect: This device fires a cable with a powerful magnet up to long range. When the magnet strikes a metal surface, it affixes itself, and the taut cable extends into a narrow bridge about 3 feet (1 m) wide. The device can then be affixed to another metallic surface to anchor the bridge. The bridge can support 1,000 pounds (450 kg), or 2,000 pounds (900 kg) if the artifact is level 6 or higher. When deactivated, the magnets let go and the cable retracts. Depletion: 1 in 1d20')
    elif artifact_roll == 169:
        print('Instant Ladder \n Level: ', level,' Form: Small lightweight rod Effect: When activated, the rod extends and produces rungs so that it can be used as a ladder up to 28 feet (8.4 m) long. Depletion: 1 in 1d100')
    elif artifact_roll == 170:
        print('Instant Refuge \n Level: ', level,' + 4 Form: A 2-foot (60 cm) cube with a control surface Effect: It takes about a minute to activate this device. When activated, it projects a 30foot (9 m) diameter circular portal on a hard surface within immediate range that leads to an extradimensional space large enough to hold several thousand people in timeless stasis. The portal persists for up to an hour, during which time a small community could be evacuated through the aperture. Once the portal is closed, it can be opened from the outside at any time in the next three months, at which time all those who entered are expelled in the same order that they entered. If three months pass without the portal being opened manually, it opens automatically and expels its occupants. For those inside the portal, no time seems to have passed. Depletion: 1–2 in ', level,'')
    elif artifact_roll == 171:
        print('Interceptor \n Level: ', level,' + 2 Form: Shoulder-mounted device Effect: When small, fast-moving physical objects (arrows, thrown rocks, or other projectiles) coming toward the device reach a distance within immediate range, it fires bursts of energy that destroy the projectiles if they are lower level than the interceptor. Although the interceptor can fire at multiple targets at once, depletion is rolled for each use. Depletion: 1 in 1d20')
    elif artifact_roll == 172:
        print('Iotum Scanner \n Level: ', level,' + 2 Form: A handheld device with a number of controls and a wide dish at one end Effect: When activated and pointed at an object within immediate range, this device sounds a tone if the object contains 1 or more units of iotum of any type. Depletion: 1 in 1d20')
    elif artifact_roll == 173:
        print('Kill Dart Projector \n Level: ', level,' Form: A small handheld device with a narrow tube Effect: This device projects a tiny dart made of glowing metal up to long range. The dart inflicts 1 point of damage and then saturates the target with radiation. The target takes 1 point of ambient damage each round, and the difficulty of all tasks it performs is modified by one step to its detriment. If the target removes the dart, the effect ends after 28 hours. This device is a rapid-fire weapon and thus can be used with the Spray or Arc Spray abilities that some glaives and jacks have, but each round of ammo used or each additional target selected requires an additional depletion roll. Depletion: 1 in ', level,'')
    elif artifact_roll == 174:
        print('Kinetic Shield \n Level: ', level,' + 1 Form: Wristband or armband with a small metallic device attached Effect: When a physical projectile such as an arrow, a thrown knife, or a bullet-like missile comes within 4 inches (10 cm) of the wearer’s body, a powerful energy field activates automatically and attempts to slow down or deflect the projectile. The wearer’s Speed defense against such attacks is eased (eased by two steps if the artifact is level 6 or higher). If the projectile still hits the wearer, the field adds 1 to Armor against the attack. Depletion: 1 in 1d20')
    elif artifact_roll == 175:
        print('Launcher \n Level: ', level,' + 3 Form: Metal tube with a set of winding synth tubes wrapped around it Effect: This device launches anything about the size of a fist or smaller with great force to very long range. An inert object, such as a rock, inflicts the artifact’s level in damage. A detonation cypher (or similar explosive) can also be launched to activate on impact. Depletion: 1 in 1d20')
    elif artifact_roll == 176:
        print('Leap Boots \n Level: ', level,' Form: A pair of heavy boots Effect: The user can activate these boots to jump up to a long distance and then land safely. Depletion: 1 in 1d10')
    elif artifact_roll == 177:
        print('Light Discus \n Level: ', level,' + 2 Form: A metal plate worn on the back and held in place by two shoulder straps Effect: The user must be wearing the device to activate it. After doing so, he can pull a disk made of glowing, solidified light out of the plate and throw it at a target within short range. The disk inflicts damage equal to half the artifact level. After making the attack, the disk may fly to attack up to two different targets, each within a short distance of the last, and inflicting the same damage as the first attack. After the disk makes its last attack, it flies back to the user’s hand and dissipates. Depletion: 1 in 1d10')
    elif artifact_roll == 178:
        print('Light spike \n Level: ', level,' + 2 Form: Fingerless glove of semirigid synth Effect: When the glove is activated, a spike of solid, red-hot energy is emitted from the back of the wearer’s hand. This spike can be used as a melee weapon that inflicts damage equal to the artifact’s level. It lasts for ten minutes. If the wielder increases the spike’s power (which requires a separate action and an additional depletion roll), the damage increases by 1 point. Depletion: 1 in 1d20')
    elif artifact_roll == 179:
        print('Polar Touch \n Level: ', level,' + 3 Form: Long pike with a softly glowing nodule at the tip rather than a sharp point Effect: The tip of this long melee weapon drastically and immediately lowers the temperature of whatever it touches. A target struck by this weapon suffers points of damage equal to the artifact’s level. Use of a polar touch underwater (which is most of the time) also freezes the water around the target. Characters who fail a Might defense roll are hindered for one round, which increases the difficulty of all physical actions by one step. Depletion: 1 in 1d20 ')
    elif artifact_roll == 180:
        print('Boiling Rod \n Level: ', level,' + 3 Form: Short baton with a glowing red nodule at one tip Effect: Inflicts points of damage equal to the artifact’s level on anyone touched by the tip. Use of a boiling rod underwater (which is most of the time) creates a cloud of steamy bubbles that obscure vision like fog. They persist for one round after each use. Depletion: 1 in 1d20')
    elif artifact_roll == 181:
        print('Burster \n Level: ', level,' + 4 Form: Pair of synth spheres with a curved handle Effect: Affects a target within short range, causing a terrible rent to burst in its flesh. Against a nonliving target, the burster likewise tears matter apart, expanding the space between the existing portions. The potential victim makes a Might defense roll. On a success, nothing occurs. On a failure, the victim sustains damage equal to the artifact’s level. Depletion: 1 in 1d20')
    elif artifact_roll == 182:
        print('Light Tendril \n Level: ', level,' Form: A metal and synth tendril with an illuminated end Effect: This mechanical tendril grafts easily (and without surgery) onto the user’s back. She controls the tendril, which always shines light on whatever she wishes. Depletion: —')
    elif artifact_roll == 183:
        print('Lightning Whip \n Level: ', level,' Form: A short handle with a 10-foot-long (3 m) filament extending from the end Effect: When activated, energy crackles all along the length of the filament for one minute. While energized, the device can be used like a whip (a light weapon) that inflicts 4 points of damage. The damage ignores Armor. Depletion: 1 in 1d10')
    elif artifact_roll == 184:
        print('Lightwings \n Level: ', level,' Form: Set of lightweight collapsible wings and harness built of adamant silk and azure steel. The spine of the wings is actually a stronglass terrarium hosting the bioluminescent worms that power the device. Effect: When activated, the wings light up and can carry the user and her equipment up to 50 feet (15 m) in the air. Each time the wings are used, they last a number of minutes equal to the artifact level × 10 (a new roll is required for each use). As the power gets used up, the bioluminescent light begins to wane, alerting the wearer. The worms require about a day of rest between each use of the wings. (The wings don’t work as well if used more than once per day. For subsequent uses within 28 hours, they last only a number of minutes equal to the artifact level × 2). Action to attach. Action to activate. Depletion: 1 in 1d20')
    elif artifact_roll == 185:
        print('Likeness Thief \n Level: ', level,' + 2 Form: A pink-hued gelatinous mass Effect: The device activates when placed onto the face of another creature, and once activated, it cannot be removed for one minute. During this time, the mass excretes digestive enzymes that inflict 10 points of corrosive damage, destroying the face of the creature it touches. Afterward, the mass hardens into a perfect copy of the face it destroyed. When a creature wears the mask, it becomes like real tissue and moves in a lifelike and realistic manner. If the victim survives having its face stolen, it is blind, and its facial features are almost completely erased. Nothing remains except a nub of a nose and a slit for a mouth. Depletion: Automatic')
    elif artifact_roll == 186:
        print('Liminal Scanner \n Level: ', level,' + 2 Form: A large device that fits over the user’s hand and has a screen, an array of controls, and a long metal tendril that functions as a sensory apparatus Effect: This device scans an object or creature within short range and determines a variety of qualities (some quite esoteric) that cannot be observed with the naked eye. This grants the user an asset in dealing with the material in some desired way, chosen by the user. For example, a scanned wall might be easier to break through, a foe might be easier to attack, a device might be easier to understand, and so on. The asset is always specific to the single object or creature and to the single task specified, but it remains indefinitely. Depletion: 1 in 1d20')
    elif artifact_roll == 187:
        print('Liquid Armor \n Level: ', level,' + 3 Form: Adamant silk belt with two metallic cylinders attached to it Effect: When activated, a watery liquid sprays out of the cylinders on the belt. An electric field shapes this smart fluid, causing it to form a protective shell around the wearer, not unlike full body armor. The fluid becomes immediately (but selectively) rigid when struck, providing +3 to Armor, but it has none of the penalties associated with armor. It can be used over the top of light armor, adding to its protection, but medium or heavy armor disrupts the electric field’s shaping attempts. The liquid armor lasts for four hours (six hours if the artifact is level 8 or higher) or until deactivated. Depletion: 1 in 1d20')
    elif artifact_roll == 188:
        print('Liquid Sword \n Level: ', level,' + 3 Form: Adamant silk wristband with a metallic cylinder attached to it Effect: When activated, a watery liquid sprays out of the cylinder on the wristband. An electric field shapes this smart fluid, causing it to take the form of a broadsword. The fluid becomes immediately rigid and incredibly sharp, and it can be used as a normal sword that inflicts 1 additional point of damage. The sword lasts for four hours (six hours if the artifact is level 8 or higher) or until deactivated. Depletion: 1 in 1d20')
    elif artifact_roll == 189:
        print('Liquid Transfer Orb \n Level: ', level,' + 1 Form: A head-sized amber orb inscribed with tiny metallic lines Effect: To set up the artifact, the orb is broken into two halves. One half must be submerged in a liquid medium of any kind. Then the other half can be activated for up to 28 hours at a time (though it can be deactivated at any time), during which liquid from the submerged half is instantaneously transferred to the other half across any distance. Up to 150,000 gallons (568,000 l) can be transferred during a one-day activation period. If smartly deployed during a ranked flooding event (so that the output end drains someplace where it won’t just flow back), the rank of the flood is decreased by 2. Depletion: 1 in 1d100')
    elif artifact_roll == 190:
        print('Living Armor Sheath \n Level: ', level,' + 1 Form: When not affixed to a creature, this looks like a mass of heavy fabric. On a creature, it looks like heavy, leathery flesh. Effect: When worn over normal skin, this organic material adheres and conforms to the creature’s body shape. The artifact eases Might defense tasks to resist poison and disease (eases by two steps if the artifact is level 6 or higher). Further, the wearer has +2 to Armor, but the artifact has none of the penalties associated with armor. Armor can’t be worn over the living sheath because it’s too bulky. Depletion: 1 in 1d100 (checked each day while the sheath is worn)')
    elif artifact_roll == 191:
        print('Living Cable \n Level: ', level,' Form: A spool of hard, flat, segmented cable Effect: When activated, the cable unspools and sprouts two rows of impossibly long legs from either side, one pair per segment, while a row of knobby protrusions that resemble handles rise up from it, perpendicular to the legs. The cable then slithers to the vertical surface the user indicates and climbs up or down until it reaches the top or bottom or until it has extended its body to a distance of 100 feet (30 m). It uses its legs to grip the surface and remains in place until a button is depressed near the top or bottom, which causes the thing to release, coil up, and retract all its legs and knobs. Depletion: 1 in 1d20')
    elif artifact_roll == 192:
        print('Living Tentacle \n Level: ', level,' Form: Thick, genetically created rope, approximately 20 feet (6 m) long, with suction disks all along its length and a bulbous opening on one end, that self-coils into a buoyant, waterproof case Effect: The cord suctions to anything that it is pressed against, living or nonliving. When one suction disk is set, the others follow suit, always forming as straight a line as possible. Once the cord has suctioned to something, it will not release until the bulbous opening has been “fed” (usually a bit of meat, although tastes can vary from cord to cord). Depletion: 1 in 1d100')
    elif artifact_roll == 193:
        print('Living Wall \n Level: ', level,' + 2 Form: A 10-foot (3 m) cube of metal mounted on two wide tracks Effect: This device functions as a level 3 creature that accompanies the user and follows his instructions. The only action the device can take is to move where the user directs it. As a level 3 creature, it has a target number of 9 and a health of 9. It has 5 Armor. The creature can move only across the ground. The device is destroyed if reduced to 0 health. Depletion: —')
    elif artifact_roll == 194:
        print('Logic Spike \n Level: ', level,' Form: A long metallic spike Effect: To activate this item, the user must hammer the spike into his head, which inflicts no damage. Once installed, the device decreases the difficulty of any task that involves reason, logic, or recall by two steps. However, it increases the difficulty of any task that involves communication by one step. An installed spike cannot be removed without permanently reducing the user’s Intellect Pool to 0. Depletion: —')
    elif artifact_roll == 195:
        print('Machine\’s Heart \n Level: ', level,' Form: A 7-foot-tall (2 m) collapsible metal stand with a 3-foot-by-3-foot (1-m-by-1-m) empty box on top and a control panel along the side Effect: It takes two rounds to assemble and set up this device, and then it takes an action to activate it. The empty box can hold four depleted, broken, or otherwise unusable cyphers and artifacts. When the box is filled with the numenera and the machine’s heart is activated, it combines all of the numenera items inside it and reconfigures them into a number of new cyphers or artifacts equal to the artifact level. Depletion: 1 in ', level,'')
    elif artifact_roll == 196:
        print('Machine stimulator \n Level: ', level,' + 3 Minimum Crafting Level: 6 Form: Fifteen-foot (5 m) tall collapsible tripod with a large directional crystal dish at the top and a control box in the center Effect: It takes two rounds to assemble and set up this device. Once set up, it takes an action to activate. When activated, this device can affect an area up to a very long distance across that is up to 2 miles (3 km) away that the tripod has direct line of sight to. Within the affected area, energy-using devices whose level is less than or equal to the artifact’s level act as if 1 level higher for one hour. Thus, installations, artifacts, and many cyphers become more capable for the duration. If deployed within a ranked community or horde that gains a benefit to its rank from artifacts, cyphers, installations, and so on, the community’s rank is treated as if 1 higher for one hour. Depletion: 1 in ', level,'')
    elif artifact_roll == 197:
        print('Manybag \n Level: ', level,' Form: Stiff leather bag of fairly large size Effect: This leather bag has dozens of sealed compartments of different sizes. By verbal command, portions of the bag can become selectively intangible so that anything in the bag can be accessed quickly. In effect, the user can speak a command word and draw out whatever object in the bag is desired, because all other obstructing compartments (and their contents) are rendered out of phase for a moment. Depletion: —')
    elif artifact_roll == 198:
        print('Margr repulsor \n Level: ', level,' Minimum Crafting Level: 4 Form: Six-foot (2 m) tall collapsible metal tripod with a clarion-like cone extension on top Effect: It takes two rounds to assemble and set up this device. Once set up, it requires an action to activate. When activated, this device sends out an audible signal for about an hour in a very long radius that most creatures hear as an annoying, low-pitched whine but that margr hear as a horrific, overwhelming scream that makes them want to flee. If deployed to protect from a ranked horde of margr, the conflict is delayed for at least one hour, if not entirely avoided, unless the margr manage to disable the device or devise a long-term method to stop up their ears. Depletion: 1 in ', level,'')
    elif artifact_roll == 199:
        print('Matter Separator \n Level: ', level,' + 2 Form: A small handheld device equipped with prongs at one end Effect: This device causes the atomic bonds holding together a creature or object within an immediate distance to separate, creating a cloud of dust that spreads out a short distance in all directions and remains there for one round. Unless dispersed by wind (which utterly destroys the target), the target snaps back together after the effect ends. The user then rolls a d20. On a result of 11 or higher, a part of the target, as decided by the GM, is missing. The disappearance inflicts 4 points of damage that ignores Armor. Depletion: 1 in ', level,'')
    elif artifact_roll == 200:
        print('Mechanical Limb \n Level: ', level,' + 2 Form: Mechanical limb grafted to a stump on a person’s body Effect: The limb must be surgically and permanently attached (a task equal to the artifact level). The procedure takes about an hour in a skilled chiurgeon’s hands. Once the limb is attached, the user has complete control over the limb and uses it naturally. If installed as an arm grants an asset on any task involving carrying or lifting. If installed as a leg, it grants an asset on any task that involves running. Depletion: —')
    elif artifact_roll == 201:
        print('Melding projector \n Level: ', level,' Minimum Crafting Level: 3 Form: Handheld device that always hums Effect: The device emits a subtle bonding influence in a very long radius that causes all surfaces in contact with other surfaces to bond together for about an hour. The bond can be broken with a successful Might task with a difficulty equal to the melding projector’s level. If used on defensive structures in a ranked community, add 3 points to its infrastructure during that community action. If deployed against a ranked horde, confusion grows as the combatants realize they can’t put down their weapons, open their eyes if they happened to blink when the artifact was used, fire ranged weapons effectively, or even move because their feet are stuck to the ground. This confusion decreases the horde’s rank by 3 for that community action. Depletion: 1 in ', level,'')
    elif artifact_roll == 202:
        print('Memory extractor \n Level: ', level,' + 2 Minimum Crafting Level: 5 Wearable: Thick lenses built on a device worn on the upper face and eyes Effect: The user can selectively delete one specific memory from a target within immediate range. Memories most easily deleted are those of specific incidents whose duration was no more than about a minute. Memories that are interwoven into a target’s daily existence (like their name, how to speak, the names of ordinary things, and so on) can’t be deleted, though attempting to do so stuns the target, preventing them from taking their next turn. Depletion: 1 in 1d20')
    elif artifact_roll == 203:
        print('Memory Shard \n Level: 10 Form: A sharp metal spike that must be inserted into the base of the neck at an upward angle. Installing the spike inflicts no damage, but it cannot be removed without killing the person. Effect: The spike contains a personality fragment from a person long dead. Installing the spike floods the host’s mind with shreds of memory, feelings, and sensations until he absorbs the extra personality. He can immediately choose and gain a second focus. Depletion: —')
    elif artifact_roll == 204:
        print('Mental Storage \n Level: ', level,' + 4 Form: Large device with multiple screens and controls as well as wires with electrodes Effect: When used, this device records a thinking creature\’s knowledge, memories, and personality—basically, a copy of his consciousness. The recording process takes four hours. The device can then store this data indefinitely. It can be accessed and downloaded into another appropriate device or body (if those capabilities are available). The device can be used only once. Depletion: Automatic')
    elif artifact_roll == 205:
        print('Mephitic Staff \n Level: ', level,' Form: Short metal-and-glass tube fitted onto a well-made wooden quarterstaff Effect: When activated (which is not an action), the tip of the staff releases a concentrated, immediate-range blast of noxious fumes when it is struck against a solid creature or object. An affected creature loses its next turn to coughing and choking. Depletion: 1 in 1d20')
    elif artifact_roll == 206:
        print('Mesmerizing Flame \n Level: ', level,' + 2 Form: Large handheld device with a starshaped wheel on the end of a long extension Effect: When the device is activated, two things happen. First, the user is protected by a shield of force that provides +1 to Armor, and +10 to Armor against flame. Second, the starshaped wheel begins spinning and spitting out flames. This is a heavy melee weapon that inflicts damage equal to the artifact level + 2, and all of the damage is fire and heat (ignores Armor). Once activated, the device remains active for one minute. Moreover, when the device is activated, creatures within immediate range that can see the patterns in the spinning flames become mesmerized, losing their action in the next round. Creatures that come within immediate range once the device is active may also become mesmerized. No creature ever loses more than one action to the patterns. Depletion: 1 in 1d10')
    elif artifact_roll == 207:
        print('Mesoglea Gloss \n Level: ', level,' Form: A living gelatinous creature encased in a medium-sized orb Effect: After breaking the orb and essentially killing the creature inside, the user can then slather a piece of armor with the goo. Once the goo dries into a hard shellac (about ten minutes), it provides protection against water, wind, and light. Additionally, the user can add a single drop of liquid to the gloss to activate it. When activated, the gloss becomes both hard and slippery, decreasing the difficulty of all Speed and Might defense actions by one step for one hour. Applying the gloss is an action. Activating the gloss is also an action. Depletion: 1 in 1d20 for the Speed and Might defense abilities (after depletion, the glossed armor retains its water-, wind-, and lightreflection properties)')
    elif artifact_roll == 208:
        print('Metabolism Bud \n Level: ', level,' Form: Organic pod, almost like a small, hemispherical bit of fruit. Once grafted to a host, it takes on the appearance of the host’s flesh. Effect: The pod grafts onto any living host (usually near the brain or spine) and injects chemicals that boost the creature’s metabolism. This increases the host’s maximum Speed Pool by 5 (by 7 if the artifact is level 5 or higher). Depletion: —')
    elif artifact_roll == 209:
        print('Metalodermis Graft \n Level: ', level,' Form: Injection Effect: A microthin layer of flexible metal spreads beneath the user’s skin, giving her a greyish, silvery cast. She gains +1 to Armor. Depletion: 1 in 1d100 (check each day)')
    elif artifact_roll == 210:
        print('Mind Armor \n Level: ', level,' Form: Armor (usually medium or heavy) made from crystal Effect: The material from which the armor is made is highly receptive to thought and stores mental energy placed into it. When the wearer defends from a physical attack and applies Effort, she can spend points from her Intellect Pool instead of her Speed Pool. Depletion: —')
    elif artifact_roll == 211:
        print('Mind Blade \n Level: ', level,' Form: A weapon (usually a broadsword or dagger) made from grey crystal Effect: The material from which the weapon is made is highly receptive to thought and stores mental energy placed into it. When a user attacks with the weapon and would apply Effort, he can spend points from his Intellect Pool instead of his Might Pool. Depletion: —')
    elif artifact_roll == 212:
        print('Mind Displacer \n Level: ', level,' + 4 Form: A metal helmet with an opaque visor Effect: When activated, the device blasts the user’s mind with vivid colors for one minute. At the end of this time, the user sees and hears as if at a fixed point in a place that she has visited at least once before. The perception lasts until she removes the device. Depletion: 1 in ', level,'')
    elif artifact_roll == 213:
        print('Mind Imager \n Level: ', level,' + 2 Form: Handheld device with a synth panel screen and wires that must be affixed to the head of a creature Effect: This device shows a visual image of what a creature is thinking. The affected creature need not be conscious. Depletion: 1 in 1d20')
    elif artifact_roll == 214:
        print('Minute Lenses \n Level: ', level,' Form: Synth eye cups Effect: The wearer can refocus her eyes to magnify whatever she is looking at within an immediate distance by up to one hundred times. Depletion: 1 in 1d20')
    elif artifact_roll == 215:
        print('Mirage Generator \n Level: ', level,' + 4 Form: A complex mechanical device bristling with multicolored lenses Effect: Activating the device takes ten minutes. At the end of this time, the device creates a complex scene of images (chosen by the user) within immediate range. The entire scene must fit inside a 100-foot (30 m) cube. The images are made from solidified light and look and feel completely real. The device also creates sounds to make the images seem real. If the images include creatures, those creatures look and act like real creatures, but when they talk, they speak in gibberish. The only quality the device cannot produce is smell—nothing created by the device has an odor. The images last for one hour or until the device is deactivated (not an action). If the scene is something that could be harmful (such as a roaring inferno), the device inflicts ambient damage equal to half its level to all creatures within long range. The images cannot conceal terrain features. They can change the features’ general appearance but must incorporate them into the scene. Thus, a pit in the area would still be a pit, though the color might change so that it blends in with the created scene. Depletion: 1 in ', level,'')
    elif artifact_roll == 216:
        print('Mobile Arm \n Level: ', level,' + 1 Form: A small handheld device and a larger complex mechanical device with treads and a multijointed arm Effect: The bigger device is about 3 feet (1 m) long, with an arm that can extend out to 7 feet (2 m). It is controlled by the smaller device. The larger device can be made to move across almost any solid surface, and the mechanical arm can manipulate objects in a crude fashion. It can open doors, pull levers, push buttons, pick up and drop objects that a human could pick up in one hand, push or pull objects about the size of a human or smaller, and so on. It is neither fast enough nor precise enough to make attacks. When activated, it operates for one hour. Depletion: 1 in 1d20')
    elif artifact_roll == 217:
        print('Monitor Bracelet \n Level: 1 Form: A bracelet made from a flexible, synthetic material and a viewscreen Effect: The device activates when a creature puts on the bracelet. While the bracelet is worn, the viewscreen displays the wearer’s exact position and vital signs. Depletion: 1 in 1d100 (checked each day the bracelet is worn)')
    elif artifact_roll == 218:
        print('Molecular Bonder \n Level: ', level,' + 2 Form: Handheld device with a number of controls and a pointed end Effect: This device fuses two objects together with a bond strength equal to its level. If flesh bonded in this way (whether to an object or to other flesh) is torn apart, it suffers damage equal to the device’s level. Depletion: 1 in ', level,'')
    elif artifact_roll == 219:
        print('Monowhip \n Level: ', level,' + 4 Form: Hilt with connected red sphere Effect: Produces a 10-foot-long (3 m), hair-thin, glowing white cord. The whip cuts through any material of a level lower than its own, but is dangerous to use. If used to attack, it is a light weapon that ignores Armor of a level lower than its own, but each attack requires a depletion check. Furthermore, each missed attack requires a difficulty 3 Speed defense roll to avoid accidentally taking damage from the retracting whip. Depletion: 1 in 1d20')
    elif artifact_roll == 220:
        print('Mother Parasite \n Level: ', level,'+2 Form: A flat nodule of tissue equipped with a round, toothed mouth on one side and a great roaming red eye on the other. Effect: The user must position the parasite so it can bit their skin. The parasite sinks its teeth into the skin and remains there. The bite inflicts 1 point of damage. While in place, the parasite draws sustenance from its host, reducing their might pool by 1. The parasite automatically activates whenever the user fails a might or speed defense roll. An orifice opens on the parasite and sprays corrosive slime at a target of the user’s choice within immediate range. The slime inflicts damage equal to the artifact level. The damage penetrates (ignores) up to 2 armor. Depletion 1 in 1d10.')
    elif artifact_roll == 221:
        print('Multidimensional Blade \n Level: ', level,' + 2 Form: Short, straight bladed weapon with a large haft that has a few controls on it Effect: When activated, the blade exists on many levels of reality at once. It inflicts damage equal to its level, and it harms creatures (such as an abykos) that can be affected only by transdimensional effects. Once activated, the blade is active for one minute. Depletion: 1 in 1d20')
    elif artifact_roll == 222:
        print('Multidimensional Projector \n Level: ', level,' + 2 Form: A 9-foot (3 m) tall collapsible tripod with a complex bundle of interconnected wires on top and a control box in the center Effect: It takes two rounds to assemble and set up this device. Once set up, the device sends out a transdimensional pulse that affects all creatures within long range, spreading out their continuity so that they exist on many levels of reality at once for about an hour. Such creatures are treated as phased—they can neither be affected by normal physical phenomena nor affect the normal world of physical matter. If deployed to protect from a ranked threat of some sort (including an attacking horde or community), the rank of that threat is decreased by 1 for the duration. Depletion: 1 in 1d10')
    elif artifact_roll == 223:
        print('Multi-opener \n Level: ', level,' + 2 Form: Slender metallic box with several smaller telescoping elements Effect: When attached to a lock (whether mechanical or machine-mediated) or to the surface of a sealed machine, the multi-opener extends tiny manipulators and attempts to loosen any mechanism holding the device closed or manipulate any lock that is amenable to physical manipulation. Devices fall open like peeled fruits if their level is 1 less than this artifact, and locks open easily if their level is equal to or less than this artifact. Salvage tasks made in conjunction with a multi-opener gain two assets. Depletion: 1 in 1d10')
    elif artifact_roll == 224:
        print('Multiphasic Ray \n Level: ', level,' Form: Small handheld device Effect: Emits a ray of yellow-orange light that bathes up to three human-sized targets in a burst of energy. For the next ten minutes, those affected by the ray are multiphasic, existing in multiple phases and dimensions at one time. Multiphasic characters are not subject to the special resistances of creatures that are normally difficult to touch or attack because they are out of phase or transdimensional in nature. Likewise, if the attacks of foes who are out of phase or transdimensional would normally ignore Armor, this benefit does not apply to multiphasic characters. Depletion: 1 in 1d20')
    elif artifact_roll == 225:
        print('Murder Globe \n Level: ', level,' + 3 Form: 3-foot (1 m) tall collapsible metal tripod with a large metal globe at the top. The globe has a number of holes in it, but it is not hollow. Effect: It takes two rounds to assemble and set up this device, and then it requires an action to activate. When activated, this device does nothing for five rounds. After that, if anything larger than a mouse comes within long range of it, the globe fires a powerful projectile at that target. The projectile inflicts damage equal to the artifact level. The device can attack up to ten times per round, but it never attacks the same target more than once per round. It remains on watch for 28 hours or until it has made one hundred attacks, whichever comes first. Depletion: Automatic')
    elif artifact_roll == 226:
        print('Music Makers \n Level: ', level,' Form: Yellow and blue gloves with glowing fingertips Effect: While the gloves are worn and the fingertips are pressed to the surface of any living creature, they sound off in a series of notes. The notes may be altered by the amount of applied pressure, the angle of the touch, and the movement of the living creature. The sounds can be heard by anyone within 500 feet (152 m). Depletion: 1 in 1d20 (roll each time when putting the gloves on)')
    elif artifact_roll == 227:
        print('Mutation Mask \n Level: ', level,' + 4 Form: A leather facemask with a variety of synth protuberances Effect: When worn, the mask conforms to the wearer’s head, enclosing it. While wearing the mask, the character can trigger a mutation by spending an action fiddling with the mask. Over the next few rounds, any previous mutations fade, and a new mutation grows from the character. Roll for a Harmful Mutation (1 on a ', level,'), a Beneficial Mutation (2-5 on a ', level,'), or a Powerful Mutation (6 on a ', level,'). Depletion: 1 in 1d100 (checked each day mask is worn, and checked each time mutation is changed)')
    elif artifact_roll == 228:
        print('Nano-needler \n Level: ', level,' Form: Small handheld device with a tiny tube Effect: This device projects a single needle—far smaller in width than a human hair—up to long range (very long range if the artifact is level 5 or higher). The needle inflicts no damage, but it can carry poison or disease, and the injection is so tiny that the victim doesn’t feel it. The needle can also penetrate (ignore) up to 4 Armor. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d10')
    elif artifact_roll == 229:
        print('Nanotech Healing Armor \n Level: ', level,' Form: A full suit made from synth covering the entire body Depletion: 1 in 1d10 (10%) Effect: Nanotech Healing Armor counts as light armor. The armor itself has nano mites matched with the interior surface that work to help the wearer heal injuries. While wearing the armor, the character gains an extra recovery test per day, usable any time. The test restores points equal to the test result plus half the level of the armor rounded down (so level 3 armor would add an extra +1 to the recovery test, while level 6 would be +3) and may only restore points in the Might or Speed pools. Standard recovery tests do not gain this bonus. The armor also acts as an asset when resisting the effects of poisons incurred from taking damage (as opposed to something inhaled or drank, for instance).')
    elif artifact_roll == 230:
        print('Natalitial \n Level: ', level,' + 1 Wearable: Helm that projects illusionary images, sounds, and scents Effect: Wearer can trigger the worn device as an action. On subsequent rounds, lasting for up to an hour, the helm produces a celebratory atmosphere in an area up to a long distance around it, superimposing colorful streamers, hanging lamps, festive music, and potentially additional visual and auditory factors (depending on the specific parameters set by the crafter). If deployed in a ranked community or horde, the rank is increased by 1 for all tasks related to abating sadness and sorrow, to positive interaction, and to the propagation of revelry. Depletion: 1 in 1d20')
    elif artifact_roll == 231:
        print('Needler \n Level: ', level,' Form: Small handheld device with a tiny tube Effect: This device projects a single needle (no damage), a spray of needles (1 point of damage), or a wide spray of needles (no damage, but it affects everyone within an immediate area)—user’s choice. In each case, the needles can affect anyone within long range (very long range if the artifact is level 5 or higher). The needles can be poisoned, in which case even those who don’t take damage must make Might defense rolls to avoid being poisoned. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some characters have, ignoring “rounds of ammo” costs and not requiring additional depletion rolls for using it as a rapid-fire weapon. Depletion: 1 in 1d20')
    elif artifact_roll == 232:
        print('Neural Disruptor \n Level: ', level,' + 2 Form: Small cylinder with a few studs Effect: Fires a green neural disruption beam at long range. Those struck suffer 2 points of Intellect damage (ignores Armor) and must make an Intellect defense roll or lose their next turn, stunned. Depletion: 1 in 1d10')
    elif artifact_roll == 233:
        print('Night Googles \n Level: ', level,' Form: Pair of synth goggles with dark, protruding lenses Effect: Outside, the wearer can see at night as if it were daylight. Inside, the wearer can see in pitch darkness up to short range (long range if the artifact is level 5 or higher). Depletion: —')
    elif artifact_roll == 234:
        print('Null Blade  \nLevel: ', level,' + 4 Form: A sword whose blade is covered with circuitry Effect: This weapon functions as a normal sword (sometimes a dagger). However, if the user kills a creature with this weapon, the creature and everything it wears and carries disappears, erased from existence. Depletion: —')
    elif artifact_roll == 235:
        print('Obedient Rope \nLevel: ', level,' + 4 Form: A 50-foot (15 m) length of thin metallic cable Effect: This extremely useful, semi-intelligent cable obeys the verbal commands of the user. The cable can tie itself in knots and untie those knots. It can become sticky to adhere to surfaces (selectively—parts of the cable can remain normal) or rigid (again, selectively). The rope cannot move of its own volition other than to tie or untie itself.')
    elif artifact_roll == 236:
        print('Ocular Graft \nLevel: ', level,' + 1 Form: A fleshy mass with three eyes that fits over the head (and one eye) of a human Effect: This living device feeds off the nutrients in the host’s blood, so her total Might Pool is reduced by 1 while the graft is worn. She has an asset on perception tasks and can see in complete darkness as if it were dim light. Perhaps most impressive, the host can see creatures and objects within short range that are invisible, out of phase, or dimensionally displaced. The graft inflicts 8 points of damage to the host if removed. Depletion: —')
    elif artifact_roll == 237:
        print('Ocular Helm \nLevel: ', level,' + 1 Form: A synthsteel helm with seven round eyes Effect: The wearer of this strange helm sees a variety of visual sensors, clarity enhancers, viewfinders, rangefinders, and other aids to sight. She gains an asset on perception tasks and all ranged attacks. Depletion: 1 in 1d20 (check each day used)')
    elif artifact_roll == 238:
        print('Oubliette \nLevel: ', level,' + 2 Form: A small metal box Effect: When thrown (short range) at a human-sized creature, the box unfolds, expands, and snaps shut around a target. The box is a 7-foot (2 m) cube. There is enough air inside to allow the target to breathe (if it needs to). If the user activates the artifact while it contains a target, the box opens, releases its contents, and returns to its normal small size. If it deactivates while holding a target, the device must be destroyed in order to free its contents. Depletion: 1 in 1d10')
    elif artifact_roll == 239:
        print('Operon reservoir \nLevel: ', level,' + 2 Minimum Crafting Level: 5 Form: Metallic pod about 3 inches (7.5 cm) in diameter that fuses to its host’s skin Effect: The pod grafts onto a living host and extends filaments throughout their body. Thereafter, when the host spends points from a specific Pool (each operon reservoir is associated with Might, Speed, or Intellect), they can draw some or all of the points from the artifact instead. With each use, the artifact can transfer a number of points equal to its level. Operon reservoirs do not allow a user to avoid damage by directly spending points. Once grafted, a pod can’t be removed until it is depleted (and sometimes not even then). Depletion: 1 in 1d20')
    elif artifact_roll == 240:
        print('Pacifying Needler \nLevel: ', level,' + 2 Form: A small handheld device with a tiny tube Effect: This device projects either one or two needles up to long range each time it is used. The needles are far thinner than a human hair, and they inflict no damage. Instead, if one needle is fired, it will calm a belligerent, raging, or attacking creature so that they become calm for at least one minute or until they are attacked. If two needles are fired, the target falls asleep for up to a minute or until they are damaged. The needles can penetrate (ignore) up to 4 Armor. A pacifying needler can be activated to fire all its needles at once on a countdown timer, creating a detonation-like blast that can affect all creatures in line of sight within long range. This depletes and destroys the artifact. If deployed against a ranked horde or community during a conflict in this fashion, the horde or attacking community inflicts 3 less points of damage during that community action. Depletion: 1 in 1d20')
    elif artifact_roll == 241:
        print('Perception extender \nLevel: ', level,' + 2 Minimum Crafting Level: 5 Wearable: Handheld device mounted with transparent screen Effect: The user’s senses extend up to a mile (1.5 km) in any direction for one minute, allowing them to ask the GM very simple, general questions about that area, such as “Where is the margr camp?” or “Where did we leave the galloping gambado?” and receive simple, correct answers. If used to gather reconnaissance on a ranked horde or community, the process takes about an hour. At the end of that period, the user can confer an advantage to another group by providing the information learned, which modifies the effective rank of the second group by +1 during the next community action involving the target horde or community. Depletion: 1 in 1d2')
    elif artifact_roll == 242:
        print('Periscopic Eye  \nLevel: ', level,' Form: Mechanical implant Effect: This device must be surgically implanted behind the user’s eyeball (a level ', level,' task that takes about one hour). Once it’s placed, the user can push on the inside of his eye and extend his eyeball out a number of feet equal to the artifact level. Doing this allows him to see around corners, down thin tunnels, and anywhere else he is willing to risk sending his eyeball. Depletion: — ')
    elif artifact_roll == 243:
        print('Personality Adjuster \nLevel: ', level,' + 4 Form: A metal helmet trailing wires with several spikes on the inside Effect: When placed on a creature’s head, the helmet inflicts 2 points of damage. If the helmet is activated, it completely erases the creature’s memories and personality, turning the creature into a blank slate, a process that takes about one hour. After this time, the user who activated the device can implant new memories that build the creature’s personality. If used on a character, the character remains at his tier, but he can swap out his type, descriptor, and focus for different ones. Depletion: Automatic')
    elif artifact_roll == 244:
        print('Phase Axe \nLevel: ', level,' + 4 Form: A battleaxe whose blade is made of an unknown translucent material Effect: This weapon functions as a normal battleaxe except the blade can pass through anything made of rock or metal. Attacks with the weapon ignore Armor made from these materials. Depletion: —')
    elif artifact_roll == 245:
        print('Phasing Piton \nLevel: ', level,' Form: Metallic spike with a single toggle stud Effect: When activated, the piton phases and can be inserted up to 6 inches (15 cm) into almost any material. When deactivated, the piton becomes solid again and remains embedded solidly in the material. If used as a weapon (requiring one action to activate and insert, and a second action to deactivate), the piton inflicts 6 points of damage. Depletion: 1 in 1d100')
    elif artifact_roll == 246:
        print('Photon Transporter \nLevel: ', level,' + 4 Form: Two metal disks, each 5 feet (2 m) in diameter Effect: When activated, anything on one of the metal disks instantly transports to the other disk. The device accomplishes this by transforming the item or passenger into light particles and broadcasting them to the second disk. When the particles arrive, the disk reassembles them in their original form. The devices allow instant transport from one disk to the other and back again, regardless of the distance separating them. Depletion: 1 in 1d20')
    elif artifact_roll == 247:
        print('Pincer Arm \nLevel: ', level,' + 1 Form: A metal arm with a pincer rather than a hand Effect: The arm must be surgically and permanently attached (a task equal to the artifact level). The procedure takes about an hour in a skilled chiurgeon’s hands. Once the arm is attached, the user has complete control over the limb and uses it naturally. The arm grants an asset on grabbing, grappling, and any task involving carrying or lifting. Further, the arm is considered a medium weapon if used to attack. However, the arm allows for no delicate or fine manipulation. Depletion: —')
    elif artifact_roll == 248:
        print('Plant Jar \nLevel: ', level,' Form: Large glass or clear synth canister Effect: A living plant placed inside this device remains alive until removed regardless of light, water, or other conditions. Depletion: —')
    elif artifact_roll == 249:
        print('Point Clamp \nLevel: ', level,' + 3 Form: Flat metal disk 4 inches (10 cm) across Effect: When this object touches another object, it forms a point-to-point connection that is almost unbreakable. The connection can be undone by activating a control on the side of the disk. The disk can be connected to multiple objects at once. For example, a character could attach it to a rope and then fling the disk up to the ceiling, where it would attach, allowing him to climb up. Depletion: —')
    elif artifact_roll == 250:
        print('Poison Brain Implant \nLevel: ', level,' + 1 Form: Capsule Effect: When swallowed, this implant travels to the brain and nests there. Henceforth, whenever a creature establishes contact with the user’s mind (using mental attack, telepathic communication, mind control, and so on), the creature is attacked mentally. It is stunned for one round (losing its action) and takes Intellect damage equal to the artifact’s level. This effect does not prevent the contact. Depletion: —')
    elif artifact_roll == 251:
        print('Poisoner’s Touch \nLevel: ', level,' + 1 Form: Very thin transparent glove Effect: When the wearer concentrates (taking an action), the glove secretes a small amount of nerve toxin. The next creature touched suffers Speed damage equal to the artifact level (ignores Armor) and must make a new defense roll each round or suffer the damage again until either she succeeds at the defense roll or five rounds pass, whichever comes first. Depletion: 1 in 1d10')
    elif artifact_roll == 252:
        print('Portable feast \nLevel: ', level,' Minimum Crafting Level: 5 Form: Heavy pack-like device composed of metal and synth components Effect: The device unfolds itself into a small fixed box about 3 feet (1 m) on a side that produces—in continuous fashion over a one-hour period—enough food and water to nutritiously feed up to a hundred people. If provided to the defenders of a ranked community or horde immediately prior to a conflict, they have +2 health during the next community action that occurs within ten hours of the feast. Depletion: 1 in 1d20')
    elif artifact_roll == 253:
        print('Portable Lavation \nLevel: ', level,' Form: Black synth cube 1 foot (0.3 m) on a side that expands to a shelter 3 feet by 3 feet by 7 feet (1 m by 1 m by 2 m) Effect: When set up near water (or if set up prior to a rainstorm), the device cleans and heats up to 1 gallon (4 L) of liquid and then creates a pressurized shower that lasts for ten minutes. The pressurized water also contains a scented residue that stays on the skin, which produces an odor that most humans find pleasing. Those who shower for ten minutes (and don’t wipe the scented residue off their skin) find that the difficulty of all actions related to charm, charisma, and persuasion is reduced by one step for one hour, but only when they are dealing with humans. The device takes 28 hours to recharge between uses. When in its box form, the device is sturdy enough to use as a stool or small table. Depletion: 1 in 1d20')
    elif artifact_roll == 254:
        print('Portable trebuchet\nLevel: ', level,' + 2 Minimum Crafting Level: 6 Form: Heavy pack-like device composed of metal and synth components Effect: The device unfolds itself into a trebuchet-like device about as large as a human and remains that way for about an hour. The trebuchet provides its own ammunition, which takes the form of burning spheres of plasma. If a user spends their entire action each turn operating the device, they can fling one trebuchet shot every other round at a target within very long range; the shot inflicts 6 points of damage on the target and everything within immediate range. Depletion: 1 in 1d20')
    elif artifact_roll == 255:
        print('Power Glove\nLevel: ', level,' + 1 Form: An oversized metal gauntlet with thick protrusions on the knuckles Effect: Unarmed strikes made while wearing the glove inflict 1 additional point of damage. However, if the user takes an action to activate the glove, energy sparks between the protrusions for one round. During that round, if the attack is successful, the glove inflicts 5 additional points of damage and throws the target back a short distance. Depletion: 1 in ', level,'')
    elif artifact_roll == 256:
        print('Prevarication exponent\nLevel: ', level,' + 1 Minimum Crafting Level: 3 Wearable: Helm with a rotating cone-shaped projection Effect: The wearer can trigger the helm as an action. On subsequent rounds, the helm exerts a subtle psychic influence that induces creatures within long range to lie rather than speak the truth on any given topic. Lies are usually the opposite of the truth. Attempts to tell the literal truth require a successful Intellect task on the part of each creature in range. If a creature successfully tells the truth in one instance, all additional attempts it makes to do so are eased by three steps. The helm’s effect lasts for about an hour. If deployed in a ranked community or horde, the rank is decreased by 1 for community actions related to diplomacy, easing social disquiet, and so on. Depletion: 1 in 1d20')
    elif artifact_roll == 257:
        print('Printing Stylus\nLevel: ', level,' + 2 Form: A thick stylus that produces quick-hardening “ink” of varying firmness and strength, as desired Effect: The stylus can be used to draw threedimensional objects in midair. It takes a few rounds to draw a piece of basic equipment, like rope, a backpack, spikes, or even a sword or shield. Upon completion of the drawing, the user makes an Intellect roll against a target number determined by the GM. The roll might be modified by any skill the GM agrees is pertinent. On a success, the item drawn becomes a real piece of equipment. Depletion: 1 in 1d10')
    elif artifact_roll == 258:
        print('Probability Engine \n Level: ', level,' + 2 Form: A synth cube made of small white cubes and blue spheres Effect: When the user activates the item, the GM secretly rolls a d20 and notes the result. Anytime the user chooses, she can replace the result of one roll with the number that the GM rolled. The GM rolls a new secret number each time the device is activated. Depletion: 1 in 1d100')
    elif artifact_roll == 259:
        print('Probability Mantle \n Level: ', level,' + 2 Form: A multicolored cloak Effect: If the wearer fails a defense roll or attack roll, she can call on the probability mantle for a second chance (and another roll). Depletion: 1 in 1d10')
    elif artifact_roll == 260:
        print('Projectile Drone \n Level: ', level,' + 3 Form: A 3-foot-tall (1 m tall) collapsible tripod with a metallic projectile weapon mounted on top Effect: It takes two rounds to assemble and set up this device. Once set up, it takes an action to activate. When activated, this device follows whoever activated it around for one hour on its tripod legs (movement: short). If the user comes under attack, the drone fires one shot per round at attackers within long range, inflicting damage equal to the artifact level. Depletion: 1 in 1d20')
    elif artifact_roll == 261:
        print('Protection Amulet \n Level: ', level,' Form: A stylized amulet worn on a chain Effect: The amulet reduces one type of damage by an amount equal to the artifact level. Roll a d20 to determine the kind of damage the amulet protects against. 1–4 Cold 5–8 Electrocution and shock 9–12 Fire 13–16 Poison 17–20 Radiation Depletion: 1 in ', level,' (check each time the amulet reduces the damage)')
    elif artifact_roll == 262:
        print('Psycap \n Level: ', level,' + 2 Form: A weave of thin metallic wires worn on a shaved head Effect: The weave protects the wearer’s mind from mental attacks. While he wears it, he has an asset on Intellect defense rolls and cannot be contacted by telepathic means. Depletion: 1 in 1d10 (check each time the user makes an Intellect defense roll)')
    elif artifact_roll == 263:
        print('Psychic Eradicator \n Level: ', level,' + 2 Form: A 15-foot (5 m) tall collapsible tripod with a large directional crystal dish at the top and a control box in the center Effect: It takes two rounds to assemble and set up this device. Once set up, it takes an action to activate. When activated, this device can affect an area up to a very long distance across for one hour. Within that area, all tasks relying on psychic effects, such as telepathy and psychokinesis, whose level is equal to or less than the artifact’s are hindered by two steps, and higher-level psychic tasks are hindered by one step. This means that routine tasks like telepathy are no longer routine, and those that require a roll to succeed, such as an Onslaught mindslice, become even more difficult. If deployed within a ranked community or horde, psychic attacks that would inflict damage to the community during one community action are treated as if 1 level lower. Depletion: 1 in 1d10')
    elif artifact_roll == 264:
        print('Psychic Helmet \n Level: ', level,' + 2 Form: Lightweight synth helmet Effect: The wearer gains 3 Armor that protects against Intellect damage only. Further, attempts to affect the wearer’s mind are hindered (hindered by two steps if the artifact is level 7 or higher). Depletion: —')
    elif artifact_roll == 265:
        print('Psychic Whip \n Level: ', level,' + 2 Form: Crystal-handled whip made of flexible silver metal Effect: A target within short range takes damage equal to the artifact level. In addition, the target must make a second Intellect defense roll or be subject to extreme mental pain, causing it to collapse into a quivering mass of screaming nerve endings for one round, which inflicts 2 points of damage (ignores Armor). Depletion: 1 in 1d20')
    elif artifact_roll == 266:
        print('Psychic Whistle \n Level: ', level,' + 2 Form: Metal device 1 inch (2.5 cm) long with a single button Effect: When the device is activated, a whistlelike sound is heard by humans within very long range. The device doesn’t actually produce sound but instead stimulates the aural center of the human brain. It has no effect on nonhumans. Depletion: 1 in 1d100')
    elif artifact_roll == 267:
        print('Pulse Knife \n Form: A shard of dull steel, sharpened along one edge Effect: This large knife functions as a normal weapon of its type. When its special power is activated as part of an attack, the knife emits a silent pulse of force that sweeps out to a short range in all directions. Creatures in the area other than the wielder are knocked prone and stunned for one round, losing their action. Unfixed objects are toppled or moved at least 5 feet (2 m). Cracks form in walls, floors, and ceilings, and a reality scar is left behind in the area.')
    elif artifact_roll == 268:
        print('Pulse Staff \n Level: ', level,' + 2 Form: A short, fat tube joined with a long, thin tube Effect: Fires pulses of energy up to 200 feet (61 m) that explode in an immediate radius for 5 points of damage. However, whenever the device is used, if the player rolls a 1 or 2, the pulse explodes early at a point determined by the GM. Depletion: 1 in 1d20')
    elif artifact_roll == 269:
        print('Punishment Tick \n Level: ', level,' + 2 Form: A round metal disk with an adhesive patch and a handheld device that controls it Effect: When the disk is touched to a creature’s skin, tiny metal barbs sprout from the perimeter and embed the disk in the flesh. Pressing the button on the handheld device inflicts 2 points of electrocution damage to the creature to which the disk is attached. Depletion: 1 in 1d10')
    elif artifact_roll == 270:
        print('Pyroclastic Staff \n Level: ', level,' Form: A long metal pole with a handle in the middle and two buttons above it Effect: A user can wield this device as a normal quarterstaff. It also has two functions, which can be activated by pressing one of its two buttons. The first function causes a short jet of bright blue flame to rise from one end. The flame emits bright light out to a short distance. In addition, the staff inflicts 2 additional points of fire damage that ignores Armor. The flame burns for up to one hour. The second function causes a blast of flames to wash out from one end at up to three targets within immediate range. The flames inflict burn damage equal to the artifact level. Depletion: 1 in 1d20')
    elif artifact_roll == 271:
        print('Quickice Axe \n Level: ', level,' + 2 Form: A long metal pole Effect: The end of this pole sprays out liquid that immediately freezes into an axe blade, turning the pole into a heavy weapon. Further, if the blade is touched to water or other liquid, it freezes an area approximately 6 feet (2 m) in radius around it. Using this secondary function also triggers a depletion roll. Once created, the axe head lasts for 28 hours. Depletion: 1 in 1d100')
    elif artifact_roll == 272:
        print('Recorder Headband \n Level: ', level,' + 2 Form: Leather-like headband with a small device attached Effect: This headband records everything the wearer sees as moving images that can be replayed and reviewed. It stores up to one hundred hours of images. When the device is depleted, all stored images are lost. Depletion: 1 in 1d20 per hour of use')
    elif artifact_roll == 273:
        print('Redlight Clip \n Level: 1 Form: Metal clip or pin easily affixed to clothing Effect: This object flashes red when in immediate range of dangerous radiation or poisonous gas. Depletion: —')
    elif artifact_roll == 274:
        print('Remnant Reader \n Level: ', level,' Form: A small handheld device Effect: When activated and slowly passed over bones, skin, or some other bit of organic tissue, the device “reads” the material and compares its composition to information stored in the datasphere. After one minute, the device emits a tiny shimmering hologram that reveals what the creature looked like when it was alive. This image lasts for about a minute and then flickers before disappearing altogether. Depletion: 1 in 1d100')
    elif artifact_roll == 275:
        print('Remote Clamp \n Level: ', level,' Form: Metal clamp with a detachable control pad Effect: The control pad allows someone to direct this extremely strong device to clamp and unclamp. The pad must be within very long range of the clamp to control it. Depletion: 1 in 1d10')
    elif artifact_roll == 276:
        print('Repair Sphere \n Level: ', level,' + 2 Form: Small spherical automaton about 8 inches (20 cm) in diameter Effect: This device comes with a small module that can be affixed to a machine. Floating along, the sphere attempts to follow within immediate range of the module (though it can be directed to remain where it is). It moves a short distance each round. It can come to the module from a range of up to 10 miles (16 km) away. If the module is attached to a machine and that machine takes damage, the sphere moves to repair the damage with sophisticated tools, requiring no additional materials, task rolls, or direction. This requires no action on the part of the machine being repaired. The sphere can attempt to repair a machine a number of times per day equal to its level. The artifact must be newly activated each day. Depletion: 1 in 1d100')
    elif artifact_roll == 277:
        print('Replacement Hand \n Level: ', level,' + 1 Form: A metallic hand Effect: To use this device, a user must hold it to the stump of an arm for at least one minute. At the end of this time, filaments bind the hand to the arm and connect with the user’s nerve endings so that it can be used as if it were a normal hand. After the item has been attached, the user can take an action to detach the hand from the stump. The hand drops and moves about, scuttling like a spider. The user can control the hand and perceive through it out to a short distance. The hand is a level 1 creature under the user’s control and has a target number of 3, inflicts 1 point of damage, and has 3 health. The hand can remain separated for up to one hour. At the end of this time, the device powers off and must be reattached for at least one hour before it can be separated again. Depletion: 1 in 1d20')
    elif artifact_roll == 278:
        print('Restoration Pod \n Level: ', level,' + 4 Form: A lidded canister made of metal and glass containing a padded bed Effect: The artifact activates only when a creature climbs inside the device. When this happens, roll a d20. If you roll any number other than 1, the lid seals shut, the device replenishes the creature’s stat Pools up to their maximum, and it also removes any poisons, diseases, and contaminants that might be affecting the creature. However, if you roll a 1, the device malfunctions and takes the creature apart piece by piece, painting the interior with gore and killing the creature almost instantly. Depletion: 1 in 1d10')
    elif artifact_roll == 279:
        print('Retractable Claws \n Level: ', level,' + 1 Form: Metallic claws and bone sheath graft, self-installing Effect: The graft recipient can make unarmed weapon attacks with metallic claws that can be extended as part of another action. Instead of dealing normal unarmed attack damage, the attack deals damage equal to the artifact level. If the user has a special ability or training that increases her natural unarmed attack damage, the increase is applied to the damage dealt by the retractable claws. Depletion: —')
    elif artifact_roll == 280:
        print('Ring of Storm Weathering \n Level: ', level,' Form: Freestanding device with small control panel Effect: When activated prior to the arrival of a storm, the device implodes, creating a gravitationally null ring about 6 feet (2 m) in diameter and 8 feet (2 m) tall. The space inside the ring is protected from the majority of all external effects (including heat, cold, rain, wind, and storms) for a number of hours equal to the artifact level. Depletion: 1 in ', level,'')
    elif artifact_roll == 281:
        print('Roving Eyes \n Level: ', level,' Form: A clear synth panel and ', level,' + 4 metal spheres with glass eyes, each about the size of a fist Effect: The spheres float in the air, moving in designated patrol patterns assigned to them by the user, moving no more than 300 feet (91 m) before they return to their starting point. Each sphere can have its own pattern, but once set, it cannot be changed. At any time, the user can see on the synth panel what any one of the spheres sees with its eye. The glass eyes see with the same ability as a human’s. Depletion: 1 in 1d20')
    elif artifact_roll == 282:
        print('Ruby Lightning Goggles \n Level: ', level,' + 3 Form: Pair of goggles whose eyepieces are opaque ruby crystal Effect: The wearer can see normally through the spectacles, which correct any vision impairments, including blindness. In addition, the wearer can project scarlet-hued lightning from the lenses at up to three targets within long range as one action, inflicting damage equal to the artifact level. If an attack misses, the ruby spectacles fuse to the wearer’s face on a failed difficulty 2 Might defense roll. Once fused, the spectacles can’t be removed until the artifact is depleted, and even then, they leave the victim’s face scarred. Depletion: 1 in 1d20')
    elif artifact_roll == 283:
        print('Rumbler \n Level: ', level,' + 4 Form: A 9-foot (3 m) tall collapsible metal stand with a large crystalline disc that is partially embedded in the ground at the base and a control box in the center Effect: It takes two rounds to assemble and set up this device. Once set up, it takes an action to activate. When activated, the disk begins to agitate the ground underneath. Everyone and everything within very long range is affected by severe shaking over the next five rounds, building to peak severity on the third round when everyone and everything suffers damage equal to the artifact level and falls prone. Only those within 3 feet (1 m) of the device are unaffected. During all rounds of shaking, tasks that require movement or balance (including attacks) are hindered. This effectively creates a ranked quake event with a rank equal to 4 less than the artifact’s level, which could threaten a ranked community or horde. Depletion: 1 in ', level,'')
    elif artifact_roll == 284:
        print('Sacrilock \n Level: ', level,' + 1 Minimum Crafting Level: 5 Form: Handheld device with extensions pointing toward and away from user Effect: Intense beam of focused psychic energy inflicts a number of points of Intellect damage equal to the artifact level, plus 1 additional point of damage for each point the wielder spends from their Intellect Pool. The user doesn’t choose the number of points spent; instead, roll a d6 to determine the number. The wielder may apply their Intellect Edge toward this cost. Depletion: 1 in 1d20')
    elif artifact_roll == 285:
        print('Safe Corridor \n Level: ', level,' + 2 Form: Two separate metal and synth capsules about the size of a human’s head, each with a large glass plate Effect: When the device is activated, the space between the two capsules forms an invisible corridor of breathable atmosphere with a moderate temperature. It hedges out dangerous vapors, vacuum, insects, radiation, nanites, and other particulate matter. The corridor is 8 feet (2.5 m) wide and can be up to 1 mile (1.5 km) long. It must be relatively unobstructed—uneven terrain is fine, but walls, hills, and so on will block it. The corridor remains for 28 hours. Depletion: 1 in 1d20')
    elif artifact_roll == 286:
        print('Salvage Pack \n Level: ', level,' + 1 Form: Synth pack with attached devices Effect: This pack’s mouth can be loosened to open as wide as 6 feet (2 m) in diameter. It is larger on the inside than on the outside thanks to transdimensional outpocketing, and it can contain up to 5 tons (4.5 t) worth of material. Depletion: 1 in 1d100 (check each time something is added to the pack; on depletion, all objects are expelled from the pack)')
    elif artifact_roll == 287:
        print('Seated Lift \n Level: ', level,' Form: A series of fabric straps that open to form a seat like a swing Effect: When a person sits in the device, she can use a small dial on the right side to be lifted up to 3 feet (1 m) in the air. The device holds only one person at a time. While active, it gives a few inches in any direction when pushed, but it never moves more than that. Depletion: 1 in 1d20')
    elif artifact_roll == 288:
        print('Second Hand \n Level: ', level,' Form: A pair of skintight gloves made from synthetic material woven with circuitry Effect: Putting on the gloves causes them to merge with the wearer’s skin, and they can never be removed. The wearer has an asset on all tasks that involve perceiving by touch. Depletion: —')
    elif artifact_roll == 289:
        print('Second Skin \n Level: ', level,' + 1 Form: When not affixed to a creature, this looks like a mass of diaphanous fabric. On a creature, it is almost invisible. Effect: When stretched over a creature’s normal skin, this organic material adheres and conforms to its body shape. While wearing the second skin, the creature has an asset in Might defense tasks to resist poison and disease (eased by two steps if the artifact is level 6 or higher). Depletion: 1 in 1d100 (checked each day while the skin is worn)')
    elif artifact_roll == 290:
        print('Shadowpath blade \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Medium-length sword Effect: This sword is made from an extension of a flaw in the dimension held open by a power source in the hilt. As such, the cutting “edge” is actually the thin edge of another dimension, giving it nearly unequaled sharpness. The blade inflicts 2 additional points of damage. This use does not require a depletion roll. The blade can also be used to form a portal, which allows the user to travel from their current location to someplace else where they previously used this artifact ability (or to a place that a previous owner used it) through an artificial otherspace realm that connects these paths. The travel takes one action, and this use requires a depletion roll. Upon depletion, the sword loses its ability both to allow travel and to function as a weapon. Depletion: 1 in 1d20')
    elif artifact_roll == 291:
        print('Shatter Wand \n Level: ', level,' + 4 Form: Broad, 8-inch (20 cm) synth stick with a single button Effect: This weapon realigns the molecular structure of a living target, in effect crystalizing the flesh. It works at long range but has no visible manifestation (no ray or projectile). The device inflicts damage equal to its level. Further, if the target is slain by the device, the target shatters, exploding in an immediate radius with crystalline shrapnel that inflicts 3 points of damage. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d20')
    elif artifact_roll == 292:
        print('Shock Manacles \n Level: ', level,' + 1 Form: Lightweight pair of metal or synth manacles Effect: Not only are these restraints binding, but they also inflict their level in damage whenever the wearer attempts to break free. Once active, the manacles operate for 28 hours. Depletion: 1 in 1d20')
    elif artifact_roll == 293:
        print('Silver Ichor \n Level: ', level,' + 4 Form: An injector filled with silvery liquid Effect: To activate this device, the user must inject the liquid into her body. An hour after activation, the liquid spreads throughout her system and links her to the datasphere, giving her complete control over her body, with several benefits. She can control her heart rate, breathing, and any other body functions she chooses. Her Might Edge increases by 1 as the device allows her to coax more energy from her body and achieve greater control over its systems. If she becomes diseased, poisoned, or sickened by a harmful environmental effect such as radiation, she can use an action to flush the toxin from her body. She can use an action to adapt her body to extreme heat or cold. While adapted, she reduces damage from cold or fire by 2 points. Finally, whenever she makes a recovery roll, she can roll twice and use the higher result. Depletion: —')
    elif artifact_roll == 294:
        print('Skill Bud \n Level: ', level,' Form: Organic pod, almost like a small, hemispherical bit of fruit. Once grafted to a host, it takes on the appearance of the host’s flesh. Effect: This pod grafts onto any living host (must be near the brain) and injects complex chemicals that alter brain and muscle functions. This grants the host training in one (predetermined) skill, or two skills if the artifact is level 5 or higher. Depletion: —')
    elif artifact_roll == 295:
        print('Skin of Fire Sloughing \n Level: ', level,' + 1 Form: When not affixed to a creature, this looks like a mass of diaphanous fabric. On a creature, it is almost invisible. Effect: When stretched over a creature’s normal skin, this organic material adheres and conforms to its body shape. While wearing the skin, the creature gains +5 Armor against damage inflicted by fire. Depletion: 1 in 1d100 (checked each time the character sustains fire damage)')
    elif artifact_roll == 296:
        print('Skin of Water Breathing \n Level: ', level,' + 1 Form: When not affixed to a creature, this looks like a mass of diaphanous fabric. On a creature, it is almost invisible. Effect: When stretched over a creature’s normal skin, this organic material adheres and conforms to its body shape. While wearing the skin, the creature can breathe normally both in air and underwater, and is not adversely affected by extreme pressure or sudden changes in pressure. Depletion: 1 in 1d100 (checked each day skin is used)')
    elif artifact_roll == 297:
        print('Skull blaster \n Level: ', level,' + 2 Form: Headband with an attached cylinder that runs along the left side of the wearer’s head Effect: This device emits a brilliant beam of focused light up to very long range. Targets hit by the beam take damage equal to the artifact’s level. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d20')
    elif artifact_roll == 298:
        print('Sky Chariot \n Level: 8 Form: A large hollow head, about 30 feet (9 m) in diameter, made from stone. Characters can access the interior by crawling through its mouth. The inside has enough space to hold up to eight human-sized people. The head’s interior features comfortable cushions on its floor and several cabinets containing foodstuffs, drinks, and toiletries that replenish each day. Effect: The device hovers 3 feet (1 m) above the ground and remains there until activated by the pilot. A potential pilot must be inside the head and wear a headband that is connected to the device by a thick cord. The pilot can then fly the head by making Intellect rolls (level 3) each round. In combat, the pilot can use an action to move the head a long distance reach round. On extended trips, the head can fly up to 60 miles (97 km) per hour and reach an altitude of 5 miles (8 km). Depletion: 1 in 1d20')
    elif artifact_roll == 299:
        print('Amber Stasis Level: ', level,' Form: A A long device with narrow metal tube Effect: When the user activates the device and succeeds at a level 3 Intellect-based task, she can attempt to trap a creature within long range inside a block of amber. Only creatures whose level is equal to or lower than the artifact’s level can be targeted. A creature successfully caught is preserved in perfect stasis until the encasing amber is broken away (the amber has 10 points of health per level of the artifact). Depletion: 1 in 1d20')
    elif artifact_roll == 300:
        print('Slugspitter \n Level: ', level,' + 1 Form: Long device with a narrow metal tube Effect: With a quiet sound like a puff of air, this device fires a tiny slug of metal up to long range (very long range if the artifact is level 6 or higher). It inflicts damage equal to the artifact’s level. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1–2 in 1d100')
    elif artifact_roll == 301:
        print('Slugspitter (Heat) \n Level: ', level,' + 2 Form: A long device with a narrow metal tube Effect: With a quiet sound like a puff of air, this device fires a tiny slug of metal with a range of 200 feet (61 m). It inflicts damage equal to the artifact level. A slug that strikes and does damage then grows very hot, so on the next round, the target automatically suffers the same amount of damage again from the heat. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some glaives and jacks have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1–3 in 1d100')
    elif artifact_roll == 302:
        print('Slugspitter  (Inorganic Phasing)  \n Level: ', level,' + 2 Form: A long device with a narrow metal tube Effect: With a quiet sound like a puff of air, this device fires a tiny slug of metal with a range of 200 feet (61 m). It inflicts damage equal to the artifact level, but since the slug phases through inorganic matter, it ignores Armor. In fact, the slug can even pass through walls unhindered, although targeting through a solid wall provides its own challenges. This weapon cannot harm inorganic targets (it passes through them). This device is a rapidfire weapon, and thus can be used with the Spray or Arc Spray abilities that some glaives and jacks have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1–4 in 1d100')
    elif artifact_roll == 303:
        print('Slugspitter (Mass Increasing) \n Level: ', level,' + 2 Form: A long device with a narrow metal tube Effect: With a quiet sound like a puff of air, this device fires a tiny slug of metal with a range of 200 feet (61 m). Since the slug increases its mass as it travels, it inflicts damage equal to the artifact level + 4. This device is a rapid-fire weapon, and thus can be used with the Spray or Arc Spray abilities that some glaives and jacks have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d20')
    elif artifact_roll == 304:
        print('Smart Boots \n Level: ', level,' + 1 Form: A pair of boots Effect: When activated, the boots allow the wearer to move across rough or difficult terrain, walk up walls, and even walk across liquids without penalty to movement for one hour. In a low gravity or zero gravity environment, the boots adhere to a surface and allow the wearer to walk normally. Depletion: 1 in 1d100')
    elif artifact_roll == 305:
        print('Smart Cape \n Level: ', level,' + 1 Form: Collared cape Effect: It takes one round to slip into the cape, pull up the collar, and seal the front. When activated, the cape provides +3 points of Armor that protect against damage from fire, electricity, radiation, and most forms of energy. Depletion: 1 in 1d100')
    elif artifact_roll == 306:
        print('Smart Gloves \n Level: ', level,' + 2 Form: Gauntlets Effect: When activated, the gloves allow the wearer to safely handle objects that would otherwise inflict damage if held, such as burning items or items dripping with acid, or to safely insert hands up to the elbow into liquid mediums that would otherwise inflict damage, such as lava. Depletion: 1 in 1d100')
    elif artifact_roll == 307:
        print('Smart Helm \n Level: ', level,' + 1 Form: Bulky silvery globe that encloses the wearer’s head Effect: When activated, the helm allows the wearer to breathe in any medium, including water, a poisonous atmosphere, or even the airless void for one hour. Depletion: 1 in 1d100')
    elif artifact_roll == 308:
        print('Smoke Helm \n Level: ', level,' Form: A hood or helmet designed to be worn on the head Effect: When worn, the helmet synthesizes a telepathic smoke from the wearer’s breath. If someone else inhales the smoke, they feel everything the wearer feels for one hour. (If two people wear the helmets, they can “trade” sensations with each other for one hour.) Depletion: 1 in 1d20')
    elif artifact_roll == 309:
        print('Snail Shell \n Level: ', level,' Form: A sculpted snail with a hollow, insulated shell made of expandable, malleable metal Effect: Up to two cyphers can be placed within the snail’s shell, as long as each is no larger than a typical handheld device. Thanks to the specially designed material of the shell, these cyphers do not count against a character’s cypher limit. The metal shell has a built-in lock that requires a spoken password to open (set by the user). It’s very difficult to tell from looking at the shell that it is anything more than a whimsical object. Depletion: 1 in 1d20 (check each time a cypher is added to the shell)')
    elif artifact_roll == 310:
        print('Snipewand \n Level: ', level,' + 4 Form: Long handheld device with a tiny plate of glass Effect: Sighting through the glass, the user can view targets up to 1 mile (1.5 km) away as if they were just a short distance away. The user must have a direct line of sight to the target—the device cannot penetrate barriers or go around corners. Once a target is sighted, the device can almost silently fire a tiny slug of metal at the target. The slug inflicts damage equal to the artifact’s level. Depletion: 1 in 1d20')
    elif artifact_roll == 311:
        print('Snuffler \n Level: ', level,' + 2 Form: A 3-foot-tall (1 m) hairless, nearly mindless creature lacking any distinctive features beyond a gaping orifice in its head Effect: This is a level 1 creature. It accompanies you and obeys your commands, but it’s not capable of attacking. As a level 1 creature, it has a target number of 3 and 3 health. If you wave something in front of the snuffler’s orifice, the creature inhales and memorizes the scent. It can then unerringly track the scent until it gets a good sniff of something else. If the creature is reduced to 0 health, it is instantly slain. Depletion: —')
    elif artifact_roll == 312:
        print('Solid Light Bindings \n Level: ', level,' + 3 Form: Small metal cylinder Effect: When activated, bonds of solid light entwine around a creature the cylinder touches. It is possible to use this as a weapon (even at a range, although it must be immediate), but successfully capturing an opponent requires two attack rolls—one to touch them with the cylinder and the other to ensure they are ensnared. The bonds last for up to 28 hours. Depletion: 1 in 1d20')
    elif artifact_roll == 313:
        print('Solid Light Helm \n Level: ', level,' + 1 Form: A metal collar Effect: When the device is activated, the wearer’s head is encased in solid light. If anything specifically attacks the wearer’s head, he has 12 Armor. Moreover, he has breathable air while the helmet is active. Depletion: 1 in 1d20 (check once each day)')
    elif artifact_roll == 314:
        print('Sonic Blade \n Level: ', level,' + 1 Form: A dagger covered in glowing tracery Effect: This blade functions as a normal dagger except that when used to make an attack, it vibrates at an ultrasonic frequency that lets it punch through physical armor and other defenses. The weapon inflicts 2 additional points of damage. Depletion: —')
    elif artifact_roll == 315:
        print('Soothing perimeter  \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Metallic wire on a spindle that can be rolled out to surround an area up to a very long distance in diameter Effect: It takes several minutes to deploy the wire, or longer if the user tries to do it without being obvious. Thereafter, all creatures in the surrounded area feel a soothing sense of calm for up to 28 hours. Becoming angry or violent requires a successful Intellect roll with a difficulty equal to the level of the artifact. If the wire is severed during this period, all creatures in the area suffer 1 point of Intellect damage (ignores Armor). If deployed to surround a ranked community or horde, conflict between it and another community or horde becomes almost impossible for one day. Depletion: 1 in 1d20')
    elif artifact_roll == 316:
        print('Sphere Thrower \n Level: ', level,' + 1 Form: Metal rod with a clawlike end Effect: When activated, the clawlike end of the rod fills with a ball of roiling energy. If used as a melee weapon, this is a medium weapon that inflicts 2 additional points of damage from the energy, but this strike exhausts the energy and it must be reactivated. More devastatingly, the sphere can be hurled from the rod up to long range, where it bursts in an immediate radius and inflicts damage equal to the artifact level. Depletion: 1 in 1d20')
    elif artifact_roll == 317:
        print('Spider Harness \n Level: ', level,' + 1 Form: Harness-like belt Effect: When activated, eight spindly, jointed, and metallic legs emerge from the belt and lift the wearer a few feet off the ground for a number of minutes equal to the artifact’s level. The legs give the wearer a long movement speed on the ground and a short movement speed when climbing on walls or ceilings. In addition, they provide an asset in any task involving running, balance, staying upright, climbing, and so on. Depletion: 1 in 1d100 ')
    elif artifact_roll == 318:
        print('Spine Armor \n Level: ', level,' + 3 Form: A synth belt with a toggle Effect: When activated, a spine injects the wearer with a mutagen, causing the wearer’s skin to grow a mass of protective spines over the course of a few minutes, providing +3 Armor without any penalties associated with wearing armor. It can’t be worn with other normal armor, which would be pierced and torn by the spines. Whenever a character wearing spine armor makes a successful Speed defense roll against a melee attack, the attacker takes 3 points of damage from the piercing spines. The spine armor lasts for four hours, after which the spines become brittle and break off. Depletion: 1 in 1d20')
    elif artifact_roll == 319:
        print('Spinneret Ring  \n Level: ', level,' Form: Clear stronglass locket ring that houses a tiny biomechanical spider Effect: When the stronglass is lightly stroked, the spider inside reacts by releasing a thin, incredibly strong steel cord through a small hole in the stronglass. Each cord is about 20 feet (6 m) long. If firmly attached to something, the cord can hold up to 300 pounds (136 kg). Additionally, it can be used as a snare, a whip, or a similar device to cause damage equal to the artifact level + 2. Depletion: 1 in ', level,' for the spinner ability (after depletion, the ring can still be worn)')
    elif artifact_roll == 320:
        print('Spirit Call \n Level: ', level,' + 2 Form: A metal glove Effect: While worn, the user activates the glove by touching the face of a dead creature. If the creature’s head is largely intact, the glove imbues the head with the semblance of life for ', level,' minutes. Although not alive, the head animates, and, if it still has a mouth, it can speak and answer questions put to it based on what it knew when it was alive. The head remains cooperative only until the last minute of the duration begins. At that point, the head realizes it is dead and spends the remaining time weeping and screaming for help. This artifact can affect a particular corpse only one time. Depletion: 1 in 1d10')
    elif artifact_roll == 321:
        print('Stability Spike \n Level: ', level,' + 3 Form: A 6-foot (2 m) tall collapsible metal tripod with a central tube that extends a spike into the earth when deployed Effect: It takes two rounds to assemble and set up this device. Once set up, it requires an action to activate and then another round for the powered internal spike to penetrate the ground. (The spike can penetrate any surface whose level is less than or equal to its own, but it cannot penetrate force fields.) When activated, this device stabilizes the ground and any structures built on the ground within very long range for one hour. This reduces shaking, swaying, or vibration, potentially keeping a tower or buildings caught in an earthquake from collapsing. If deployed to protect from a ranked earthquake or other earth-shaking threat, the rank of that threat is decreased by 1. Depletion: 1 in 1d10')
    elif artifact_roll == 322:
        print('Stasis Pod \n Level: ', level,' Form: A device attached to a rounded synth chamber just large enough to hold a human Effect: A person willingly placed inside this chamber remains alive and in perfect stasis until removed. Depletion: 1 in 1d100 (check every century a subject is in stasis)')
    elif artifact_roll == 323:
        print('Stasis Projector \n Level: ', level,' + 4 Form: Handheld device Effect: This device projects a wide ray at a target that is already immobile (perhaps a creature that is bound or willing). The target is placed in safe suspended animation within an energy sheath. The sheath floats about 4 feet (1 m) off the ground and can be pushed along easily, almost as if it were weightless. The sheath lasts for 28 hours and is impervious to attacks of a level lower than the artifact that created it. Depletion: 1 in 1d10')
    elif artifact_roll == 324:
        print('Stellar loop \n Level: ', level,' + 3 Minimum Crafting Level: 7 Form: Metallic staff with a hollow loop at the end whose inner edge always shines with bright light Effect: This artifact functions as a medium melee weapon. Unless covered, it also gives off bright light within immediate range. In addition, the wielder can call upon the following effects. Beacon: If the illuminate function is used over the course of one community action to rally defenders, the community or horde benefiting from the use inflicts +1 point of damage during that interaction. Combust: If the wielder uses the artifact to strike a foe in melee, they can inflict additional damage to the target equal to the artifact level. Illuminate: The user greatly increases the light from the loop, illuminating everything within long range in bright light (and dim light for an equal distance beyond that) for about an hour. Ray: The wielder makes a long-range attack with a focused blast of light from the loop, inflicting damage equal to the artifact level and blinding the target for one round. Depletion: 1 in 1d20')
    elif artifact_roll == 325:
        print('Stimulation Stem \n Level: ', level,' Form: Biological tube synthesized from living cellular tissue, with a toothed “mouth” at each end Effect: This 3-foot-long (1 m) tube can be attached to the flesh of two biological, sentient creatures via the ever-grasping mouths. Once the teeth sink in, the tube is attached for five minutes (pulling it off before that kills the cellular tissue and renders the device useless). If both creatures are in agreement, one of them can siphon ', level,' Might points from the other via the tube. If the device senses that one or both participants are not amenable to the exchange, it draws ', level,' Might points from both creatures. When not pulled tight, the tube self-coils for easy carrying. Depletion: 1 in 1d20')
    elif artifact_roll == 326:
        print('Strangelight Torch \n Level: ', level,' + 1 Form: Glowing sphere on the end of a synth rod Effect: This device illuminates the immediate area regardless of barriers. That is to say, it casts no shadows, and every nook and cranny in the area is well-lit. Depletion: —')
    elif artifact_roll == 327:
        print('Structural Extruder \n Level: ', level,' + 2 Form: A series of short, rounded tubes and hoses about 12 inches (30 cm) long connected to a device that can be carried or worn as a pack Effect: When activated, it produces a solid piece of amber-colored crystal over the course of a minute that can take one or two simple shapes: a plank up to 10 feet (3 m) long or a plane up to 10 feet (3 m) by 10 feet (3 m) that could be used as a floor, a wall partition, a ramp, etc. If the structural extruder is used as part of the crafting process for building a commonplace or numenera structure, the assessed difficulty for the task is lowered by one step. Depletion: 1 in 1d10 (check per week of use)')
    elif artifact_roll == 328:
        print('Stunner \n Level: ', level,' Form: Handheld device that looks like a metal sphere with a handle Effect: When activated, this device fires a beam of energy to short range (long range if the artifact is level 6 or higher) that stuns the target for one round, making them lose their next action. This device is a rapid-fire weapon and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d20')
    elif artifact_roll == 329:
        print('Suspensor Belt \n Level: ', level,' + 1 Form: Belt with a number of brass disks affixed to it Effect: This belt negates gravity enough to make all movement easier, granting the wearer a +1 bonus to their Speed Edge. Alternatively, a grossly obese creature could wear the belt simply to function normally. The belt supports up to 300 pounds (136 kg), or 500 pounds (227 kg) if the artifact is level 6 or higher. Depletion: —')
    elif artifact_roll == 330:
        print('Synthsteel Shield \n Level: ', level,' Form: Synth shield Effect: This shield is far hardier and still somewhat lighter than Ninth World smithing techniques could ever manage with steel. It grants an additional +1 bonus to Speed defense rolls in addition to the asset that shields normally grant. Depletion: —')
    elif artifact_roll == 331:
        print('Tectonic emitter \n Level: ', level,' + 4 Minimum Crafting Level: 8 Form: Six-foot (2 m) tall collapsible metal tripod with a central tube on a swivel mount Effect: It takes two rounds to assemble and set up this device. Once set up, it requires ', level + 1,'rounds to activate and to allow the power to build to sufficient levels before it can be used. When used (another action), the device affects inert matter within very long range, causing the ground to tremble and shift in a way that damages structures (and installations) built there. The effect destroys structures of level 2 or less, inflicts major damage on level 3 structures, and inflicts minor damage on level 4 and 5 structures. Higher-level structures are not harmed. If used against a ranked community, the artifact inflicts 4 points of damage against the community’s infrastructure but is then automatically depleted. Depletion: 1 in ', level,' or automatic')
    elif artifact_roll == 332:
        print('Teeth of the horde \n Level: ', level,' + 2 Minimum Crafting Level: 6 Form: Six-foot (2 m) tall collapsible metal tripod with a central barrel-shaped core Effect: It takes two rounds to assemble and set up this device. Once set up and activated, the device sprays a fine rain of metallic particles, covering an area a long range in diameter. Over the course of the following hour, particles (which are nanite devices) that fell on inert ground reorganize the ground beneath them into level 1 combat automatons. When complete, a horde of about a hundred automatons emerges. They can be directed to attack or defend as the user wishes for one hour or until they are destroyed, whichever occurs first. If deployed against a ranked community or horde, treat the automatons as a rank 1 horde for that community action. Depletion: 1 in ', level,'')
    elif artifact_roll == 333:
        print('Telepathic Wire \n Level: ', level,' + 2 Form: A metallic wire on a spindle that can be rolled out to surround an area up to a very long distance in diameter Effect: It takes several minutes to deploy this device, or longer if trying to place it so it is not obvious. When deployed, all creatures within the area gain the ability to telepathically speak with other creatures they can see within short range for up to an hour. Should the line be broken, all creatures in the area suffer 1 point of Intellect damage (ignores Armor). If deployed to surround a ranked community or horde, the rank of the target increases by 1 for the duration due to an enhanced ability to communicate. Depletion: 1 in 1d20')
    elif artifact_roll == 334:
        print('Telescopic Beast \n Level: ', level,' Form: Pocket-sized cube that unfolds into a box-shaped automaton about 1 foot by 1 foot (0.3 m by 0.3 m) with four telescoping legs. Effect: Once the creature is unfolded, the user may control it via voice for 28 hours. It can understand and carry out simple commands such as moving laterally, staying stationary, reforming into a cube, and telescoping up and down (it can raise its body up to 10 feet [3 m] with a single person standing on top of it). Action to unfold. Depletion: 1 in ', level,' for the telescopic abilities (after depletion, the creature continues to follow the other voice commands)')
    elif artifact_roll == 335:
        print('Telltale Glass \n Level: 1 Form: Clear drinking glass Effect: This glass turns red if anything poisonous is put into it, even in very small quantities. Depletion: —')
    elif artifact_roll == 336:
        print('Temporal Armor \n Level: ', level,' + 2 Form: Heavy armor of synth Effect: This heavy armor has a field around it that is triggered when the wearer wishes (requiring an action) and lasts for ten minutes. During this time, the field causes incoming attacks to potentially stop suddenly or slow down before they strike. This adds +2 to the wearer’s Armor. Depletion: 1 in ', level,'')
    elif artifact_roll == 337:
        print('Temporal Maul \n Level: ', level,' + 1 Form: A metal and synth device placed at the end of a metal haft, turning it into a heavy weapon Effect: This time-displacement device constantly shifts back and forth through moments in time, making it very difficult to defend against. All attacks made with the maul have an asset that decreases the difficulty of the attack by one step. Depletion: 1 in 1d100')
    elif artifact_roll == 338:
        print('Temporal quickener \n Level: ', level,' + 3 Minimum Crafting Level: 6 Form: Two-foot (60 cm) diameter synth sphere with attached wires Effect: It takes two rounds to assemble and set up this device in a fixed location. Once set up, it requires an action to activate. Thereafter, the device produces a temporal bubble a long distance in diameter centered on the artifact that lasts for 28 hours relative to those outside the bubble. Inside the bubble, time moves slightly faster so that about 38 hours seem to pass. Effectively, all creatures in the bubble gain one extra turn for every four turns they’d normally take, and they can take one extra tenhour recovery roll. If the device is used continuously over several days, crafting times relative to the outside world can be shortened by about 25 percent. Depletion: 1 in 1d20')
    elif artifact_roll == 339:
        print('Temporary Wing \n Level: ', level,' Form: A body harness with a few controls Effect: This device instantly releases wide synth wings stretched on either side of a rigid frame that together reach almost a short distance across. The wings allow a wearer to fly in any direction up to a short distance as an action each round, or glide horizontally or downward up to a long distance each round as part of another action. After one hour or upon deactivation, the wings retract. Depletion: 1 in 1d20')
    elif artifact_roll == 340:
        print('Tendril Graft \n Level: ', level,' Form: Whip-like length of organic material similar to flesh Effect: This graft attaches to the host’s spinal column so that it can be controlled like a limb. The host can use it like a whip (a light weapon) even if their hands are full. They can also use it like a prehensile tail that can hold their weight (assuming they are roughly human-sized) or another object. At level 6 or higher, the tendril provides an asset on attacks made with it. Depletion: —')
    elif artifact_roll == 341:
        print('Tentacle Harness (Bladed) \n Level: ', level,' + 2 Form: A heavy body harness equipped with two 15-foot (5 m) segmented metal tentacles that each end in a metal blade Effect: Putting on the harness allows the wearer to control the tentacles as if they were extra limbs. The tentacles are fully prehensile and can be used to make attacks (each tentacle is a medium weapon) while the wearer’s normal arms are free. The wearer is still limited by the normal number of actions she can take in a round. Depletion: —')
    elif artifact_roll == 342:
        print('Tentacle Harness (Clawed) \n Level: ', level,' + 2 Form: A heavy body harness equipped with two 15-foot (5 m) segmented metal tentacles that each end in a grasping claw Effect: Putting on the harness allows the wearer to control the tentacles as if they were extra limbs. The tentacles are fully prehensile and have the same functionality as if they were the wearer’s arms. Depletion: —')
    elif artifact_roll == 343:
        print('Tentacle Helmet \n Level: ', level,' + 3 Form: A smooth, lightweight synthsteel helmet with an octagon-shaped device on the back Effect: When activated, a 9-foot (3 m) tentacle comes out of the device. This tentacle resembles that of a very large living creature, but it’s also translucent, as it modulates between phase states. The tentacle can be used to pick up or manipulate small objects, push buttons, and so forth, but it has very little strength. It can’t pick up an object that weighs more than 10 pounds (5 kg) and could never be used to make an effective attack. However, its most remarkable feature is that because of its pandimensional nature, the tentacle can move through energy fields, including solid force fields, as if they were not there. Once activated, the tentacle lasts for ten minutes. Depletion: 1 in 1d10')
    elif artifact_roll == 344:
        print('The Death by Angles \n Level: ', level,' + 2 Form: Handheld device Effect: This object can be used as a weapon that fires a beam of energy up to long range. The beam always bounces off of inorganic materials but not living tissue or organic materials. Thus, the weapon can be used only against living targets (or an organic nonliving target). However, the beam is harmless unless it ricochets off a surface first. Strangely, the beam never ricochets in the way that a character expects, so attack rolls with the weapon are two steps more difficult than normal. The beam inflicts 7 points of damage. Particularly skilled users discover that if the beam reflects off of more than one surface, the damage increases. For every additional surface, the difficulty increases by one step, but the damage increases by 3 points (maximum 19 points). Depletion: 1 in 1d20')
    elif artifact_roll == 345:
        print('Thought Storage \n Level: ', level,' + 2 Form: Long organic rod with a number of crystal nodules Effect: The user can project fifteen minutes worth of mental images (real or imagined) and words that can then be replayed by anyone activating the rod again. Depletion: 1 in 1d20')
    elif artifact_roll == 346:
        print('Thoughtlight \n Level: ', level,' Form: A small synth box that lights up on one side Effect: When touching (or practically touching—through clothing, for example) a living, thinking creature, the thoughtlight gives off light like a torch, powered by the brain waves of the creature. The moment the user stops thinking (which is to say, is very likely dead), the light goes out. Depletion: — ')
    elif artifact_roll == 347:
        print('Thunder Boots \n Level: ', level,' + 4 Form: A pair of boots Effect: When activated, the boots allow the wearer to lift off the ground on a jet of flame, granting the wearer the ability to fly with long movement for a number of minutes equal to the artifact’s level. Depletion: 1 in 1d20')
    elif artifact_roll == 348:
        print('Thunder Cannon \n Level: ', level,' + 4 Form: Large, heavy tube with a bell-shaped end and a number of controls Effect: This massive device can barely be held or carried by a single person. When activated, it emits a 50-foot (15 m) wide cone of pure sonic force out to long range. Any creature in that area is knocked prone and stunned for one round, losing its action. Unfixed items the size of a human or smaller are toppled and/or moved at least 5 feet (1.5 m). Larger objects might also be toppled. Depletion: 1 in 1d10')
    elif artifact_roll == 349:
        print('Thunder Vocalizer \n Level: ', level,' + 2 Form: A choker with a mechanical device that sits atop the user’s throat Effect: This device turns the user’s words into powerful weapons. When it is activated, the user speaks and the device throws the sound to a spot within short range. A thunderous boom erupts from that spot and inflicts 4 points of ambient damage to everything within an immediate distance. Depletion: 1 in 1d20')
    elif artifact_roll == 350:
        print('Timeslip Duplicator \n Level: ', level,' + 3 Minimum Crafting Level: 7 Form: Bulky metallic harness with many dials and switches Effect: For up to one hour, the user is joined by four duplicates of the user from four parallel timelines. The duplicates look and act similar to the user, but they take their direction from the user and act as level 3 followers. (A level 3 follower usually has three modifications that can benefit the subject they follow. In this case, a duplicate can ease the user’s attacks, Speed defense rolls, and one non-combat skill that the user is trained or specialized in.) The duplicates usually do not have access to any special abilities or equipment possessed by the user. At the end of the hour, all the duplicates (wherever they are, living or dead) merge with the user, who gains their memories. Depletion: 1 in 1d10')
    elif artifact_roll == 351:
        print('Tongue Snake \n Level: ', level,' + 2 Form: Snakelike creature grafted onto a user’s tongue Effect: The creature must be surgically and permanently attached (a task equal to the artifact level), a procedure that takes about an hour in a skilled chiurgeon’s hands. Once the serpent is attached to the user’s tongue, he can control it and attack with it. The serpent can attack targets within an immediate distance and inflicts poison damage equal to the artifact level (ignores Armor). Depletion: —')
    elif artifact_roll == 352:
        print('Torment Wand \n Level: ', level,' + 1 Form: Long black rod of metal and synth Effect: The user can attack anyone within short range, inflicting horrendous pain. The victim moves one step down the damage track and cannot take actions. This lasts as long as the victim is within range and the user spends an action each round to continue the attack. Torment wands of level 6 or higher can  continue to move the victim down the damage track each round (with a new Might defense roll each round to resist), which means that after three rounds, the target is dead. Depletion: 1 in 1d10')
    elif artifact_roll == 353:
        print('Toxic Fogger \n Level: ', level,' + 2 Form: Large backpack-sized device with a metallic wand connected with hoses and wires Effect: When activated, the toxic fogger produces a prodigious amount of yellowish fog that lasts an hour and moves with the prevailing air in a cloud a very long distance across. Creatures exposed to the fog for several minutes take damage from poison equal to the artifact’s level. If deployed against a ranked community or horde, 3 points of damage are inflicted to the target’s health during one community action. Depletion: 1 in 1d10')
    elif artifact_roll == 354:
        print('Tracer Nodule \n Level: ', level,' + 1 Form: A small crystal Effect: When activated, the crystal adheres to any surface and transmits its location (distance and direction) to the user via a mental connection. The connection has a range of 100 miles (160 km) and lasts for a number of days equal to the artifact’s level. Depletion: 1 in 1d20')
    elif artifact_roll == 355:
        print('Transdimensional Blade \n Level: ', level,' + 2 Form: Broadsword Effect: When activated, this blade exists on multiple levels of reality at once. The wielder can strike foes (or objects) that are out of phase or resistant to attacks or damage due to their ultraterrestrial or transdimensional nature as if they were normal targets. Each activation allows for a single attack, but activation is not an action. Depletion: 1 in 1d20')
    elif artifact_roll == 356:
        print('Transdimensional Ray Projector \n Level: ', level,' + 2 Form: Handheld device with a number of controls and a wide dish at one end Effect: This long-range weapon fires a beam of energy that exists on many levels of reality at once. It inflicts damage equal to its level, and it harms creatures that can be affected only by transdimensional effects (such as an abykos). This device is a rapid-fire weapon and thus can be used with the Spray or Arc Spray abilities that some characters have, but each “round of ammo” used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d20')
    elif artifact_roll == 357:
        print('Transformation Chamber \n Level: ', level,' + 3 Form: Complex device 9 feet (3 m) tall and 10 feet (3 m) wide with a central open cylindrical area Effect: The subject must stand within this device when it is activated. Doing so transforms the subject over ten painful minutes into another organic form of approximately the same size, chosen upon activation. The form can be (but does not have to be) extremely specific, but it must be well known to the operator of the device. For example, a human could be changed into a specific margr, if that margr is known. The transformation is permanent, although another activation can be used to change the subject back. Depletion: 1 in ', level,'')
    elif artifact_roll == 358:
        print('Transposing visor \n Level: ', level,' Minimum Crafting Level: 3 Form: Synth helm with transparent eyepiece Effect: The user swaps position with a target of roughly similar size that the user can see within very long range. Depletion: 1 in 1d20')
    elif artifact_roll == 359:
        print('Traveling Coiffeur \n Level: ', level,' Form: Large bubble-shaped helm that fits over a person’s head and houses a complex chamber inside Effect: Provides the user with the opportunity to completely change her hair style (including facial hair) via a complicated contraption of electronic blades, ray emitters, and modified hairspiders. A control panel along the side of the device shows myriad style options, from completely bald to long, spiderspun tresses in various colors. The user must choose her desired option ahead of time (28 hours prior to being used) to allow the device time to prepare. Depletion: 1 in 1d20')
    elif artifact_roll == 360:
        print('Trigger Trap \n Level: ', level,' Form: Small, rather complex box of metal sensor plates, wires, and controls Effect: A cypher of virtually any kind can be added to this trigger device to turn it into a trap. First, the cypher is added to the device (an Intellect task with a difficulty of 4), and then various wires and plates are affixed permanently to something—a nearby surface, door, hinge, and so on. When the trap is triggered, the cypher is activated, so people often use straightforward cyphers such as a detonation, a ray emitter, or a similar device. The trigger can react to a specified movement within 3 feet (1 m)—a door opening, a creature or object moving past the artifact, and so on. The higher the level of the device, the more sophisticated the trigger. For example, a level 4 artifact’s trigger might be based on a creature’s size or weight, a level 5 artifact can trigger based on a specific type of creature, and a level 6 artifact can trigger based on recognizing an individual creature. Depletion: Automatic')
    elif artifact_roll == 361:
        print('Trio \n Level: ', level,' + 2 Form: A metal rod with a splay of three prongs on the end Effect: When activated, this fires three rays at once up to long range, each inflicting damage equal to the artifact level. Unless the target is very large, the rays never strike the same target, but instead potentially strike three targets standing near each other. Roll separately for each attack. Depletion: 1 in 1d10')
    elif artifact_roll == 362:
        print('Truth Seeker \n Level: ', level,' + 1 Form: Small synth square Effect: When affixed to a user’s forehead (perhaps with a headband), this device allows him to sense whether someone speaking to him is lying. The speaker must be within immediate range and must be speaking in a language that the wearer understands. Depletion: 1 in ', level,'')
    elif artifact_roll == 363:
        print('Tunneling Gauntlets \n Level: ', level,' + 1 Form: An oversize pair of metallic gauntlets with broad nails Effect: It takes one round to slip into the gauntlets. When activated, the gauntlets give a wearer an immediate burrowing speed for one hour. The wearer can burrow through most soils and even some stone, but not material whose level is equal to or higher than the artifact’s. A burrow leaves behind a 5 foot (1.5 m) diameter tunnel that remains stable for several hours. After that, such tunnels are subject to collapse. Depletion: 1 in 1d20')
    elif artifact_roll == 364:
        print('Twin Mirrors \n Level: ', level,' Form: Two 1-foot (0.3 m) diameter disks polished to a mirrorlike finish Effect: When a character looks into one mirror, he sees out the other and vice versa regardless of the distance that separates them. Depletion: —')
    elif artifact_roll == 365:
        print('Ultimate Grapnel \n Level: ', level,' + 2 Form: A length of 100 feet (30 m) of synth rope with a glowing sphere at one end Effect: The glowing sphere adheres to any surface or object until activated, which turns off the grip for one minute. Depletion: 1 in 1d100')
    elif artifact_roll == 366:
        print('Ultra Armor \n Level: ', level,' + 4 Form: A massive suit of metal and synth armor Effect: This heavy armor provides +5 to Armor rather than +3. It boosts the wearer’s strength and reflexes, increasing her Might Edge and Speed Edge by 1. She inflicts 2 additional points of damage with melee weapons and can jump twice as far as normal. The interior of the suit has its own oxygen, water, food supply, and environmental controls, sustaining the wearer in any environment indefinitely. Depletion of this artifact is not standard. When depletion occurs, it then provides only +4 to Armor. Depletion must continue to be checked. When it occurs again, the Might Edge and Speed Edge bonuses fail, and the damage and jumping boosts are lost. When depletion occurs again, the sustenance and environmental protections break down. When it occurs one last time, the suit then provides only +3 to Armor, but depletion need not be checked ever again, and the suit remains usable heavy armor. Depletion: 1 in 1d10 (checked each day worn)')
    elif artifact_roll == 367:
        print('Urchalis Mask \n Level: ', level,' + 2 Form: A distinctive mask of thin, curved strips Effect: This mask has no function unless worn by someone with at least some mechanical components—automatons, characters who Fuse Flesh and Steel, characters with a mech eye or a mechanical arm, and so on. (Simply wearing a mechanical device is not enough—it must be a permanent part of one’s body.) Such characters gain an asset when using their mechanical parts. This means that an allmechanical being like an automaton gains an asset on almost every task. Depletion: 1 in 1d20 (check each day worn)')
    elif artifact_roll == 368:
        print('Usurper \n Level: ', level,' Form: A small handheld device with two prongs extending from the end Effect: Activating the device causes the two prongs to fire at a target within immediate range. The target takes 1 point of electrocution damage, and if the target’s level is equal to or less than the artifact level, the user takes control of the target for one minute provided that the user and the target are within an immediate distance of each other. If either exceeds this distance, the target regains control of itself. Depletion: 1 in ', level,'')
    elif artifact_roll == 369:
        print('Vaulting Boots \n Level: ', level,' + 3 Form: Pair of boots inlaid with swirling fractals Effect: When the boots are activated as part of a move, the wearer can walk across empty air for a long distance each round for up to one minute. Depletion: 1 in 1d100')
    elif artifact_roll == 370:
        print('Viscous Fogger \n Level: ', level,' + 2 Minimum Crafting Level: 5 Form: Large backpack-sized device with a metallic wand connected with hoses and wires Effect: When activated, the viscous fogger produces a prodigious amount of bluish-grey fog, which emerges in a stream that fills an area a short distance across (and up to a long distance away) within a round. On the following round, the fog solidifies into a mass of sticky strands that entangle targets in the area. Entangled victims can’t move or take actions that require movement. Targets remain caught until they escape. If deployed against a ranked community or horde, the target’s rank is reduced by 1 during that community action and the viscous fogger is automatically depleted. Depletion: 1 in 1d10 or automatic')
    elif artifact_roll == 371:
        print('Vision Snake \n Level: ', level,' + 1 Form: A 3-foot-long (1 m long), flexible synth tube that can be extended to 8 feet (2.4 m) Effect: Looking through one end of this tube always allows the user to see through it to the other end, no matter how many twists or bends are in the tube. Depletion: —')
    elif artifact_roll == 372:
        print('Void Clamp \n Level: ', level,' Form: A metal bar with clamps on either end Effect: The device activates when the clamps are placed on any object that can fit inside a 20-foot (6 m) cube. The clamps bond with the object and make it weightless. Anyone can lift it and move it by gripping the handle. The device can be detached at any time (not an action), and the object regains its normal weight. Depletion: 1 in 1d20')
    elif artifact_roll == 373:
        print('Void Knife \n Level: ', level,' Form: A cylinder about the size of a knife handle Effect: When the device is gripped, an invisible blade extends out from the cylinder, allowing the wielder to use this device as a dagger. Depletion: —')
    elif artifact_roll == 374:
        print('Vox Scrambler \n Level: ', level,' Form: A mouthpiece secured with a thick strap that wraps around the head Effect: Whenever the user speaks while wearing this device, her words sound normal to those within immediate range, but they sound like gibberish to those farther away. Depletion: 1 in 1d100 (check once each day)')
    elif artifact_roll == 375:
        print('Vuechi \n Level: ', level,' + 1 Form: 4-inch (10 cm) silver sphere that hovers in the air Effect: Once activated, this device follows within 3 feet (1 m) of the user and attacks anyone or anything within immediate range that attacks them. A vuechi attacks with a burst of electricity (up to immediate range) that deals damage equal to the artifact level. Once activated, it functions for 28 hours. Depletion: 1 in 1d20')
    elif artifact_roll == 376:
        print('Water adapter \n Level: ', level,' + 3 Minimum Crafting Level: 6 Form: Streamlined pack-like device of metal and synth components Effect: When used in water, all creatures within long range that normally breathe only air can also breathe water for about an hour. The effect moves with and stays centered on the artifact for that period. If the use is coordinated with a ranked horde, the horde is treated as an aquatic horde for that community action, in addition to any other benefits the horde might possess. (An aquatic horde can attack communities and other hordes that are otherwise difficult or impossible to reach, on account of being located beneath the waves or using the water as a defensive feature.) Depletion: 1 in 1d20')
    elif artifact_roll == 377:
        print('Water Finder \n Level: 1 Form: A floating crystal that emits soft yellow light Effect: For one hour after it’s activated, the device vibrates whenever it is within a short distance of water. The closer the user gets to the water, the stronger the device vibrates. Depletion: 1 in 1d100')
    elif artifact_roll == 378:
        print('Water Skimmers \n Level: ', level,' Form: Black and silver covers for footwear sporting thick heels layered with hydrofuge hairs Effect: Anyone wearing these water skimmers over their regular footwear can stride quickly across liquid surfaces up to 20 feet (6 m) deep without sinking or getting wet. Wearing water skimmers while on land offsets the wearer’s center of gravity, increasing the difficulty of all movementbased actions by one step. Depletion: —')
    elif artifact_roll == 379:
        print('Wavesplitter \n Level: ', level,' + 3 Form: A metal-and-glass vehicle that is 12 feet (4 m) long, 8 feet (2 m) wide, and 6 feet (2 m) tall. It hovers about 3 feet (1 m) above the ground. The vehicle has an access hatch on the side. Inside there is a seat and control panel for the pilot, plus three more seats for passengers. Numerous portholes allow occupants to look outside. Effect: This vehicle can hold up to four characters and be piloted by someone who makes Intellect rolls (level 2) each round. In combat, the pilot can use an action to move the vehicle a long distance each round. On extended trips, it moves up to 40 miles (64 km) per hour. The vehicle provides a breathable atmosphere for everyone inside, allowing occupants to breathe normally for up to seven hours. The vehicle also sports six lamps on the exterior, one on each corner and two in front. The lamps light everything within a long distance. The pilot can shut off the lights or turn them on (not an action). Although the vehicle can travel over land, it excels underwater and can move through liquids at half its ground speed. The device can descend to depths of 5 miles (8 km). If it goes any deeper, roll for depletion each round, with depletion in this case indicating that the walls buckle and spring leaks. Depletion: 1–4 in 1d100')
    elif artifact_roll == 380:
        print('Weapon Graft \n Level: ', level,' Form: Blade, spiked ball, or hammer-like object made of hard, chitinous material or metal, with a sleeve of softer, fleshy material Effect: This organic graft fits over a hand or empty stump and affixes to the flesh of the host. The physical bond provides an asset to attacks with the grafted weapon. This is a medium weapon that inflicts 4 points of damage (6 points if the artifact is level 5 or higher). Depletion: —')
    elif artifact_roll == 381:
        print('Weapon Mount \n Level: ', level,' Form: A thin mechanical arm grafted to a person’s back Effect: The mount must be surgically and permanently attached (a task equal to the artifact level). The procedure takes about an hour in a skilled chiurgeon’s hands. Once attached, the mount can hold a light or medium weapon, and the user can attack with that weapon as if he was wielding it. Depletion: —')
    elif artifact_roll == 382:
        print('Wearable Workshop (Basic) \n Level: ', level,' + 1 Usable: Large pack-like device with multiple extending arms and tools Effect: This mobile workshop allows a crafter to work without a workbench and tools. The mobile workbench holds crafted objects in place and provides additional tools for a variety of needs, including not only crafting tasks but also tasks associated with investigation and analysis. The wearable workshop enables crafting tasks by providing appropriate tools; its extra limbs replicate a work surface. The wearable workshop is bulky, however, and any character wearing one is hindered in all Speed defense tasks. Depletion: 1 in 1d100 (check per week of use)')
    elif artifact_roll == 383:
        print('Wearable Workshop (Smart) \n Level: ', level,' + 3 Usable: Large pack-like device with multiple extending arms and tools Effect: As the basic wearable workshop, except the smart workshop has a limited capacity to improve the work of its maker, providing two assets to the assessed difficulty of any crafting task done predominantly while wearing the workshop. The wearable workshop is bulky, however, and any character wearing one is hindered in all Speed defense tasks. Depletion: 1 in 1d20 (check per completed crafting project)')
    elif artifact_roll == 384:
        print('Wheeled Porter \n Level: ', level,' + 1 Form: A triangular device 4 feet (1 m) high and 5 feet (2 m) across with treads, sporting metal rods on top Effect: Obeying verbal commands, this device will follow the user around, even over difficult terrain. It can create up to three force bubbles at the ends of the rods, which can contain up to 200 pounds (91 kg) of inanimate material or gear. The bubbles are only as large as they need to be to hold whatever they are given. Commanding the device to create or negate a force bubble is an action. Depletion: 1 in 1d100 (check each day)')
    elif artifact_roll == 385:
        print('Windrider \n Level: ', level + 1,'Form: 8-foot (2.5 m) long metallic wing Effect: This is a vehicle that can be ridden by someone who makes a difficulty 1 Speed roll each round. In combat, it moves a long distance each round, but on extended trips, it can move up to 80 miles (130 km) per hour, or 100 miles (160 km) per hour if the artifact is level 6 or higher. Depletion: 1–2 in 1d100; check on activation but no more than once per day')
    elif artifact_roll == 386:
        print('Windslice Blade \n Level: ', level + 1,'Form: Medium-length sword Effect: This sword is made from a material so durable and dense that the edge is sharper and lasts far longer than Ninth World smithing techniques could ever manage with steel. The blade inflicts 1 additional point of damage (2 points if the artifact is level 6 or higher). Its name comes from the idea that it can slice even the wind in half. Depletion: —')
    elif artifact_roll == 387:
        print('Whisperer in the Ether \n Level:',level + 1,'Form: A small crystal Effect: The bearer of this crystal has a direct line of telepathic communication with an immortal, artificial intelligence whose location is unknown (and may not even be relevant or comprehensible). The user can converse with the intelligence on an ongoing basis, but in general, the whisperer can share a useful bit of information, insight, or advice about once every 28 hours. Sometimes, this translates into an asset on one of the user’s actions, as the intelligence suggests the right phrase to make friends with a shopkeeper to get a good deal, the right tools to use while tinkering with a device, or the right place to put a shield to deflect an incoming attack. Sometimes the information is more broad, such as the right road to take to reach the next town or why the abhumans are attacking the caravan. The whisperer’s willingness and ability to converse varies considerably. Sometimes it is quite chatty and offers advice. Other times, it must be convinced, cajoled, or tricked into giving information. Still other times, it is entirely absent for reasons it will not explain. The whisperer’s knowledge base is broad but not omniscient. It cannot see the future, but it can often predict outcomes based on logic. It has little or nothing of use (to a Ninth World inhabitant) to say about the distant past. Depletion: 1 in 1d20 (check each day)')
    elif artifact_roll == 388:
        print('Wing Blade \n Level: ', level +1,'Form: A small winged insect with a lower body that tapers down to a sharp point Effect: The user activates the insect by tossing it into the air. On each of the user’s turns, the insect flies a short distance and attacks a target that she chooses. The device inflicts damage equal to half the artifact level. At the end of this time or when the user chooses, the insect flies back to her and attaches itself to one of her limbs. Depletion: 1 in 1d10')
    elif artifact_roll == 389:
        print('Woodwind of the Broken\nLevel:',level,'Form: A flute-like musical instrument Effect: This musical instrument can be played normally, but it has one setting that produces no obviously audible noise. If a tune is played on this setting in any area open to dry wastes, temperate lowlands, or mountains, a pack of 2d6 + 6 broken hounds arrives within a few hours or less at the location where the instrument was played. Once summoned, the broken hounds revert to their normally vicious demeanor. Depletion: 1 in 1d20')
    elif artifact_roll == 390:
        print('Yarrin\nLevel:',level,' + 1 Form: A synth cube Effect: The yarrin is a creature with a level equal to the artifact level, and it has 3 health per level and 3 points of Armor. When activated, the yarrin hovers in the air in orbit around the user and becomes invisible. If anyone within immediate distance attacks the user, the yarrin automatically intercepts and absorbs the attack. Assuming the attack does not destroy the yarrin, it immediately becomes visible and begins attacking the assailant with thin beams of energy (one per round) that inflict damage equal to its level. The yarrin fights for one round per artifact level and then deactivates. However, until it intercepts an attack, it continues to hover invisibly, even as the user sleeps. Depletion: 1 in 1d10')
    elif artifact_roll == 391:
        print('Yesterglass\nLevel:',level +4,'Form: Glass panel Effect: When held before the user’s face, this panel allows the user to see the last major activity that occurred in the area, even if it was years or centuries earlier. The effect lasts for one minute per use. Depletion: 1 in ', level,'')
    elif artifact_roll == 392:
        print('Darkness Beam\nLevel:',level + 4,'Form:  Large black weapon with white markings Effect:  One-handed light ranged weapon dealing its Level in damage on each hit with a beam of darkness.  On a Minor Effect the target is blinded for ten minutes.  On a Major Effect the target is permanently blinded. Depletion:  1 in 20')
    elif artifact_roll == 393:
        print('Razor Boomerang\nLevel:',level,' Form:  A metal boomerang and a metal glove for catching it. Effect:  The Artifact may be used as a medium ranged weapon, dealing 4 + Artifact Level damage. Depletion:  1 in 20')
    elif artifact_roll == 394:
        print('Broken Energy Jacket\nLevel:',level + 1,' Form:  Jacket made entirely of wispy blue energy. Effect:  Virtually weightless and impossibly flexible, this jacket adds 1 point to any armor already worn.  However, this particular jacket appears to be dysfunctional, crackling with electricity from time to time.  Depletion:  1 in 20, rolled at the end of each day’s use.')
    elif artifact_roll == 395:
        print('Genetic Dagger\n Level:',level +1,' Form:  A dagger with a syringe-like handle. Effect:  Light weapon, dealing its Level in damage.  When used against creatures, the wielder steals some of their genetics, becoming more like them.  On a Major Effect, the user gains a Beneficial Mutation related to the creature stabbed.  Depletion:  1 in 20')
    elif artifact_roll == 396:
        print('Cape of Gliding\nLevel:', level + 2, 'Form: A cape\nEffect: When the wearer activates the cape, semi-rigid wings unfurl and for one minute can be used to fly up to long range. The cape does not confer the ability to hover or make fine adjustments while in flight. Depletion: 1 in 1d10'),
    elif artifact_roll == 397:
        print('Optical Enhancer \nLevel:', level +1, 'Form: Reticle strapped across one eye Effect: Provides two assets on perception rolls and provides night vision. Causes mild headaches in the user. Depletion: 1 in 1d20')
    elif artifact_roll == 398:
        print('Comprehension Crawler\nLevel:', level +1, '\nForm: 6-inch long worm of synth and flesh\nEffect: The worm crawls slowly around on the user’s body, inflicting 1 point of damage that can’t be recovered while the biological remains attached. The user understands all languages and forms of communication, including telepathy, color- or scent-based languages, and even fast languages that some machines use. The worm doesn’t confer the ability to speak other languages, only to understand them. Depletion: 1 in 1d20 (check each day; on depletion, there is a chance equal to the crawler’s level × 10 that it reproduces one offspring crawler that matures quickly, becoming fully active and able to function in about a week)')
    elif artifact_roll == 399:
        print('Transdimensional Carryall:\nThis device looks like a simple bag, but its opening connects to a pocket of extradimensional space. One nonliving object can be put inside, and the space will stretch to fit that object (up to 10 feet by 10 feet). Placing an object in the carryall causes the opening to shut until the user takes an action to open it. While the carryall holds an object, it cannot be opened by anyone except the person who placed the object inside it. The carryall’s weight is unchanged regardless of the weight of the object placed in the pocket. When the user removes the object from the carryall, the carryall collapses and becomes a regular bag. Depletion: 1 in 1d20 (check each day bag is carrying object')
    elif artifact_roll == 401:
        print('TEMPORAL ANCHOR Temporal Anchor\nLevel:', level + 3, '\nForm: White crystalline amulet. Effect: Wielder has +5 to Armor against direct damage from temporal effects. In addition, the difficulty of all tasks to change time states is two steps lower. Depletion: 1 in 1d20 (check per attempt to change time states)')
    elif artifact_roll == 402:
        print('Sculion\nLevel:', level,'\nForm: Tentacled creature that fits over user’s nose and mouth\nEffect: Allows an air breather to extract oxygen from water so she can breathe underwater. Most creatures forced to rely on a sculion find that it doesn’t provide quite enough air; the difficulty of all Might- and Speedbased rolls, including attacks and defenses, is increased by one step.\nDepletion: —')
    elif artifact_roll == 403:
        print('BIO-STABILIZER\nLevel:', level + 1 ,'\nForm: Harness that attaches via spine tendrils \nEffect: While wearing the harness, the wearer gains +1 to Armor and has an asset on Might defense tasks. In addition, he can choose to ignore the effects of becoming impaired or debilitated. Finally, he can choose to ignore the effects of death itself for a limited time. Depletion: 1 in 1d20 (Check for each minute spent either impaired or debilitated, and for each round the user would otherwise be dead.)')
    elif artifact_roll == 404:
        print('SPEARGUN\nLevel:',level + 2,'\nForm: Handheld device with a few simple controls\nEffect: Emits miniature, self-propelled spears at targets within long range through airy or aqueous environments. The difficulty of hitting a target is decreased by one step due to the self-aiming feature of the tiny spears. Living targets hit by an attack move one step down the damage track from a toxic poison in each spear. This device is a rapid-fire weapon and thus can be used with the Spray or Arc Spray abilities that some characters have, but each round of ammo used or each additional target selected requires an additional depletion roll. Depletion: 1 in 1d10')
    elif artifact_roll == 405:
        print('CLEOID EYE\nLevel:', level + 2,'\nForm: White orb the size of an eyeball\nEffect: Serves the user as a prosthetic eye, though only by sacrificing one of the owner’s original eyes. In addition, the eye grants the owner several abilities, including the ability to see underwater and in the dark for up to ten hours at a time, the ability to see invisible creatures for up to one minute at a time, and the ability to command the actions of a creature within immediate range who meets the eye’s gaze for a period of one minute. Depletion: 1 in 1d20')
    elif artifact_roll == 406:
        print('HARD WATER FILM\nLevel:', level,'\nForm: Synth belt studded with devices\nEffect: A film of hard—yet flowing—water forms smoothly around the wearer’s skin and equipment, giving her Armor equal to the artifact level for one hour.\nDepletion: 1 in 1d20')
    elif artifact_roll == 407:
        print('GRAVITY MODULATOR\nLevel:', level + 3,'\nForm: Crystal plates, like a carapace orvery large fish scales\nEffect: When placed on the wearer’s flesh, the armor grafts on for up to 28 hours per use. The wearer is immune to extreme gravity effects and to damage directly inflicted by gravity. In addition, the wearer can pass through frozen time or similar stasis effects, though doing so reduces her movement to an immediate distance each round, and increases the difficulty of any task requiring Speed by one step.\nDepletion: 1 in 1d10 (check per day worn)')
    elif artifact_roll == 408:
        print('GRAVITY SPEAR\nLevel:', level + 1,'\nForm: Spearlike weapon with devices affixed to the blade and hilt\nEffect: This weapon functions as a normal spear. However, if the wielder uses an action to activate it, the weapon radiates a field of extreme gravity distortion for one round. During that round, if it hits a target, it inflicts additional points of damage equal to the artifact level. Alternatively, the user can emit a gravity-disrupting pulse that extends to a long distance in all directions. Permanent effects of extreme gravity are suppressed for one minute in the area, and temporary gravity phenomena (such as gravity storms) are permanently disrupted. The gravity spear can also create a tunnel through frozen time or similar stasis effects. The tunnel created is a short distance in length and an immediate distance in diameter, and it lasts for up to 28 hours.\nDepletion: 1 in 1d10')
    elif artifact_roll == 409:
        print('PHASE MODULATOR\nLevel:', level + 4,'\nForm: Crystal plates, like a carapace or very large fish scales\nEffect: When placed on the wearer’s flesh, the armor grafts on for up to 28 hours per use. The wearer can shift her phase as an action. While phase shifted, she can swim through objects or solid rock as if they were water. A phase-shifted wearer is immune to most purely physical attacks, and she cannot affect other creatures with physical attacks of her own.\nDepletion: 1 in 1d10 (check per day worn)')
    elif artifact_roll == 410:
        print('POWERED GRIP\nLevel:', level + 4,'\nForm: Oversized articulated prosthetic made of crystal, roughly in the shape of a hand\nEffect: Serves as a fully functional prosthetic hand; humans who use this artifact must sacrifice a normal hand to do so. In addition to doing things a hand can normally do, the powered grip provides its owner with several other abilities. These include an electric touch attack that inflicts damage equal to the artifact level, a +2 boost to Might Edge that lasts for one hour, and a long-range melee attack that inflicts damage equal to the artifact level by projecting the hand towards the enemy. It must be retrieved and reattached as an action. Depletion: 1 in 1d20 (check per day worn)')
    elif artifact_roll == 411:
        print('GILL IMPLANTS\nLevel: 6\nForm: Gill implants are a long-term solution for underwater breathing. The optimal position is along the sides of the neck, but some people choose to implant them at the femoral or brachial arteries, or directly in front of their lungs.\nEffect: Once the implants are properly installed, they allow the user to absorb appropriate levels of oxygen from water. Gills should be covered with a gill cap when on dry land to prevent collapse.\nDepletion: —')
    elif artifact_roll == 412:
        print('IMPELLER\nLevel:', level + 1,'\nForm: Finned tube, 3 feet (1 m) long and 8 inches (20 cm) wide, with grips\nEffect: Sucks in water at one end and expels it at the other, allowing anyone holding the grips to move up to a long distance each round in which she makes a Speed roll (level 1). On extended trips, it can move up to 80 miles (129 km) per hour.\nDepletion: 1–2 in 1d100')    #
    elif artifact_roll == 413:
        print('CHRONICE\nLevel:', level + 2,'\nForm: Mask with dark crystal lenses\nEffect: The wearer can operate in any watery environment without penalty, regardless of the surrounding pressure, temperature, or lack of breathable air. The wearer loses the ability to swim but can walk, run, or even sprint along a surface as if moving through an air-filled, rather than a water-filled, environment.\nDepletion: 1 in 1d100 (check per day   # of use)')
    elif artifact_roll == 414:
        print('FRANG SUIT\nLevel:', level + 1,'\nForm: Pseudo-living fishlike suit with inner cavity large enough for a human\nEffect: The wearer can use the frang suit as if it was his own body. The frang suit allows him to breathe, to survive hot or cold water without coming to harm, and to swim a long Distance each round.\nDepletion: 1 in 1d100 (check per day of use)')
    elif artifact_roll == 415:
        print('PSYCHOLON\nLevel:', level + 2,'\nForm: 6-foot (2 m) long staff of bluepurple crystal\nEffect: A psycholon serves as a medium melee weapon that inflicts 2 additional points of Intellect damage (ignores Armor). It can also project a long-range bolt of psychic decoherence that inflicts 5 points of Intellect damage (ignores Armor).\nDepletion: 1 in 1d20')
    elif artifact_roll == 416:
        print('REALITY COMB\nLevel: 1d6 + 2\nForm: Lightweight synth handheld device with viewscreen \nEffect: Wearer gains an asset when attempting to understand and find a particular dimension when traveling between dimensions (whether in the Sideslip Fields or elsewhere). It may have preselected locations coded into it.\nDepletion: 1 in 1d20')
    elif artifact_roll == 417:
        print('Universal Charger\nLevel: 1d6+3 \nForm: A small crystal rod\nEffect: When the this rod is passed over a depleted Artifact you may reroll its depletion roll. On a successful roll the Artifact is reactivated. If passed over an expended Cypher a roll other than a 1 on a d4 restores it. \nDepletion: 1 in d6')
    elif artifact_roll == 418:
        print('Toolbox\nLevel: 1d6+1 \nForm: A rectangular belt-mounted device\nEffect: When activated this device deploys a series of tendrils, multi-jointed arms ending in fine manipulators, small spare parts, and other specialized tools which work with the wearer on a project. This device provides an asset on crafting rolls. \nDepletion: 1 in 100')
    elif artifact_roll == 419:
        print('BOILING ROD\nLevel: 1d6 + 3\nForm: Short baton with a glowing red nodule at one tip\nEffect: Inflicts points of damage equal to the artifact’s level on anyone touched by the tip. Use of a boiling rod underwater (which is most of the time) creates a cloud of steamy bubbles that obscure vision like fog. They persist for one round after each use.\nDepletion: 1 in 1d20')
    elif artifact_roll == 420:
        print('BURSTER\nLevel: 1d6 + 4\nForm: Pair of synth spheres with a curved handle\nEffect: Affects a target within short range, causing a terrible rent to burst in its flesh. Against a nonliving target, the burster likewise tears matter apart, expanding the space between the existing portions. The potential victim makes a Might defense roll. On a success, nothing occurs. On a failure, the victim sustains damage equal to the artifact’s level.\nDepletion: 1 in 1d20')
    elif artifact_roll == 421:
        print('Mask of the Will\nLevel: 7\nForm:Crystaline Mask\nEffect: Constantly shrouds wearer in a sheen of ice that gives +1 to Armor and, when activated, emits a blast of cold in all directions, doing 5 points of damage to all targets within short range\nDepletion: 1 in 1d20')
    elif artifact_roll == 422:
        print('LIFEPACK\nLevel: 5\nForm: These backpack-like objects are custom made to fit the wearer.\nEffect: Small living creatures on the inside of the pack insert their spines painlessly into the back of the wearer. They monitor and relate bodily functions, surrounding weather conditions, and incoming dangers.\nDepletion: 1 in 1d20')
    elif artifact_roll == 423:
        print('DEVOTEE\nLevel: 6\nForm: Large cylinder with a strong light at one end and a medium projectile weapon at the other. An exterior plug allows it to power another device at the same time. Despite its size, a devotee is nearly weightless in the water.\nEffect: Serves as a medium projectile weapon, a light, and a power source for another device at the same time. Particularly useful on long-term scavenging trips when one wants to travel light.\nDepletion: 1 in 1d100')
    elif artifact_roll == 424:
        print('PERCEIVE ALL\nLevel: 4\nForm: A perceive all, sometimes just called a percy, is a small device that fits over the eyes.\nEffect: Makes the wearer blind to whatever\’s right in front of her, but enables her to see, smell, and hear things that she otherwise wouldn’t be able to. \nDepletion: 1 in 1d100')
    elif artifact_roll == 425:
        print('GLIDE WING\nLevel: 1 Specifications: The gliding wing is about 20 feet (6 m) wide and 6 feet (2 m) long with a place for a pilot to secure themselves beneath, which also doubles as a simple control mechanism. When launched from a height, the glide wing can fly through the air up to a long distance each round, though it also descends about a short distance each round. The glide wing can be operated by someone making successful Speed rolls (difficulty 1) each round. Assuming conditions allow it, a pilot can attempt to increase the glide wing’s height a long distance by steering into an upwelling of air (from a thermal or wind racing up a vertical surface) with another successful Speed roll (difficulty 3). Finally, landing without injury requires a final Speed roll (difficulty 1). On a failed landing, and assuming that the wing hasn’t fallen from a great height, the pilot sustains 4 points of Speed damage (ignores Armor). On extended trips over an area with sufficient thermals, a glide wing can move up to 50 miles (80 km) per hour. Depletion: 1 in 1d20 (check per failed landing)')
    else:
        print('Tame Nanosprite\n Level: 1\nForm: Injection device \n A small cylindrical device with soft padded tip that fits in the hand and has a large trigger or button opposite the pad. Nanosprite: A random caricature of an ancient animal or anthropomorphised concept, object or ancient animal. Depletion: \n Injection Device: Single Use. \n Nanosprite: 16 hours of active time per day (resets with user\'s 10 hour rest) - Reduce this active time by 0.5/1/1.5/2/3/4 hours when the nanosprite attempts difficulty 1/2/3/4/5/6 tasks respectively, regardless of outcome. \n Effect: \n To enable this artifact the implant must be injected, using the injection device, directly into the nape of the user. While this might seem daunting to some users the actual injection process is completely painless. Once the device is implanted it can only be removed through a painful and dangerous surgery that always results in the destruction of the implant. \n Shortly after injection a seemingly random tattoo-like symbol appears, covering the injection site, and the artifact activates. Immediately after this a nanosprite coalesces in front of the user and starts to address the user in some ancient tongue that no one seems to understand. The nanosprite that appears can have a range of appearances, but virtually all of them would be foreign to the user (animals or other entities from ages past). All personal nanosprites have a very friendly and cartoonish reprisentation though their voices can vary quite dramatically. \n After a certain period of time exposed to audible language (', level,' days or GM’s discretion, consider how often the nanosprite is exposed to the language) the nanosprite’s can learn to speak a language. However the nanosprite can only speak and understand one language at a time, so any previous language is overwritten. \n While the personality of the nanosprite (determined by the GM) is random, nanosprites will almost always be cooperative with the user. Nanosprites have great initiative and tend to offer their (sometimes trivial) knowledge and help, or at least the possibility that they might be able to help, without being asked for it.')

def quirk():
    roll = random.randint(1, 120)
    print('Artifact quirk:')
    if roll == 1:
         print('Causes wielder to feel hungry')
    elif roll == 2:
        print('Glows with a soothing, pale green light.')
    elif roll == 3:
        print('Glows in the presence of abhumans')
    elif roll == 4:
        print('Produces music when activated')
    elif roll == 5:
        print('Changes colors and patterns randomly')
    elif roll == 6:
        print('Muffles all sound heard by wielder within 15')
    elif roll == 7:
        print('Activated by sound (user must hum, whistle, sing, or speak in a specific way).')
    elif roll == 8:
        print('Causes wielder to feel sleepy')
    elif roll == 9:
        print('Causes wielder\'s hair to change color only while activated or worn')
    elif roll == 10:
        print('Has a bizarre, asymmetrical shape of white synth')
    elif roll == 11:
        print('Looks like metal, but is actually living organic tissue')
    elif roll == 12:
        print('Made of translucent, organic sacs and tubes')
    elif roll == 13:
        print('Made of glass globes connected by synth wires and metal chains')
    elif roll == 14:
        print('Made of blue synth in the shape of a human')
    elif roll == 15:
        print('Has an extraneous analog 26-hour clock built into its outer surface')
    elif roll == 16:
        print('Outer surface covered in blades and spikes')
    elif roll == 17:
        print('Made of green crystals that show different (irrelevant) scenes in each facet')
    elif roll == 18:
        print('Hops three times if placed on the ground')
    elif roll == 19:
        print('Leaves a dark stain if placed on a surface for more than an hour')
    elif roll == 20:
        print('Slightly intoxicates all creatures within immediate range')
    elif roll == 21:
        print('Pieces both inside and out are in continual motion to no discernible effect')
    elif roll == 22:
        print('Powerfully magnetic')
    elif roll == 23:
        print('Always inexplicably slippery')
    elif roll == 24:
        print('Incorporated into a wooden box (of recent manufacture) with strange symbols')
    elif roll == 25:
        print('Made of glass with tiny insects crawling around inside')
    elif roll == 26:
        print('Always very warm')
    elif roll == 27:
        print('Always very cold')
    elif roll == 28:
        print('Clings to any flat surface')
    elif roll == 29:
        print('Hovers in the air if a switch is pressed')
    elif roll == 30:
        print('Covered in a thin, rubbery plastic coating')
    elif roll == 31:
        print('Produces random sounds at random intervals')
    elif roll == 32:
        print('Fills the air with greenish smoke when used')
    elif roll == 33:
        print('Outer casing made of bony ridges')
    elif roll == 34:
        print('Has a humanlike eye that watches the user constantly')
    elif roll == 35:
        print('Has an otherwise extraneous screen that shows images of small, cavorting people')
    elif roll == 36:
        print('Produces a flowery scent when activated')
    elif roll == 37:
        print('Looks and acts like a giant hworm')
    elif roll == 38:
        print('Gives user a powerful sense of euphoria when used')
    elif roll == 39:
        print('Gives a terrible rash to any flesh touched')
    elif roll == 40:
        print('Deactivates one random nearby device when used')
    elif roll == 41:
        print('Speaks in a monotone, using an unknown language')
    elif roll == 42:
        print('Gives anyone touching it a mild cold for 28 hours')
    elif roll == 43:
        print('When activated, the user winks out of existence for one round. No memory of absence when returned.')
    elif roll == 44:
        print('Hums while in use')
    elif roll == 45:
        print('Made of reflective black metal')
    elif roll == 46:
        print('Seems to sweat some kind of liquid profusely when activated')
    elif roll == 47:
        print('If left unattended, it slowly spins')
    elif roll == 48:
        print('Over time, user begins to believe that out-of-phase, three-armed, blue-skinned humanoids are following her')
    elif roll == 49:
        print('Device is able fold up small enough to put in one\’s pocket')
    elif roll == 50:
        print('Drips with delicious fluid')
    elif roll == 51:
        print('Sprays oil from an extraneous nozzle when used')
    elif roll == 52:
        print('Fills the mind of anyone touching it with alien memories')
    elif roll == 53:
        print('Creates mental images of vicious prowling creatures around the user that only the user can see')
    elif roll == 54:
        print('Gives anyone carrying it severe heartburn')
    elif roll == 55:
        print('Mentally broadcasts to all creatures in immediate range that it is a deadly weapon (it may or may not be)')
    elif roll == 56:
        print('While touched, it slightly improves the user’s vision')
    elif roll == 57:
        print('Disappears when user wishes it reappearing in her hand when she desires')
    elif roll == 58:
        print('Made entirely of plantlike fibers')
    elif roll == 59:
        print('Appears to be made of chitinous material')
    elif roll == 60:
        print('Bundle of exposed wires and cracked housing randomly gives off sparks and mild shocks')
    elif roll == 61:
        print('Glows with a faint greenish light')
    elif roll == 62:
        print('Made of hardened fungus')
    elif roll == 63:
        print('Speaks nonsense to user telepathically')
    elif roll == 64:
        print('Pulses as if it is breathing')
    elif roll == 65:
        print('Grows roots and shoots over time')
    elif roll == 66:
        print('Leaks black, inky fluid from time to time')
    elif roll == 67:
        print('Disappears for a few minutes every day')
    elif roll == 68:
        print('Made of solidified foam and is extraordinarily light but durable')
    elif roll == 69:
        print('Features a large prism at its center')
    elif roll == 70:
        print('Crawls with worms that live within and on it')
    elif roll == 71:
        print('Fashioned to look like a serpent')
    elif roll == 72:
        print('Appears to be fashioned from dried flesh, bones, and gristle')
    elif roll == 73:
        print('Covered in unknown graffiti')
    elif roll == 74:
        print('When first activated, it’s so hot that it burns, and afterward, it’s normal')
    elif roll == 75:
        print('Creates a brief window (not a door) to another place/time/world whenever it’s activated')
    elif roll == 76:
        print('User is famished every time the device is used')
    elif roll == 77:
        print('Lightly adheres to any smooth surface')
    elif roll == 78:
        print('Clings to flesh')
    elif roll == 79:
        print('Seems to function more effectively if within immediate range of a specific oddity')
    elif roll == 80:
        print('Vibrates so forcefully that it’s difficult to hold')
    elif roll == 81:
        print('Randomly leaps into the hands of anyone who has it stored on their person')
    elif roll == 82:
        print('Continues to appear amid the user’s possessions no matter what is done to get rid of it')
    elif roll == 83:
        print('Carved with dozens of human faces')
    elif roll == 84:
        print('Increases in weight by a thousandfold for a random few minutes every day or so')
    elif roll == 85:
        print('Exposed components seem fragile and sensitive')
    elif roll == 86:
        print('Wobbly, as if a few screws are loose or missing')
    elif roll == 87:
        print('Only able to be activated if pointed in a specific direction')
    elif roll == 88:
        print('Smells of burnt nuts')
    elif roll == 89:
        print('Attracts flies')
    elif roll == 90:
        print('Made of glass with swirling colors within')
    elif roll == 91:
        print('Functions more effectively when the user is inebriated')
    elif roll == 92:
        print('Includes a pair of vibrating crystal shards that defy gravity and always remain within 5 inches of each other')
    elif roll == 93:
        print('Produces light in complete darkness. ')
    elif roll == 94:
        print('Drips water in direct sunlight. ')
    elif roll == 95:
        mood = random.choice('happy', 'sad', 'angry')
        print('Glows when user is ', mood)
    elif roll == 96:
        print('Activated only in a certain temperature.')
    elif roll == 97:
        print('Activated with substance (water, saliva, sand, plant matter, ice, blood, flesh, paper, synth, metal). ')
    elif roll == 98:
        print('Creates a terrible smell when used')
    elif roll == 99:
        print('Creates annoying black smoke')
    elif roll == 100:
        print('Produces an oily residue.')
    elif roll == 101:
        print('Makes a strange sound.')
    elif roll == 102:
        print('Makes a very loud sound.')
    elif roll == 103:
        print('Creates a bright flash when used.')
    elif roll == 104:
        print('Produces a strange hologram along with the effect.')
    elif roll == 105:
        print('Produces strange telepathic sounds or images along with the effect.')
    elif roll == 106:
        print('Creates a small electric shock(no damage).')
    elif roll == 107:
        print('Creates a visible electric field around the user.')
    elif roll == 108:
        print('Constantly changing from hot to cold')
    elif roll == 109:
        print('Creates a heat shimmer around user.')
    elif roll == 110:
        print('Drains heat around it and makes the immediate area noticeably colder')
    elif roll == 111:
        print('Constantly shifting colors')
    elif roll == 112:
        print('Slimy to the touch')
    elif roll == 113:
        print('Causes animals to flee from it')
    elif roll == 114:
        print('Attracts small animals and insects to it')
    elif roll == 115:
        print('Creates a ringing noise when activated')
    elif roll == 116:
        print('Produces a painless rash or bruises on the user’s flesh')
    elif roll == 117:
        print('Sickens user (migraines, nausea, cramps)')
    elif roll == 118:
        print('Appears as though the device is rusting while in use.')
    elif roll == 119:
        print('Creates a variety of strange visual distortions around wielder')
    else:
        print('Has a Machine Intelligence and can communicate with wielder')
        print('Personality Trait: ')
        personality_list = [
            'Treats every request or battle as a glorious quest and it\'s true purpose'
            'Passive aggressive'
            'Extremely depressed'
            'Likes asking nonsensical questions' 
            'Always agrees with people, but changes its mind quickly',
            'Constantly gives advice on how to handle the current situation',
            'Is very noisy about treasure',
            'Act mysteriously and answers questions cryptically'
            'Answers with flowery poetic language',
            'Doesn\'t like new people',
            'Makes token bets about minor things',
            'Refers to itself in the third person',
            'Bargains for the use of some of its powers',
            'Constantly asks how things taste and smell',
            'Yells when it is excited',
            'Know-it-all',
            'Extremely polite',
            'Constantly apologizes as a verbal tic',
            'Makes a lot of threats it cannot back up',
            'Very mellow; advises people to take a philosophical approach to both success and failure',
            'Says as little as possible',
            'Laughs at the misfortunes of others',
            'Calls people by the wrong name, though often consistently',
            'Prays a lot',
            'Is quick to praise people even for little things',
            'Often appears surprised and slightly offended when spoken to',
            'Does not like to make decisions',
            'Has a list of numbered rules or maxims covering different situations and quotes them when appropriate',
            'Tells people the "real" reason they are doing things',
            'Asks for advice or opinions about very unlikely situations',
            'Speaks with great formality; never uses contractions and employs bigger words than necessary',
            'Easily distracted by minor events in the area',
            'Usually needs someone to explain a joke or metaphor',
            'Has a particular core belief, potentially a rather odd one, and steadfastly looks at everything through the lens of that opinion',
            'Likes to count things and has fun with numbers',
            'Always tries to find compromise',
            'Is always talking to itself',
            'Very bad liar',
            'Asks rude questions without realizing they cause offense',
            'Grumbles and complains about its form and plight',
            'Very sensitive about criticism or conflict',
            'Absent-minded',
            'Blames a particular type of creature for its troubles',
            'Intellectual bully',
            'Makes allusions to events from history or mythology without bothering to explain them',
            'Hates a particular terrain type and complains loudly while within that terrain',
            'Constantly ask questions about things that are outside its vision',
            'Makes a list of things for its wearer or wielder to accomplish each day',
            'Cannot keep a secret',
            'Seems slightly surprised when anyone else has a good idea or does something productive',
            'Often whines',
            'Easily angered',
            'Constantly warns about the danger of disease',
            'Has a stock phrase',
            'Habitually mumbles a word that rhymes with the final word other people speak before they pause',
            'Delighted by puns and other sorts of word games',
            'Makes animal noises when feeling threatened or excited',
            'A lover or literature and poetry, it takes any opportunity to spout of a line or two of prose or verse',
            'Very superstitious',
            'Spurs on its wielder or wearer to brave or foolhardy acts',
            'Never uses one word when 10 will do',
            'Constantly asks to be destroyed, but panics if taken seriously',
            'Always has a reason why something will not work',
            'Claims to be in love with the bearer',
            'Tells boring stories about something mundane',
            'Constantly suggests ways to make activities more "fun" and "exciting"',
            'Collects words from languages it doesn\'t know, and uses them in place of words in the language it most commonly uses',
            'Dotes on its wearer or wielder',
            'Often ignores its wearer or wielder and acts annoyed',
            'Loathes itself',
            'Occasionally chants annoying little rhymes',
            'Acts as if it is best friends with its wearer or wielder',
            'Openly scornful of organized religion and believes all gods are selfish liars',
            'Gets angrier and more determined with each setback',
            'Thinks most objects are intelligent items',
            'Lacks a moral compass when making plans and often proposes horrific solutions to minor problems',
            'Falls quiet for stretches where it will not talk to anyone for days',
            'Believes it is losing its mind',
            'Constantly name-drops a famous past bearer',
            'Has terrible syntax and diction',
            'Never tires of learning new and interesting bits of information',
            'Complains about smells that no one else notices',
            'Wants to be dipped in ale, wine, or other forms of alcohol, and when it is, acts drunk',
            'Loves to sing but is tone deaf',
            'Blames everyone else for its plight',
            'Is a seemingly endless font of gossip—though most details are fabricated',
            'Treats all others as lesser forms of intelligence',
            'Very cheerful; tries to raise downcast spirits with song, jokes, and uplifting stories',
            'Grows more and more relaxed the worse things get; conversely, on edge and nervous when things seem to go well',
            'Constantly remembers details wrong',
            'Makes up stories',
            'Avoids speaking with creatures other than its wielder or wearer',
            'Has a need for constant attention',
            'Is a little unhinged when away from its wielder or wearer',
            'Questions others about their background in order to determine if they are "suitable"',
            'Is often confused by the deeds of others and regularly asks about the reason for certain actions',
            'Very jealous and possessive about its wielder or wearer',
            'Continually mentions a heroic battle it participated in and how nothing else compares',
            'Diagnoses everyone with a mania, fixation, or curse, but is often wrong',
            'Explains simple things that don\'t need explanations',
            'Wishes it was free from its item and seeks someone who can perform such a task',
            'Believe it is a trapped god',
            'Has an imaginary friend',
            'Is overly friendly with everyone'
            'Is afraid of the dark',
            'Admonishes people for using profanity',
            'Rarely talks but frequently emits a drone of insane giggles',]
        print(random.choice(personality_list))

def cypher_plans():
    print('test')

def install_plans():
    # Installation plan in Building Tomorrow(page50) & Numenera Destiny(page    146)
    install_plans_roll = random.randint(1, 100)
    if install_plans_roll < 3:
        print('Cooling obelisk')
    elif install_plans_roll < 5:
        print('Compactor')
    elif install_plans_roll < 7:
        print('Luminous dynamo')
    elif install_plans_roll < 9:
        print('Warming obelisk')
    elif install_plans_roll < 11:
        print('Express tube')
    elif install_plans_roll < 13:
        print('Floatstone')
    elif install_plans_roll < 15:
        print('Keepsafe bin')
    elif install_plans_roll < 17:
        print('Music box')
    elif install_plans_roll < 19:
        print('Pabulum extruder')
    elif install_plans_roll < 21:
        print('Pain taker ')
    elif install_plans_roll < 23:
        print('Restorative dispenser')
    elif install_plans_roll < 25:
        print('Structural booster')
    elif install_plans_roll < 27:
        print('Turret, basic')
    elif install_plans_roll < 29:
        print('Vermin ward')
    elif install_plans_roll < 31:
        print('Water purifier, basic')
    elif install_plans_roll < 33:
        print('Automender')
    elif install_plans_roll < 35:
        print('Cleansing arch')
    elif install_plans_roll < 37:
        print('Hovering slab')
    elif install_plans_roll < 39:
        print('Language translator')
    elif install_plans_roll < 41:
        print('Luminous dynamo, improved')
    elif install_plans_roll < 43:
        print('Body toughener')
    elif install_plans_roll < 45:
        print('Farspeaking pylon')
    elif install_plans_roll < 47:
        print('Force gate')
    elif install_plans_roll < 49:
        print('Materials extruder')
    elif install_plans_roll < 51:
        print('Monorail')
    elif install_plans_roll < 53:
        print('Structural booster, improved')
    elif install_plans_roll < 55:
        print('Sustenance synthesizer')
    elif install_plans_roll < 57:
        print('Taming tower')
    elif install_plans_roll == 57:
        print('Temporal chime')
    elif install_plans_roll == 58:
        print('Turret, improved')
    elif install_plans_roll == 59:
        print('Alarm tower')
    elif install_plans_roll == 60:
        print('Automender, enhanced')
    elif install_plans_roll == 61:
        print('Keepsafe bin, advanced')
    elif install_plans_roll == 62:
        print('Library obelisk')
    elif install_plans_roll == 63:
        print('Adjustable watchtower')
    elif install_plans_roll == 64:
        print('Musical obelisk')
    elif install_plans_roll == 65:
        print('Community obelisk')
    elif install_plans_roll == 66:
        print('Hunting lure')
    elif install_plans_roll == 67:
        print('Bioreactor')
    elif install_plans_roll == 68:
        print('Keepsafe case')
    elif install_plans_roll == 69:
        print('Memory tailor')
    elif install_plans_roll == 70:
        print('Sleepwell emitter')
    elif install_plans_roll == 71:
        print('Sonic wall')
    elif install_plans_roll == 72:
        print('Body preserver')
    elif install_plans_roll == 73:
        print('Community projector')
    elif install_plans_roll == 74:
        print('Crystal mind')
    elif install_plans_roll == 75:
        print('Dread banner')
    elif install_plans_roll == 76:
        print('Drink dispenser')
    elif install_plans_roll == 77:
        print('Force orb')
    elif install_plans_roll == 78:
        print('Glamor dispenser')
    elif install_plans_roll == 79:
        print('Memorial obelisk')
    elif install_plans_roll == 80:
        print('Rally banner')
    elif install_plans_roll == 81:
        print('Teaching monolith')
    elif install_plans_roll == 82:
        print('Wind coaxer')
    elif install_plans_roll == 83:
        print('Deferment gate')
    elif install_plans_roll == 84:
        print('Gallen caller')
    elif install_plans_roll == 85:
        print('Launching ring')
    elif install_plans_roll == 86:
        print('Machine calmer')
    elif install_plans_roll == 87:
        print('Mindwiper')
    elif install_plans_roll == 88:
        print('Penal arch')
    elif install_plans_roll == 89:
        print('Reflector orb')
    elif install_plans_roll == 90:
        print('Sound suppressor')
    elif install_plans_roll == 91:
        print('Supernumerary watchtower')
    elif install_plans_roll == 92:
        print('Tracking arch')
    elif install_plans_roll == 93:
        print('Tranquility tower')
    elif install_plans_roll == 94:
        print('Casting pads')
    elif install_plans_roll == 95:
        print('Community translator')
    elif install_plans_roll == 96:
        print('Force cage')
    elif install_plans_roll == 97:
        print('Machine overrider')
    elif install_plans_roll == 98:
        print('Mind exciter')
    elif install_plans_roll == 99:
        print('Mind suppressor')
    elif install_plans_roll == 100:
        print('Mindchanger')
    elif install_plans_roll == 101:
        print('Mirrorbright arch')
    elif install_plans_roll == 102:
        print('Missile battery')
    elif install_plans_roll == 103:
        print('Null field generator')
    elif install_plans_roll == 104:
        print('Phase changer')
    elif install_plans_roll == 105:
        print('Power support')
    elif install_plans_roll == 106:
        print('Prosthetifact')
    elif install_plans_roll == 107:
        print('Transdimensional fence')
    elif install_plans_roll == 108:
        print('Air signaler(destruction)')
    elif install_plans_roll == 109:
        print('Bioreactor, grand')
    elif install_plans_roll == 110:
        print('Earth signaler(destruction)')
    elif install_plans_roll == 111:
        print('Fire signaler(suppression)')
    elif install_plans_roll == 112:
        print('Force crane')
    elif install_plans_roll == 113:
        print('Gravity transducer')
    elif install_plans_roll == 114:
        print('Organifact')
    elif install_plans_roll == 115:
        print('Prison simulator')
    elif install_plans_roll == 116:
        print('Reservoir purifier')
    elif install_plans_roll == 117:
        print('Summoner')
    elif install_plans_roll == 118:
        print('Time suppressor')
    elif install_plans_roll == 119:
        print('Water signaler(calming)')
    elif install_plans_roll == 120:
        print(' Weathersmith')
    elif install_plans_roll == 121:
        print('Champion forger')
    elif install_plans_roll == 122:
        print('Control arch')
    elif install_plans_roll == 123:
        print('Mind expander')
    elif install_plans_roll == 124:
        print('Moment maker')
    elif install_plans_roll == 125:
        print('Body shunt')
    elif install_plans_roll == 126:
        print('Interrogation tower')
    elif install_plans_roll == 127:
        print('Nectar of life')
    elif install_plans_roll == 128:
        print('Library obelisk ')
    elif install_plans_roll == 129:
        print('Rain caller ')
    elif install_plans_roll == 130:
        print('Sensorium')
    elif install_plans_roll == 131:
        print('Shield wall, basic ')
    elif install_plans_roll == 132:
        print('Truthbox ')
    elif install_plans_roll == 133:
        print('Turret, mechanized ')
    elif install_plans_roll == 134:
        print('Vitalium ')
    elif install_plans_roll == 135:
        print('Water excitation engine ')
    elif install_plans_roll == 136:
        print('Water purifier, enhanced ')
    elif install_plans_roll == 137:
        print('Everflowing fountain')
    elif install_plans_roll == 138:
        print('Fabricator ')
    elif install_plans_roll == 139:
        print('Force wall ')
    elif install_plans_roll == 140:
        print('Luminous dynamo tower ')
    elif install_plans_roll == 141:
        print('Seminarium ')
    elif install_plans_roll == 142:
        print('Shrink pad ')
    elif install_plans_roll == 143:
        print('Turret, lightning')
    elif install_plans_roll == 144:
        print('Water signal (destruction) emitter ')
    elif install_plans_roll == 145:
        print('Birthing vat ')
    elif install_plans_roll == 146:
        print('Envirosphere ')
    elif install_plans_roll == 147:
        print('Farspeaking pylon, advanced ')
    elif install_plans_roll == 148:
        print('Phase dome ')
    elif install_plans_roll == 149:
        print('Portal mouth ')
    elif install_plans_roll == 150:
        print('Turret, gravity ')
    elif install_plans_roll == 151:
        print('Vanisher ')
    elif install_plans_roll == 152:
        print('Earthquake carillon ')
    elif install_plans_roll == 153:
        print('Everflowing nectar ')
    elif install_plans_roll == 154:
        print('Force dome ')
    elif install_plans_roll == 155:
        print('Keepsafe capsule ')
    elif install_plans_roll == 156:
        print('Lightning tower')
    elif install_plans_roll == 157:
        print('Water purification station')
    elif install_plans_roll == 158:
        print('Automender, ultimate ')
    elif install_plans_roll == 159:
        print('Datasphere obelisk ')
    elif install_plans_roll == 160:
        print('Dimensional abode')
    elif install_plans_roll == 161:
        print('Farspeaking pylon, ultimate ')
    elif install_plans_roll == 162:
        print('Force sphere ')
    elif install_plans_roll == 163:
        print('Oblivion tower')
    elif install_plans_roll == 164:
        print('Space elevator')
    elif install_plans_roll == 165:
        print('Spire of a thousand rooms')
    else:
        print('Weatherspear')

def artifact_plans():
    print('test')

def automation_plans():
    print('test')

def vehicle_plans():
    print('test')

def plans():

    # first determine plan type
    # PLAN SEED KIND TABLE d20 Kind
    # 01–06 Cypher
    # 07–11 Installation
    # 12–15 Artifact
    # 16–18 Automaton
    # 19–20 Vehicle








    roll = random.randint(1, 100)
    if roll < 31:
        cypher_roll = random.randint(1, 100)
        if cypher_roll < 31:
            print('lvl1 Cypher')
        elif cypher_roll < 51:
            print('lvl2 Cypher')
        elif cypher_roll < 61:
            print('lvl3 Cypher')
        elif cypher_roll < 70:
            print('lvl4 Cypher')
        elif cypher_roll < 78:
            print('lvl5 Cypher')
        elif cypher_roll < 85:
            print('lvl6 Cypher')
        elif cypher_roll < 91:
            print('lvl7 Cypher')
        elif cypher_roll < 96:
            print('lvl8 Cypher')
        elif cypher_roll < 100:
            print('lvl9 Cypher')
        else:
            print('lvl10 Cypher')
        #cypher_plans = [
            #'',
        #]
        #print(random.choice(cypher_plans))
    elif roll < 46:
        install_plans()

    elif roll < 56:
        # Otherspace     plan in Building Tomorrow(page 70)
        otherspace_plans = [
            'Dimensional detector',
            'Otherwhere lens',
            'Pocketed object',
            'Big pocket',
            'Death monocle',
            'Empty hand',
            'Pack bracer',
            'Dimensional expander',
            'Endless coil',
            'Endless stomach',
            'Extensile bracer',
            'Accumulator',
            'Headroom helmet',
            'Otherspace lure',
            'Personal pocket',
            'Phantom interrogator',
            'Phase cloak',
            'Psychic refuge',
            'Smoothing knife',
            'Swiftlocator',
            'Deathspeaking orb',
            'Dimensional collapser',
            'Otherfall armor',
            'Otherspace anchor',
            'Otherspace field',
            'Pocket lodge',
            'Psychic atheneum',
            'Timeline divination nodule',
            'Weaponized stomach',
            'Ectopic armor',
            'Ectopic rover',
            'Fathomless pit',
            'Ghost tracker',
            'Ingresser',
            'Isonomic hall',
            'Otherspace thief',
            'Phantom prison',
            'Transdimensional fence',
            'Accumulator, zealous',
            'Ectopic wing',
            'Portal door',
            'Transdimensional body',
            'Ultraterrestrial beacon',
            'Book of doors',
            'Crossroads vestibule',
            'Dimensional mixer',

        ]
        print(random.choice(otherspace_plans))
    elif roll < 66:
        # Artifact plan in Numenera Destiny(page 147)
        artifact_plans = [
        'lvl1 Artifact',
        'lvl2 Artifact',
        'lvl3 Artifact',
        'lvl4 Artifact',
        'lvl5 Artifact',
        'lvl6 Artifact',
        'lvl7 Artifact',
        'lvl8 Artifact',
        'lvl9 Artifact',
        'lvl10 Artifact',
        ]
        print(random.choice(artifact_plans))
    elif roll < 76:
        # Automaton plan in Building Tomorrow(page 25) & Destiny(page 147)
        automation_plans = [
            '',
            '        01–05 Bibelot',
            '        06–10 Chrononome',
            '        11–14 Detonating scuttler',
            '        15–20 Armor escort',
            '        21–25 Handy appliance',
            '        26–30 Messenger',
            '        31–35 Cultivator',
            '        36–40 Instigator',
            '        41–45 Refuse collector',
            '        46–50 Scanner',
            '        51–55 Accumulator',
            '        56–60 Aerial eye',
            '        61–65 Ambusher',
            '        66–70 Spirit aide',
            '        71–75 Vigilant eye',
            '        76–80 Gatebreaker',
            '        81–84 Labyrinth runner',
            '        85–88 Zhev',
            '        89–91 Machineen',
            '        92–94 Soaring watcher',
            '        95–96 Accumulator, zealous',
            '        97–98 Peacebringer',
            '        99–00 Synthetic body',
            '        01–06 Alarm mech',
            '        07–12 Cleaning mech',
            '        13–18 Garden mech',
            '        19–24 Gazer swarm',
            '        25–30 Lifting aventron',
            '        31–36 Extractor',
            '        37–42 soldier, basic',
            '        43–48 Storyteller',
            '        49–55 Assistant',
            '        56–72 Salvister',
            '        73–79 Servitor, basic',
            '        80–84 Servitor, biocoat',
            '        85–88 Companion',
            '        89–92 Salvister, advanced',
            '        93–96 Servitor, shifting',
            '        97–98 Exploring aventron',
            '        99 Buildnought',
            '        100 Warstriker',

        ]
        print(random.choice(automation_plans))
    elif roll < 91:
        # Vehicle plan in Building Tomorrow(page 83) & Numenera Destiny(page 147)
        vehicle_plans = [
            '',
            '        01–10 Glide ',
            '        11–20 Dynamic roller',
            '        21–25 Flitting board',
            '        26–30 Growling wing',
            '        31–35 Powered boots',
            '        36–40 Pico wheel',
            '        41–45 Powered exoskeleton',
            '        46–50 Roving abode',
            '        51–55 Sailing abode',
            '        56–60 Chronoboard',
            '        61–65 Land wheeler',
            '        66–70 Solo submersible',
            '        71–75 Tendril crawler',
            '        76–80 Blue voyager',
            '        81–85 Ectopic rover',
            '        86–90 Homecoming vector',
            '        91–94 Chronolapse',
            '        95–97 Ectopic wing ',
            '98 Fiery traverser'
            '        99 Moving fortress',
            '        100 Touring city',
            '        01–05 Dynamic frame',
            '        06–10 Hover disc',
            '        11–15 Hover frame',
            '        16–20 Junkwing',
            '        21–25 Scream wheeler',
            '        26–29 Snowskimmer',
            '        30–33 Swimming mount',
            '        34–37 Thunder harness',
            '        38–41 Waterskimmer',
            '        42–45 Deep diver',
            '        46–50 Mud roller',
            '        51–53 Chainpod',
            '        54–56 Jet frame',
            '        57–59 Jumper',
            '        60–62 Sliver',
            '        63–65 Transport cart',
            '        66–68 Windrider',
            '        69–71 Planetary escape pod',
            '        72–73 Voidstrider',
            '        74–75 Burrower',
            '        76–77 Deep swimmer',
            '        78–79 Fiery ascender',
            '        80–81 Flyer',
            '        82–83 Galloping gambado',
            '        84–85 Lava eel',
            '        86–87 Terapede',
            '        88–89 Battle cart',
            '        90–91 Battle flyer',
            '        92–93 Dimensional treader',
            '        94–95 Chrono engine',
            '        96–97 War chariot',
            '        98–99 Dimensional wing',
            '        100 Voidglider',

        ]
        print(random.choice(vehicle_plans))
    else:
        # Biological plan in Building Tomorrow(page 33)
        bio_plans = [
            '01–02 Conveyer',
            '03–04 Fluttering lamps',
            '05–06 Mulch slugs',
            '07–08 Scullion',
            '9–10 Skin, blending',
            '11–12 Torridisome',
            '13–14 Trilling cuddler',
            '15–16 Whisperer',
            '17–18 Crawling eye',
            '19–20 Digester',
            '21–22 Enthraller',
            '23–24 Harmonizer',
            '25–26 Inhalasome',
            '27–28 Prim',
            '29–30 Skin, plate',
            '31–32 Skin, protective',
            '33–34 Vigisome',
            '35–36 Claw wings',
            '37–38 Clawed extremity',
            '39–40 Cypher sniffer',
            '41–42 Defender',
            '43–44 Dissembling crown',
            '45–46 Eradicator',
            '47–48 Loping husk',
            '49–50 Mindspeaking implant',
            '51–52 Sentinel',
            '53–54 Skin, robust',
            '55–56 Tentacle injector',
            '57–58 Traumasome',
            '59–60 Watchful crown',
            '61–62 Advisor',
            '63–64 Cypher burster',
            '65–66 Envisager',
            '67–68 Gestation pod',
            '69–70 Guardian dyad',
            '71–72 Living abode',
            '73–74 Mind shard',
            '75–76 Portable hive',
            '77–78 Psychosome',
            '79–80 Vital sword',
            '81–82 Breadpod tree',
            '83–84 Commensural',
            '85 Hypnogogic mantle',
            '86 Inveiglator',
            '87 Reprisasome',
            '88 Reproduction pod',
            '89 Synth excreter',
            '90 Tentacle inquirer',
            '91 Thicket, obscuring',
            '92 Thicket, trapping',
            '93 Ingresser',
            '94 Philebrid',
            '95 Vital sword, blood drinking',
            '96 Fangdomen',
            '97 Living tower',
            '98 Evermore tree',
            '99 Prudence tree',
            '100 Titanomock',
        ]
        print(random.choice(bio_plans))

def iotum():
    roll = random.randint(1,100)
    loot = random.randint(1,6)

    if roll < 33:
        first_roll = random.randint(1,100)
        if first_roll < 21:
            print(loot, 'x Io')
        elif first_roll < 31:
            print(loot, 'x Immorcell Colony')
        elif first_roll < 39:
            print(loot, 'x Branar Lens')
        elif first_roll < 49:
            print(loot, 'x Cognitive Weave')
        elif first_roll < 59:
            print(loot, 'x Optogenetic Muscle')
        elif first_roll < 77:
            print(loot, 'x Responsive Synth')
        elif first_roll < 87:
            print(loot, 'x mother marrow')
        else:
            print(loot, 'x Apt Clay')

    elif roll < 76:
        second_roll = random.randint(1, 100)
        if second_roll < 9:
            print(loot, 'x Metabolic vesicle' )
        elif second_roll < 17:
            print(loot, 'x Allophene nodule' )
        elif second_roll < 27:
            print(loot, 'x Bio-circuitry')
        elif second_roll < 37:
            print(loot, 'x Synthsteel')
        elif second_roll < 47:
            print(loot, 'x Pliable metal' )
        elif second_roll < 53:
            print(loot, 'x Orthogonalium fiber' )
        elif second_roll < 63:
            print(loot, 'x Azure steel' )
        elif second_roll < 67:
            print(loot, 'x Fecundity matrix' )
        elif second_roll < 76:
            print(loot, 'x Mimetic gel' )
        elif second_roll < 81:
            print(loot, 'x Pluripotent mass' )
        elif second_roll < 87:
            print(loot, 'x Quantium' )
        elif second_roll < 92:
            print(loot, 'x Amber crystal' )
        elif second_roll < 95:
            print(loot, 'x Hyperfrustrum compressor' )
        elif second_roll < 97:
            print("1 x Protomatter if object/ruin is larger than 40 feet on a side, otherwise ", loot, "x Thaum dust")
        else:
            print(loot, 'x Thaum Dust' )
    else:
        third_roll = random.randint(1, 100)
        if third_roll < 13:
            print(loot, 'x Smart tissue' )
        elif third_roll < 24:
            print("2 x Psiranium")
        elif third_roll < 34:
            print("2 x Kaon dot")
        elif third_roll < 41:
            print("A Plan seed: ", plans())
        elif third_roll < 51:
            print("2 x Monopole")
        elif third_roll < 58:
            print("2 x Neurofilament plexus")
        elif third_roll < 66:
            print("2 x Midnight stone")
        elif third_roll < 73:
            print("1 x Oraculum")
        elif third_roll < 80:
            print("1 x Virtuon particle")
        elif third_roll < 85:
            print("1 x Tamed iron")
        elif third_roll < 89:
            print("1 x Philosophine")
        elif third_roll < 93:
            print("1 x Data orb")
        elif third_roll < 97:
            print("1 x Scalar boson rod")
        else:
            print("1 x Cosmic foam")

def salvage():
    print("Your salvage is: ")
    roll = random.randint(1, 6)  # random roll between 1 and 6 for loot
    shins = random.randint(1, 10)  # random roll between 1 and 10 for currency
    if roll < 3:
        # 1d10 shins + 1 part
        print(shins, "shin and 1 part")
    elif roll < 4:
        # 1d10 shins and an oddity or two + 1 part
        print(shins, "shin, 1 part and one oddity: ", )
        oddity()
    elif roll < 5:
        # 1d10 shins and either one roll on  the Iotum Result Table or ', level,' cyphers + parts equal to combined level
        print(shins, "shin")
        iotum()
    elif roll < 6:
        # 1d10 shins and either two rolls on the Iotum Result Table or 1 artifact + parts equal to combined level
        print(shins, "shin")
        artifact_roll = random.randint(1, 2)
        if artifact_roll == 1:
            iotum()
            iotum()
        else:
            level = random.randint(1,6)
            artifact(level)
            print('1 part')
    else:
        # 1d10 shins and three rolls on the Iotum Result Table + parts equal to combined level
        print(shins, "shin")
        iotum()
        iotum()
        iotum()

def item_menu():
    def print_menu():
        print(30 * "-", "NUMENERA MENU", 30 * "-")
        print("1. Random Cypher")
        print("2. Random Oddity")
        print("3. Random Artifact")
        print("4. Random Salvage")
        print("5. Random Plans")
        print("6. Specific Plans")
        print("0. Exit ")
        print(73 * "-")


    loop = True
    int_choice = -1
    while loop:  # While loop which will keep going until loop = False
        print_menu()  # Displays menu
        choice = input("Enter your choice [1-9]: ")
        if choice == '1':
            int_choice = 1
            rare = random.randint(1, 20)
            if rare == 20:
                artifact()   # 5% chance to generate artifact
            else:
                roll = random.randint(1, 6)
                while roll != 0:
                    cypher()  # generates random cypher
                    print("\n")
                    roll -= 1
        elif choice == '2':
            int_choice = 2
            oddity()  # generates random oddity from list
        elif choice == '3':
            int_choice = 3
            artifact()  # generates random artifact
            quirk()  # generates random quirk for artifact
        elif choice == '4':
            int_choice = 4
            salvage()  # generates random salvage loot
        elif choice == '5':
            int_choice = 4
            plans()
        elif choice == '6':
            print('this will generate a new menu for specific plans')
        elif choice == '0':
            int_choice = -1
            print("Exiting..")
            loop = False  # This will make the while loop to end
        else:
            # Any inputs other than listed values we print an error message
            input("Wrong menu selection. Enter any key to try again..")


# chargen
def beneficial_mutation():
    beneficial = ["Strengthened bones: You gain +5 to your Might Pool.",
                  "Improved circulation: You gain +5 to your Might Pool. ",
                  "Improved musculature: You gain +5 to your Might Pool. ",
                  "Improved nervous system: You gain +5 to your Speed Pool. ",
                  "Improved neural processes: You gain +5 to your Intellect Pool. "
                  "Thick hide: You gain +1 to Armor. ",
                  "Increased lung capacity: You can hold your breath for ﬁve minutes. ",
                  "Adhesion pads: Your hands and feet have naturally adhesive pads. 1 asset for climbing, keeping your footing, or retaining your grip. ",
                  "Slippery skin: You secrete a slippery oil. 1 asset for escaping grapple, bonds, squeezing through a small opening etc. ",
                  "Telekinetic shield: You reﬂexively use telekinesis to ward away attacks, giving you an asset in Speed defense tasks.",
                  'Suggestive voice: Your voice is so perfectly modulated that it is an asset in all interaction tasks. ',
                  "Processor dreams: When you sleep, you process information so that after you wake, you have an asset in any Intellect actions held over from the previous day. For example, if you have to determine whether an unknown plant is poisonous, you could “sleep on it” and make the determination the next day with an asset on the action.",
                  'Poison immunity: You are immune to all poisons. ',
                  'Disease immunity: You are immune to all diseases. ',
                  'Fire resistance: You have +3 to Armor against damage from ﬁre. ',
                  'Cold resistance: You have +4 to Armor against damage from cold. ',
                  'Psychic resistance: You have +3 to Armor against Intellect damage. ',
                  'Acid resistance: You have +5 to Armor against damage from acid. ',
                  'Puncture resistance: You have +2 to Armor against damage from puncturing attacks. ',
                  'Slicing resistance: You have +2 to Armor against damage from slicing attacks. ',
                  'Bludgeoning resistance: You have +2 to Armor against damage from crushing attacks. ',
                  'No scent: You cannot be tracked or located by scent, and you never have offensive odors. ',
                  'Sense Material: You can sense the presence of any single substance within short range, although you don’t learn details or the precise location. You and the GM should work together to determine the substance: water, iron, synth, granite, wood, ﬂesh, salt, and so on. You do not need to concentrate to sense the material.',
                  'Boneless: You have cartilage instead of bones. You can wriggle through tight spaces and slip free from bonds. You have an asset on any task that involves contortions or escaping.',
                  'Empathy: You feel other people’s moods and emotions. You have an asset on any task to determine another creature’s motives or emotional state, or to see through lies and other deceptions. ',
                  'Improved jumping: You have an asset on any task involving jumping. ',
                  'Remarkable poise: You have nearperfect balance. You have an asset on any task that involves balancing. ',
                  'Machine interface: You have an asset on any task involving understanding, operating, or repairing a numenera device. ',
                  'Eagle eyes: You have an asset on any visual perception task. ',
                  'Polyglot: When you hear a language spoken for at least one minute, you can communicate in that language as a native speaker for 28 hours. ',
                  'Precognition: You catch glimpses of the future. You have an asset on all initiative tasks. ',
                  'Eat anything: You can eat whatever you can fit inside your mouth and be nourished by it. ',
                  'Echolocation: You can “see” sound. You can see invisible creatures and objects within short range. ',
                  'Sense mutation: You are aware of the presence of any mutants within short range, even if those mutants are hidden from you. ',
                  'Kinetic absorption: You can absorb harmful energy and redirect it at others. When you take damage as a result of failing a Speed defense roll, you have an asset on the next attack roll you make before the end of your next turn. If your attack fails or you don’t attack during your next turn, you take 3 additional points of damage. ',
                  'Minor spacewarp: By very briefly foreshortening distance, you increase the range of any attack you make by one step. Immediaterange attacks become short range, short-range attacks become long range, and long-range attacks have a range of 200 feet (61 m).'

                  ]
    print('Beneficial mutation: ' + random.choice(beneficial))

def harmful_mutation():
    harmful = ['Deformed leg: All movement tasks are increased in difficulty by one step. ',
               'Deformed face/appearance: All pleasant interaction tasks are increased in difficulty by one step. ',
               'Deformed arm/hand: All tasks involving the arm or hand are increased in difficulty by one step. ',
               'Malformed brain: The difficulty of all memory- or cognitive-related tasks is increased by one step. ',
               'Mentally vulnerable: The difficulty of all Intellect defense tasks is increased by one step. ',
               'Slow and lumbering: The difficulty of all Speed defense tasks is increased by one step. ',
               'Sickly: The difficulty of all Might defense tasks is increased by one step. ',
               'Horrible growth: A large goiter, immobile tendril, or useless extra eye hangs from your face, increasing the difﬁculty of all pleasant interactions (with most creatures, particularly humans) by one step. ',
               'Useless limb: One of your limbs is unusable or missing. ',
               'Useless eye: One of your eyes is unusable or missing. The difﬁculty of tasks speciﬁcally involving eyesight (spotting, searching, and so on) is increased by one step. ',
               'Useless ear: One of your ears is unusable or missing. The difﬁculty of tasks speciﬁcally involving hearing is increased by one step. ',
               'Weakness in Might: Any time you spend points from your Might Pool, the cost is increased by 1 point. ',
               'Weakness in Speed: Any time you spend points from your Speed Pool, the cost is increased by 1 point. ',
               'Weakness in Intellect: Any time you spend points from your Intellect Pool, the cost is increased by 1 point.',
               'Accidental combustion: Once per day or so, a flammable object that you touch or that is next to you ignites in flame.',
               'Accidental psychokinesis: Once per day or so, an object that you touch or that is next to you moves violently, often breaking the object, but sometimes harming you or someone in immediate range (2 points of damage). ',
               'Debilitating telepathy: You are sometimes (usually once a day) afflicted by random bouts of cacophonous telepathy when thinking beings are within immediate range. You never gain valuable information, but for ten minutes, the overwhelming din in your head increases the difficulty of all tasks by one step. ',
               'Horrific precognition: You are sometimes (usually once a day) afflicted by random visions of the future where you or others within immediate range are hurt, killed, or otherwise harmed. You never gain valuable information, but for one minute, the shock increases the difficulty of all tasks by one step. ',
               'Hidden twin: A parasitic consciousness lives inside you. It grumbles and mutters to you all the time, causing you to be distracted and confused by the constant noise that only you can hear. The difficulty of all initiative and perception tasks is increased by one step. ',
               'Light blindness: You cannot see in areas of light and are blinded in such areas. However, you can see normally in dim light or darker conditions. ',
               'Membrane: You don’t have skin. Instead, your epidermis is a milky, gelatinous membrane. Because it dries and cracks, you must keep it damp. Each hour you go without immersing yourself in water for at least one minute, you take 1 point of damage (ambient)',
               'No mouth: You have no mouth and cannot talk. You consume sustenance in some other way that you and your GM agree to. ',
               'Horribly ugly: You are hideously deformed. The difficulty of all pleasant social interaction tasks is increased by one step. ',
               'Weak bones: Your Might Pool is decreased by 3 points. ',
               'Extraneous tendril: A nonprehensile tendril hangs uselessly from your body, always getting in the way. The difficulty of all movement actions is increased by one step.',
               ]
    print('Harmful mutation: ' + random.choice(harmful))

def powerful_mutation():
    powerful = ['Darksight: You can see in complete darkness as if it were light. Enabler. ',
                'No breath: You do not need to breathe. Enabler. ',
                'No water: You do not need to drink water to survive. Enabler. ',
                'Chameleon skin: Your skin changes colors as you wish. This is an asset in tasks involving hiding. Enabler. ',
                'Savage bite: Your mouth widens surprisingly, and hidden, pointed teeth emerge when you wish it. You can make a bite attack that inﬂicts 3 points of damage. Enabler. ',
                'Gluey globs: You can produce gluey globs at your ﬁngertips. This is an asset in tasks involving climbing or keeping your grip. You can also ﬂing these globs in immediate range, and if they hit, they increase the difﬁculty of the target’s physical tasks by one step for one round. Enabler to use in a task; action to use as an attack. ',
                'Face dancing: You can alter your features enough that you possess an asset in all tasks involving disguise. Enabler. ',
                'Sense numenera: You can sense the presence of a functioning numenera device or esotery within short range. You do not learn details or the precise location. Action. ',
                'Stinger: You can make an attack that inﬂicts 1 point of damage. If you make a second successful attack roll, your stinger also injects a poison that inﬂicts 4 points of Speed damage. Action. ',
                'Spit needles: You can make an attack within immediate range. You spit a needle that inﬂicts 1 point of damage. If you make a second successful attack roll, the needle also injects a poison that inﬂicts 4 points of Speed damage. Action. ',
                'Snake Tongue: You can make an attack within immediate range. You can flick your tongue as an attack to inflict 2 points of damage. You also have an increased ability to sense chemicals that allow for heightened abilities to identify prey, recognize kin, identify poison, choose mates, locate shelters, and follow trails. This ability is an asset on all checks involving perception of the above. ',
                'Spit acid: You can make an attack within immediate range. You spit a glob of acid that inﬂicts 2 points of damage. Action. ',
                'Spit webs: You can make up to 10 feet (3 m) of a strong, ropelike material each day at the rate of about 1 foot (0.3 m) per minute. The webbing is level 3. You can also spit globs of webbing in immediate range, and if they hit, they increase the difﬁculty of the target’s physical tasks by one step for one round. Action. ',
                'Filtered lungs: You have an asset to Might defense actions against vapors or noxious gases. You can survive in a hostile breathing environment (such as underwater or in a vacuum) for up to ten minutes. Enabler. ',
                'Disruptive ﬁeld (electronics) (2 Intellect points): When you wish it, you disrupt devices within immediate range (no roll needed). All devices operate as if they were 3 levels lower while in range of your ﬁeld. Devices reduced to level 0 or below do not function. Action. '
                'Disruptive ﬁeld (ﬂesh) (2 Intellect points): When you wish it, you disrupt ﬂesh within immediate range. All creatures within range of your ﬁeld take 1 point of damage. If you apply a level of Effort to increase the damage rather than affect the difﬁculty, each target takes 2 additional points of damage. If your attack fails, targets in the area still take 1 point of damage. Action. ',
                'Disruptive ﬁeld (thoughts) (1 Intellect point): When you wish it, you disrupt thoughts within immediate range. The difﬁculty of Intellect actions for all creatures within range is increased by one step. Action. ',
                'Magnetic ﬂesh: You attract or repel metal when you desire. Not only do small metal objects cling to you, but this mutation is an asset in tasks involving climbing on metal or keeping your grip on a metal item. This mutation is an asset to Speed defense tasks when being attacked by a metal foe or a foe with a metal weapon. Enabler. ',
                'Gravity negation (2 Intellect points): You ﬂoat slowly into the air. If you concentrate, you can control your movement at half your normal speed; otherwise, you drift with the wind or with any momentum you have gained. This effect lasts for up to ten minutes. If you also have the Hover esotery or trick of the trade, you can hover for twenty minutes and move your normal speed. Action to initiate.',
                'Telepathy (2 Intellect points): You can speak telepathically with others who are within short range. Communication is two-way, but the other party must be willing and able to communicate. You don’t have to see the target, but you must know that it’s within range. You can have more than one active contact at once, but you must establish contact with each target individually. Each contact lasts up to ten minutes. If you apply a level of Effort to increase the duration rather than affect the difﬁculty, the contact lasts for 28 hours. Action to establish contact. '
                'Pyrokinesis (1 Intellect point): You can cause a ﬂammable object you can see within immediate range to spontaneously catch ﬁre. If used as an attack, this power inﬂicts 2 points of damage. Action. ',
                'Telekinesis (2 Intellect points): You can exert force on objects within short range. Once activated, your power has an effective Might Pool of 10, a Might Edge of 1, and an Effort of 2 (approximately equal to the strength of a ﬁt, capable, adult human), and you can use it to move objects, push against objects, and so on. For example, you could lift and pull a light object anywhere within range to yourself or move a heavy object (like a piece of furniture) about 10 feet (3 m). This power lacks the ﬁne control to wield a weapon or move objects with much speed, so in most situations, it’s not a means of attack. You can’t use this ability on your own body. The power lasts for one hour or until its Might Pool is depleted, whichever comes ﬁrst. Action. ',
                'Phaseshifting (2 Intellect points): You can pass slowly through solid barriers at a rate of 1 inch (2.5 cm) per round (minimum of one round to pass through the barrier). You can’t act (other than moving) or perceive anything until you pass entirely through the barrier. You can’t pass through energy barriers. Action. ',
                'Power device (1+ Intellect points): You can charge an artifact or other device (except a cypher) so that it can be used once. The cost is 1 Intellect point plus 1 point per level of the device. Action. ',
                'Drain power: You can drain the power from an artifact or device, allowing you to regain 1 Intellect point per level of the device. You regain points at the rate of 1 point per round and must give your full concentration to the process each round. The GM determines whether the device is fully drained (likely true of most handheld or smaller devices) or retains some power (likely true of large machines). Action to initiate; action each round to drain. ',
                'Regeneration: In addition to regaining points through normal recovery rolls, you regain 1 point of your Might Pool or Speed Pool per hour, regardless of whether you rest, until both Pools are at their maximum. Enabler. ',
                'Feed off pain: Any time a creature within immediate range suffers at least 3 points of damage (after Armor subtraction) in one attack, you can restore 1 point to one of your Pools, up to its maximum. You can feed off any creature in this way, whether friend or foe. You never regain more than 1 point per round. Enabler.',
                'Absorb mutation (4 Might points): You touch a creature and gain one of its mutations. Against an unwilling creature, you must succeed on a Might attack roll. Determine randomly which mutation you gain if the creature has more than one. You have the mutation for 1d20 minutes, after which time it fades away. Action. ',
                'Awaken beneficial mutation (3 Intellect points): You choose a creature within immediate range and cause it to gain a randomly determined beneficial mutation for ten minutes. Against an unwilling creature, you must succeed on an Intellect attack roll. Action.',
                'Awaken cosmetic mutation (1 Intellect point): You choose a creature within immediate range and cause it to gain a randomly determined cosmetic mutation for ten minutes. Against an unwilling creature, you must succeed on an Intellect attack roll. Action. ',
                'Awaken distinctive mutation (6 Intellect points): You choose a creature within immediate range and cause it to gain a randomly determined distinctive mutation for ten minutes. Against an unwilling creature, you must succeed on an Intellect attack roll. Action. ',
                'Awaken harmful mutation (7 Intellect points): You choose a creature within immediate range and cause it to gain a randomly determined harmful mutation for ten minutes. Against an unwilling creature, you must succeed on an Intellect attack roll. Action. ',
                'Awaken powerful mutation (10 Intellect points): You choose a creature within immediate range and cause it to gain a randomly determined powerful mutation for ten minutes. Against an unwilling creature, you must succeed on an Intellect attack roll. Action. ',
                'Light burst (3 Intellect points): You create a burst of light through your skin that potentially blinds all creatures within immediate range for 1d6 + 1 rounds. You are immune to the effect. Action. ',
                'Light beam (2 Intellect points): You emit a ray of harmful energy that inflicts 4 points of damage to a single target within long range. Action. ',
                'Deafening scream (4 Might points): You scream, stunning all creatures within immediate range for one round (during which time they cannot take actions on their turn), and deafening all creatures within immediate range for 1d6 + 1 rounds. You are immune to the effect. Action. ',
                'Poisonous breath (3 Might points): You exhale poisonous vapors that inflict 3 points of damage to all creatures within immediate range for one round. You are immune to the vapors. Action. ',
                'Astral projection (4 Intellect points): You visualize a place within long range and cast your mind to that place, creating an invisible sensor that you can move a short distance each round for ten minutes or until you choose to end this ability. While using the projection, you see through your sensor instead of your eyes using your normal visual abilities. You may perceive the area around your body using your other senses as normal. ',
                'Freezing touch (2 Intellect points): Your touch inflicts 4 points of damage due to the extremely low temperatures of the air around you. Action. ',
                'Melting touch (2 Intellect points): Your touch inflicts 4 points of damage due to the heat you generate. Action. ',
                'Mimic action (3 Intellect points): If you observe an action that you could attempt, you can attempt it on the following round as if you possessed the skill you observed. For example, if you watch someone specialized in climbing climb a wall, you can attempt to climb as though specialized. You can’t attempt something that you can’t do (for example, you cannot use a mutant power or esotery that you don’t possess). Action to observe, action to attempt. ',
                'Access information (2 Intellect points): You can mentally tap into the datasphere and gain an asset on any topic or area of knowledge. Action. ',
                'Rotting touch (2 Might points): Organic material that you touch (including living flesh) disintegrates. This inflicts 4 points of damage. Action. ',
                'Corrosive touch (2 Might points): Inorganic material that you touch disintegrates. This inflicts 4 points of damage. Action. ',
                'Possession (5+ Intellect points): You control the actions of another creature that you touch. This effect lasts for ten minutes, during which time you can take no actions with your normal body. The target must be level 2 or lower. Once you have established control, you sense what the target senses as if you were that creature. You can allow it to act freely or override its control on a case-by-case basis. Instead of applying Effort to decrease the difficulty, you can apply Effort to increase the maximum level of the target. Thus, to possess a level 5 target (three levels above the normal limit), you must apply three levels of Effort. When the possession ends, the creature doesn’t remember being controlled or anything it did while under your command. Action to initiate. ',
                'Alter memories (3 Intellect points): You alter a specific memory in the mind of a creature you touch. You must have some foreknowledge that the creature has the memory you wish to alter. You can make the creature forget the real memory and replace it with anything you like. Obviously, something similar or at least realistic will cause less suspicion later. Action. ',
                'Teeth spew (3 Might points): You vomit a spray of bile and broken teeth that affects up to three targets within immediate range if they are all next to each other. Each target suffers 3 points of damage. You rapidly regrow the teeth you lose in this act. Action. ',
                'Acidic spew (3 Might points): You vomit a spray of acidic goo that affects up to three targets within immediate range if they are all next to each other. Each target suffers 3 points of damage. Action. ',
                'Rapid recovery: Your ten-minute recovery roll takes one action instead, so that your first two recovery rolls take one action, the third takes one hour, and the fourth takes ten hours. Enabler. ',
                'Ignore pain: You ignore the impaired condition and treat the debilitated condition as impaired. Enabler. ',
                'Burst of speed (2 Speed points): Your speed doubles for one round. Enabler.',
                'Dampen light (2 Intellect points): You reduce light levels within short range. Light in the area becomes dim light, dim light becomes very dim light, and very dim light becomes darkness. The area of reduced light moves with you until the effect ends. The effect lasts for ten minutes or until you choose to end it using an action. Action to initiate. ',
                'Excrete corrosive (3 Might points): You excrete a syrupy corrosive material from your hand. If you wipe it off on a metal surface, the goo corrodes the metal, dealing 4 points of damage. Otherwise, the excretion dries after one minute and flakes away. Action. ',
                'Fuse (5 Might points): You can merge your body with that of a willing creature within immediate range. You flow into that creature’s body and can remain there for up to one hour. Until this effect ends, you cannot use actions, but you perceive what the creature perceives and you can communicate with that creature. Action. ',
                'Invisibility (5 Intellect points): You fade from view and have no appearance for one minute. While invisible, you are specialized in stealth and Speed defense tasks. This effect ends if you do something to reveal your presence or position—attacking, performing an esotery, using an ability, moving a large object, and so on. If this occurs, you can regain the remaining invisibility effect by taking an action to focus on hiding your position. Action to initiate or reinitiate. ',
                'Immortal: You are in the prime of your life. You do not age and are immune to anything that would age you. Enabler. ',
                'Merge (6 Might points): You merge your body with an object that is your size or larger that you can touch. You disappear into the object and can remain there for as long as you like. While inside the object, you are insensate regarding what happens outside of the object, but you know how much time has passed. If the object you are merged with is destroyed, you are destroyed with it. The only action you can take while in the object is to move out of it. Action to initiate.',
                'Modify mass (3 Might points): You can increase your weight by up to 100% or decrease it by as much as 50% of your normal weight. The change in weight lasts for one hour. Action to initiate. ',
                'Petrify (5 Might points): You touch a creature and slowly turn it to a dry, hard, stonelike substance. On a success, the creature cannot move during its next turn and has +2 to Armor. If you touch the same creature three times in a row, the creature turns into a statue. Action. ',
                'Projection (3 Intellect points): You create a hologram of yourself in any spot you choose within short range. The illusion lasts for one minute or until anything touches it. It looks and sounds real, and it mimics your movements perfectly. Action to initiate. ',
                'Invisible extra arm: You have one invisible extra arm. It can hold objects, wield weapons, hold a shield, pick pockets, and so on. This mutation does not increase the number of actions you can take in a round or the number of attacks you can attempt. Enabler. ',
                'Resonance field (3 Intellect points): You focus your mind to augment numenera nearby. Characters within immediate range have an asset on any roll made to use numenera. The effect lasts for one minute. Action to initiate. ',
                'Vampire (2 Might points): You touch another creature and draw its physical energies to sustain your own. On a success, the creature takes 2 points of damage and you recover 1 point of damage. Action to initiate. ',
                'X-ray vision (5 Might points): You focus your vision to peer through a solid object. You see as if you were in a lighted area. Your vision can pierce up to 3 feet (0.9 m) of organic material, 1 foot (0.3 m) of stone, or 1 inch (2.5 cm) of metal. Your vision lasts for one minute. Action to initiate. ',
                'Invisible wings: You have invisible wings on your back that allow you to glide, carried by the wind. They are not powerful enough to carry you aloft like a bird’s wings. Enabler.',
                'Bony Protusions: Ugly growths of bone protrude from you skin and form a semi-viable suit of armor around you. These growths are made of a denser bone that is common among humans and is therefore harder to break through. You gain +3 to your armor, but conventional armors cannot be worn over the protrusions. Also, any pleasant social interaction are made a step harder due to your shocking appearance.'
                ]
    print('Powerful mutation: ' + random.choice(powerful))

def distinctive_mutation():
    distinctive = [
        'Extra mouth: You have an extra mouth on your hand, face, or stomach. This mouth is ﬁlled with razor-sharp teeth and, if used to attack, inﬂicts 3 points of damage. You can also speak with two voices at once. Enabler. ',
        'Snakelike arm: One of your arms ends in a fanged mouth. You can use it to attack, inﬂicting 3 points of damage. If you make a second successful attack with the arm, you also inject a poison that inﬂicts 4 points of Speed damage. You can’t use the snakelike arm for anything other than biting. Enabler. ',
        'Tendrils on forehead: Four to six tendrils, each 12 to 24 inches (30 to 61 cm) long, come out of your forehead. They can grasp and carry anything that your hand could, although a large object would block your ﬁeld of vision. Also roll on the beneﬁcial mutations list (page 124). Enabler. ',
        'Tendrils instead of ﬁngers: Your ﬁngers are tendrils 12 inches (30 cm) long. They are an asset to any task involving climbing, grasping, or keeping your grip. Further, you can effectively pick up and hold two objects in each hand rather than one. You can’t wield more than one weapon per hand. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Tendrils instead of arms: Your arms are tendrils 6 feet (1.8 m) long (or only one arm is a tendril, if you prefer). Although you lose the ﬁne manipulative ability of ﬁngers and a thumb, you can still grasp objects, have a much longer reach, and have an asset for all tasks involving grappling or wrestling. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Tendrils instead of eyes: You are blind, but each eye socket has a retractable tendril that is 10 feet (3 m) long. These tendrils can feel around rapidly to give you a physical sense of everything within immediate range. Further, they can be used to manipulate very light objects, activate controls, and so forth. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Tendrils instead of legs/feet: Your legs or feet are tendrils that are 6 feet (1.8 m) long (or only one leg or foot is a tendril, if you prefer). You can still walk and move normally, and you have an asset for all tasks involving grappling or wrestling. The tendrils are prehensile enough to grasp large objects. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Scaly body: You gain +2 to Armor. Enabler. ',
        'Covered in spiny needles/spikes: Any creature striking you with its body automatically suffers 1 point of damage. Enabler. ',
        'Quills: You have quills that you can launch from your body to attack a foe within short range. This attack inﬂicts 4 points of damage, and you never run out of ammo. You can also use this attack in melee. Action. ',
        'Carapace: You gain +2 to Armor. Enabler. ',
        'Chlorophyll: You gain nutrients from the sun and don’t need to eat or breathe if you have daily exposure to sunlight. Your skin, not surprisingly, is green. Enabler. ',
        'Extra joint in arms: Your arms are long and jointed so that you have two elbows in each. You have a long reach and can strike foes from unexpected angles. This mutation is an asset when making melee attacks. However, you can modify your attacks only by using Speed, not Might. Enabler. ',
        'Extra joint in legs: Your legs are long and jointed so that you have two knees in each. You have a long stride, and this mutation is an asset for all running, climbing, jumping, and balancing tasks. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Spider legs from torso: In addition to your normal limbs, six or eight spiderlike legs, each 6 feet (1.8 m) long, extend from your sides. They are an asset in any task involving running, keeping your feet, standing your ground, and climbing. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Extra arms: You have one or two extra arms. They can hold objects, wield weapons, hold a shield, and so on. This mutation does not increase the number of actions you can take in a round or the number of attacks you can attempt. Enabler. ',
        'Extra legs: You have two extra legs. They are an asset in any task involving running, keeping your feet, and standing your ground. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Spider legs from torso: In addition to your normal limbs, six or eight spiderlike legs, each 6 feet (1.8 m) long, extend from your sides. They are an asset in any task involving running, keeping your feet, standing your ground, and climbing. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Snake tail: You have a prehensile tail that is 6 feet (1.8 m) long. It is an asset for all tasks involving grappling or wrestling. The tail can grasp large objects. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Stinging tendril: You have a prehensile tendril (or tail) that grows from some part of your body and ends in a poisonous stinger. You can make an attack with your stinger that inﬂicts 2 points of damage. If you make a second successful attack roll, the stinger also injects a poison that inﬂicts 4 points of Speed damage. The tendril (or tail) can’t be used for anything else. Action. ',
        'Eyes on stalks: Your eyes are on stalks and can move in any direction, independently of each other. You can peek around corners without exposing yourself to danger. This is an asset in initiative and all perceiving tasks. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Extra eyes on hands/ﬁngers: You can peek around corners without exposing yourself to danger. This is an asset in initiative and all perceiving tasks. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Extra eyes on hands/ﬁngers: You can peek around corners without exposing yourself to danger. This is an asset in initiative and all perceiving tasks. Also roll on the beneﬁcial mutations table. Enabler. ',
        'Aquatic: Your body is streamlined and ﬁnned, your ﬁngers and toes webbed. This is an asset (two steps) in swimming, and you can see perfectly underwater (as if above water). Although you have lungs, you also have gills, so you can also breathe underwater. Enabler. ',
        'Wings: You have feathered or ﬂeshy wings on your back that allow you to glide, carried by the wind. They are not powerful enough to carry you aloft like a bird\’s wings. Enabler.',
        'Bone claws: You have bony spikes protruding from your hands or the backs of your arms. Your unarmed attacks deal 1 additional point of damage. Enabler. '
        'Spurs: You have large, bony spurs on your elbows and knees that you can use as light weapons that inflict 1 additional point of damage. Enabler.',
        'Detachable limb (3 Might points): You can detach an arm or leg from your body. You control this limb as if it were still attached, though only if it remains within long range. If you are separated by a distance greater than long range, the limb stops moving. You can reattach the limb at any time by picking it up and sticking it to the stump. Action to initiate.',
        'Removable eye (2 Might points): You can pull out one of your eyes and still see through it as long as it’s within long range. You must return the eye to its socket within an hour or you lose it. Action to initiate. ',
        'Extra eye(s) on stalk(s): You have one to three additional eyes on stalks. You can peek around corners without exposing yourself to danger. This is an asset in initiative and all perception tasks. Also roll on the beneficial mutations table. Enabler.',
        'Tail: You have a long tail that serves as an asset for balancing, climbing, and running tasks. ',
        'Enormous ears: Your enormous ears are especially sensitive. You have an asset on all perception tasks that involving listening. Enabler. ',
        'Modify limb (1 Might point): You cause a limb of your choice to grow up to twice its normal size or shrink to half its normal size. If you increase the size, you have an asset for any Might roll that involves using that limb, though not for attacks. The change in size lasts for one hour. Also roll on the beneficial mutations table. Action to initiate. '
        'Mouths in your hands: You have a mouth in the palm of each hand. Neither of these mouths can speak, but they can eat and bite. Your unarmed attacks deal 1 additional point of damage. Enabler. ',
        'Prehensile tongue: Your tongue is flexible and 3 feet (0.9 m) long. You can use it to grasp objects, and you have an asset for all tasks involving grappling and wrestling. Also roll on the beneficial mutations table. Enabler',
        'Rampant evolution: Each day, roll on the cosmetic mutations table (page 128 of the Numenera corebook) and gain the result. The mutation remains until you use this mutation again. Also roll on the beneficial mutations table. Enabler. ',
        'Organic steel flesh: Your flesh is reminiscent of flexible metal. You have +3 to Armor, but you cannot wear other mundane armor as it is too encumbering. Enabler. ',
        'Amorphous arm (1 Might point): You can make one of your arms into amorphous goo that you control for one minute. It retains its normal strength but can ooze through cracks, can stretch up to three times its length, and is an asset if you try to suffocate a foe. Action to initiate. ',
        'Amorphous body (3 Might points): You can transform into amorphous goo for one minute. You retain your normal strength but move at half speed. You can ooze through cracks, can stretch up to three times your length, and have 2 additional points of Armor that apply only to piercing and slashing attacks. You gain an asset for climbing and an inability in jumping or running. Action to initiate. ',
        'Pseudopods: You have one or two pseudopods that can be used for rough grasping or half-speed locomotion. They can stretch as long as your normal arms. Enabler. ',
        'Tendrils on back: Two to four prehensile tendrils, each 6 feet (1.8 m) long, sprout from your back. They are not strong or dextrous enough to wield weapons, but they can manipulate light objects. Enabler. ',
        'Tentacles on face: Four to six tendrils, each 12 to 24 inches (30 to 61 cm) long, surround your mouth. They can grasp and carry anything that your hand could. Also roll on the beneficial mutations table. Enabler. ',
        'Gliding membrane: You have fleshy membranes between your arms and torso that allow you to glide, carried by the wind. They are not powerful enough to carry you aloft like a bird’s wings. Enabler. ',
        'Huge claws: Your hands are medium weapons, and you have an asset when using them to attack. It’s very difficult for you to perform delicate or precise tasks involving manual dexterity, and the difficulty of such tasks is increased by one step. ',
        'Uni-horn: You have a long horn on your forehead or the top of your head. You can use this as a medium weapon.',
    ]
    print('Distinctive mutation: ' + random.choice(distinctive))

def cosmetic_mutation():
    cosmetic = [
        'Purple skin',
        'Green skin ',
        'Red skin',
        'Yellow skin',
        'Ashen skin ',
        'Albino'
        'Onyx skin',
        'Blue skin',
        'Purple hair ',
        'Green hair',
        'Red hair ',
        'Yellow hair ',
        'White hair ',
        'Blue hair ',
        'Striped hair ',
        'Horns',
        'Antlers ',
        'Extremely hirsute ',
        'Entirely hairless',
        'Scaly skin ',
        'Leathery skin ',
        'Transparent skin ',
        'Skin turns transparent in sunlight ',
        'Skin changes color in sunlight',
        'Very tall ',
        'Very large ',
        'Very short ',
        'Very thin',
        'Very long neck',
        'Hunched back ',
        'Long, thin tail',
        'Short, broad tail',
        'Long arms ',
        'Short arms ',
        'Long legs',
        'Short legs ',
        'Bony ridge on face ',
        'Bony ridge on back ',
        'Bony ridge on arms',
        'Purple eye(s) ',
        'Red eye(s) ',
        'Yellow eye(s) ',
        'White eye(s) ',
        'Black eye(s) ',
        'Large eyes ',
        'Bulbous eyes ',
        'Two pupils in one eye ',
        'Large ears ',
        'Pointed ears ',
        'Webbed ﬁngers',
        'Webbed toes ',
        'Four ﬁngers on each hand ',
        'Six ﬁngers on each hand',
        'Long ﬁngers',
        'Purple nails ',
        'Green nails',
        'Yellow nails',
        'White nails ',
        'Black nails ',
        'Blue nails ',
        'Odd lumps on ﬂesh ',
        'Useless antennae (like an insect) ',
        'Extra useless limb ',
        'Extra useless eye ',
        'Fleshy frills or useless ﬂagella (small)',
        'Useless tendrils (large)',
        'Mandibles ',
        'Pointed teeth ',
        'Tusks ',
        'Black teeth',
        'Red teeth',
        'Purple teeth',
        'Green teeth',
        'Purple lips ',
        'Green lips ',
        'Yellow lips',
        'White lips ',
        'Black lips ',
        'Blue lips ',
        'Purple spittle ',
        'Red spittle',
        'Yellow spittle',
        'White spittle  ',
        'Black spittle',
        'Distinctive odor',
        'Feathers  ',
        'Head crest',

    ]
    cosmetic_roll = random.randint(1, 4)
    print('Cosmetic mutation: ')
    while cosmetic_roll != 0:
        old_cosmetic = random.choice(cosmetic)
        print(old_cosmetic)
        #print(random.choice(cosmetic))
        cosmetic.remove(old_cosmetic)
        cosmetic_roll -= 1

def mutation():
    # choices
    # 2 beneficial
    # 3 beneficial and 1 harmful
    # 1 powerful and 1 harmful, 1 distinctive and 1 harmful

    mutate = random.randint(1, 4)
    if mutate == 1:
        beneficial_mutation()
        beneficial_mutation()
        # i = 2
        # while i != 0:
        #     beneficial_mutation()
        #     i -= 1

    elif mutate == 2:
        beneficial_mutation()
        beneficial_mutation()
        beneficial_mutation()
        harmful_mutation()

    elif mutate == 3:
        powerful_mutation()
        harmful_mutation()

    else:
        distinctive_mutation()
        harmful_mutation()
    cosmetic_mutation()

def hair():
    hair_length_list = [
        "Cropped",
        "Short",
        "Long",
        "Very long",
        "Extremely long"]
    hair_style_list = [
        "Afro"
        "Pixie cut"
        "Mohawk"
        "Sidecut"
        "Braided",
        "Curly",
        "Dreadlocks",
        "Frazzled",
        "Greasy",
        "Limp",
        "Messy",
        "Top knot",
        "Pony-tail",
        "Straight",
        "Streaked",
        "Thick",
        "Thinning",
        "Wavy",
        "Well groomed",
        "Wiry"
    ]
    hair_color_list = [
        "brown",
        "auburn",
        "blond",
        "red",
        "golden",
        "silver",
        "gray",
        "white",
        "black",
        "blue",
        "purple",
        "pink",
        "yellow",
        "red",
        "orange",
        "green",
        "teal"]

    hair_length_choice = random.choice(hair_length_list)
    hair_style_choice = random.choice(hair_style_list)
    hair_color_choice = random.choice(hair_color_list)

    hair_roll = random.randint(1,3)
    if hair_roll == 1:
        print('Shaved head')
    elif hair_roll == 2:
        print('Balding')
    else:
        if hair_length_choice == "Cropped" or "Short":
            print(hair_length_choice, hair_color_choice, 'hair')
        else:
            print(hair_length_choice, hair_style_choice, hair_color_choice, 'hair')

def noticeable():
    traits = [
        "Impressive facial scarring in a geometric pattern",
        "Several large scars that appear to have been from a battle or accident",
        "Multiple teeth replaced with gold or other metal and possibly decorated.",
        "Wears a necklace of teeth, ears or similar savage trophies and corresponding swagger.",
        "Appears to have extensive chemical or burn scarring on face",
        "Fastidious in dress and grooming. Keeps clothing and equipment immaculate whenever possible.",
        "Collection of medals and awards worn on person, may or may not be earned.",
        "Face and hands permanently marked by industrial grit that has worked itself under the skin.  ",
        "Clothing often dishevelled, hair unkempt.",
        "Elaborate fashion and appears immaculately groomed",
        "Wears gaudy trinkets and jewelry in nauseating profusion.",
        "Always wears heavy leather gloves",
        "Heavy-set. Not obese, but large and bulky.",
        "Wears bright colours",
        "One eye replaced by a magically glowing shell or stone. Provides normal vision.",
        "Eyes are two different colors"
        "Always has a satchel"
        "Wears a duster covered with small gadgets and vials"
    ]
    trait_choice = random.choice(traits)
    print(trait_choice)

def missing_limbs():
    missing_eye_list = [
        "Wears an eyepatch",
        "Has a glass eye",
        "Is blind in one eye"
    ]
    missing_fingers_list = [
        "Is missing a single finger ",
        "Is missing two fingers ",
        "Is missing three fingers ",
        "Is missing four fingers ",
        "Is missing all the fingers "]
    limb_list = [
        "left hand.",
        "right hand.",
        "left arm.",
        "right arm.",
        "left foot.",
        "right foot.",
        "left leg.",
        "right leg."
    ]
    ear_list = ['Left ear missing', 'Right ear missing', 'Both ears missing', 'Piece of left ear is missing', 'Piece of right ear is missing', 'Pieces of both ears are missing']
    hand_choice_list = ["left hand", "right hand"]
    eye = random.choice(missing_eye_list)
    fingers = random.choice(missing_fingers_list)
    limbs = random.choice(limb_list)
    hand = random.choice(hand_choice_list)
    ear = random.choice(ear_list)

    missing_roll = random.randint(1,10)
    if missing_roll == 10:
        limb_choice = random.randint(1,4)
        if limb_choice == 1:
            print(eye)
        elif limb_choice == 2:
            print(fingers, "on their", hand)
        elif limb_choice == 3:
            print(ear)
        else:
            print('They are missing their',limbs)

def eye_color():
    eyecolor = [
        "Brown",
        "Silver",
        "Amber",
        "Blue",
        "Green",
        "Golden",
        "Cyan",
        "Gray",
        "Black",
        "Red",
        "Purple",
        "Hazel",
        "Violet",
    ]
    color = random.choice(eyecolor)
    print(color, 'eyes')

def goals():
    goals_list = [
        "To accumulate power",
        "To atone",
        "To avenge",
        "To avoid notice",
        "To battle",
        "To be a champion",
        "To be careful",
        "To be forgotten",
        "To be praised",
        "To be remembered in song",
        "To be smarter, faster and stronger",
        "To become a beast",
        "To become a terror to criminals",
        "To become someone else",
        "To bring about unending summer",
        "To commit an atrocity",
        "To conquer a faraway land",
        "To find someone to do their dirty work",
        "To craft a masterwork",
        "To cure an illness",
        "To destroy an artifact",
        "To devour",
        "To die gloriously",
        "To discover the truth",
        "To discover",
        "To do good",
        "To do what can't be done",
        "To do what must be done",
        "To earn affection",
        "To earn renown",
        "To entertain",
        "To escape",
        "To establish a dynasty",
        "To evangelize",
        "To expand their land",
        "To explore a mysterious place",
        "To extinguish an evil forever",
        "To find the one",
        "To find the six-fingered man",
        "To find true love",
        "To fly",
        "To follow an order",
        "To gain a title",
        "To gain honor",
        "To get just one more haul",
        "To get out of an obligation",
        "To go where no man has gone before",
        "To hate",
        "To heal an old wound",
        "To help a family member",
        "To help others",
        "To hide from a shameful fact",
        "To hunt the most dangerous game",
        "To improve the realm",
        "To indulge",
        "To kill a hated foe",
        "To live a quiet life",
        "To live forever",
        "To live up to expectations",
        "To locate a lost thing",
        "To make amends",
        "To make good on a bet",
        "To make money",
        "To make the best of it",
        "To not screw it all up",
        "To overcome a bad habit",
        "To overcome a disadvantage",
        "To party",
        "To perfect a skill",
        "To play the game",
        "To preserve the law",
        "To prove a point",
        "To prove their worth",
        "To prove worth",
        "To raise dragons",
        "To reclaim what was taken",
        "To recover a lost memory",
        "To restore the family name",
        "To retire",
        "To retreat from society",
        "To return home",
        "To reunite with a loved one",
        "To rise in rank",
        "To run away",
        "To save someone from a monstrosity",
        "To serve",
        "To settle down",
        "To show kindness",
        "To show them all",
        "To spill blood",
        "To spread suffering",
        "To spread the good word",
        "To steal something valuable",
        "To survive just one more day",
        "To teach",
        "To travel",
        "To uncover a hidden truth",
        "To uncover the past",
        "To wake the ancient sleepers"
    ]
    goal = random.choice(goals_list)
    print('Goal:', goal)

def body_type():
    body_list = [
        'Thin and delicate',
        'Of average build',
        'Well-muscled',
        'Slightly overweight',
        'Lean and lanky',
        'Lithe and lean',
        'Thin and wiry',
        'Sinewy and strong',
        'Flabby and weak',
        'Lumpy'
        'Bent',
        'Thin and flimsy',
        'Soft and chubby',
        'Thin and petite',
        'Pudgy',
        'Big and broad',
        'Stocky and strong',
        'Bony',
        'Curvy',
        'Wide and ponderous',
    ]
    body_choice = random.choice(body_list)
    print("Body type:",body_choice)

def height():
    height_list = [
        'Unusually short.',
        'Short in stature.',
        'Average height.',
        'Slightly above average height.',
        'Well above average height.',
        'Unusually tall.',
    ]
    height_choice = random.choice(height_list)
    print(height_choice)

def flaw():
    flaw_list = [
        'Fidgets.',
        'Drinks too much.',
        'Eats too much.',
        'Swears often.',
        'Has poor hygiene.',
        'Can’t resist flirting.',
        'Can’t stop staring.',
        'Sweats profusely and easily.',
        'Is a habitual liar.',
        'Embellishes the truth.',
        'Exaggerates details.',
        'Has a short temper.',
        'Is melodramatic.',
        'Gossips.',
        'Chews with an open mouth.',
        'Often sniffs audibly.',
        'Believes what you tell them.',
        'Is skeptical of everything.',
        'Paces.',
        'Makes poor eye contact.',
    ]
    flaw_choice = random.choice(flaw_list)
    print("Flaw:",flaw_choice)

def mood():
    calm_list = [
        'agitated.',
        'agreeable.',
        'angry.',
        'artistic.',
        'assertive.',
        'boastful.',
        'bored.',
        'carefree.',
        'cautious.',
        'cheerful.',
        'compassionate.',
        'confident.',
        'curious.',
        'deceitful.',
        'despondent.',
        'devout.',
        'disagreeable.',
        'dour.',
        'driven.',
        'eager.',
        'fearful.',
        'focused.',
        'foolish.',
        'friendly.',
        'fun-Loving.',
        'funny.',
        'gloomy.',
        'greedy.',
        'gruff.',
        'happy.',
        'hopeful.',
        'indifferent.',
        'lazy.',
        'loyal.',
        'manipulative.',
        'mischievous.',
        'nervous.',
        'outspoken.',
        'reserved.',
        'sophisticated.',
        'strict.',
        'suspicious.',
        'thoughtful.',
        'tired.',
        'uninterested.',
        'upbeat.',
        'weak-willed.',
        'withdrawn.',
    ]
    stress_list = [
        'fearful.',
        'paranoid.',
        'selfish.',
        'masochistic.',
        'hopeless.',
        'irrational.',
        'rapturous.',
        'stalwart.',
        'focused.',
        'vigorous.',
        'withdrawn.',
        'murderous.',
        'obsessive.',
        'authoritarian.',
        'determined.',
        'brave.',
        'spiteful.',
        'belligerent.',
        'caustic.',
        'reckless.',
        'argumentative.',
        'gluttonous.',
        'overly protective.',
        'angry.',
        'cowardly.',
        'meticulous.',
        'sarcastic.',
        'stubborn.',
        'destructive.',
        'practical.',
        'pushy.',
        'fanatical.',
        'secretive.',
        'scornful.',
        'courageous.',
        'impractical.',
        'calculating.',
        'industrious.',
        'manipulative.',
        'destructive.',
        'compulsive.',
        'intolerant.',
    ]

    calm_trait = random.choice(calm_list)
    stress_trait = random.choice(stress_list)
    print('When calm, they are usually', calm_trait)
    print('When stressed, they often become', stress_trait)

def traits():
    print('test')
    # 'Abrasive', 'Mental', 'Negative',
    # 'Abrupt', 'Mental', 'Negative',
    # 'Absent-minded', 'Mental', 'Negative',
    # 'Adamant', 'Mental', 'Neutral',
    # 'Adaptable', 'Mental', 'Positive',
    # 'ADHD', 'Mental', 'Neutral',
    # 'Afraid', 'Mental', 'Negative',
    # 'Afraid of commitment', 'Mental', 'Negative',
    # 'Afraid of ghosts', 'Mental', 'Negative',
    # 'Agonized', 'Mental', 'Negative',
    # 'Alcoholic', 'Mental', 'Negative',
    # 'Alert', 'Mental', 'Negative',
    # 'Aloof', 'Mental', 'Negative',
    # 'Always late', 'Mental', 'Negative',
    # 'Ambitious', 'Mental', 'Positive',
    # 'Analytical', 'Mental', 'Neutral',
    # 'Angry', 'Mental', 'Negative',
    # 'Annoyed', 'Mental', 'Negative',
    # 'Anti-intellectual', 'Mental', 'Neutral',
    # 'Anxious', 'Mental', 'Negative',
    # 'Apathetic', 'Mental', 'Negative',
    # 'Apprehensive', 'Mental', 'Neutral',
    # 'Arbitrary', 'Mental', 'Negative',
    # 'Aristocratic', 'Mental', 'Negative',
    # 'Art collector', 'Mental', 'Neutral',
    # 'Articulate', 'Mental', 'Positive',
    # 'Artistic', 'Mental', 'Positive',
    # 'Artless', 'Mental', 'Negative',
    # 'Ashamed', 'Mental', 'Negative',
    # 'Aspiring', 'Mental', 'Positive',
    # 'Assertive', 'Mental', 'Neutral',
    # 'Astonished', 'Mental', 'Neutral',
    # 'Astounded', 'Mental', 'Neutral',
    # 'Astute', 'Mental', 'Positive',
    # 'Attentive', 'Mental', 'Positive',
    # 'Attentive to others', 'Mental', 'Positive',
    # 'Audacious', 'Mental', 'Positive',
    # 'Austere', 'Mental', 'Neutral',
    # 'Authoritarian', 'Mental', 'Negative',
    # 'Authoritative', 'Mental', 'Neutral',
    # 'Autocratic', 'Mental', 'Negative',
    # 'Avoids conflict', 'Mental', 'Neutral',
    # 'Aware of own limitations', 'Mental', 'Positive',
    # 'Awed', 'Mental', 'Neutral',
    # 'Awful', 'Mental', 'Negative',
    # 'Awkward', 'Mental', 'Neutral',
    # 'Babbling', 'Mental', 'Negative',
    # 'Babyish', 'Mental', 'Neutral',
    # 'Backstabber', 'Mental', 'Negative',
    # 'Bashful', 'Mental', 'Neutral',
    # 'Belligerent', 'Mental', 'Negative',
    # 'Benevolent', 'Mental', 'Positive',
    # 'Betrayed', 'Mental', 'Negative',
    # 'Bewildered', 'Mental', 'Negative',
    # 'Bewitching', 'Mental', 'Neutral',
    # 'Biter', 'Mental', 'Negative',
    # 'Bitter', 'Mental', 'Negative',
    # 'Blames others', 'Mental', 'Negative',
    # 'Blasé', 'Mental', 'Neutral',
    # 'Blissful', 'Mental', 'Positive',
    # 'Blowhard', 'Mental', 'Negative',
    # 'Boastful', 'Mental', 'Neutral',
    # 'Boisterous', 'Mental', 'Neutral',
    # 'Bold', 'Mental', 'Positive',
    # 'Boorish', 'Mental', 'Negative',
    # 'Bored', 'Mental', 'Negative',
    # 'Boring', 'Mental', 'Negative',
    # 'Bossy', 'Mental', 'Negative',
    # 'Boundless', 'Mental', 'Positive',
    # 'Bragging', 'Mental', 'Neutral',
    # 'Brainy', 'Mental', 'Positive',
    # 'Brash', 'Mental', 'Neutral',
    # 'Bratty', 'Mental', 'Negative',
    # 'Brave', 'Mental', 'Positive',
    # 'Brazen', 'Mental', 'Positive',
    # 'Bright', 'Mental', 'Positive',
    # 'Brilliant', 'Mental', 'Positive',
    # 'Broad-minded', 'Mental', 'Positive',
    # 'Brotherly', 'Mental', 'Positive',
    # 'Brutish', 'Mental', 'Negative',
    # 'Bubbly', 'Mental', 'Positive',
    # 'Bully', 'Mental', 'Negative',
    # 'Burdened', 'Mental', 'Negative',
    # 'Busy', 'Mental', 'Neutral',
    # 'Calculating', 'Mental', 'Neutral',
    # 'Callous', 'Mental', 'Negative',
    # 'Calm', 'Mental', 'Positive',
    # 'Candid', 'Mental', 'Positive',
    # 'Capable', 'Mental', 'Positive',
    # 'Capricious', 'Mental', 'Negative',
    # 'Captivated', 'Mental', 'Neutral',
    # 'Carefree', 'Mental', 'Neutral',
    # 'Careful', 'Mental', 'Positive',
    # 'Careless', 'Mental', 'Negative',
    # 'Careless of social rules', 'Mental', 'Neutral',
    # 'Caring', 'Mental', 'Positive',
    # 'Caustic', 'Mental', 'Negative',
    # 'Cautious', 'Mental', 'Positive',
    # 'Changeable', 'Mental', 'Neutral',
    # 'Charismatic', 'Mental', 'Positive',
    # 'Charitable', 'Mental', 'Positive',
    # 'Charming', 'Mental', 'Positive',
    # 'Chaste', 'Mental', 'Neutral',
    # 'Chatty', 'Mental', 'Positive',
    # 'Cheat', 'Mental', 'Negative',
    # 'Cheerful', 'Mental', 'Positive',
    # 'Cheerless', 'Mental', 'Negative',
    # 'Childish', 'Mental', 'Negative',
    # 'Chivalrous', 'Mental', 'Positive',
    # 'Civilised', 'Mental', 'Neutral',
    # 'Classy', 'Mental', 'Positive',
    # 'Clean', 'Mental', 'Positive',
    # 'Clever', 'Mental', 'Positive',
    # 'Close', 'Mental', 'Neutral',
    # 'Closed', 'Mental', 'Negative',
    # 'Clumsy', 'Mental', 'Negative',
    # 'Coarse', 'Mental', 'Neutral',
    # 'Cocky', 'Mental', 'Positive',
    # 'Coherent', 'Mental', 'Positive',
    # 'Cold', 'Mental', 'Negative',
    # 'Cold hearted', 'Mental', 'Negative',
    # 'Combative', 'Mental', 'Negative',
    # 'Comfortable', 'Mental', 'Positive',
    # 'Committed', 'Mental', 'Positive',
    # 'Communicative', 'Mental', 'Positive',
    # 'Compassionate', 'Mental', 'Positive',
    # 'Competent', 'Mental', 'Positive',
    # 'Competitive', 'Mental', 'Neutral',
    # 'Complacent', 'Mental', 'Negative',
    # 'Compliant', 'Mental', 'Neutral',
    # 'Compulsive', 'Mental', 'Neutral',
    # 'Compulsive liar', 'Mental', 'Negative',
    # 'Conceited', 'Mental', 'Negative',
    # 'Concerned', 'Mental', 'Neutral',
    # 'Concrete thinking', 'Mental', 'Neutral',
    # 'Condemned', 'Mental', 'Negative',
    # 'Condescending', 'Mental', 'Negative',
    # 'Confident', 'Mental', 'Positive',
    # 'Conformist', 'Mental', 'Neutral',
    # 'Confused', 'Mental', 'Negative',
    # 'Congenial', 'Mental', 'Positive',
    # 'Connoisseur of good drink', 'Mental', 'Positive',
    # 'Connoisseur of good food', 'Mental', 'Positive',
    # 'Conscientious', 'Mental', 'Positive',
    # 'Conservative', 'Mental', 'Neutral',
    # 'Considerate', 'Mental', 'Positive',
    # 'Consistent', 'Mental', 'Positive',
    # 'Conspicuous', 'Mental', 'Negative',
    # 'Conspiracy theorist', 'Mental', 'Neutral',
    # 'Constricting', 'Mental', 'Negative',
    # 'Constructive', 'Mental', 'Positive',
    # 'Content', 'Mental', 'Positive',
    # 'Contented', 'Mental', 'Neutral',
    # 'Contrarian', 'Mental', 'Negative',
    # 'Contrary', 'Mental', 'Negative',
    # 'Contrite', 'Mental', 'Negative',
    # 'Controlling', 'Mental', 'Negative',
    # 'Conventional', 'Mental', 'Neutral',
    # 'Conversational', 'Mental', 'Positive',
    # 'Cool', 'Mental', 'Positive',
    # 'Cooperative', 'Mental', 'Positive',
    # 'Coquettish', 'Mental', 'Neutral',
    # 'Cosmopolitan', 'Mental', 'Neutral',
    # 'Courageous', 'Mental', 'Positive',
    # 'Courteous', 'Mental', 'Positive',
    # 'Covetous', 'Mental', 'Negative',
    # 'Cowardly', 'Mental', 'Negative',
    # 'Cowering', 'Mental', 'Negative',
    # 'Coy', 'Mental', 'Neutral',
    # 'Crabby', 'Mental', 'Negative',
    # 'Crafty', 'Mental', 'Positive',
    # 'Cranky', 'Mental', 'Negative',
    # 'Crazy', 'Mental', 'Neutral',
    # 'Creative', 'Mental', 'Positive',
    # 'Credible', 'Mental', 'Positive',
    # 'Creepy', 'Mental', 'Negative',
    # 'Critical', 'Mental', 'Neutral',
    # 'Cross', 'Mental', 'Negative',
    # 'Crude', 'Mental', 'Negative',
    # 'Cruel', 'Mental', 'Negative',
    # 'Crushed', 'Mental', 'Negative',
    # 'Cuddly', 'Mental', 'Positive',
    # 'Culpable', 'Mental', 'Negative',
    # 'Cultured', 'Mental', 'Positive',
    # 'Cunning', 'Mental', 'Positive',
    # 'Curious', 'Mental', 'Positive',
    # 'Cutthroat', 'Mental', 'Negative',
    # 'Cynical', 'Mental', 'Negative',
    # 'Dainty', 'Mental', 'Negative',
    # 'Dangerous', 'Mental', 'Negative',
    # 'Daredevil', 'Mental', 'Neutral',
    # 'Daring', 'Mental', 'Positive',
    # 'Dark', 'Mental', 'Neutral',
    # 'Dashing', 'Mental', 'Positive',
    # 'Dauntless', 'Mental', 'Positive',
    # 'Dazzling', 'Mental', 'Positive',
    # 'Debonair', 'Mental', 'Positive',
    # 'Deceitful', 'Mental', 'Negative',
    # 'Deceiving', 'Mental', 'Negative',
    # 'Decent', 'Mental', 'Positive',
    # 'Decisive', 'Mental', 'Positive',
    # 'Decorous', 'Mental', 'Positive',
    # 'Dedicated', 'Mental', 'Positive',
    # 'Defeated', 'Mental', 'Negative',
    # 'Deferential', 'Mental', 'Negative',
    # 'Defiant', 'Mental', 'Neutral',
    # 'Delegates authority', 'Mental', 'Neutral',
    # 'Deliberate', 'Mental', 'Neutral',
    # 'Deliberative', 'Mental', 'Positive',
    # 'Delicate', 'Mental', 'Positive',
    # 'Delighted', 'Mental', 'Positive',
    # 'Delightful', 'Mental', 'Positive',
    # 'Delusional about own skills', 'Mental', 'Negative',
    # 'Demanding', 'Mental', 'Negative',
    # 'Demonic', 'Mental', 'Negative',
    # 'Dependable', 'Mental', 'Positive',
    # 'Dependent', 'Mental', 'Positive',
    # 'Depraved', 'Mental', 'Negative',
    # 'Depressed', 'Mental', 'Negative',
    # 'Depressive', 'Mental', 'Negative',
    # 'Deranged', 'Mental', 'Negative',
    # 'Desirous', 'Mental', 'Positive',
    # 'Despairing', 'Mental', 'Negative',
    # 'Despicable', 'Mental', 'Negative',
    # 'Despondent', 'Mental', 'Negative',
    # 'Destructive', 'Mental', 'Negative',
    # 'Detached', 'Mental', 'Negative',
    # 'Detail-oriented', 'Mental', 'Neutral',
    # 'Determined', 'Mental', 'Positive',
    # 'Develops close friendships', 'Mental', 'Positive',
    # 'Devilish', 'Mental', 'Negative',
    # 'Devious', 'Mental', 'Negative',
    # 'Devoted', 'Mental', 'Positive',
    # 'Devout', 'Mental', 'Neutral',
    # 'Dictatorial', 'Mental', 'Negative',
    # 'Diffident', 'Mental', 'Negative',
    # 'Dignified', 'Mental', 'Positive',
    # 'Diligent', 'Mental', 'Positive',
    # 'Diminished', 'Mental', 'Negative',
    # 'Diplomatic', 'Mental', 'Positive',
    # 'Direct', 'Mental', 'Positive',
    # 'Directionless', 'Mental', 'Negative',
    # 'Disaffected', 'Mental', 'Negative',
    # 'Disagreeable', 'Mental', 'Negative',
    # 'Discerning', 'Mental', 'Positive',
    # 'Disciplined', 'Mental', 'Positive',
    # 'Discontented', 'Mental', 'Negative',
    # 'Discouraged', 'Mental', 'Negative',
    # 'Discreet', 'Mental', 'Positive',
    # 'Disgusting', 'Mental', 'Negative',
    # 'Dishonest', 'Mental', 'Negative',
    # 'Disillusioned', 'Mental', 'Negative',
    # 'Disinterested', 'Mental', 'Negative',
    # 'Disloyal', 'Mental', 'Negative',
    # 'Dismayed', 'Mental', 'Negative',
    # 'Disorderly', 'Mental', 'Negative',
    # 'Disorganized', 'Mental', 'Negative',
    # 'Disparaging', 'Mental', 'Negative',
    # 'Disregards rules', 'Mental', 'Neutral',
    # 'Disrespectful', 'Mental', 'Negative',
    # 'Dissatisfied', 'Mental', 'Negative',
    # 'Dissident', 'Mental', 'Positive',
    # 'Dissolute', 'Mental', 'Negative',
    # 'Distant', 'Mental', 'Neutral',
    # 'Distracted', 'Mental', 'Negative',
    # 'Distraught', 'Mental', 'Negative',
    # 'Distressed', 'Mental', 'Negative',
    # 'Distrustful', 'Mental', 'Negative',
    # 'Disturbed', 'Mental', 'Negative',
    # 'Divided', 'Mental', 'Negative',
    # 'Docile', 'Mental', 'Negative',
    # 'Does what is convenient', 'Mental', 'Negative',
    # 'Does what is necessary or right', 'Mental', 'Positive',
    # 'Dogmatic', 'Mental', 'Negative',
    # 'Dominant', 'Mental', 'Neutral',
    # 'Domineering', 'Mental', 'Negative',
    # 'Dorky', 'Mental', 'Neutral',
    # 'Doubtful', 'Mental', 'Neutral',
    # 'Dowdy', 'Mental',
    # 'Downtrodden', 'Mental',
    # 'Draconian', 'Mental',
    # 'Dramatic', 'Mental',
    # 'Dreamer', 'Mental',
    # 'Dreamy', 'Mental',
    # 'Dreary', 'Mental',
    # 'Driven', 'Mental',
    # 'Dubious', 'Mental',
    # 'Dull', 'Mental',
    # 'Dumb', 'Mental',
    # 'Dutiful', 'Mental',
    # 'Dynamic', 'Mental',
    # 'Eager', 'Mental',
    # 'Easily embarrassed', 'Mental',
    # 'Easily led', 'Mental',
    # 'Easily upset', 'Mental',
    # 'Easygoing', 'Mental',
    # 'Eccentric', 'Mental',
    # 'Ecstatic', 'Mental',
    # 'Educated', 'Mental',
    # 'Effervescent', 'Mental',
    # 'Efficient', 'Mental',
    # 'Egocentric', 'Mental',
    # 'Egotistic', 'Mental',
    # 'Egotistical', 'Mental',
    # 'Elated', 'Mental',
    # 'Electrified', 'Mental',
    # 'Eloquent', 'Mental',
    # 'Elusive', 'Mental',
    # 'Embarrassed', 'Mental',
    # 'Embittered', 'Mental',
    # 'Embraces change', 'Mental',
    # 'Eminent', 'Mental',
    # 'Emotional', 'Mental',
    # 'Emotionally stable', 'Mental',
    # 'Empathetic', 'Mental',
    # 'Empty', 'Mental',
    # 'Enchanted', 'Mental',
    # 'Enchanting', 'Mental',
    # 'Encouraging', 'Mental',
    # 'Enduring', 'Mental',
    # 'Energetic', 'Mental',
    # 'Engaging', 'Mental',
    # 'Enigmatic', 'Mental',
    # 'Enjoys a good argument', 'Mental',
    # 'Enjoys a good brawl', 'Mental',
    # 'Enjoys a little friendly competition', 'Mental',
    # 'Enterprising', 'Mental',
    # 'Entertaining', 'Mental',
    # 'Enthusiastic', 'Mental',
    # 'Entrepreneurial', 'Mental',
    # 'Envious', 'Mental',
    # 'Equable', 'Mental',
    # 'Erratic', 'Mental',
    # 'Ethical', 'Mental',
    # 'Evasive', 'Mental',
    # 'Evil', 'Mental',
    # 'Exacting', 'Mental',
    # 'Exasperated', 'Mental',
    # 'Excellent', 'Mental',
    # 'Excessive', 'Mental',
    # 'Excitable', 'Mental',
    # 'Excited', 'Mental',
    # 'Exclusive', 'Mental',
    # 'Exhausted', 'Mental',
    # 'Expansive', 'Mental',
    # 'Expedient', 'Mental',
    # 'Experimental', 'Mental',
    # 'Expert', 'Mental',
    # 'Expressive', 'Mental',
    # 'Extravagant', 'Mental',
    # 'Extraverted', 'Mental',
    # 'Extreme', 'Mental',
    # 'Exuberant', 'Mental',
    # 'Fabulous', 'Mental',
    # 'Faces reality', 'Mental',
    # 'Facetious', 'Mental',
    # 'Faded', 'Mental',
    # 'Failure', 'Mental',
    # 'Fair', 'Mental',
    # 'Faith in oneself', 'Mental',
    # 'Faith in others', 'Mental',
    # 'Faith in self', 'Mental',
    # 'Faithful', 'Mental',
    # 'Faithless', 'Mental',
    # 'Fake', 'Mental',
    # 'Fanatical', 'Mental',
    # 'Fanciful', 'Mental',
    # 'Fantastic', 'Mental',
    # 'Fascinated', 'Mental',
    # 'Fast learner', 'Mental',
    # 'Fastidious', 'Mental',
    # 'Fatalistic', 'Mental',
    # 'Fatigued', 'Mental',
    # 'Fawning', 'Mental',
    # 'Fearful', 'Mental',
    # 'Fearless', 'Mental',
    # 'Feisty', 'Mental',
    # 'Ferocious', 'Mental',
    # 'Fidgety', 'Mental',
    # 'Fierce', 'Mental',
    # 'Fiery', 'Mental',
    # 'Fine', 'Mental',
    # 'Finicky', 'Mental',
    # 'Fitness fanatic', 'Mental',
    # 'Flagging', 'Mental',
    # 'Flakey', 'Mental',
    # 'Flamboyant', 'Mental',
    # 'Flashy', 'Mental',
    # 'Fleeting', 'Mental',
    # 'Flexible', 'Mental',
    # 'Flighty', 'Mental',
    # 'Flippant', 'Mental',
    # 'Flirtatious', 'Mental',
    # 'Flirty', 'Mental',
    # 'Flustered', 'Mental',
    # 'Focused', 'Mental',
    # 'Follower', 'Mental',
    # 'Follows rules', 'Mental',
    # 'Foolhardy', 'Mental',
    # 'Foolish', 'Mental',
    # 'Forceful', 'Mental',
    # 'Forgetful', 'Mental',
    # 'Forgiving', 'Mental',
    # 'Formal', 'Mental',
    # 'Forthright', 'Mental',
    # 'Fortunate', 'Mental',
    # 'Foul', 'Mental',
    # 'Fragile', 'Mental',
    # 'Fragmented', 'Mental',
    # 'Frank', 'Mental',
    # 'Frantic', 'Mental',
    # 'Frazzled', 'Mental',
    # 'Free of guilt', 'Mental',
    # 'Free thinking', 'Mental',
    # 'Fresh', 'Mental',
    # 'Fretful', 'Mental',
    # 'Friendly', 'Mental',
    # 'Frightened', 'Mental',
    # 'Frigid', 'Mental',
    # 'Frugal', 'Mental',
    # 'Frustrated', 'Mental',
    # 'Fuddy duddy', 'Mental',
    # 'Fun', 'Mental',
    # 'Fun loving', 'Mental',
    # 'Fun to be around', 'Mental',
    # 'Funny', 'Mental',
    # 'Furious', 'Mental',
    # 'Furtive', 'Mental',
    # 'Fussy', 'Mental',
    # 'Gabby', 'Mental',
    # 'Garrulous', 'Mental',
    # 'Gaudy', 'Mental',
    # 'Generous', 'Mental',
    # 'Genial', 'Mental',
    # 'Gentle', 'Mental',
    # 'Genuine', 'Mental',
    # 'Giddy', 'Mental',
    # 'Giggly', 'Mental',
    # 'Gives others their freedom', 'Mental',
    # 'Gives up easily', 'Mental',
    # 'Giving', 'Mental',
    # 'Glad', 'Mental',
    # 'Glamorous', 'Mental',
    # 'Gloomy', 'Mental',
    # 'Glorious', 'Mental',
    # 'Glum', 'Mental',
    # 'Glutton', 'Mental',
    # 'Gluttonous', 'Mental',
    # 'Goal orientated', 'Mental',
    # 'Good', 'Mental',
    # 'Good communicator', 'Mental',
    # 'Good listener', 'Mental',
    # 'Good-natured', 'Mental',
    # 'Good-spirited', 'Mental',
    # 'Goofy', 'Mental',
    # 'Graceful', 'Mental',
    # 'Gracious', 'Mental',
    # 'Grandiose', 'Mental',
    # 'Grateful', 'Mental',
    # 'Gratified', 'Mental',
    # 'Greedy', 'Mental',
    # 'Gregarious', 'Mental',
    # 'Grief', 'Mental',
    # 'Grieving', 'Mental',
    # 'Groovy', 'Mental',
    # 'Grotesque', 'Mental',
    # 'Grouchy', 'Mental',
    # 'Grounded', 'Mental',
    # 'Group-oriented', 'Mental',
    # 'Growly', 'Mental',
    # 'Gruesome', 'Mental',
    # 'Gruff', 'Mental',
    # 'Grumpy', 'Mental',
    # 'Guarded', 'Mental',
    # 'Guileless', 'Mental',
    # 'Guilt prone', 'Mental',
    # 'Guilt ridden', 'Mental',
    # 'Guilty', 'Mental',
    # 'Gullible', 'Mental',
    # 'Haggard', 'Mental',
    # 'Haggling', 'Mental',
    # 'Handsome', 'Mental',
    # 'Happy', 'Mental',
    # 'Happy go lucky', 'Mental',
    # 'Hard', 'Mental',
    # 'Hard working', 'Mental',
    # 'Harmonious', 'Mental',
    # 'Harried', 'Mental',
    # 'Harsh', 'Mental',
    # 'Has clear goals', 'Mental',
    # 'Hassled', 'Mental',
    # 'Hateful', 'Mental',
    # 'Haughty', 'Mental',
    # 'Heartless', 'Mental',
    # 'Heavenly', 'Mental',
    # 'Heavy hearted', 'Mental',
    # 'Hedonistic', 'Mental',
    # 'Helpful', 'Mental',
    # 'Helpless', 'Mental',
    # 'Heroic', 'Mental',
    # 'Hesitant', 'Mental',
    # 'High', 'Mental',
    # 'High energy', 'Mental',
    # 'High self esteem', 'Mental',
    # 'High social status', 'Mental',
    # 'Hilarious', 'Mental',
    # 'Hobbyist', 'Mental',
    # 'Holy', 'Mental',
    # 'Homeless', 'Mental',
    # 'Homesick', 'Mental',
    # 'Honest', 'Mental',
    # 'Honor bound', 'Mental',
    # 'Honorable', 'Mental',
    # 'Hopeful', 'Mental',
    # 'Hopeless', 'Mental',
    # 'Horrible', 'Mental',
    # 'Hospitable', 'Mental',
    # 'Hostile', 'Mental',
    # 'Hot headed', 'Mental',
    # 'Huffy', 'Mental',
    # 'Humble', 'Mental',
    # 'Humorous', 'Mental',
    # 'Hurt', 'Mental',
    # 'Hypocritical', 'Mental',
    # 'Hysterical', 'Mental',
    # 'Ignorant', 'Mental',
    # 'Ignored', 'Mental',
    # 'Ill-bred', 'Mental',
    # 'Imaginative', 'Mental',
    # 'Immaculate', 'Mental',
    # 'Immature', 'Mental',
    # 'Immobile', 'Mental',
    # 'Immodest', 'Mental',
    # 'Impartial', 'Mental',
    # 'Impatient', 'Mental',
    # 'Impeccable', 'Mental',
    # 'Imperial', 'Mental',
    # 'Impersonal', 'Mental',
    # 'Impolite', 'Mental',
    # 'Impotent', 'Mental',
    # 'Impoverished', 'Mental',
    # 'Impractical', 'Mental',
    # 'Impressed', 'Mental',
    # 'Improves self', 'Mental',
    # 'Impudent', 'Mental',
    # 'Impulsive', 'Mental',
    # 'In harmony', 'Mental',
    # 'Inactive', 'Mental',
    # 'Incoherent', 'Mental',
    # 'Incompetent', 'Mental',
    # 'Inconsiderate', 'Mental',
    # 'Inconsistent', 'Mental',
    # 'Indecisive', 'Mental',
    # 'Independent', 'Mental',
    # 'Indifferent', 'Mental',
    # 'Indiscrete', 'Mental',
    # 'Indiscriminate', 'Mental',
    # 'Individualistic', 'Mental',
    # 'Indolent', 'Mental',
    # 'Indulgent', 'Mental',
    # 'Industrious', 'Mental',
    # 'Inefficient', 'Mental',
    # 'Inept', 'Mental',
    # 'Infantile', 'Mental',
    # 'Infatuated', 'Mental',
    # 'Inflexible', 'Mental',
    # 'Informed', 'Mental',
    # 'Infuriated', 'Mental',
    # 'Inherited success', 'Mental',
    # 'Inhibited', 'Mental',
    # 'Inhumane', 'Mental',
    # 'Inimitable', 'Mental',
    # 'Innocent', 'Mental',
    # 'Inquisitive', 'Mental',
    # 'Insane', 'Mental',
    # 'Insecure', 'Mental',
    # 'Insensitive', 'Mental',
    # 'Insightful', 'Mental',
    # 'Insincere', 'Mental',
    # 'Insipid', 'Mental',
    # 'Insistent', 'Mental',
    # 'Insolent', 'Mental',
    # 'Insouciant', 'Mental',
    # 'Inspired', 'Mental',
    # 'Instinctive', 'Mental',
    # 'Insulting', 'Mental',
    # 'Intellectual', 'Mental',
    # 'Intelligent', 'Mental',
    # 'Intense', 'Mental',
    # 'Interested', 'Mental',
    # 'Interrupting', 'Mental',
    # 'Intimidated', 'Mental',
    # 'Intimidating', 'Mental',
    # 'Intolerant', 'Mental',
    # 'Intrepid', 'Mental',
    # 'Introspective', 'Mental',
    # 'Introverted', 'Mental',
    # 'Intuitive', 'Mental',
    # 'Inventive', 'Mental',
    # 'Involved', 'Mental',
    # 'Irresolute', 'Mental',
    # 'Irresponsible', 'Mental',
    # 'Irreverent', 'Mental',
    # 'Irritable', 'Mental',
    # 'Irritating', 'Mental',
    # 'Isolated', 'Mental',
    # 'Jackass', 'Mental',
    # 'Jaded', 'Mental',
    # 'Jealous', 'Mental',
    # 'Jittery', 'Mental',
    # 'Joking', 'Mental',
    # 'Jolly', 'Mental',
    # 'Jovial', 'Mental',
    # 'Joyful', 'Mental',
    # 'Joyous', 'Mental',
    # 'Judgmental', 'Mental',
    # 'Jumpy', 'Mental',
    # 'Just', 'Mental',
    # 'Keen', 'Mental',
    # 'Kenderish', 'Mental',
    # 'Kind', 'Mental',
    # 'Kind hearted', 'Mental',
    # 'Kittenish', 'Mental',
    # 'Knowledgeable', 'Mental',
    # 'Lackadaisical', 'Mental',
    # 'Lacking', 'Mental',
    # 'Laconic', 'Mental',
    # 'Languid', 'Mental',
    # 'Lascivious', 'Mental',
    # 'Late', 'Mental',
    # 'Lax', 'Mental',
    # 'Lazy', 'Mental',
    # 'Leader', 'Mental',
    # 'Leaves things unfinished', 'Mental',
    # 'Lecherous', 'Mental',
    # 'Lethargic', 'Mental',
    # 'Level', 'Mental',
    # 'Lewd', 'Mental',
    # 'Liar', 'Mental',
    # 'Liberal', 'Mental',
    # 'Licentious', 'Mental',
    # 'Light-hearted', 'Mental',
    # 'Likeable', 'Mental',
    # 'Likes people', 'Mental',
    # 'Limited', 'Mental',
    # 'Lineat', 'Mental',
    # 'Lingering', 'Mental',
    # 'Lively', 'Mental',
    # 'Logical', 'Mental',
    # 'Lonely', 'Mental',
    # 'Longing', 'Mental',
    # 'Loquacious', 'Mental',
    # 'Lordly', 'Mental',
    # 'Loud', 'Mental',
    # 'Loudmouth', 'Mental',
    # 'Lovable', 'Mental',
    # 'Love', 'Mental',
    # 'Lovely', 'Mental',
    # 'Lover, not a fighter', 'Mental',
    # 'Loves challenge', 'Mental',
    # 'Loving', 'Mental',
    # 'Low confidence', 'Mental',
    # 'Low drive', 'Mental',
    # 'Low social status', 'Mental',
    # 'Lowly', 'Mental',
    # 'Loyal', 'Mental',
    # 'Loyal to boss', 'Mental',
    # 'Loyal to community', 'Mental',
    # 'Loyal to family', 'Mental',
    # 'Loyal to friends', 'Mental',
    # 'Lucky', 'Mental',
    # 'Lunatic', 'Mental',
    # 'Lusty', 'Mental',
    # 'Lying', 'Mental',
    # 'Macho', 'Mental',
    # 'Mad', 'Mental',
    # 'Malevolent', 'Mental',
    # 'Malice', 'Mental',
    # 'Malicious', 'Mental',
    # 'Maniacal', 'Mental',
    # 'Manic', 'Mental',
    # 'Manipulative', 'Mental',
    # 'Mannered', 'Mental',
    # 'Mannerly', 'Mental',
    # 'Masochistic', 'Mental',
    # 'Materialistic', 'Mental',
    # 'Matronly', 'Mental',
    # 'Matter-of-fact', 'Mental',
    # 'Mature', 'Mental',
    # 'Maudlin', 'Mental',
    # 'Mean', 'Mental',
    # 'Mean-spirited', 'Mental',
    # 'Meek', 'Mental',
    # 'Megalomaniac', 'Mental',
    # 'Melancholy', 'Mental',
    # 'Melodramatic', 'Mental',
    # 'Mentally slow', 'Mental',
    # 'Merciful', 'Mental',
    # 'Mercurial', 'Mental',
    # 'Messy', 'Mental',
    # 'Meticulous', 'Mental',
    # 'Mild', 'Mental',
    # 'Mischievous', 'Mental',
    # 'Miserable', 'Mental',
    # 'Miserly', 'Mental',
    # 'Mistrusting', 'Mental',
    # 'Modern', 'Mental',
    # 'Modest', 'Mental',
    # 'Moody', 'Mental',
    # 'Moping', 'Mental',
    # 'Moralistic', 'Mental',
    # 'Morbid', 'Mental',
    # 'Motherly', 'Mental',
    # 'Motivated', 'Mental',
    # 'Muddled goals', 'Mental',
    # 'Murderer', 'Mental',
    # 'Mysterious', 'Mental',
    # 'Mystical', 'Mental',
    # 'Nagging', 'Mental',
    # 'Naive', 'Mental',
    # 'Narcissistic', 'Mental',
    # 'Narrow-minded', 'Mental',
    # 'Nasty', 'Mental',
    # 'Natural leader', 'Mental',
    # 'Naughty', 'Mental',
    # 'Neat', 'Mental',
    # 'Needs social approval', 'Mental',
    # 'Needy', 'Mental',
    # 'Negative', 'Mental',
    # 'Negligent', 'Mental',
    # 'Nervous', 'Mental',
    # 'Neurotic', 'Mental',
    # 'Never gives up', 'Mental',
    # 'Never hungry', 'Mental',
    # 'Nibbler', 'Mental',
    # 'Nice', 'Mental',
    # 'Night owl', 'Mental',
    # 'Nihilistic', 'Mental',
    # 'Nit picker', 'Mental',
    # 'No purpose', 'Mental',
    # 'No self confidence', 'Mental',
    # 'No-nonsense', 'Mental',
    # 'Noble', 'Mental',
    # 'Noisy', 'Mental',
    # 'Non-committing', 'Mental',
    # 'Nonchalant', 'Mental',
    # 'Nonconforming', 'Mental',
    # 'Nostalgic', 'Mental',
    # 'Nosy', 'Mental',
    # 'Not trustworthy', 'Mental',
    # 'Nuanced', 'Mental',
    # 'Nuisance', 'Mental',
    # 'Nurturing', 'Mental',
    # 'Nut', 'Mental',
    # 'Obedient', 'Mental',
    # 'Obliging', 'Mental',
    # 'Oblivious', 'Mental',
    # 'Obnoxious', 'Mental',
    # 'Obscene', 'Mental',
    # 'Obsequious', 'Mental',
    # 'Observant', 'Mental',
    # 'Obsessed', 'Mental',
    # 'Obsessive about something', 'Mental',
    # 'Obstinate', 'Mental',
    # 'Odd', 'Mental',
    # 'Odious', 'Mental',
    # 'Open', 'Mental',
    # 'Open to change', 'Mental',
    # 'Open-minded', 'Mental',
    # 'Opinionated', 'Mental',
    # 'Opportunistic', 'Mental',
    # 'Oppositional', 'Mental',
    # 'Optimistic', 'Mental',
    # 'Orcish', 'Mental',
    # 'Orderly', 'Mental',
    # 'Organized', 'Mental',
    # 'Ornery', 'Mental',
    # 'Ossified', 'Mental',
    # 'Ostentatious', 'Mental',
    # 'Others can\'t be relied on',	'Mental',
    # 'Outgoing', 'Mental',
    # 'Outraged', 'Mental',
    # 'Outrageous', 'Mental',
    # 'Outspoken', 'Mental',
    # 'Over wrought', 'Mental',
    # 'Overbearing', 'Mental',
    # 'Overconfident', 'Mental',
    # 'Overwhelmed', 'Mental',
    # 'Overwhelming', 'Mental',
    # 'Paces', 'Mental',
    # 'Pacifistic', 'Mental',
    # 'Painstaking', 'Mental',
    # 'Pampered', 'Mental',
    # 'Panicked', 'Mental',
    # 'Panicky', 'Mental',
    # 'Paranoid', 'Mental',
    # 'Participating', 'Mental',
    # 'Particular', 'Mental',
    # 'Passionate', 'Mental',
    # 'Passive', 'Mental',
    # 'Passive-aggressive', 'Mental',
    # 'Pathetic', 'Mental',
    # 'Patient', 'Mental',
    # 'Patriotic', 'Mental',
    # 'Peaceful', 'Mental',
    # 'Penitent', 'Mental',
    # 'Pensive', 'Mental',
    # 'Perceptive', 'Mental',
    # 'Perfect', 'Mental',
    # 'Perfectionist', 'Mental',
    # 'Performer', 'Mental',
    # 'Persecuted', 'Mental',
    # 'Perserverant', 'Mental',
    # 'Perseveres', 'Mental',
    # 'Persevering', 'Mental',
    # 'Persistent', 'Mental',
    # 'Personable', 'Mental',
    # 'Persuasive', 'Mental',
    # 'Pert', 'Mental',
    # 'Perverse', 'Mental',
    # 'Perverted', 'Mental',
    # 'Pessimistic', 'Mental',
    # 'Petrified', 'Mental',
    # 'Petty', 'Mental',
    # 'Petulant', 'Mental',
    # 'Philanthropic', 'Mental',
    # 'Picky', 'Mental',
    # 'Pious', 'Mental',
    # 'Pitiful', 'Mental',
    # 'Pity', 'Mental',
    # 'Placid', 'Mental',
    # 'Playful', 'Mental',
    # 'Pleasant', 'Mental',
    # 'Pleased', 'Mental',
    # 'Pleasing', 'Mental',
    # 'Plotting', 'Mental',
    # 'Plucky', 'Mental',
    # 'Polished', 'Mental',
    # 'Polite', 'Mental',
    # 'Pompous', 'Mental',
    # 'Poor', 'Mental',
    # 'Poor communicator', 'Mental',
    # 'Poor listener', 'Mental',
    # 'Positive', 'Mental',
    # 'Possessive', 'Mental',
    # 'Power-hungry', 'Mental',
    # 'Practical', 'Mental',
    # 'Precise', 'Mental',
    # 'Predictable', 'Mental',
    # 'Preoccupied', 'Mental',
    # 'Pressured', 'Mental',
    # 'Presumptuous', 'Mental',
    # 'Pretentious', 'Mental',
    # 'Pretty', 'Mental',
    # 'Prim', 'Mental',
    # 'Primitive', 'Mental',
    # 'Private', 'Mental',
    # 'Productive', 'Mental',
    # 'Profane', 'Mental',
    # 'Professional demeanor', 'Mental',
    # 'Promiscuous', 'Mental',
    # 'Proper', 'Mental',
    # 'Prosaic', 'Mental',
    # 'Prosperous', 'Mental',
    # 'Protective', 'Mental',
    # 'Proud', 'Mental',
    # 'Prudent', 'Mental',
    # 'Psychotic', 'Mental',
    # 'Puckish', 'Mental',
    # 'Punctilious', 'Mental',
    # 'Punctual', 'Mental',
    # 'Purposeful', 'Mental',
    # 'Pushy', 'Mental',
    # 'Puzzled', 'Mental',
    # 'Quarrelsome', 'Mental',
    # 'Queer', 'Mental',
    # 'Quick', 'Mental',
    # 'Quick tempered', 'Mental',
    # 'Quiet', 'Mental',
    # 'Quirky', 'Mental',
    # 'Quitter', 'Mental',
    # 'Quixotic', 'Mental',
    # 'Radical', 'Mental',
    # 'Raging', 'Mental',
    # 'Rambunctious', 'Mental',
    # 'Random', 'Mental',
    # 'Rash', 'Mental',
    # 'Rational', 'Mental',
    # 'Rawboned', 'Mental',
    # 'Reactionary', 'Mental',
    # 'Realistic', 'Mental',
    # 'Reasonable', 'Mental',
    # 'Reasoning', 'Mental',
    # 'Rebellious', 'Mental',
    # 'Recalcitrant', 'Mental',
    # 'Receptive', 'Mental',
    # 'Reckless', 'Mental',
    # 'Reclusive', 'Mental',
    # 'Refined', 'Mental',
    # 'Reflective', 'Mental',
    # 'Refreshed', 'Mental',
    # 'Regretful', 'Mental',
    # 'Rejected', 'Mental',
    # 'Rejects change', 'Mental',
    # 'Relaxed', 'Mental',
    # 'Relentless', 'Mental',
    # 'Relents', 'Mental',
    # 'Reliable', 'Mental',
    # 'Relieved', 'Mental',
    # 'Religious', 'Mental',
    # 'Reluctant', 'Mental',
    # 'Remorseful', 'Mental',
    # 'Remote', 'Mental',
    # 'Repugnant', 'Mental',
    # 'Repulsive', 'Mental',
    # 'Resentful', 'Mental',
    # 'Reserved', 'Mental',
    # 'Resilient', 'Mental',
    # 'Resolute', 'Mental',
    # 'Resourceful', 'Mental',
    # 'Respectful', 'Mental',
    # 'Respects experience', 'Mental',
    # 'Respects traditional ideas', 'Mental',
    # 'Responsible', 'Mental',
    # 'Responsive', 'Mental',
    # 'Restless', 'Mental',
    # 'Restrained', 'Mental',
    # 'Results-oriented', 'Mental',
    # 'Retiring', 'Mental',
    # 'Reverent', 'Mental',
    # 'Rewarded', 'Mental',
    # 'Rhetorical', 'Mental',
    # 'Right', 'Mental',
    # 'Righteous', 'Mental',
    # 'Rigid', 'Mental',
    # 'Risk averse', 'Mental',
    # 'Risk-taking', 'Mental',
    # 'Robust and healthy', 'Mental',
    # 'Rogue', 'Mental',
    # 'Romantic', 'Mental',
    # 'Rough', 'Mental',
    # 'Rowdy', 'Mental',
    # 'Rude', 'Mental',
    # 'Rule-bound', 'Mental',
    # 'Rule-conscious', 'Mental',
    # 'Ruthless', 'Mental',
    # 'Sacrificing', 'Mental',
    # 'Sad', 'Mental',
    # 'Sadistic', 'Mental',
    # 'Safe', 'Mental',
    # 'Sagely', 'Mental',
    # 'Saintly', 'Mental',
    # 'Salient', 'Mental',
    # 'Sanctimonious', 'Mental',
    # 'Sanguine', 'Mental',
    # 'Sarcastic', 'Mental',
    # 'Sassy', 'Mental',
    # 'Satisfied', 'Mental',
    # 'Saucy', 'Mental',
    # 'Savage', 'Mental',
    # 'Savvy', 'Mental',
    # 'Scared', 'Mental',
    # 'Scarred', 'Mental',
    # 'Scary', 'Mental',
    # 'Scattered', 'Mental',
    # 'Scheming', 'Mental',
    # 'Scornful', 'Mental',
    # 'Scrawny', 'Mental',
    # 'Screwed up', 'Mental',
    # 'Scruffy', 'Mental',
    # 'Secretive', 'Mental',
    # 'Secure', 'Mental',
    # 'Sedate', 'Mental',
    # 'Seditious', 'Mental',
    # 'Seductive', 'Mental',
    # 'Sees the big picture', 'Mental',
    # 'Selective', 'Mental',
    # 'Self-absorbed', 'Mental',
    # 'Self-assured', 'Mental',
    # 'Self-blaming', 'Mental',
    # 'Self-centered', 'Mental',
    # 'Self-confident', 'Mental',
    # 'Self-conscious', 'Mental',
    # 'Self-controlling', 'Mental',
    # 'Self-deprecating', 'Mental',
    # 'Self-directed', 'Mental',
    # 'Self-disciplined', 'Mental',
    # 'Self-doubting', 'Mental',
    # 'Self-effacing', 'Mental',
    # 'Self-giving', 'Mental',
    # 'Self-indulgent', 'Mental',
    # 'Self-made', 'Mental',
    # 'Self-reliant', 'Mental',
    # 'Self-righteous', 'Mental',
    # 'Self-satisfied', 'Mental',
    # 'Self-serving', 'Mental',
    # 'Self-sufficient', 'Mental',
    # 'Selfish', 'Mental',
    # 'Selfless', 'Mental',
    # 'Senile', 'Mental',
    # 'Sense of duty', 'Mental',
    # 'Sensitive', 'Mental',
    # 'Sensual', 'Mental',
    # 'Sentimental', 'Mental',
    # 'Serene', 'Mental',
    # 'Serious', 'Mental',
    # 'Servile', 'Mental',
    # 'Settled', 'Mental',
    # 'Sexual', 'Mental',
    # 'Sexy', 'Mental',
    # 'Shallow', 'Mental',
    # 'Shameless', 'Mental',
    # 'Sharp', 'Mental',
    # 'Sharp-tongued', 'Mental',
    # 'Sharp-witted', 'Mental',
    # 'Sheepish', 'Mental',
    # 'Shiftless', 'Mental',
    # 'Shifty', 'Mental',
    # 'Shocked', 'Mental',
    # 'Short-tempered', 'Mental',
    # 'Shows initiative', 'Mental',
    # 'Shrewd', 'Mental',
    # 'Shy', 'Mental',
    # 'Silent', 'Mental',
    # 'Silky', 'Mental',
    # 'Silly', 'Mental',
    # 'Simple', 'Mental',
    # 'Simple-minded', 'Mental',
    # 'Sincere', 'Mental',
    # 'Sisterly', 'Mental',
    # 'Skeptical', 'Mental',
    # 'Skillful', 'Mental',
    # 'Sleazy', 'Mental',
    # 'Sloppy', 'Mental',
    # 'Slovenly', 'Mental',
    # 'Slow paced', 'Mental',
    # 'Sluggish', 'Mental',
    # 'Slutty', 'Mental',
    # 'Sly', 'Mental',
    # 'Small-minded', 'Mental',
    # 'Smart', 'Mental',
    # 'Smiling', 'Mental',
    # 'Smooth', 'Mental',
    # 'Sneaky', 'Mental',
    # 'Snob', 'Mental',
    # 'Snobbish', 'Mental',
    # 'Sociable', 'Mental',
    # 'Socially bold', 'Mental',
    # 'Socially precise', 'Mental',
    # 'Soft', 'Mental',
    # 'Soft-hearted', 'Mental',
    # 'Soft-spoken', 'Mental',
    # 'Solemn', 'Mental',
    # 'Solitary', 'Mental',
    # 'Solution-oriented', 'Mental',
    # 'Sophisticated', 'Mental',
    # 'Sore', 'Mental',
    # 'Sorrowful', 'Mental',
    # 'Sorry', 'Mental',
    # 'Sour', 'Mental',
    # 'Spendthrift', 'Mental',
    # 'Spiritual', 'Mental',
    # 'Spiteful', 'Mental',
    # 'Splendid', 'Mental',
    # 'Spoiled', 'Mental',
    # 'Spontaneous', 'Mental',
    # 'Sports fan', 'Mental',
    # 'Spunky', 'Mental',
    # 'Squeamish', 'Mental',
    # 'Staid', 'Mental',
    # 'Startled', 'Mental',
    # 'Stately', 'Mental',
    # 'Static', 'Mental',
    # 'Steadfast', 'Mental',
    # 'Steady', 'Mental',
    # 'Stern', 'Mental',
    # 'Stimulating', 'Mental',
    # 'Stingy', 'Mental',
    # 'Stoic', 'Mental',
    # 'Stoical', 'Mental',
    # 'Stolid', 'Mental',
    # 'Straight laced', 'Mental',
    # 'Straight-laced', 'Mental',
    # 'Straightforward', 'Mental',
    # 'Strange', 'Mental',
    # 'Stress free', 'Mental',
    # 'Stressed out', 'Mental',
    # 'Strict', 'Mental',
    # 'Strident', 'Mental',
    # 'Strong nerves', 'Mental',
    # 'Strong willed', 'Mental',
    # 'Stubborn', 'Mental',
    # 'Studious', 'Mental',
    # 'Stunned', 'Mental',
    # 'Stupefied', 'Mental',
    # 'Stupid', 'Mental',
    # 'Suave', 'Mental',
    # 'Submissive', 'Mental',
    # 'Subtle', 'Mental',
    # 'Successful', 'Mental',
    # 'Successful in school', 'Mental',
    # 'Successful in work', 'Mental',
    # 'Succinct', 'Mental',
    # 'Suffering', 'Mental',
    # 'Sulky', 'Mental',
    # 'Sullen', 'Mental',
    # 'Sultry', 'Mental',
    # 'Supercilious', 'Mental',
    # 'Superstitious', 'Mental',
    # 'Supportive', 'Mental',
    # 'Sure', 'Mental',
    # 'Surly', 'Mental',
    # 'Suspicious', 'Mental',
    # 'Suspicious of strangers', 'Mental',
    # 'Sweet', 'Mental',
    # 'Sycophantic', 'Mental',
    # 'Sympathetic', 'Mental',
    # 'Systematic', 'Mental',
    # 'Taciturn', 'Mental',
    # 'Tacky', 'Mental',
    # 'Tactful', 'Mental',
    # 'Tactless', 'Mental',
    # 'Takes responsibility', 'Mental',
    # 'Talented', 'Mental',
    # 'Talkative', 'Mental',
    # 'Tardy', 'Mental',
    # 'Tasteful', 'Mental',
    # 'Telepathic', 'Mental',
    # 'Temperamental', 'Mental',
    # 'Temperate', 'Mental',
    # 'Tempted', 'Mental',
    # 'Tenacious', 'Mental',
    # 'Tender minded', 'Mental',
    # 'Tense', 'Mental',
    # 'Tentative', 'Mental',
    # 'Tenuous', 'Mental',
    # 'Terrible', 'Mental',
    # 'Terrified', 'Mental',
    # 'Testy', 'Mental',
    # 'Thankful', 'Mental',
    # 'Thankless', 'Mental',
    # 'Thick skinned', 'Mental',
    # 'Thief', 'Mental',
    # 'Thorough', 'Mental',
    # 'Thoughtful', 'Mental',
    # 'Thoughtless', 'Mental',
    # 'Threatened', 'Mental',
    # 'Threatening', 'Mental',
    # 'Thrifty', 'Mental',
    # 'Thrilled', 'Mental',
    # 'Thrillseeker', 'Mental',
    # 'Thwarted', 'Mental',
    # 'Tight', 'Mental',
    # 'Time driven', 'Mental',
    # 'Timid', 'Mental',
    # 'Tired', 'Mental',
    # 'Tireless', 'Mental',
    # 'Tiresome', 'Mental',
    # 'Toadying', 'Mental',
    # 'Tolerant', 'Mental',
    # 'Tolerates disorder', 'Mental',
    # 'Torpid', 'Mental',
    # 'Touchy', 'Mental',
    # 'Tough', 'Mental',
    # 'Tough-minded', 'Mental',
    # 'Traditional', 'Mental',
    # 'Traitorous', 'Mental',
    # 'Tranquil', 'Mental',
    # 'Treacherous', 'Mental',
    # 'Treasonous', 'Mental',
    # 'Tricky', 'Mental',
    # 'Tries to do everything', 'Mental',
    # 'Trivial', 'Mental',
    # 'Troubled', 'Mental',
    # 'Truculent', 'Mental',
    # 'Trusting', 'Mental',
    # 'Trustworthy', 'Mental',
    # 'Truthful', 'Mental',
    # 'Typical', 'Mental',
    # 'Tyrannical', 'Mental',
    # 'Unappreciative', 'Mental',
    # 'Unapproachable', 'Mental',
    # 'Unassuming', 'Mental',
    # 'Unaware of own limitations', 'Mental',
    # 'Unbending', 'Mental',
    # 'Unbiased', 'Mental',
    # 'Uncaring', 'Mental',
    # 'Uncommitted', 'Mental',
    # 'Uncommunicative', 'Mental',
    # 'Unconcerned', 'Mental',
    # 'Unconditional', 'Mental',
    # 'Uncontrolled', 'Mental',
    # 'Unconventional', 'Mental',
    # 'Uncooperative', 'Mental',
    # 'Uncoordinated', 'Mental',
    # 'Uncouth', 'Mental',
    # 'Undependable', 'Mental',
    # 'Understanding', 'Mental',
    # 'Undesirable', 'Mental',
    # 'Undisciplined', 'Mental',
    # 'Uneasy', 'Mental',
    # 'Uneducated', 'Mental',
    # 'Unenthusiastic', 'Mental',
    # 'Unexacting', 'Mental',
    # 'Unfeeling', 'Mental',
    # 'Unfocused', 'Mental',
    # 'Unforgiving', 'Mental',
    # 'Unfriendly', 'Mental',
    # 'Ungrateful', 'Mental',
    # 'Unhappy', 'Mental',
    # 'Unhelpful', 'Mental',
    # 'Uninhibited', 'Mental',
    # 'Unkind', 'Mental',
    # 'Unlucky', 'Mental',
    # 'Unmotivated', 'Mental',
    # 'Unpredictable', 'Mental',
    # 'Unprejudiced', 'Mental',
    # 'Unpretentious', 'Mental',
    # 'Unreasonable', 'Mental',
    # 'Unreceptive', 'Mental',
    # 'Unreliable', 'Mental',
    # 'Unresponsive', 'Mental',
    # 'Unrestrained', 'Mental',
    # 'Unruly', 'Mental',
    # 'Unscrupulous', 'Mental',
    # 'Unselfish', 'Mental',
    # 'Unsentimental', 'Mental',
    # 'Unsettled', 'Mental',
    # 'Unshakeable', 'Mental',
    # 'Unsure', 'Mental',
    # 'Unsuspecting', 'Mental',
    # 'Unsuspicious', 'Mental',
    # 'Unsympathetic', 'Mental',
    # 'Unsystematic', 'Mental',
    # 'Unusual', 'Mental',
    # 'Unwilling', 'Mental',
    # 'Unworried', 'Mental',
    # 'Upbeat', 'Mental',
    # 'Upset', 'Mental',
    # 'Uptight', 'Mental',
    # 'Useful', 'Mental',
    # 'Utilitarian', 'Mental',
    # 'Vacant', 'Mental',
    # 'Vague', 'Mental',
    # 'Vain', 'Mental',
    # 'Valiant', 'Mental',
    # 'Valorous', 'Mental',
    # 'Values fair competition', 'Mental',
    # 'Values family', 'Mental',
    # 'Values hard work', 'Mental',
    # 'Values honesty', 'Mental',
    # 'Values material possessions', 'Mental',
    # 'Values money', 'Mental',
    # 'Values religion', 'Mental',
    # 'Vehement', 'Mental',
    # 'Vengeful', 'Mental',
    # 'Venomous', 'Mental',
    # 'Venturesome', 'Mental',
    # 'Verbose', 'Mental',
    # 'Versatile', 'Mental',
    # 'Vicious', 'Mental',
    # 'Vigilant', 'Mental',
    # 'Vigorous', 'Mental',
    # 'Vindictive', 'Mental',
    # 'Violent', 'Mental',
    # 'Virtuous', 'Mental',
    # 'Visual', 'Mental',
    # 'Vital', 'Mental',
    # 'Vivacious', 'Mental',
    # 'Volatile', 'Mental',
    # 'Voracious', 'Mental',
    # 'Vulgar', 'Mental',
    # 'Vulnerable', 'Mental',
    # 'Wanton', 'Mental',
    # 'Warlike', 'Mental',
    # 'Warm', 'Mental',
    # 'Warm hearted', 'Mental',
    # 'Wary', 'Mental',
    # 'Wasteful', 'Mental',
    # 'Watchful', 'Mental',
    # 'Weak', 'Mental',
    # 'Weak nerves', 'Mental',
    # 'Weary', 'Mental',
    # 'Weepy', 'Mental',
    # 'Weird', 'Mental',
    # 'Welcoming', 'Mental',
    # 'Well grounded', 'Mental',
    # 'Whimsical', 'Mental',
    # 'Wholesome', 'Mental',
    # 'Wicked', 'Mental',
    # 'Wild', 'Mental',
    # 'Willful', 'Mental',
    # 'Willing', 'Mental',
    # 'Willpower', 'Mental',
    # 'Wise', 'Mental',
    # 'Wishy washy', 'Mental',
    # 'Withdrawn', 'Mental',
    # 'Witty', 'Mental',
    # 'Wonderful', 'Mental',
    # 'Works well under pressure', 'Mental',
    # 'Worldly', 'Mental',
    # 'Worried', 'Mental', 'Negative',
    # 'Worrying', 'Mental',
    # 'Worshipful', 'Mental',
    # 'Worships the devil', 'Mental',
    # 'Worthless', 'Mental',
    # 'Wretched', 'Mental',
    # 'Xenophobic', 'Mental',
    # 'Youthful', 'Mental',
    # 'Zany', 'Mental',
    # 'Zealot', 'Mental',
    # 'Zealous', 'Mental',
    # 'Sterile', 'Mental',
    # 'Possessed', 'Mental',
    # 'Psychopath', 'Mental',
    # 'Abusive', 'Physical', 'Negative',
    # 'Action oriented', 'Physical', 'Neutral',
    # 'Addict', 'Physical', 'Negative',
    # 'Aggressive', 'Physical', 'Negative',
    # 'Alluring', 'Physical', 'Neutral',
    # 'Animated', 'Physical', 'Neutral',
    # 'Rapturous', 'Physical',
    # 'Rugged', 'Physical',
    # 'Short', 'Physical',
    # 'Strong', 'Physical',
    # 'Well-groomed', 'Physical',
    # 'Able', 'Physical',
    # 'Accident prone', 'Physical',
    # 'Adorable', 'Physical',
    # 'Always hungry', 'Physical',
    # 'Beautiful', 'Physical',
    # 'Dirty', 'Physical',
    # 'Diseased', 'Physical',
    # 'Filthy', 'Physical',
    # 'Hardy', 'Physical',
    # 'Weak constitution', 'Physical',
    # 'Healthy', 'Physical',
    # 'Hormonal', 'Physical',
    # 'Ill', 'Physical',
    # 'Lean', 'Physical',
    # 'Nimble', 'Physical',
    # 'Obese', 'Physical',
    # 'Overweight', 'Physical',
    # 'Plain', 'Physical',
    # 'Tall', 'Physical',
    # 'Ugly', 'Physical',
    # 'Unclean', 'Physical',
    # 'Young', 'Physical',
    # 'Accepting', 'Social', 'Positive',
    # 'Accommodating', 'Social', 'Positive',
    # 'Accomplished', 'Social', 'Neutral',
    # 'Adulterer', 'Social', 'Negative',
    # 'Adventurous', 'Social', 'Positive',
    # 'Affable', 'Social', 'Positive',
    # 'Affectionate', 'Social', 'Positive',
    # 'Agnostic', 'Social', 'Neutral',
    # 'Agreeable', 'Social', 'Positive',
    # 'Altruistic', 'Social', 'Positive',
    # 'Amateurish demeanor', 'Social', 'Negative',
    # 'Ambiguous', 'Social', 'Negative',
    # 'Ambivalent', 'Social', 'Negative',
    # 'Amiable', 'Social', 'Positive',
    # 'Amused', 'Social', 'Neutral',
    # 'Amusing', 'Social', 'Positive',
    # 'Annoying', 'Social', 'Negative',
    # 'Antagonistic', 'Social', 'Negative',
    # 'Anti-social', 'Social', 'Neutral',
    # 'Apologetic', 'Social', 'Neutral',
    # 'Appreciative', 'Social', 'Positive',
    # 'Approachable', 'Social', 'Positive',
    # 'Argumentative', 'Social', 'Neutral',
    # 'Arrogant', 'Social', 'Negative',

def appearance():

    misc = []
    # add androgynous

    # Mouth: The
    # person
    # has...
    #
    # Full
    # lips.
    #
    # Buck - teeth.
    #
    # Thin
    # lips.
    #
    # Rotting
    # teeth.
    #
    # Crooked
    # teeth.
    #
    # A
    # broken or missing
    # tooth.
    #
    # Pursed
    # lips.
    #
    # Dry, cracked
    # lips.
    #
    # One or more
    # false
    # teeth.
    #
    # A
    # mouth
    # that
    # hangs
    # open.
    #
    # d12
    # Nose: The
    # person
    # has...
    #
    # A
    # crooked
    # nose.
    #
    # A
    # bulbous
    # nose.
    #
    # A
    # narrow
    # nose.
    #
    # A
    # button
    # nose.
    #
    # A
    # long
    # nose.
    #
    # A
    # broad
    # nose.
    #
    # An
    # angular
    # nose.
    #
    # A
    # round
    # nose.
    #
    # A
    # broken
    # nose.
    #
    # A
    # hawk - like
    # nose.
    #
    # A
    # wide
    # nose.
    #
    # A
    # delicate
    # nose.
    #
    # d8
    # Chin or jaw: He / she
    # has...
    #
    # A
    # pronounced
    # chin.
    #
    # A
    # cleft
    # chin.
    #
    # A
    # dimple
    # on
    # the
    # chin.
    #
    # A
    # rounded
    # chin.
    #
    # A
    # sharp
    # jawline.
    #
    # A
    # square
    # jaw.
    #
    # A
    # round
    # jaw.
    #
    # An
    # underbite.
    #
    # His / her
    # face
    # has...
    #
    # High
    # cheekbones.
    #
    # Tight, drawn
    # cheeks.
    #
    # Chubby
    # cheeks.
    #
    # An
    # unpleasant
    # pustule.
    #
    # A
    # large
    # mole.
    #
    # A
    # beauty
    # mark.
    #
    # Freckles.
    #
    # Terrible
    # scarring.
    #
    # Always
    # bored
    # Angry
    # drunk
    # Annoyingly
    # Cryptic
    # Avant - garde
    # Bigoted
    # Bloody - Minded
    # Boastful
    # Bookworm
    # Bossy
    # Bully
    # Calculating
    # Can - do
    # attitude
    # Chatterbox
    # Chirpy
    # Collects
    # small
    # animals
    # Compulsive
    # Liar
    # Condescending
    # Conniving
    # Conspiracy
    # theorist
    # Creep
    # Decadent
    # Ditz
    # Egomaniac
    # Exquisite
    # dresser
    # Extravagant
    # Fanatically
    # loyal
    # Fast - talker
    # Femme
    # Fatale
    # Fiercely
    # ambitious
    # Fits
    # of
    # melancholy
    # Flamboyant
    # Folksy
    # Wisdom
    # Gossip
    # Hard - boiled
    # Hears
    # voices
    # Hillbilly
    # Hothead
    # Hypochondriac
    # Iconoclast
    # Idealistic
    # Illiterate
    # Incredibly
    # persistent
    # Insightful
    # observer
    # Into
    # crystals
    # Jack
    # of
    # all
    # Trades
    # Jerk
    # Klutz
    # Knows
    # everybody
    # Life
    # of
    # the
    # party
    # Love - struck
    # Mad
    # genius
    # Magnetic
    # Personality
    # Manic
    # Master
    # Orator
    # Militantly
    # Vegan
    # Misanthrope
    # Miser
    # Mopey
    # Naïve
    # Nerd
    # No - nonsense
    # Obsessive
    # Old
    # Fart
    # Overeducated
    # Paranoid
    # Perfect
    # Manners
    # Pouty
    # Power - hungry
    # Prickly
    # Proselytizer
    # Ruthless
    # Sadist
    # Self - destructive
    # Self - important
    # Self - pitying
    # Senile
    # Serene
    # Shameless
    # Flirt
    # Slacker
    # Slimy
    # Slovenly
    # Snarky
    # Snitch
    # Snob
    # Social
    # butterfly
    # Sophist
    # Spacey
    # Terrible
    # memory
    # Thick
    # Toady
    # Totally
    # unreliable
    # Twitchy
    # Vain
    # Vengeful
    # Village
    # idiot
    # Well - Travelled
    # Whiner
    # Wild
    # Child
    # Wisecracking
    # World - weary
    #
    # flaw:
    # forbidden
    # love
    # enjoys
    # prone
    # to
    # rage
    # phobic
    #
    # talent:
    # Plays
    # a
    # musical
    # instrument
    # Perfect
    # memory
    # Great
    # with animals
    #     Great
    #     with children
    #         Great
    #     at
    #     solving
    #     puzzles
    # Great
    # at
    # impressions
    # Sings
    # beautifully
    # Paints
    # beautifully
    # Great
    # at
    # cooking
    # Expert
    # rock
    # skipper
    # Expert
    # juggler
    # Skilled
    # dancer
    #
    # mannerisms:
    # sings
    # quietly
    # whistles
    # hums
    # quietly
    # speaks
    # loudly
    # speaks
    # softly
    #
    # argumentative
    # arrogant
    # blustering
    # rude
    # curious
    # friendly
    # honest
    # hot
    # tempered
    # irritable
    # ponderous
    # quiet
    # suspicious


    facialFeatures_list = [
        "Acne",
        "Beard",
        "Buck-toothed",
        "Bushy eyebrows",
        "Chiseled",
        "Doe-eyed",
        "Distinctive nose",
        "Gap-toothed",
        "Grizzled",
        "Pierced",
        "Pock-marked",
        "Squinty",
        "Stained teeth",
        "Weather-beaten"
    ]


    characteristics_list = [
        "Birthmark",
        "Body piercings",
        "Chews tobacco",
        "Scarred",
        "Smokes",
        "Tattooed",
        "Always arrives late",
        "Always gives vaguest possible answer",
        "Always has something in hands",
        "Always wears as little as possible",
        "Always wears expensive clothes",
        "Always wears same color",
        "Answers questions with questions",
        "Bad/loud/annoying/shrill laugh",
        "Bad with money",
        "Believes all animals can talk to each other",
        "Bites fingernails",
        "Bites lips",
        "Black eye",
        "Bleeding nose",
        "Blinks constantly",
        "Bruises easily",
        "Frequently burps",
        "Burn scar",
        "Clicks tongue when annoyed",
        "Collects teeth/hair/claws of slain opponents",
        "Constantly asks for divine advice",
        "Covered in sores, boils, or a rash",
        "Frequently cracks knuckles",
        "Wears distinctive jewelry",
        "Distracted easily during conversations",
        "Double-checks everything",
        "Drones on and on while talking",
        "Easily confused",
        "Exaggerates",
        "Excessive body hair",
        "Fidgets",
        "Finishes others' sentences",
        "Flips a coin",
        "Freckled",
        "Gesticulates wildly",
        "Giggles",
        "Hands shake",
        "Hacking cough",
        "Has nightmares",
        "Hates animals",
        "Hates children",
        "Hates quiet pauses in conversations",
        "Hiccoughs",
        "Hook for a hand",
        "Hums",
        "If unable to recall word, stops conversation and will not give up until can finally remember it",
        "Interrupts others",
        "Jumps conversation topics",
        "Laughs at own jokes",
        "Lazy eyed",
        "Leers",
        "Likes to arm wrestle",
        "Limps",
        "Loves animals",
        "Loves children",
        "Loves the sea and ships",
        "Makes up words",
        "Mispronounces names",
        "Missing finger",
        "Mutters",
        "Needs story before sleeping",
        "Nervous cough",
        "Nervous eye twitch",
        "Nervous muscle twitch",
        "Paces",
        "Peg-legged",
        "Perfumed",
        "Picks fights",
        "Picks at fingernails",
        "Picks scabs",
        "Picks at teeth",
        "Plays practical jokes",
        "Plays with hair",
        "Plays with own jewelry",
        "Pokes/taps others with finger",
        "Prefers to be called by last name",
        "Reads constantly",
        "Refuses to let anyone walk behind them",
        "Refuses to sit in chairs",
        "Repeats same phrase over and over",
        "Rolls eyes when bored/annoyed",
        "Sharpens weapon constantly",
        "Sings",
        "Sleeps late",
        "Smiles when angry/annoyed",
        "Spits",
        "Squeamish",
        "Stands very close when talking",
        "Stares",
        "Sun-burned",
        "Swears profusely",
        "Sweaty",
        "Talks about self in third-person",
        "Talks to inanimate objects",
        "Talks to self",
        "Talks with food in mouth",
        "Taps feet",
        "Taps fingers",
        "Taunts foes",
        "Thinks they are very lucky",
        "Thinks they can speak a language they can't",
        "Tone-deaf",
        "Touches people while talking to them",
        "Turns every conversation into story about self",
        "Unable to figure out which color clothes match",
        "Unable to let a joke die",
        "Unable to remember names",
        "Uses wrong word and refuses to acknowledge correct word",
        "Warts",
        "Wears flamboyant or outlandish clothes",
        "Wears hat or hood",
        "Wears only jewelry of one type of metal",
        "Whistles",
        "Achluophobic (afraid of darkness)",
        "Agoraphobic (afraid of open spaces)",
        "Altophobic (afraid of heights)",
        "Claustrophobic (afraid of small spaces)",
        "Entomophobic (afraid of insects)",
        "Excessively clean",
        "Facial tic",
        "Haphephobic (afraid of being touched)",
        "Hemaphobic (afraid of blood)",
        "Hydrophobic (afraid of water)",
        "Insomniac",
        "Narcoleptic",
        "Picks at lint or dirt on others' clothes",
        "Obsessive gambler",
        "Short attention span",
    ]
    characteristic = random.choice(characteristics_list)

    military_quirks = [
        "spends every morning training.",
        "will never say no to a duel.",
        "can see an opening in any defense.",
        "never surrenders.",
        "loves training people.",
        "compares everything to a fight.",
        "sees fighting as a solution to any problem.",
        "judges people on their fighting skills.",
        "used to be bullied as a child and learned to fight so that it wouldn't happen again.",
        "always obeys superiors.",
        "always has a battle story to tell. "
    ]
    nature_quirks = [
        "spends every morning meditating.",
        "likes animals more than people.",
        "is a vocal vegetarian.",
        "is a vegetarian.",
        "is a secret vegetarian.",
        "talks to plants.",
        "feels uncomfortable in a urban setting.",
        "is a very proficient herbalist.",
        "sleeps best in a tree.",
        "can always find their way in the woods.",
        "will never take a life if given the choice.", ]
    personality_list = [
        "Accusative",
        "Active",
        "Adventurous",
        "Affable",
        "Aggressive",
        "Agreeable",
        "Aimless",
        "Aloof",
        "Altruistic",
        "Analytical",
        "Angry",
        "Animated",
        "Annoying",
        "Anxious",
        "Apathetic",
        "Apologetic",
        "Apprehensive",
        "Argumentative",
        "Arrogant",
        "Articulate",
        "Attentive",
        "Bigoted",
        "Bitter",
        "Blustering",
        "Boastful",
        "Bookish",
        "Bossy",
        "Braggart",
        "Brash",
        "Brave",
        "Bullying",
        "Callous",
        "Calm",
        "Candid",
        "Cantankerous",
        "Capricious",
        "Careful",
        "Careless",
        "Caring",
        "Casual",
        "Catty",
        "Cautious",
        "Cavalier",
        "Charming",
        "Chaste",
        "Chauvinistic",
        "Cheeky",
        "Cheerful",
        "Childish",
        "Chivalrous",
        "Clueless",
        "Clumsy",
        "Cocky",
        "Comforting",
        "Communicative",
        "Complacent",
        "Condescending",
        "Confident",
        "Conformist",
        "Confused",
        "Conscientious",
        "Conservative",
        "Contentious",
        "Contrary",
        "Contumely",
        "Conventional",
        "Cooperative",
        "Courageous",
        "Courteous",
        "Cowardly",
        "Coy",
        "Crabby",
        "Cranky",
        "Critical",
        "Cruel",
        "Cultured",
        "Curious",
        "Cynical",
        "Daring",
        "Deceitful",
        "Deceptive",
        "Defensive",
        "Defiant",
        "Deliberate",
        "Deluded",
        "Depraved",
        "Discreet",
        "Dishonest",
        "Disingenuous",
        "Disloyal",
        "Disrespectful",
        "Distant",
        "Distracted",
        "Distraught",
        "Docile",
        "Doleful",
        "Dominating",
        "Dramatic",
        "Drunkard",
        "Dull",
        "Earthy",
        "Eccentric",
        "Elitist",
        "Emotional",
        "Energetic",
        "Enigmatic",
        "Enthusiastic",
        "Epicurean",
        "Excited",
        "Expressive",
        "Extroverted",
        "Faithful",
        "Fanatical",
        "Fastidious",
        "Fatalistic",
        "Fearful",
        "Fearless",
        "Feral",
        "Fierce",
        "Feisty",
        "Flamboyant",
        "Flippant",
        "Flirtatious",
        "Foolhardy",
        "Foppish",
        "Forgiving",
        "Friendly",
        "Frightened",
        "Frivolous",
        "Frustrated",
        "Funny",
        "Furtive",
        "Generous",
        "Genial",
        "Gentle",
        "Gloomy",
        "Goofy",
        "Gossip",
        "Graceful",
        "Gracious",
        "Grave",
        "Gregarious",
        "Grouchy",
        "Groveling",
        "Gruff",
        "Gullible",
        "Happy",
        "Harsh",
        "Hateful",
        "Helpful",
        "Honest",
        "Hopeful",
        "Hostile",
        "Hot tempered",
        "Humble",
        "Humorless",
        "Humorous",
        "Idealistic",
        "Idiosyncratic",
        "Imaginative",
        "Imitative",
        "Impatient",
        "Impetuous",
        "Implacable",
        "Impractical",
        "Impulsive",
        "Inattentive",
        "Incoherent",
        "Indifferent",
        "Indiscreet",
        "Individualist",
        "Indolent",
        "Indomitable",
        "Industrious",
        "Inexorable",
        "Inexpressive",
        "Insecure",
        "Insensitive",
        "Instructive",
        "Intolerant",
        "Intransigent",
        "Introverted",
        "Irreligious",
        "Irresponsible",
        "Irreverent",
        "Irritable",
        "Jealous",
        "Jocular",
        "Joking",
        "Jolly",
        "Joyous",
        "Judgmental",
        "Jumpy",
        "Kind",
        "Know-it-all",
        "Languid",
        "Lazy",
        "Lethargic",
        "Lewd",
        "Liar",
        "Likable",
        "Lippy",
        "Listless",
        "Loquacious",
        "Loving",
        "Loyal",
        "Lust",
        "Madcap",
        "Magnanimous",
        "Malicious",
        "Maudlin",
        "Mean",
        "Meddlesome",
        "Melancholy",
        "Melodramatic",
        "Merciless",
        "Merry",
        "Meticulous",
        "Mischievous",
        "Miscreant",
        "Miserly",
        "Modest",
        "Moody",
        "Moralistic",
        "Morbid",
        "Morose",
        "Mournful",
        "Mousy",
        "Mouthy",
        "Mysterious",
        "Naïve",
        "Narrow-minded",
        "Needy",
        "Nefarious",
        "Nervous",
        "Nettlesome",
        "Neurotic",
        "Noble",
        "Nonchalant",
        "Nurturing",
        "Obdurate",
        "Obedient",
        "Oblivious",
        "Obnoxious",
        "Obsequious",
        "Obsessive",
        "Obstinate",
        "Obtuse",
        "Odd",
        "Ornery",
        "Optimistic",
        "Organized",
        "Ostentatious",
        "Outgoing",
        "Overbearing",
        "Paranoid",
        "Passionate",
        "Pathological",
        "Patient",
        "Peaceful",
        "Pensive",
        "Pertinacious",
        "Pessimistic",
        "Philanderer",
        "Philosophical",
        "Phony",
        "Pious",
        "Playful",
        "Pleasant",
        "Poised",
        "Polite",
        "Pompous",
        "Ponderous",
        "Pontificating",
        "Practical",
        "Prejudiced",
        "Pretentious",
        "Preoccupied",
        "Promiscuous",
        "Proper",
        "Proselytizing",
        "Proud",
        "Prudent",
        "Prudish",
        "Prying",
        "Puerile",
        "Pugnacious",
        "Quiet",
        "Quirky",
        "Racist",
        "Rascal",
        "Rash",
        "Realistic",
        "Rebellious",
        "Reckless",
        "Refined",
        "Repellent",
        "Reserved",
        "Respectful",
        "Responsible",
        "Restless",
        "Reticent",
        "Reverent",
        "Rigid",
        "Risk-taking",
        "Rude",
        "Sadistic",
        "Sarcastic",
        "Sardonic",
        "Sassy",
        "Savage",
        "Scared",
        "Scolding",
        "Secretive",
        "Self-effacing",
        "Selfish",
        "Selfless",
        "Senile",
        "Sensible",
        "Sensitive",
        "Sensual",
        "Sentimental",
        "Serene",
        "Serious",
        "Servile",
        "Sexist",
        "Sexual",
        "Shallow",
        "Shameful",
        "Shameless",
        "Shifty",
        "Shrewd",
        "Shy",
        "Sincere",
        "Slanderous",
        "Sly",
        "Smug",
        "Snobbish",
        "Sober",
        "Sociable",
        "Solemn",
        "Solicitous",
        "Solitary",
        "Sophisticated",
        "Spendthrift",
        "Spiteful",
        "Stern",
        "Stingy",
        "Stoic",
        "Stubborn",
        "Submissive",
        "Sultry",
        "Superstitious",
        "Surly",
        "Suspicious",
        "Sybarite",
        "Sycophantic",
        "Sympathetic",
        "Taciturn",
        "Tactful",
        "Tawdry",
        "Teetotaler",
        "Temperamental",
        "Tempestuous",
        "Thorough",
        "Thrifty",
        "Timid",
        "Tolerant",
        "Transparent",
        "Treacherous",
        "Troublemaker",
        "Trusting",
        "Truthful",
        "Uncommitted",
        "Understanding",
        "Unfriendly",
        "Unhinged",
        "Uninhibited",
        "Unpredictable",
        "Unruly",
        "Unsupportive",
        "Vague",
        "Vain",
        "Vapid",
        "Vengeful",
        "Vigilant",
        "Violent",
        "Vivacious",
        "Vulgar",
        "Wanton",
        "Wasteful",
        "Weary",
        "Whimsical",
        "Whiny",
        "Wicked",
        "Wisecracking",
        "Wistful",
        "Witty",
        "Zealous"
    ]

    clothing_list = [
        "Dull jumpsuit and heavy tarred boots.",
        "Horizontal Striped sweater and dungarees with too many buttons.",
        "Bright loose shirt and tight dungarees.",
        "Threadbare robe with detachable cowl and several hidden pockets.",
        "Casual worker's canvas pantaloons and white undershirt, accented by leather braces.",
        "Wool or felt uniform jacket with decorative braid.",
        "Leathers with bone toggles and decorative hexagrams.",
        "Brightly patterned sarong and string and shell vest.",
        "Leathers accented with too many buckles and black feather cloak.",
    ]
    clothing = random.choice(clothing_list)

    knacks_list = [
        "A catchy tune",
        "A clear voice",
        "A discerning eye",
        "A strong constitution",
        "Well read",
        "A strong sense of right and wrong",
        "A silver tongue",
        "A way with knots",
        "An eye for detail",
        "An innocent heart",
        "Baking",
        "Balance",
        "Bluffing",
        "Brewing",
        "Comprehensive local knowledge",
        "Cooking",
        "Criminal connections",
        "Delusions of grandeur",
        "Endless ideas",
        "Endurance",
        "Kindness",
        "Lying",
        "Metalworking",
        "Perfect memory",
        "Persistence",
        "Politics",
        "Ratcatching",
        "Resistance to disease",
        "Sense of direction",
        "Skill with a specific item or tool",
        "Smelting",
        "Running",
        "Steely nerves",
        "Storytelling",
        "Stunning looks",
        "The language of birds",
        "Languages",
        "Woodworking",
        "Writing"
    ]
    knack = random.choice(knacks_list)

    motto_list = [
        'A little pot is soon hot.',
        'A miss is as good as a mile.',
        'A word to the wise is enough.',
        'Adventure with someone you wouldn\'t invite home to dinner.',
        'Alienation produces eccentrics or revolutionaries.',
        'Always act with courtesy and fairness no matter how others treat you.',
        'Always ask yourself some questions.',
        'Always be gentle with the world.',
        'Always be honest with yourself or close ones about what you want.',
        'Always be open and accessible.',
        'Always be quick to take advantage of an advantage.',
        'Always be willing to lower your price to get something else of greater value.',
        'Always become the kind of person who brightens a room just by entering it.',
        'Always do a good job because you want to, not because you have to.',
        'Always do all you can to create a tranquil, harmonius home.',
        'Always do cheerfully what you must do.',
        'Always do what you want instead of what you should.',
        'Always explain the truth.',
        'Always fight fire with fire.',
        'Always have a place for everything, and everything in it\'s place.',
        'Always hold yourself to the highest standards.',
        'Always hope for the best and prepare for the worst.',
        'Always join a group who can help you Delivery',
        'Always judge your success by what you had to give up in order to get it.',
        'Always keep in touch with a childhood friend.',
        'Always learn all you can about a new subject.',
        'Always let your spirit of adventure triumph over your good sense.',
        'Always listen to that nagging inner voice.',
        'Always look for ways to make your boss look good.',
        'Always love someone who doesn\'t deserve it.',
        'Always lower your voice in a verbal confrontation to the degree that the other person raises theirs.',
        'Always make decisions in concert with your values.',
        'Always make haste slowly.',
        'Always make sure you are on the committee.',
        'Always overestimate travel time by 15 percent.',
        'Always pay your debts on time.',
        'Always read between the lines.',
        'Always read more books.',
        'Always reject and condemn prejudice based on race, gender, religion or age.',
        'Always remember that a little goes a long way when criticizing others.',
        'Always see how life looks through other people\'s eyes.',
        'Always set a good example.',
        'Takes a thief to catch a thief.',
        'Always slow down.',
        'Always strive for perfection, but settle for excellence.',
        'Always take an opportunity for additional training.',
        'Always take one step at a time.',
        'Always take time to sit down for a meal with loved ones.',
        'Always think of someone who loves you when you hear a bell.',
        'Always win without boasting.',
        'Answer the easy questions first.',
        'As you sow, so you reap.',
        'Never be lead by peer pressure.',
        'Be more diplomatic with love.',
        'Be quick to take advantage of an advantage.',
        'Be so concerned with your rights that you forget your manners.',
        'Be too proud to ask for help.',
        'Beauty is in the eye of the beholder.',
        'Become judge and jury.',
        'Being sure of yourself means you\'re a fool.',
        'Buy into someone else\'s trouble.',
        'Calm is more conducive to creativity than is anxiety.',
        'Change a routine.',
        'Chasing the new is dangerous to society.',
        'Cheats never prosper.',
        'Choose to do something you have never tried.',
        'Never claim premature victory.',
        'Never confuse foolishness with bravery.',
        'Confuse mere inconveniences with real problems.',
        'Never confuse wealth with success.',
        'Do a good job because you want to, not because you have to.',
        'Do the right thing, regardless of what others think.',
        'Do what you can.',
        'Don\'t be so concerned with your rights that you forget your manners.',
        'Don\'t become judge without hearing the evidence.',
        'Don\'t betray a confidence.',
        'Don\'t confuse comfort with happiness.',
        'Don\'t cross the bridge before you come to it.',
        'Don\'t cut off your nose to spite your face.',
        'Don\'t expect the best gifts to come wrapped in pretty paper.',
        'Don\'t expect your love alone to change someone.',
        'Don\'t get too big for your boots.',
        'Don\'t give a sucker an even break.',
        'Don\'t go looking for trouble.',
        'Don\'t interrupt when you are being flattered.',
        'Don\'t judge what you don\'t understand.',
        'Don\'t knock the competition.',
        'Don\'t laugh at anyone\'s dreams.',
        'Don\'t let a little dispute injure a great friendship.',
        'Don\'t let go of your values.',
        'Don\'t look a gift horse in the mouth.',
        'Don\'t meet troubles half-way.',
        'Don\'t outlive your money.',
        'Don\'t overlook the small joys while looking for the big ones.',
        'Don\'t put all your eggs in one basket.',
        'Don\'t put off till tomorrow what you can do today.',
        'Don\'t remind someone of a kindness or act of generosity you have shown them.',
        'Don\'t rush a fight that deserves time.',
        'Don\'t sign a contract.',
        'Don\'t speak ill of the dead.',
        'Don\'t spend all you have.',
        'Don\'t take good friends for granted.',
        'Don\'t take what you can\'t use.',
        'Don\'t think you can relax your way to happiness.',
        'Don\'t underestimate the time it takes to do something.',
        'Don\'t waste time waiting for inspiration.',
        'Eating too much is criminal.',
        'Encourage someone who is trying to improve.',
        'Fight for a just cause.',
        'Don\'t fix what isn\'t broken.',
        'Get the balance right between give and take.',
        'Never get too big for your boots.',
        'Give a sucker an even break.',
        'Give away the ending of a good story.',
        'Go looking for trouble.',
        'Good friends are hard to find.',
        'Guilt is an indulgence.',
        'Half the joy of achievement is in the anticipation.',
        'If you don\'t make mistakes you don\'t make anything.',
        'It can be helpful to keep going no matter what.',
        'It is better to be studious than rich.',
        'It takes two to make a bargain.',
        'Keep in touch with friends.',
        'Knowledge is power.',
        'Learn the rules - then break some.',
        'Learn to walk before you run.',
        'Don\'t let anyone push you around.',
        'Look a gift horse in the mouth.',
        'Look a gift horse in the mouth.',
        'Love deeply and passionately - you might get hurt, but it\'s the only way to live completely.',
        'Make sure you are on the committee.',
        'Many a true word is spoken in jest.',
        'Meet troubles half-way.',
        'Mistake kindness for weakness.',
        'Money is the root of all evil.',
        'Money makes money.',
        'Never "borrow" so much as a copper piece from your friends.',
        'Never adventure with someone you wouldn\'t invite home to dinner.',
        'Never apologize for extreme measures when defending your values.',
        'Never be ashamed of your faith.',
        'Never be ashamed of your patriotism.',
        'Never be lead by peer pressure.',
        'Never be too proud to ask for help.',
        'Never become judge and jury.',
        'Never break a promise.',
        'Never confuse foolishness with bravery.',
        'Never confuse foolishness with bravery.',
        'Never confuse mere inconveniences with real problems.',
        'Never cross the bridge before you come to it.',
        'Never dismiss a good idea simply because you don\'t like the source.',
        'Never fret about the future of adventure.',
        'Never interrupt when you are being flattered.',
        'Never laugh at anyone\'s dreams.',
        'Never let go of your values.',
        'Never make a promise.',
        'Never mistake kindness for weakness.',
        'Never put all your eggs in one basket.',
        'Never remind someone of a kindness or act of generosity you have shown them.',
        'Never resort to name-calling.',
        'Never sell yourself short.',
        'Never spend all you have.',
        'Waiting won\'t make your obstacles grow smaller.',
        'Never think you can relax your way to happiness.',
        'Never throw pearls before swine.',
        'Never utter a threat without intend to back it up.',
        'Never work for someone of questionable character.',
        'Overlook the small joys while looking for the big ones.',
        'Pain can be a very positive thing.',
        'Poverty is no disgrace, but it is a great inconvenience.',
        'Never put all your eggs in one basket.',
        'Put off till tomorrow what you can do today.',
        'Religion causes as many problems as it solves.',
        'Remind someone of a kindness or act of generosity you have shown them.',
        'Risk what you can\'t afford to lose.',
        'Sacrificing yourself for a bad cause is not a moral act.',
        'Savor each magic moment life hands you.',
        'Say no when you mean no.',
        'Always get it in writing.',
        'Spend all you have.',
        'Start every day with the most important thing you have to do.',
        'Stay calm and see things through no matter how big a challenge gets.',
        'Strong emotional attachment stems from basic insecurity.',
        'Never take good friends for granted.',
        'Take responsibility for your actions.',
        'The good is the enemy of the best.',
        'The grass is always greener on the other side.',
        'The shoemakers son always goes barefoot.',
        'Think first and speak afterwards.',
        'Think you can fill an emptiness in your heart with gold.',
        'Throw the baby out with the bathwater.',
        'To err is human, to forgive divine.',
        'Too many cooks spoil the broth.',
        'Travel and see new places, but remember to take along an open mind.',
        'Try something for the first time.',
        'Try to act with courtesy and fairness no matter how others treat you.',
        'Try to answer the easy questions first.',
        'Try to apologize immediately when you lose your temper.',
        'Try to be more diplomatic with adventure.',
        'Try to be willing to lower your price to get something else of greater value.',
        'Try to believe in love at fist sight.',
        'Try to choose the lesser of two evils.',
        'Try to do all you can to create a tranquil, harmonious home.',
        'Try to do the right thing, regardless of what others think.',
        'Try to employ people more for their judgement than their talents.',
        'Try to encourage someone who is trying to improve mentally, physically, or spiritually.',
        'Try to go public about your true adventure.',
        'Try to help a friend to help themselves.',
        'Try to ignore people who come up with reasons why you can\'t do something.',
        'Try to ignore to your critics.',
        'Try to join a group who can help you Settle a Debt',
        'Try to keep in the rhythm.',
        'Try to leave your best jewelry at home.',
        'Try to let friends help when they offer.',
        'Try to let your spirit of adventure triumph over your good sense.',
        'Try to lose without excuses.',
        'Try to love deeply and passionately - you might get hurt, but it\'s the only way to live completely.',
        'Try to make haste slowly.',
        'Try to make sure you are on the committee.',
        'Try to mind your own business.',
        'Try to push yourself to the limit.',
        'Try to remember the ones who love you.',
        'Try to remember your responsibilities when declaring your rights.',
        'Try to see how treasure looks through other people\'s eyes.',
        'Try to spend your time and energy creating, not criticising.',
        'Try to stick your hands in your pockets when you get really angry.',
        'Try to take criticism and praise with equal grace.',
        'Try to talk slowly but think quickly.',
        'Try to think twice before you decide not to charge for some work you have done.',
        'Try to try something for the first time.',
        'Try to volunteer to help in your community.',
        'Try to wait till you get everything in place.',
        'Try to watch your attitude.',
        'Try to win without boasting.',
        'Waste time waiting for inspiration.',
        'Watch your attitude.',
        'Win without boasting.',
        'Work out why certain people are even being given some space in your life.',
        'You are responsible for constituting the meaning of things.',
        'You cannot get blood from a stone.',
        'You cannot lose what you never had.',
        'You don\'t get something for nothing.',
        'Your oldest fears are the worst ones.',
        'Progress, not perfection.',
        'Keep your head up',
        'Pain today will be strength tomorrow.',
        'Do all the good you can.',
        'It is better to light a candle than to curse the darkness',
        'If you want to go fast, go alone. If you want to go far, go with others. ',
    ]
    motto = random.choice(motto_list)
    mannerisms = [
        "Prone to singing, whistling, or humming quietly",
        "Speaks in rhyme or some other peculiar way",
        "Particularly low or high voice",
        "Slurs words, lisps, or stutters",
        "Enunciates overly clearly",
        "Speaks loudly",
        "Whispers",
        "Uses flowery speech or long words",
        "Frequently uses the wrong word",
        "Uses colorful oaths and exclamations",
        "Makes constant jokes or puns",
        "Prone to predictions of doom",
        "Fidgets",
        "Squints",
        "Stares into the distance",
        "Chews something",
        "Paces",
        "Taps fingers",
        "Bites fingernails",
        "Twirls hair or tugs beard",
    ]
    dislikes = []
    gender_list = ["Male", "Female", "Non-binary"]
    orientation_list = ["Heterosexual", "Gay", "Bisexual", "Queer", "Pansexual", "Asexual"]

    age = random.randint(18,50)
    print('Age:', age)

    gender_choice = random.choice(gender_list)
    print('Gender:', gender_choice)
    orientation_choice = random.choice(orientation_list)
    print('Orientation:', orientation_choice)
    print('\nAppearance:\n')
    facial_hair(gender_choice)
    eye_color()
    hair()
    tattoo()
    noticeable()
    missing_limbs()
    body_type()
    height()
    print('Wears:',clothing)
    print('\nPersonality:\n')
    mood()
    flaw()
    goals()
    print("Motto:", motto)
    print("Knack:", knack)
    print("Characteristic:", characteristic)

def facial_hair(gender):
    if gender == "Female":
        pass
    else:
        beard = random.randint(1, 2)
        if beard == 1:
            beard_list = [
                "Very short",
                "Short",
                "Medium",
                "Long",
                "Long, braided",
                "Very long",
                "Very long, braided",
                "Huge",
                "Huge, braided",]
            beard_style_list = [
                    "chinstrap beard",
                    "full beard",
                    "squared beard",
                    "goatee",
                    "spotty beard",
                    "sideburns",
                    "soul patch",
                    "mutton chops beard",
                    "van dyke beard",
                    "handlebar moustache",
                    "pencil moustache",
                    "fu manchu moustache",
                    "moustache"
                ]
            beard_style = random.choice(beard_style_list)
            beard_length = random.choice(beard_list)
            print('Facial hair:', beard_length, beard_style)
        else:
            print('Clean shaven')

def tattoo():
    bodyLocations_list = [
        "face",
        "neck",
        "chest",
        "back",
        "stomach",
        "waist",
        "right arm",
        "left arm",
        "right leg",
        "left leg"
        "both legs"
        "both arms"
        "chest and arms"
        "chest, back and arms"
        "chest, back, arms, and legs"
        "from the neck down"
    ]
    location = random.choice(bodyLocations_list)
    tattoo_roll = random.randint(1,5)
    if tattoo_roll == 1:
        number = random.randint(1, 6)
        if number < 6:
            print('Tattoo on', location)
        else:
            print('Tattoos on face and all over body')

def stats(might, speed, intellect):
    for stat in range(6):
        stat_list = ['might', "speed", 'intellect']
        stat_choice = random.choice(stat_list)
        if stat_choice == "might":
            might += 1
        elif stat_choice == "speed":
            speed += 1
        elif stat_choice == "intellect":
            intellect += 1
        stat -= 1
    print(might, "Might,", speed, "Speed,", intellect, "Intellect")

def charGen():
    might = 0
    speed = 0
    intellect = 0

    name_list = ["aaban", "aache", "aadam", "aaden", "aadhav", "aadhya", "aadil", "aadit", "aaditri", "aaditya",
                 "aadya", "aadyn", "aafia", "aafiya", "aafiyah", "aahad", "aahana", "aahil", "aaila", "aaima", "aaina",
                 "aaira", "aairah", "aaisha", "aaishah", "aaiza", "aaizah", "aakash", "aakifah", "aakriti", "aalayah",
                 "aalayha", "aaleen", "aaleigha", "aaleyah", "aalia", "aaliah", "aalim", "aalimah", "aaliya", "aaliyah",
                 "aalliyah", "aamayah", "aamena", "aamenah", "aamilah", "aamina", "aaminah", "aamir", "aamira",
                 "aamirah", "aamna", "aania", "aaniya", "aaniyah", "aankhi", "aanwas", "aanya", "aaqib", "aaqil",
                 "aaqila", "aaradhya", "aaralyn", "aaran", "aaranyan", "aarav", "aaren", "aarez", "aaria", "aarian",
                 "aariel", "aarifah", "aarika", "aarisha", "aariv", "aariya", "aariyan", "aariz", "aarna", "aarnav",
                 "aarnavi", "aarohi", "aaron", "aaronarthur", "aaronjames", "aarran", "aarron", "aarun", "aarush",
                 "aarushi", "aarvi", "aarya", "aaryahi", "aaryan", "aaryav", "aaryn", "aaryun", "aasha", "aashi",
                 "aashir", "aashman", "aashna", "aashni", "aashvi", "aasim", "aasiya", "aasiyah", "aathavan", "aathira",
                 "aathyn", "aatif", "aatika", "aayaan", "aayah", "aayan", "aayana", "aayansh", "aayat", "aayath",
                 "aayden", "aayesha", "aayla", "aayma", "aayon", "aayush", "aayushi", "abaan", "abaet", "abagail",
                 "abaigeal", "abarden", "abbadon", "abbas", "abbey", "abbie", "abbiegail", "abbigail", "abbigale",
                 "abbott", "abbyanne", "abbygael", "abbygail", "abbygale", "abdalla", "abdallah", "abdalrahman",
                 "abdel", "abdelrahman", "abdiaziz", "abdiel", "abdikarim", "abdimalik", "abdinasir", "abdirahim",
                 "abdirahman", "abdoul", "abdoulie", "abdul", "abdulaahi", "abdulahi", "abdulaziz", "abdulhadi",
                 "abdulhameed", "abdulkader", "abdulkadir", "abdulkhalek", "abdulkhalid", "abdulkhaliq", "abdullaah",
                 "abdullah", "abdullahi", "abdullateef", "abdulmajid", "abdulmalik", "abdulqadir", "abdulraheem",
                 "abdulraheim", "abdulrahim", "abdulrahman", "abdulrazak", "abdulrehman", "abdulsalam", "abdulsamad",
                 "abdur", "abdurahman", "abdurraheem", "abdurrahmaan", "abdurrahman", "abdurrauf", "abdurrehman",
                 "abdus", "abeeha", "abeer", "abeera", "abella", "abena", "abeona", "aberbysion", "abeyaratne", "abhay",
                 "abhigael", "abhijot", "abhimanyu", "abhinab", "abhinav", "abhiraj", "abhiram", "abian", "abida",
                 "abieyuwa", "abigael", "abigail", "abigaile", "abigale", "abigayle", "abigel", "abigiel", "abiha",
                 "abinaya", "abinesh", "abiola", "abiona", "abisali", "abisha", "abisola", "abithan", "abner", "abnoba",
                 "aboloft", "aboubacar", "aboubakry", "abraham", "abram", "abrar", "abrianna", "abriel", "abrielle",
                 "abril", "abrish", "absalom", "abthony", "abubacarr", "abubakar", "abubaker", "abubakr", "abubokar",
                 "abyaan", "abyan", "abygael", "acacia", "acamen", "acantha", "acear", "acele", "acelya", "acence",
                 "achalla", "achard", "achilles", "achintya", "acholate", "achsah", "ackmard", "acorn", "acyee",
                 "adaam", "adaeze", "adair", "adairia", "adalberto", "adalene", "adalia", "adaline", "adalyn",
                 "adalynn", "adama", "adamas", "adame", "adamina", "adanna", "adaon", "adaora", "adara", "adarsh",
                 "addie", "addiena", "addieson", "addilyn", "addison", "addisyn", "addyson", "adebayo", "adebola",
                 "adebowale", "adedamola", "adediwura", "adedoyin", "adeeb", "adeeba", "adeel", "adeen", "adeena",
                 "adeiza", "adela", "adelaid", "adelaida", "adelaide", "adelar", "adele", "adeleine", "adelene",
                 "adelia", "adelie", "adelina", "adeline", "adelio", "adell", "adella", "adelle", "adelya", "adelyn",
                 "adelynn", "adena", "adeogooluwa", "adeola", "adeoluwa", "aderianna", "aderyn", "adesubomi", "adesuwa",
                 "adetokunbo", "adetoyosi", "adetutu", "adham", "adheen", "adhira", "adhrit", "adhya", "adian",
                 "adiannon", "adiba", "adiel", "adila", "adina", "adira", "adison", "adithya", "aditi", "aditya",
                 "adiya", "adiyan", "adler", "adley", "admir", "adnaan", "adnan", "adolfo", "adolph", "adoma", "adomas",
                 "adonay", "adonia", "adonis", "adora", "adore", "adorra", "adotte", "adreanna", "adria", "adrian",
                 "adriana", "adrianas", "adriane", "adrianna", "adriannah", "adrianne", "adriano", "adrians", "adric",
                 "adriel", "adrien", "adriene", "adrienne", "adrija", "adrijus", "advait", "advaith", "advay", "advik",
                 "advika", "advoc", "adwoa", "adyaan", "adyan", "aedan", "aeden", "aedric", "aegir", "aeglaeca",
                 "aeilah", "aelan", "aeliana", "aelish", "aella", "aelwen", "aemilia", "aenas", "aerden", "aerin",
                 "aerinha", "aeris", "aeron", "aerona", "aeryn", "aeson", "aette", "aevor", "afaan", "afeefah",
                 "affaan", "affaf", "affan", "afflon", "afifa", "afifah", "afina", "afiya", "afiyah", "afizah",
                 "aflamina", "afnaan", "afnan", "afolabi", "afonso", "afrah", "afraz", "afreen", "afsana", "afsheen",
                 "afton", "agamemon", "agamjot", "agastya", "agata", "agatha", "agathe", "ageon", "aggie", "aghon",
                 "aglaya", "agmemon", "agnar", "agnes", "agnieszka", "agnus", "agnvala", "agravaine", "agrim",
                 "agripina", "agrippa", "agsded", "agueda", "agustin", "agustina", "ahaan", "ahalfar", "ahana",
                 "ahanna", "aharon", "ahburn", "ahcene", "ahdun", "ahlaam", "ahlam", "ahlem", "ahmad", "ahmar", "ahmed",
                 "ahmet", "ahnaf", "ahren", "ahria", "ahron", "ahsan", "ahyaan", "ahyan", "aibel", "aibhlin",
                 "aibhlinn", "aicha", "aichata", "aidah", "aidan", "aiddan", "aideen", "aiden", "aidie", "aidyn",
                 "aiesha", "aiesrom", "aiken", "ailah", "ailbe", "ailbhe", "aileen", "aileigh", "ailene", "ailey",
                 "ailidh", "ailie", "ailin", "ailion", "ailis", "ailish", "ailla", "ailsa", "aimal", "aiman", "aimee",
                 "aimeelee", "aimen", "aimie", "ainara", "ainhoa", "ainsleigh", "ainsley", "airan", "airdrie", "airen",
                 "airis", "airlia", "airlie", "aironas", "aisha", "aishah", "aishani", "aishat", "aishwarya", "aisla",
                 "aisling", "aislinn", "aisosa", "aissatou", "aistis", "aitana", "aivan", "aiyana", "aiyanna", "aiyla",
                 "aiysha", "aiyza", "aizah", "aizehi", "aizza", "ajani", "ajeer", "ajeesh", "ajeet", "ajooni", "ajuni",
                 "ajwah", "akaal", "akara", "akari", "akash", "akassa", "akbar", "akeel", "akeelah", "akeem", "akein",
                 "akhil", "akida", "akifah", "akifumi", "akiko", "akila", "akilah", "akira", "akito", "akiva", "akkad",
                 "akosua", "akram", "aksel", "akseli", "akshaj", "akshana", "akshara", "akshat", "akshay", "akshaya",
                 "akshayan", "akshita", "aksil", "akuji", "akuyuma", "akvar", "akvile", "akylai", "alabama", "aladan",
                 "alaia", "alain", "alaina", "alaine", "alair", "alaiya", "alake", "alameda", "alana", "alanah",
                 "alanala", "aland", "alanda", "alandis", "alane", "alani", "alanis", "alanna", "alannah", "alanoud",
                 "alans", "alanya", "alara", "alaric", "alarion", "alaris", "alarna", "alasdair", "alaska", "alastair",
                 "alaya", "alayah", "alayna", "alaynah", "alayne", "alaysia", "alban", "albane", "albany", "albaraa",
                 "albee", "alben", "alberon", "albert", "alberta", "albertha", "albertina", "albertine", "alberto",
                 "albie", "albina", "albion", "albright", "alcina", "aldan", "aldaren", "aldden", "alden", "alder",
                 "alderman", "aldmor", "aldon", "aldona", "aldor", "aldora", "aldous", "aldren", "aldric", "aldrin",
                 "aldwin", "aleah", "aleaha", "aleana", "alease", "alecia", "aleda", "aleeah", "aleece", "aleeha",
                 "aleem", "aleema", "aleemah", "aleemy", "aleen", "aleena", "aleenah", "aleesa", "aleesha", "aleeya",
                 "aleeyah", "aleez", "aleeza", "aleia", "aleida", "aleigha", "aleisha", "alejandra", "alejandrina",
                 "alejandro", "aleks", "aleksa", "aleksandar", "aleksander", "aleksandr", "aleksandra", "aleksandras",
                 "aleksandrs", "aleksas", "aleksei", "aleksey", "aleksja", "alekss", "alena", "alend", "alene",
                 "alenthe", "alesandro", "alesha", "aleshia", "alesia", "aleska", "alessa", "alessandra", "alessandro",
                 "alessia", "alessio", "alessya", "aleta", "aletha", "alethea", "aletheia", "alethia", "aletla",
                 "aletta", "alexa", "alexanda", "alexander", "alexandr", "alexandra", "alexandre", "alexandria",
                 "alexandro", "alexandros", "alexandru", "alexcia", "alexei", "alexey", "alexi", "alexia", "alexie",
                 "alexina", "alexis", "alexsandra", "alexsis", "alexus", "alexx", "alexzander", "aleyah", "aleyna",
                 "aleysha", "alfee", "alfey", "alffi", "alfie", "alfonso", "alfonzo", "alfred", "alfreda", "alfredia",
                 "alfredo", "alfwyn", "algween", "alhasan", "alhassan", "alhena", "aliah", "aliana", "alianna",
                 "aliannah", "alica", "alice", "alichia", "alicia", "alicja", "alida", "alidore", "aliena", "aliesha",
                 "alieu", "alifa", "aliha", "alijah", "alika", "aliki", "alilia", "alima", "alimah", "alina", "alinah",
                 "aline", "aliona", "alioune", "alira", "alireza", "alisa", "alisdair", "alise", "alisha", "alishah",
                 "alishba", "alishbah", "alishia", "alisia", "alisina", "alisiya", "alison", "alissa", "alissia",
                 "alisson", "alistair", "alistar", "alister", "alisya", "alita", "aliva", "alivia", "alixa",
                 "alixandra", "aliya", "aliyaah", "aliyaan", "aliyah", "aliyana", "aliyyah", "aliza", "alizah",
                 "alizay", "alize", "alizee", "alkirk", "allan", "allana", "allanah", "allanis", "allannah", "allanya",
                 "allayah", "alleen", "allegra", "allen", "allena", "allene", "alleta", "alley", "alliana", "allie",
                 "allilia", "alline", "allison", "allissa", "allister", "alliyah", "allso", "allyn", "allyson",
                 "allyssa", "alman", "almas", "almeda", "almeer", "almeta", "almina", "almir", "almira", "almude",
                 "alona", "alondra", "alonso", "alonzo", "alora", "alouette", "alousha", "aloysius", "alper", "alpha",
                 "alphie", "alphonsa", "alphonse", "alphonso", "alphonsus", "alphy", "alsvider", "altaf", "altagracia",
                 "altair", "alteja", "altha", "althea", "alton", "aluatis", "aluca", "aludra", "aluinn", "alula",
                 "aluna", "alvaro", "alveena", "alver", "alvera", "alveron", "alverta", "alvie", "alvin", "alvina",
                 "alwyn", "alyaan", "alyan", "alyana", "alyanna", "alyce", "alycia", "alyna", "alysa", "alyse",
                 "alysha", "alyshialynn", "alysia", "alysiah", "alyson", "alyss", "alyssa", "alysse", "alyssia",
                 "alyth", "alyvia", "alzahra", "alzbeta", "amaad", "amaal", "amaan", "amaanah", "amaani", "amaar",
                 "amaara", "amaarah", "amaaya", "amabel", "amada", "amadeus", "amado", "amadou", "amaerilde", "amaia",
                 "amaiah", "amaila", "amaira", "amaiya", "amaiyah", "amala", "amalea", "amalee", "amalia", "amalie",
                 "amalya", "amama", "amana", "amanah", "amanda", "amandeep", "amandine", "amani", "amanita", "amanjot",
                 "amanpreet", "amantle", "amanuel", "amany", "amara", "amarachi", "amarachukwu", "amarah", "amarate",
                 "amardeep", "amare", "amari", "amariah", "amarii", "amarion", "amaris", "amarisa", "amarizi",
                 "amarleen", "amarlia", "amarni", "amarra", "amaru", "amarveer", "amaryllis", "amatin", "amatullah",
                 "amaury", "amaya", "amayah", "amazigh", "ambar", "amber", "amberlee", "amberley", "amberly",
                 "amberscand", "ambra", "ambreen", "ambros", "ambrose", "ambrosia", "ambrosius", "amburgalas", "amedeo",
                 "ameen", "ameena", "ameenah", "ameer", "ameera", "ameerah", "ameila", "ameilia", "ameira", "ameja",
                 "amela", "ameleah", "amelia", "ameliah", "amelie", "amelija", "ameliya", "amellia", "amelliah",
                 "amena", "ament", "amenze", "amera", "amerdan", "america", "amerie", "amethyst", "ameya", "amiah",
                 "amias", "amiee", "amieleigh", "amiera", "amiin", "amiir", "amiira", "amika", "amila", "amilah",
                 "amilee", "amileigh", "amilia", "amilie", "amillie", "amily", "amima", "amina", "aminah", "aminat",
                 "aminata", "amine", "amintor", "aminul", "amira", "amirah", "amirat", "amisha", "amitai", "amitel",
                 "amitis", "amity", "amivar", "amiya", "amiyah", "amjad", "amloth", "ammaar", "ammaarah", "ammar",
                 "ammara", "ammarah", "ammaranza", "ammie", "amnah", "amneet", "amogh", "amore", "amoret", "amorine",
                 "amory", "amoth", "amparo", "ampria", "amran", "amreen", "amreet", "amreeta", "amren", "amrinder",
                 "amrit", "amrita", "amritha", "amukeri", "amyah", "amylee", "amyleigh", "amylynn", "amyrah", "anaaya",
                 "anaayah", "anabel", "anabela", "anabell", "anabella", "anabelle", "anabia", "anabiya", "anadoo",
                 "anaelechi", "anaelle", "anahi", "anahita", "anaia", "anaiah", "anaika", "anais", "anaise", "anaisha",
                 "anaiya", "anaiyah", "anakin", "analiese", "analisa", "analise", "analucia", "anamaria", "anamika",
                 "anand", "anandi", "ananya", "anara", "anarkali", "anashe", "anastacia", "anastasia", "anastasija",
                 "anastasios", "anastasiya", "anastassia", "anastazia", "anastazja", "anasuya", "anatole",
                 "anatswanashe", "anaum", "anaya", "anayah", "andal", "andeler", "andelka", "ander", "andera", "anders",
                 "anderson", "andie", "andile", "andonna", "andra", "andrada", "andras", "andraut", "andre", "andrea",
                 "andreas", "andree", "andreea", "andrei", "andrej", "andreja", "andrejs", "andres", "andrew", "andrey",
                 "andria", "andriana", "andrianna", "andries", "andrinna", "andromeda", "andrzej", "andvarii", "andya",
                 "andzelika", "aneeka", "aneel", "aneeq", "aneeqa", "anees", "aneesa", "aneesah", "aneesh", "aneesha",
                 "aneira", "aneirin", "anembom", "aness", "anessa", "anest", "anesu", "aneta", "anetochukwu", "anette",
                 "aneurin", "aneya", "anezka", "anfar", "angad", "angadveer", "angar", "angel", "angela", "angele",
                 "angelea", "angelena", "angeles", "angeli", "angelia", "angelic", "angelica", "angelika", "angeliki",
                 "angelina", "angeline", "angelique", "angelita", "angella", "angelmarie", "angelo", "angelos",
                 "angelpreet", "angelyn", "angharad", "angie", "angila", "angla", "angle", "anglea", "angur", "angus",
                 "anhad", "anhar", "aniah", "anibal", "anica", "aniela", "anika", "aniket", "anikka", "anila", "aniqa",
                 "anirduh", "anirudh", "anisa", "anisah", "anise", "anish", "anisha", "anishka", "anisia", "anissa",
                 "anita", "anitra", "aniun", "aniya", "aniyah", "anjali", "anjana", "anjanette", "anjani", "anjelica",
                 "anjola", "anjolaoluwa", "anjum", "ankita", "anlon", "anmol", "anmuspi", "annabel", "annabell",
                 "annabella", "annabelle", "annabeth", "annag", "annah", "annaiya", "annalee", "annaleece", "annaleese",
                 "annaleigh", "annaleise", "annalese", "annalia", "annalice", "annalie", "annaliese", "annalisa",
                 "annalise", "annalyn", "annalyssa", "annam", "annamae", "annamaria", "annamarie", "annamika", "annan",
                 "annarosa", "annastasia", "annaya", "annayah", "annedy", "anneka", "anneke", "anneli", "annelie",
                 "anneliese", "annelise", "annelle", "annemarie", "annes", "annest", "annett", "annetta", "annette",
                 "anneya", "anniah", "annice", "annie", "annija", "annika", "annion", "annis", "anniston", "annita",
                 "anniyah", "annmaria", "annmarie", "annmary", "annmiya", "annora", "annot", "annubi", "annya", "annyk",
                 "anoop", "anoosha", "anopa", "anouk", "anoush", "anousha", "anoushka", "anouska", "ansaar", "ansar",
                 "ansel", "ansell", "anselm", "anshika", "anshita", "anshveer", "ansley", "anson", "antaliya",
                 "antanas", "antar", "anthea", "anthony", "anthro", "antii", "antione", "antionette", "antoan",
                 "antoine", "antoinette", "anton", "antone", "antonella", "antonetta", "antonette", "antoni", "antonia",
                 "antonietta", "antonin", "antonina", "antonino", "antonio", "antonios", "antony", "antosia", "antwan",
                 "antwon", "anubis", "anuja", "anumi", "anumil", "anuoluwa", "anuoluwapo", "anush", "anusha", "anushka",
                 "anushree", "anushri", "anval", "anvay", "anvika", "anvita", "anvitha", "anwar", "anwen", "anwita",
                 "anwyn", "anyah", "anzar", "aodan", "aodhan", "aoibhe", "aoibheann", "aoibhin", "aoife", "aonann",
                 "aonghas", "aphra", "aphrodite", "apollo", "apollonia", "apollyon", "apolonia", "apore", "apphia",
                 "apple", "april", "apryl", "aqeel", "aqeelah", "aquilo", "aquinas", "arabell", "arabella", "arabelle",
                 "araceli", "aracelis", "aracely", "arade", "aradhana", "aradhna", "aradhya", "aradise", "arafah",
                 "arafat", "arafath", "aragon", "araina", "araiya", "araiz", "arakis", "aramcham", "araminta", "aramis",
                 "aramsham", "arandeep", "aranor", "arash", "arasu", "arath", "arawn", "araya", "arayah", "arbagon",
                 "arber", "arbor", "arboran", "arcadia", "arcelia", "archana", "archane", "archange", "archer",
                 "archibald", "archie", "archman", "archon", "archy", "ardan", "ardath", "ardelia", "ardell", "ardella",
                 "ardelle", "arden", "ardhan", "ardil", "ardis", "ardit", "ardith", "areeb", "areeba", "areebah",
                 "areefa", "areeha", "areej", "areen", "arees", "areesa", "areesha", "areez", "arella", "arely",
                 "arena", "arenith", "aretha", "areti", "arfan", "argelia", "argemone", "argentina", "argon", "argyll",
                 "arhaan", "arham", "arhan", "arhum", "ariabella", "ariadna", "ariadne", "ariah", "ariam", "arian",
                 "ariana", "ariane", "arianell", "arianna", "ariannah", "arianne", "ariannona", "arianwen", "ariba",
                 "aribah", "arica", "ariel", "ariela", "ariella", "arielle", "arien", "arienne", "arienthil", "aries",
                 "arietta", "arifa", "arifah", "arihant", "arijus", "arika", "arimaspia", "arina", "arinze", "ariome",
                 "arion", "arisa", "arise", "arish", "arisha", "arissa", "arithin", "ariya", "ariyah", "ariyan",
                 "ariyana", "arizona", "arjan", "arjen", "arjun", "arkadiusz", "arkan", "arlan", "arlbeth", "arlean",
                 "arleen", "arleenan", "arleigh", "arlen", "arlena", "arlend", "arlene", "arletha", "arletta",
                 "arlette", "arley", "arlie", "arlind", "arlinda", "arline", "arlow", "arlyne", "armaan", "armaani",
                 "arman", "armand", "armanda", "armandas", "armandina", "armando", "armani", "armanjit", "armela",
                 "armelle", "armida", "armin", "armina", "arminas", "arminda", "arminius", "armndeep", "arnalda",
                 "arnas", "arnaud", "arnav", "arnett", "arnetta", "arnette", "arney", "arngrim", "arnie", "arnis",
                 "arnisa", "arnish", "arnita", "arnold", "arnoldo", "arnor", "arnulfo", "aroha", "arohi", "arole",
                 "aronas", "arooj", "aroosh", "aroosha", "aroush", "arpan", "arrabella", "arrakis", "arran", "arrany",
                 "arren", "arria", "arriana", "arrianna", "arrie", "arrietty", "arrillie", "arrin", "arrlo", "arrochar",
                 "arron", "arrow", "arryn", "arsal", "arsalaan", "arsalan", "arsema", "arsen", "arsenio", "arshad",
                 "arshan", "arshdeep", "arshi", "arshia", "arshiya", "arshman", "arshpreet", "arsim", "arslan", "artan",
                 "artem", "artemis", "artemiy", "arther", "arthur", "artie", "artin", "artina", "artiom", "artis",
                 "artjom", "artjoms", "artor", "artur", "arturas", "arturo", "arturs", "artyom", "arulaa", "aruna",
                 "arunjot", "arunveer", "arush", "arushi", "arvene", "arvilla", "arvin", "arvind", "arwaa", "arwand",
                 "arwen", "arwenna", "arwin", "arwyn", "aryaan", "aryaman", "aryan", "aryana", "aryanna", "aryav",
                 "aryaveer", "aryea", "aryeh", "aryia", "arzan", "arzheviel", "asada", "asaiah", "asalah", "asante",
                 "asaph", "asbah", "asbrand", "asden", "asdern", "aseda", "aseel", "asees", "asela", "asena", "asenat",
                 "asfour", "ashalina", "ashan", "ashani", "ashanti", "ashar", "ashaya", "ashaz", "ashbel", "ashbik",
                 "ashby", "ashdan", "ashden", "ashdon", "ashely", "asher", "ashia", "ashika", "ashkan", "ashlea",
                 "ashlee", "ashleen", "ashleigh", "ashleighann", "ashley", "ashli", "ashlie", "ashlin", "ashly",
                 "ashlyn", "ashlynn", "ashlynne", "ashmeet", "ashna", "ashni", "ashraf", "ashton", "ashtyn", "ashvath",
                 "ashveer", "ashvika", "ashvin", "ashvini", "ashwaq", "ashwath", "ashwin", "ashwina", "ashwini",
                 "asiah", "asianabasi", "asifa", "asiya", "asiyah", "asiye", "askel", "aslan", "aslane", "asleen",
                 "asley", "asmaa", "asmah", "asmara", "asmen", "asmin", "asmund", "asnee", "asoka", "aspasia", "aspen",
                 "asperon", "aspes", "assia", "assunta", "astar", "astaulf", "astea", "aster", "astin", "astire",
                 "aston", "astra", "astrid", "astro", "astrol", "asuncion", "asuraka", "aswan", "aswin", "atahualpa",
                 "atakan", "atara", "atarah", "ateeqeh", "atene", "atgur", "athalia", "athan", "athana", "athanasios",
                 "athane", "atharv", "atharva", "athavan", "athen", "athena", "athene", "atherni", "athina", "athira",
                 "athiss", "atholl", "atiaran", "atiarn", "atifa", "atika", "atikah", "atiksh", "atili", "atilla",
                 "atinuke", "atiya", "atlanta", "atlantes", "atlantis", "atlas", "atlin", "atrak", "atreyu",
                 "attacotti", "attalia", "attew", "atticus", "attila", "auberon", "aubin", "aubre", "aubreanna",
                 "aubree", "aubrey", "aubri", "aubrianna", "aubrie", "aubrielle", "auburn", "aubyn", "auchfor", "auden",
                 "audie", "audra", "audrea", "audrey", "audria", "audriana", "audrianna", "audric", "audrie", "audrina",
                 "audry", "audwin", "august", "augusta", "augustas", "auguste", "augustin", "augustina", "augustine",
                 "augustus", "aukse", "aulay", "auley", "aundrea", "aurea", "aureja", "aurelia", "aurelie", "aurelien",
                 "aurelio", "aurelius", "auriella", "aurion", "aurla", "aurora", "aurore", "aurrin", "auryn", "austeja",
                 "austen", "austill", "austin", "austri", "austyn", "autumn", "autumntide", "auvien", "avaani",
                 "avaiah", "avaiyah", "avaleigh", "avaline", "avalon", "avalouise", "avalyn", "avana", "avani",
                 "avantika", "avayah", "aveah", "avedar", "aveer", "avelina", "aveline", "avelyn", "averi", "averie",
                 "avery", "aviana", "avianna", "aviaya", "avidan", "avigail", "avigdor", "avigyl", "avikrit",
                 "avinveer", "aviraj", "avisha", "avital", "avitus", "aviva", "aviya", "avleen", "avllach", "avneesh",
                 "avneet", "avonlea", "avraham", "avraj", "avram", "avride", "avril", "avrohom", "avrora", "avrum",
                 "avrumi", "avtar", "avyukt", "avyukth", "awais", "awaisa", "awesome", "awilda", "awile", "awnia",
                 "awwal", "axelle", "axeth", "axton", "ayaab", "ayaan", "ayaana", "ayaansh", "ayaat", "ayaaz", "ayako",
                 "ayala", "ayame", "ayana", "ayanah", "ayanda", "ayanna", "ayben", "aydan", "ayden", "aydin", "aydon",
                 "ayeesha", "ayeisha", "ayesh", "ayesha", "ayeza", "ayezah", "ayham", "ayhan", "ayiah", "ayisha",
                 "ayishah", "aylah", "aylan", "aylar", "ayleen", "ayleigh", "aylette", "aylie", "aylin", "aylish",
                 "aymaan", "ayman", "aymen", "aymon", "aymun", "aynslie", "aynur", "ayobami", "ayodeji", "ayokunmi",
                 "ayomide", "ayomikun", "ayomiposi", "ayomitilekun", "ayooluwa", "ayoub", "ayrah", "ayrie", "ayrton",
                 "aysel", "aysen", "aysenur", "ayser", "aysha", "ayshah", "aysia", "aythan", "ayush", "ayushi", "ayuub",
                 "ayvah", "ayyan", "ayyub", "ayzah", "azaan", "azael", "azaelia", "azahlia", "azaiah", "azalea",
                 "azalee", "azalia", "azami", "azara", "azari", "azaria", "azariah", "azarias", "azealia", "azeem",
                 "azeen", "azhar", "aziah", "azimir", "aziza", "azizah", "azlaan", "azlan", "azrael", "azreal",
                 "azriel", "azucena", "azuela", "azura", "azure", "azzam", "azzie", "azzurra", "baani", "babacer",
                 "baban", "babara", "babette", "baboucarr", "bacchus", "bacohl", "badar", "badeek", "baden", "bader",
                 "baduk", "baeron", "bahadar", "bahar", "bahari", "bahir", "bahisht", "bahrair", "bailee", "bailei",
                 "baileigh", "bailey", "bailie", "bailley", "baillie", "baily", "baird", "baker", "bakula", "balain",
                 "balati", "balazs", "balderon", "baldulf", "baldur", "balian", "balin", "balint", "ballar", "ballard",
                 "balraj", "baltazar", "balthasar", "balthazar", "balzar", "bambi", "bamidele", "bandit", "bando",
                 "baneet", "banheen", "banipal", "bannan", "bannor", "bansi", "baptiste", "baqir", "baraa", "barabara",
                 "barack", "baradakas", "baradeer", "barak", "barakah", "baralan", "baram", "baran", "barbar",
                 "barbara", "barbera", "barbie", "barbo", "barboda", "barbora", "barbra", "barcer", "barclay",
                 "barcley", "bardar", "bardia", "barebranch", "bareen", "bareera", "bareerah", "baren", "barfolomul",
                 "barim", "barin", "barinthus", "barirah", "baris", "barklay", "barkley", "barkydle", "barlo",
                 "barnabas", "barnaby", "barney", "baron", "barph", "barret", "barrett", "barrie", "barrington",
                 "barron", "barry", "bartek", "bartholomew", "bartlomiej", "barton", "bartosz", "barty", "baruch",
                 "barukh", "baryal", "basden", "basete", "bashair", "bashir", "basil", "basilia", "basit", "baskin",
                 "basma", "basse", "bassim", "bastian", "bastien", "basturn", "basya", "bathelie", "batool", "batsheva",
                 "battan", "battista", "batuhan", "batul", "baudi", "baugi", "bavmorda", "bavol", "bawan", "bawenni",
                 "baxter", "bayan", "bayard", "bayde", "bayden", "bayla", "baylee", "bayleigh", "baylen", "bayley",
                 "baylie", "baylor", "bazil", "beaknose", "beata", "beate", "beatric", "beatrice", "beatris", "beatrix",
                 "beatriz", "beaulah", "beaux", "bebhin", "bebhinn", "becca", "beccy", "beckett", "beckham", "becki",
                 "beckie", "becky", "bedegran", "bedic", "bedivere", "bedros", "bedwyr", "beeron", "beeta", "behati",
                 "beheshta", "behine", "behram", "bekki", "belal", "belden", "belen", "belia", "belina", "belinay",
                 "belinda", "belissa", "belita", "belkis", "bella", "bellamy", "bellatrix", "belle", "bellenzor",
                 "bellini", "belor", "belrene", "beltane", "belug", "belva", "belyn", "benaiah", "benamin", "benard",
                 "benas", "bence", "bendeguz", "benedek", "benedict", "benedikte", "benett", "beniamin", "benicia",
                 "benicio", "benita", "benito", "benjamin", "benjemin", "benji", "benjimin", "benjy", "bennett",
                 "bennie", "benno", "bennor", "benny", "benoit", "benson", "benth", "bentlee", "bentley", "bently",
                 "benton", "benyamin", "beolann", "beona", "beowulf", "berat", "berch", "berdine", "berek", "beren",
                 "berenice", "berenmil", "berenwick", "berez", "berfin", "berhodrick", "beril", "berin", "berish",
                 "beritan", "berkay", "berke", "berle", "berna", "bernadette", "bernadine", "bernard", "bernarda",
                 "bernardina", "bernardine", "bernardo", "berneice", "bernetta", "bernice", "bernie", "berniece",
                 "bernita", "berra", "berri", "berry", "berta", "bertha", "bertie", "bertille", "bertram", "bertrand",
                 "berwyn", "beryl", "beson", "bessie", "besur", "besurlde", "betania", "bethan", "bethanie", "bethann",
                 "bethanny", "bethany", "bethe", "bethel", "bethia", "bethlehem", "betsan", "betsey", "betsi", "betsie",
                 "betsy", "bette", "betti", "bettie", "bettina", "betty", "bettyann", "bettye", "beula", "beulah",
                 "bevan", "beverlee", "beverley", "beverly", "bevin", "bewul", "bexley", "beyla", "beyonce", "bhargavi",
                 "bhavneet", "bhavya", "bhriclan", "biana", "bianca", "biancha", "bianka", "bibiana", "biblo",
                 "biedgar", "bijou", "bikita", "bilaal", "bilal", "bildon", "billi", "billie", "billiejoe", "billy",
                 "billye", "bimpfoodle", "binta", "bintou", "binyamin", "binyomin", "birch", "birdie", "birgit",
                 "birinair", "bishaan", "bisma", "bismah", "biston", "bithon", "bitio", "bivan", "bjelle", "bjorn",
                 "blackstone", "blade", "bladen", "blaidd", "blaide", "blaik", "blaike", "blain", "blaine", "blair",
                 "blaire", "blaise", "blaithin", "blaize", "blake", "blakely", "blanca", "blanch", "blanche", "blane",
                 "blanka", "blayne", "blayr", "blayre", "blaze", "blazej", "bleda", "bleddyn", "blenda", "bleron",
                 "blessed", "blessing", "blimi", "bliss", "blissia", "blodwym", "blondell", "bloom", "blossom",
                 "blousey", "blubelle", "bluebell", "bluebelle", "bluma", "blyth", "blythe", "boadicea", "boadill",
                 "boaldelr", "bobbi", "bobbie", "bobby", "bobbye", "bobette", "boddyjon", "boden", "bodhi", "bodie",
                 "bodus", "boern", "boethuis", "bogdan", "boglarka", "bohdan", "bojidar", "boliva", "bollinar",
                 "bolrock", "bolthorn", "boluwatife", "bolwerk", "bomar", "bonham", "bonita", "bonly", "bonnie",
                 "bonny", "bonquesha", "bontle", "booker", "boone", "boran", "boreas", "borel", "borin", "boris",
                 "bormor", "borne", "boroka", "boruch", "borys", "bosco", "boston", "botan", "botond", "boubacar",
                 "bourc", "bowen", "bowie", "boyan", "boyana", "boyce", "braagha", "brabha", "bracha", "bracken",
                 "bradan", "bradburn", "braden", "bradford", "bradlee", "bradleigh", "bradley", "bradly", "bradwin",
                 "brady", "bradyn", "braedan", "braeden", "braedon", "braeker", "braelyn", "braelynn", "braggi",
                 "bragi", "brahil", "braicyn", "braidan", "braiden", "braidon", "braidy", "braiens", "brain",
                 "brainard", "brajan", "brakdern", "bramble", "bramley", "bramwell", "brana", "branan", "branch",
                 "brand", "branda", "brandan", "brande", "brandee", "branden", "brandi", "brandie", "brandon", "brandy",
                 "brandyn", "brane", "brannagh", "brannel", "branson", "brant", "brantlee", "brantley", "branwen",
                 "brave", "braxston", "braxton", "brayan", "braydan", "brayden", "braydon", "braylee", "braylen",
                 "braylin", "braylon", "brayson", "brazil", "breagan", "breagha", "breaker", "breana", "breann",
                 "breanna", "breanne", "breanon", "breccan", "brecken", "breckin", "brede", "bredere", "bredin",
                 "bredock", "breek", "breen", "breesha", "breeze", "brega", "brenbard", "brenda", "brendan", "brendar",
                 "brenden", "brendon", "brenin", "brenna", "brennah", "brennan", "brennon", "brent", "brentley",
                 "brenton", "brett", "bretwalda", "brevin", "brevyn", "brewster", "breyan", "breyon", "briaa", "briac",
                 "brian", "briana", "brianan", "brianna", "briannah", "brianne", "briar", "briarman", "brice", "brick",
                 "bridey", "bridgarisha", "bridger", "bridget", "bridgetann", "bridgett", "bridgette", "bridie",
                 "bridonna", "briella", "brielle", "brier", "brietta", "brigadore", "brigette", "briggs", "bright",
                 "brighthelm", "brightmaster", "brighton", "brightspot", "brigid", "brigida", "brigita", "brigitte",
                 "brihanna", "briley", "brill", "brinda", "brine", "brinley", "brinn", "brionny", "briony", "brisa",
                 "briseis", "bristan", "bristol", "britany", "brithna", "briti", "britney", "britni", "britt", "britta",
                 "brittaney", "brittani", "brittanie", "brittany", "britteny", "brittney", "brittni", "brittny",
                 "brocha", "brock", "broddi", "broden", "broderick", "brodey", "brodhi", "brodi", "brodie", "brodir",
                 "brody", "brogan", "bronagh", "bronson", "bronte", "bronwen", "bronwyn", "bronx", "brook", "brooke",
                 "brookelyn", "brookley", "brooklyn", "brooklynn", "brooks", "brora", "brosa", "brown", "bruce",
                 "brucius", "bruin", "bruna", "brunilda", "bruno", "brutus", "bryan", "bryanna", "bryanne", "bryant",
                 "bryce", "brycen", "brycie", "bryden", "brydon", "bryher", "brylee", "bryleigh", "brynhilde",
                 "brynlee", "brynley", "brynn", "brynnda", "bryon", "bryony", "brysen", "bryson", "brytta", "bucelus",
                 "buchmeid", "buddie", "buddy", "buena", "buffy", "buford", "bulah", "bunkman", "bunny", "bunty",
                 "burak", "burbhin", "burch", "buren", "burglekutt", "burhaan", "burhan", "burhanuddin", "burian",
                 "burma", "burne", "burton", "buser", "bushe", "bushra", "busma", "busra", "buster", "butch",
                 "buthomar", "butterfly", "bydern", "byran", "byron", "caalin", "cabhan", "cabolus", "cacey", "cacie",
                 "cadan", "cadate", "cadby", "caddor", "cadee", "cadel", "caden", "cadence", "cadeon", "cadey", "cadha",
                 "cadhla", "cadie", "cadria", "caecilius", "caedan", "caeden", "caedmon", "caela", "caelan", "caelen",
                 "caelholdt", "caelon", "caelum", "caelyn", "caere", "caerno", "caerroil", "caesar", "caetlin", "cagan",
                 "cahir", "caiann", "caidan", "caidance", "caiden", "caidence", "caidon", "caidyn", "caihden", "caila",
                 "cailaen", "cailah", "cailan", "cailean", "caileb", "cailen", "cailey", "cailin", "caillan", "caillen",
                 "cailyn", "cailynn", "caine", "caino", "cainon", "caiora", "cairan", "caireen", "cairn", "cairo",
                 "cairon", "caison", "caitie", "caitlan", "caitlin", "caitlyn", "caitlynn", "caitlynne", "caitriona",
                 "caity", "caius", "calabe", "caladh", "caladon", "calais", "calan", "calanda", "calandra", "calantha",
                 "calaposha", "calay", "calcompton", "calcul", "calden", "calder", "caleb", "caleigh", "calen",
                 "calene", "caley", "calgaron", "calhoun", "calia", "caliban", "calie", "calin", "calina", "caliron",
                 "calise", "calissa", "calisse", "calista", "calix", "calixte", "calixto", "calla", "callaghan",
                 "callaghn", "callahan", "callai", "callam", "callan", "calleigh", "callen", "calley", "calli",
                 "callia", "callie", "calliegh", "callin", "callindrill", "calliope", "callipygia", "callista",
                 "calloway", "calls", "callum", "cally", "calnor", "calon", "calonet", "caltha", "calub", "calum",
                 "calvie", "calvin", "calvyn", "calydon", "calypso", "calyx", "cambreard", "cambria", "camchak",
                 "camden", "camdyn", "camelia", "camelie", "camellia", "cameron", "camie", "camila", "camilde",
                 "camilla", "camille", "camilo", "cammi", "cammie", "cammy", "campbell", "camren", "camron", "camryn",
                 "camus", "camyal", "canaan", "canace", "canda", "candace", "candance", "candaree", "candelaria",
                 "candelis", "candi", "candice", "candida", "candie", "candika", "candis", "candor", "candra", "candy",
                 "candyce", "cannon", "canute", "caoilainn", "caoimhan", "caoimhe", "caolan", "capad", "capet", "capid",
                 "capide", "capri", "caprice", "caracatus", "carace", "caradec", "caragh", "carah", "carakin",
                 "caralisa", "caramon", "carcslain", "carde", "carden", "cardon", "caren", "caret", "carey", "cariad",
                 "caridad", "carie", "cariki", "carin", "carina", "carine", "caris", "carisa", "carissa", "carita",
                 "carla", "carlee", "carleen", "carleigh", "carlena", "carlene", "carletta", "carley", "carli",
                 "carlie", "carlin", "carline", "carlisle", "carlita", "carlito", "carlo", "carlos", "carlota",
                 "carlotta", "carlson", "carlton", "carly", "carlyn", "carlynn", "carma", "carman", "carmel", "carmela",
                 "carmelia", "carmelina", "carmelita", "carmella", "carmelo", "carmen", "carmina", "carmine", "carmon",
                 "carmyn", "carna", "carnen", "carol", "carola", "carolann", "carolanne", "carole", "carolee",
                 "carolin", "carolina", "caroline", "caroll", "carolyn", "carolyne", "carolynn", "caron", "caroun",
                 "caroyln", "carpo", "carragh", "carrai", "carri", "carrick", "carridwyn", "carrie", "carrol",
                 "carroll", "carry", "carsen", "carson", "carswell", "carsyn", "carsys", "carte", "carter", "carthag",
                 "carwyn", "caryl", "carylon", "caryn", "carys", "casandra", "casca", "casden", "casen", "casey",
                 "caseyleigh", "cashel", "cashlin", "casian", "casidi", "casie", "casimir", "casimira", "cason",
                 "casondra", "caspar", "caspardrug", "casper", "caspia", "caspian", "cassair", "cassandra",
                 "cassaundra", "cassey", "cassi", "cassia", "cassian", "cassidy", "cassie", "cassiel", "cassiopeia",
                 "cassius", "casson", "cassondra", "cassy", "casta", "castiel", "casties", "castor", "castrich",
                 "castro", "casyn", "cataleya", "catalin", "catalina", "catarina", "catchclaw", "catelyn", "caterina",
                 "cathal", "cathalina", "catharine", "catherin", "catherina", "catherine", "cathern", "catheryn",
                 "cathey", "cathi", "cathie", "cathleen", "cathrine", "cathryn", "cathwar", "cathy", "catina", "catlin",
                 "catos", "catriana", "catrice", "catrin", "catrina", "catriona", "cattaleya", "cattleya", "cavalli",
                 "cavan", "cavani", "cavell", "cavem", "caveral", "cavil", "cayan", "caycie", "caydan", "cayden",
                 "caydence", "caydon", "cayla", "caylah", "caylan", "cayleb", "caylee", "caylem", "caylen", "caylus",
                 "cayold", "caysie", "cayson", "caytlin", "ceajay", "ceara", "cearra", "cecelia", "cecil", "cecila",
                 "cecile", "cecilia", "cecilie", "cecille", "cecily", "cecylia", "cedar", "cedis", "cedric", "cedrick",
                 "ceejay", "ceiladh", "ceilidh", "ceinwen", "ceira", "ceiran", "ceirion", "ceitidh", "celbahr",
                 "celdarin", "celeb", "celena", "celere", "celeren", "celesta", "celeste", "celestia", "celestina",
                 "celestine", "celia", "celina", "celinda", "celine", "celinn", "celise", "celiya", "celoa", "celorn",
                 "celsa", "celsus", "celthric", "celyn", "cemal", "cemark", "cemre", "cendall", "ceola", "ceoline",
                 "cephas", "cephenrene", "cercan", "cerdern", "cerdic", "cereb", "cereben", "ceremon", "ceren",
                 "cerese", "cerian", "ceridwen", "cerin", "cerise", "cernon", "cernunnos", "cerrin", "cervek", "cerys",
                 "cesar", "cespar", "cether", "cevelt", "ceyda", "ceylin", "cezar", "cezara", "cezary", "chace",
                 "chadwick", "chael", "chagor", "chaice", "chailya", "chaim", "chaise", "chaitanya", "chakili",
                 "chamon", "chana", "chanae", "chance", "chanda", "chandani", "chandler", "chandra", "chanel",
                 "chanell", "chanelle", "chaney", "chang", "chani", "channah", "channan", "channing", "chanse", "chant",
                 "chantal", "chantay", "chante", "chantel", "chantell", "chantelle", "chara", "charan", "chardonnay",
                 "chardu", "chare", "charford", "charis", "charise", "charissa", "charisse", "charita", "charity",
                 "charla", "charlae", "charlea", "charlee", "charleen", "charleigh", "charlemagne", "charlena",
                 "charlene", "charles", "charlesetta", "charlette", "charley", "charleyne", "charli", "charlie",
                 "charliee", "charline", "charlize", "charlott", "charlotte", "charlsie", "charlton", "charly",
                 "charlyn", "charm", "charmain", "charmaine", "charmeine", "charolette", "chartiphon", "charvi",
                 "charvic", "chary", "chase", "chasidy", "chasity", "chassidy", "chastitie", "chastity", "chatt",
                 "chauncey", "chava", "chaya", "chayce", "chayden", "chayim", "chayse", "chayton", "cheddar", "chekhov",
                 "chelsea", "chelsey", "chelsi", "chelsie", "chelsy", "chemaine", "chenai", "cheney", "cheng",
                 "chengai", "chenhao", "chenille", "chenul", "chepi", "chere", "cheree", "cherelle", "cherem", "cheri",
                 "cherie", "cherilyn", "cherise", "cherish", "cherlinar", "cherlindrea", "cherly", "cherlyn", "cherri",
                 "cherrie", "cherry", "cherryl", "chery", "cheryl", "cheryle", "cheryll", "cheskel", "chesky",
                 "chesmarn", "chesney", "chester", "chetan", "chevonne", "chevy", "cheyanne", "cheyenne", "chhaya",
                 "chiagozie", "chiamaka", "chiamanda", "chiara", "chibuikem", "chibunmam", "chico", "chidak", "chidalu",
                 "chidera", "chidi", "chidimma", "chidinma", "chido", "chidubem", "chiekezi", "chieko", "chiemeka",
                 "chigozirim", "chijioke", "chika", "chikezie", "chilali", "chimalis", "chimamanda", "chimaraobim",
                 "chimaya", "chimdi", "chimnonso", "china", "chinaemerem", "chinani", "chinecherem", "chinedu",
                 "chinedum", "chinemerem", "chinenye", "ching", "chinmay", "chinonso", "chinonyerem", "chioma", "chipo",
                 "chiquita", "chiron", "chirp", "chisom", "chivahle", "chizara", "chizaram", "chizitaram", "chizitelu",
                 "chloe", "chloie", "chole", "cholena", "chong", "chris", "chrissie", "chrissy", "christa",
                 "christabel", "christabelle", "christal", "christan", "christeen", "christel", "christelle",
                 "christen", "christena", "christene", "christi", "christia", "christian", "christiana", "christiane",
                 "christianna", "christianne", "christiano", "christie", "christin", "christina", "christine",
                 "christinia", "christlia", "christo", "christoper", "christophe", "christopher", "christos", "christy",
                 "chrodra", "chronet", "chronos", "chrynn", "chrysanthemum", "chrystal", "chrystyne", "chuck",
                 "chukwudubem", "chukwuebuka", "chukwuemeka", "chukwuka", "chukwuma", "chukwumwudike", "chumani",
                 "chung", "chusuk", "chyanne", "chymas", "chyna", "cialla", "ciana", "cianna", "ciara", "ciaran",
                 "ciaren", "ciaron", "ciarra", "ciatha", "cibrock", "cicely", "cider", "cienna", "ciera", "cieran",
                 "cierra", "cilia", "cillian", "cinar", "cinda", "cindeigh", "cinderella", "cindi", "cindie", "cindy",
                 "cinon", "cinthia", "cipyar", "ciraj", "circa", "circe", "cirda", "ciroc", "cirocco", "ciron", "ciwan",
                 "clair", "claire", "clancy", "clanica", "clara", "clarabelle", "clare", "clarence", "claretha",
                 "claretta", "claribel", "clarice", "clarinda", "clarine", "claris", "clarisa", "clarissa", "clarisse",
                 "clarita", "clarity", "clark", "clarke", "clarnleef", "clary", "classie", "clathin", "claud", "claude",
                 "claudette", "claudia", "claudie", "claudine", "claudio", "claudius", "claurieli", "claydon",
                 "clayton", "cleantha", "clelia", "clemence", "clemencia", "clemency", "clement", "clemente",
                 "clementina", "clementine", "clemmie", "cleopatra", "cleora", "cleotilde", "clere", "cleta", "cletus",
                 "cleveland", "cliff", "clifford", "clifton", "clint", "clinton", "cliodhna", "clive", "clodagh",
                 "cloin", "clomen", "clooney", "clora", "clorinda", "clotilde", "cloudshape", "clover", "clovis",
                 "clyde", "coady", "coatl", "cobain", "coban", "cobbder", "cobbman", "coben", "cobey", "cobie", "cobin",
                 "codach", "coden", "codern", "codey", "codie", "cognious", "cohan", "cohen", "coinneach", "coire",
                 "colberane", "colbey", "colbie", "colby", "colden", "coledac", "coleen", "coleman", "colene",
                 "coletta", "colette", "coley", "colin", "colista", "colleen", "collen", "collene", "collette",
                 "collin", "collins", "collum", "collur", "colman", "colmen", "colriolis", "colten", "colthan",
                 "colton", "coltrane", "columba", "columbia", "columbus", "comfort", "comperri", "comri", "conah",
                 "conal", "conall", "conan", "conary", "concaline", "concepcion", "conception", "concetta", "concha",
                 "conchita", "conchobhar", "conlan", "conlen", "conley", "conlin", "conlon", "connah", "connal",
                 "connall", "connan", "connar", "connel", "connell", "conner", "connie", "connley", "connolly",
                 "connor", "conon", "conor", "conquaine", "conrad", "conran", "conroy", "constance", "constantin",
                 "constantina", "constantine", "constantius", "consuela", "consuelo", "contessa", "conway", "cooper",
                 "coper", "copernicua", "copernicus", "coplan", "coppereye", "corage", "corah", "coral", "coralee",
                 "coralie", "coraline", "corand", "corann", "corazon", "corban", "corben", "corbett", "corbin", "corby",
                 "corbyn", "corda", "cordale", "cordelia", "cordell", "cordelle", "cordia", "cordie", "coreen",
                 "corene", "corentin", "coretta", "corey", "corie", "corimini", "corin", "corina", "corine", "corineus",
                 "corinna", "corinne", "coriolis", "corith", "corley", "corliss", "cormac", "cormach", "cormack",
                 "cormann", "cornelia", "cornelius", "cornell", "coron", "corphrim", "corra", "corrah", "corran",
                 "correy", "corri", "corrie", "corrigad", "corrin", "corrina", "corrine", "corrinne", "corry", "corryn",
                 "cortes", "cortez", "cortney", "corvin", "corwin", "corydar", "coryn", "cosdeer", "coseecer",
                 "cosette", "cosima", "cosimo", "cosine", "cosmin", "cosmo", "costantino", "cotal", "cotan",
                 "cotterall", "cotton", "courage", "courtney", "courtny", "covenant", "covey", "cowal", "cowan",
                 "cowyn", "crage", "craig", "crandall", "crawford", "crede", "creola", "cressida", "crevan", "cricket",
                 "crimax", "crimson", "crisdean", "criselda", "crispin", "crissy", "crista", "cristal", "cristen",
                 "cristi", "cristian", "cristiana", "cristiano", "cristie", "cristin", "cristina", "cristine",
                 "cristobal", "cristopher", "cristy", "croesus", "crofta", "croix", "crombie", "cromine", "crondon",
                 "crosby", "crowl", "cruaver", "crudak", "cruise", "cruni", "cruze", "crysta", "crystabel", "crystal",
                 "crystle", "csenge", "csongor", "cuall", "culbin", "cullen", "culver", "cunedda", "cupar", "cuparun",
                 "curtis", "cusmirk", "custennin", "cuthbert", "cutte", "cybel", "cybele", "cydare", "cydney",
                 "cyelena", "cyllah", "cylmar", "cymel", "cynan", "cyndi", "cyndy", "cynth", "cynthia", "cyprian",
                 "cyran", "cyril", "cyrstal", "cyrtina", "cyrus", "cythia", "cythnar", "cyton", "daaltyn", "daania",
                 "daanish", "daaniya", "daanya", "daanyaal", "daburn", "dacer", "dacey", "dacia", "daegan", "daenerys",
                 "daermalkin", "daermod", "daero", "daerto", "daffyd", "dafyd", "dafydd", "dagar", "dagaria", "dager",
                 "dagmar", "dagmara", "dagnall", "dagny", "dague", "dagus", "dahen", "dahgir", "dahir", "dahlia",
                 "daiana", "daide", "daikini", "dailia", "daina", "daine", "dainton", "daire", "daisey", "daisie",
                 "daisy", "daisybella", "daisymae", "daiton", "daivik", "daiwikjeet", "daiyan", "daizy", "dakamon",
                 "dakkone", "dakota", "daksh", "dalamar", "dalanda", "dalavesta", "dalburn", "dalene", "daley",
                 "daleyza", "dalia", "dalidh", "dalila", "dalilah", "daliya", "dalla", "dallan", "dallas", "dallpen",
                 "dalmarn", "dalton", "dalva", "dalziel", "daman", "damari", "damaris", "damarisa", "damelon",
                 "damenae", "damia", "damian", "damiana", "damien", "damilola", "damion", "damir", "damita", "damla",
                 "damon", "danae", "danah", "danan", "danar", "danas", "danaw", "dando", "daneen", "danelle", "danette",
                 "dangelo", "danger", "dania", "daniah", "danial", "danica", "danieal", "daniel", "daniela", "daniele",
                 "danielis", "danielius", "daniell", "daniella", "danielle", "daniels", "daniger", "danii", "daniil",
                 "daniils", "danika", "danil", "danila", "danille", "danilo", "danis", "danish", "danisha", "danita",
                 "daniya", "daniyaal", "daniyah", "daniyal", "danna", "dannaka", "danner", "dannette", "danni",
                 "dannie", "danniel", "danniella", "dannielle", "dannii", "dannika", "dannin", "danny", "danony",
                 "danson", "dantae", "dante", "danthragnir", "dantice", "danusia", "danuta", "danya", "danyaal",
                 "danyah", "danyal", "danyar", "danyel", "danyell", "danyelle", "daood", "daoud", "daphin", "daphine",
                 "daphne", "dapvhir", "daragh", "darar", "daray", "darbi", "darby", "darcee", "darcel", "darcey",
                 "darci", "darcia", "darcie", "darcy", "darda", "dareen", "dareene", "darell", "daren", "dargo",
                 "daria", "darian", "dariele", "darien", "darija", "darin", "darina", "dario", "darion", "darius",
                 "dariusz", "dariya", "dariyan", "darja", "darkblade", "darkbone", "darkboon", "darkkon", "darkmage",
                 "darkmoore", "darko", "darkspur", "darla", "darleen", "darlena", "darlene", "darline", "darmor",
                 "darnell", "darol", "daron", "darora", "darpick", "darra", "darrach", "darragh", "darrah", "darrel",
                 "darrell", "darren", "darrick", "darrin", "darron", "darryl", "darryn", "darset", "darsh", "darshan",
                 "darsheen", "darshi", "darsie", "darsin", "darste", "darth", "darthe", "darult", "darven", "darvin",
                 "darvon", "darwin", "darya", "daryan", "daryl", "daryll", "daryn", "dasbeck", "dasha", "dashawn",
                 "dashiel", "dashiell", "dasia", "dastan", "dathony", "dauda", "dauron", "davae", "davey", "davia",
                 "davian", "davic", "davics", "david", "davida", "davidalexander", "davide", "davids", "davie", "davin",
                 "davina", "davion", "davis", "davit", "davon", "davontae", "dawes", "dawid", "dawna", "dawne",
                 "dawnflower", "dawns", "dawnwind", "dawood", "dawoud", "dawson", "dawud", "daxter", "daxton", "dayana",
                 "dayle", "dayli", "dayna", "daysha", "daysi", "dayton", "dayyaan", "dayyan", "dazos", "deacan",
                 "deacon", "deadra", "deakon", "deame", "deana", "deandra", "deandre", "deandrea", "deane", "deangelo",
                 "deann", "deanna", "deanne", "dearog", "deart", "deathmar", "debarghya", "debbi", "debbie", "debbra",
                 "debby", "debera", "debora", "deborah", "debra", "debrah", "debroah", "decimus", "declan", "declyn",
                 "decuis", "dedra", "deeana", "deeann", "deeanna", "deedee", "deedra", "deegan", "deema", "deena",
                 "deepak", "deepika", "deepsika", "deerslayer", "deeshan", "deetta", "deetya", "deeval", "deeya",
                 "deeyan", "defearon", "defne", "degan", "deidra", "deidre", "deighton", "deimantas", "deimante",
                 "deinas", "deion", "deiondre", "deirdre", "deiree", "deitrick", "deividas", "deivids", "dejah",
                 "dejan", "dekota", "delaine", "delana", "delaneen", "delaney", "delanie", "delany", "delbert",
                 "delcie", "delebrith", "delena", "deler", "delfina", "delia", "delicia", "delight", "delila",
                 "delilah", "delina", "delinda", "delisa", "della", "dellin", "delma", "delmar", "delmer", "delmy",
                 "delna", "delois", "deloise", "delora", "deloras", "delores", "deloris", "delorse", "delpha", "delphi",
                 "delphia", "delphie", "delphine", "delphis", "delroy", "delsheevah", "delsie", "delta", "deltix",
                 "delvin", "delwyn", "delyth", "demah", "demarco", "demarcus", "demari", "demba", "demelza", "demeter",
                 "demetra", "demetri", "demetria", "demetrice", "demetrius", "demian", "demid", "demie", "demilade",
                 "demilee", "demileigh", "demir", "demira", "demitrius", "dempsey", "dempster", "denae", "denali",
                 "denas", "denast", "denderah", "deneen", "denese", "dengold", "denholm", "denice", "denin", "denis",
                 "denisa", "denise", "denisha", "deniss", "denisse", "denita", "deniz", "denley", "denna", "denni",
                 "dennie", "dennin", "dennis", "dennise", "dennison", "denny", "denver", "denys", "denyse", "denzel",
                 "denziel", "denzil", "deoger", "deonna", "deran", "derek", "dereks", "derel", "derick", "derik",
                 "derin", "derlynnet", "dermit", "dermot", "dermott", "derokin", "derora", "derren", "derri", "derrick",
                 "derrin", "derron", "derry", "derryn", "derset", "derth", "dertha", "derthe", "dervla", "derya",
                 "deryn", "desdemona", "deshaun", "deshawn", "desil", "desini", "desirae", "desire", "desiree",
                 "desmond", "despina", "dessa", "dessfar", "dessie", "destan", "destin", "destina", "destinee",
                 "destiney", "destiny", "detra", "deucalion", "devam", "devan", "devansh", "devanshi", "devante",
                 "devell", "deven", "devesh", "devika", "devin", "devina", "devinas", "devinn", "devlin", "devoiry",
                 "devon", "devona", "devontae", "devonte", "devora", "devorah", "devraj", "devran", "devrel", "devrim",
                 "devyn", "dewan", "dewayne", "dewey", "dewitt", "dexie", "dexter", "deyan", "dhairya", "dhani",
                 "dhanush", "dhanvi", "dhanya", "dhara", "dharam", "dharamveer", "dharan", "dharci", "dharshan",
                 "dhart", "dhavan", "dheeraj", "dheeran", "dheny", "dhiaan", "dhian", "dhilan", "dhillan", "dhillon",
                 "dhiren", "dhiya", "dhiyan", "dhrish", "dhriti", "dhrozna", "dhruv", "dhruvan", "dhruvi", "dhuha",
                 "dhvani", "dhyaan", "dhyan", "dhyana", "dhyani", "dhyey", "dhylan", "dhyne", "diallo", "diamond",
                 "diana", "diane", "diann", "dianna", "dianne", "dianthe", "diarmuid", "diata", "dicky", "didion",
                 "diedra", "diedre", "diego", "dierdre", "diesel", "dieter", "diezel", "digby", "diggory", "digna",
                 "dilan", "dilanas", "dilans", "dilara", "dilek", "dillan", "dillion", "dillon", "diloen", "dilon",
                 "dilpreet", "dilraj", "dilshaan", "dilveer", "dilvish", "dilys", "dimitar", "dimitra", "dimitri",
                 "dimitrios", "dimitris", "dimjon", "dimple", "dimth", "dimura", "dinah", "dinara", "dinesh", "dinfar",
                 "dinis", "dinorah", "dinth", "dinyr", "diogo", "dione", "dionna", "dionne", "diora", "diorlouise",
                 "direst", "dirist", "disha", "dismer", "disney", "distant", "distran", "divij", "divina", "divine",
                 "divit", "divya", "dixie", "dixon", "diyaan", "diyah", "diyako", "diyan", "diyana", "diyanah",
                 "diyari", "diyon", "django", "dmarion", "dmitri", "dmitrij", "dmitrijs", "doble", "dobrochna",
                 "doceon", "dochrohan", "dodie", "dogan", "doiran", "dokoran", "dolce", "dolcee", "dolcey", "dolcie",
                 "dollie", "dolly", "dolman", "dolores", "doloris", "dolsa", "doltin", "dolton", "domantas", "domante",
                 "domas", "domenic", "domenica", "domenico", "domenik", "domhnall", "domin", "dominga", "domingo",
                 "dominic", "dominica", "dominick", "dominik", "dominika", "dominikas", "dominiks", "dominion",
                 "dominique", "dominque", "dominyka", "dominykas", "domitila", "domonic", "domonique", "donagh",
                 "donal", "donald", "donatas", "donell", "donella", "donetta", "donette", "donia", "donika", "donita",
                 "donna", "donnacha", "donncha", "donnel", "donnell", "donnetta", "donnette", "donnie", "donny",
                 "donovan", "donser", "donta", "dontae", "dontay", "donte", "donya", "dorathy", "dorcas", "doreatha",
                 "doreen", "doregren", "dorene", "doretha", "dorethea", "doretta", "doria", "dorian", "dorie",
                 "doright", "dorina", "dorinda", "dorine", "doris", "dorla", "dorota", "dorotha", "dorothea", "dorothy",
                 "dorris", "dorrit", "dorsa", "dorsat", "dorset", "dorsey", "dortha", "dorthea", "dorthey", "dorthy",
                 "doruk", "doshack", "dosoman", "dottie", "dotty", "dougal", "dougald", "dougan", "dougen", "douger",
                 "dougie", "douglas", "douglass", "dougray", "doulyn", "douphra", "doutzen", "dovid", "dovidas",
                 "dovie", "dovydas", "doyle", "draco", "dracula", "draedan", "dragos", "drake", "drakoe", "drakone",
                 "drandon", "drave", "draven", "dravon", "drazil", "dreama", "drema", "drewie", "dreya", "driel",
                 "drienel", "dries", "drinishok", "drinny", "drisana", "drishti", "dristy", "dritz", "drizzt", "drocta",
                 "drogan", "drogo", "droma", "drooj", "drool", "drophar", "drostan", "drucilla", "drumma", "drummond",
                 "drunen", "drunhilde", "drusilla", "druth", "druwain", "dryden", "dryope", "duach", "duald", "duane",
                 "duarin", "duarte", "duchess", "dudley", "duftah", "dugal", "dugan", "dukker", "dukran", "dulce",
                 "dulcea", "dulcie", "dulcina", "dulcinea", "dulia", "dumas", "dumolwakhe", "dunaut", "duncan",
                 "dunewalker", "dunge", "dungon", "dunia", "dunixi", "dunya", "duorn", "duran", "durar", "durathor",
                 "durek", "durga", "durian", "durmark", "durmus", "durra", "durre", "durriken", "durris", "dusaro",
                 "duscha", "dusti", "dustin", "dusty", "dutch", "duvado", "duvagel", "duvani", "duzedrawse", "dwain",
                 "dwalin", "dwana", "dwarl", "dwayne", "dwight", "dwobble", "dwobwicket", "dwort", "dyani", "dyari",
                 "dyfan", "dyfar", "dylahn", "dylan", "dylena", "dyllan", "dyllon", "dylyn", "dynar", "dynasty",
                 "dynera", "dyten", "dzaraldas", "dzeisonas", "eabha", "eachan", "eachann", "eadaoin", "eadie",
                 "eadric", "eagan", "eagle", "ealasaid", "eames", "eamon", "eamonn", "earle", "earlean", "earleen",
                 "earlene", "earlie", "earline", "earnan", "earnest", "earnestine", "eartha", "easha", "eashaft",
                 "eashan", "eashasft", "eason", "eassa", "easter", "easton", "eatle", "eavan", "ebatryne", "ebban",
                 "ebbanezer", "ebenether", "ebenezer", "ebeth", "eboney", "eboni", "ebonie", "ebonnie", "ebony",
                 "ebonyrose", "eborane", "ebraheem", "ebrahim", "ebrima", "ebube", "ebubechukwu", "ebunoluwa",
                 "ecaterina", "ecematare", "echule", "eckard", "ecrin", "ectorius", "edaece", "edalene", "edaline",
                 "edana", "edarph", "edden", "eddie", "eddison", "eddra", "edeline", "edelmira", "edena", "edenzoe",
                 "edgar", "edgardo", "edgars", "edison", "edith", "edlyn", "edmond", "edmund", "edmundo", "edoardo",
                 "edorin", "edouard", "edric", "edris", "edsel", "edson", "eduard", "eduardo", "edvanio", "edvardas",
                 "edvards", "edvin", "edvinas", "edward", "edwardo", "edwin", "edwina", "edwyn", "edyta", "edyth",
                 "edythe", "eemaan", "eeman", "eesaa", "eesah", "eesha", "eeshah", "eeshan", "eevee", "eevel", "eevie",
                 "efamar", "efari", "efetobore", "effie", "effronin", "efnie", "efosa", "efraim", "efrain", "efrat",
                 "efrata", "efren", "efrim", "eftelya", "eghosa", "eglea", "egmardern", "ehaan", "ehren", "ehsaan",
                 "ehsan", "ehsanul", "ehtel", "eibhlin", "eibhlinn", "eidan", "eidanel", "eiddon", "eileen",
                 "eileithyia", "eilene", "eilidh", "eilis", "eilish", "eiliyah", "eillian", "eilon", "eilong", "eimaan",
                 "eiman", "eimantas", "eimear", "eimile", "einar", "einarr", "eiona", "eireann", "eireanne", "eirene",
                 "eiric", "eirica", "eiridan", "eirik", "eirinn", "eirlys", "eiron", "eirwen", "eisah", "eissa",
                 "eitan", "eithan", "eithne", "eivina", "eivissa", "ekamjot", "ekampreet", "ekamveer", "ekaterina",
                 "ekene", "ekgamut", "eklake", "eknoor", "eksaar", "elaaf", "eladia", "eladija", "elain", "elaina",
                 "elaine", "elana", "elane", "elani", "elanna", "elanor", "elantir", "elanur", "elara", "elati",
                 "elaya", "elayah", "elayna", "elayne", "elbert", "elbie", "eldana", "eldar", "elden", "elderon",
                 "eldin", "eldon", "eldora", "eldramor", "eldridge", "eldrin", "eleah", "eleana", "eleanor", "eleanora",
                 "eleanore", "elease", "eleazar", "electra", "eleen", "eleena", "eleeza", "elektra", "elelta", "elena",
                 "elene", "eleni", "elenna", "elenor", "elenora", "elenore", "eleonor", "eleonora", "eleonore",
                 "eleora", "elerach", "eleri", "elesi", "elexa", "elexia", "elexis", "elexus", "elfie", "elflaine",
                 "elfodd", "elfreda", "elfrieda", "elfriede", "elgan", "elgin", "elham", "eliab", "eliah", "elian",
                 "eliana", "elianah", "eliane", "elianeth", "elianna", "elias", "elicia", "elida", "elidgh", "elidh",
                 "elidia", "eliel", "eliezer", "eligh", "elija", "elijah", "elijus", "elika", "elina", "elinam",
                 "eline", "elinor", "elinore", "elion", "eliora", "eliot", "eliott", "elira", "elisa", "elisabeta",
                 "elisabeth", "elisabetta", "elise", "elisei", "eliseo", "elisha", "elisheva", "elisia", "elisiah",
                 "eliska", "elisne", "elissa", "elisse", "elissia", "elita", "elius", "elivia", "eliya", "eliyahu",
                 "eliyas", "eliza", "elizabella", "elizabet", "elizabeta", "elizabete", "elizabeth", "elizah",
                 "elizaveta", "elizbeth", "elize", "elizebeth", "elkanah", "elkie", "ellagrace", "ellah", "ellahleigh",
                 "ellamae", "ellamary", "ellamay", "ellan", "ellana", "ellanor", "ellard", "ellarose", "elleah",
                 "elleanor", "ellecia", "ellen", "ellena", "ellenor", "ellery", "ellessa", "ellesse", "ellia",
                 "elliana", "elliarna", "ellice", "ellicia", "ellida", "ellidyr", "ellie", "elliemae", "elliemarie",
                 "elliemay", "elliette", "ellington", "elliot", "elliott", "elliotte", "ellis", "ellisa", "ellise",
                 "ellisha", "ellisia", "ellison", "ellissa", "ellissia", "ellivia", "elliw", "elliyah", "elloise",
                 "ellora", "ellouise", "ellsa", "ellsey", "ellsie", "ellsworth", "ellyjoo", "ellyn", "ellyse",
                 "ellyssa", "ellysse", "ellywicket", "elmae", "elman", "elmen", "elmer", "elmira", "elmore", "elnathan",
                 "elnaz", "elnibera", "elnora", "elodia", "elodie", "eloghosa", "elohim", "elois", "eloisa", "eloise",
                 "eloka", "elona", "elora", "elouisa", "elouise", "elowen", "elowyn", "elphin", "elrick", "elronhir",
                 "elroy", "elsbeth", "elseanne", "elsey", "elsie", "elska", "elson", "elspeth", "elthin", "elton",
                 "elula", "elune", "eluned", "elveen", "elvera", "elvia", "elvie", "elvin", "elvina", "elvira", "elvis",
                 "elwanda", "elward", "elwin", "elwood", "elwyn", "elyan", "elyana", "elyas", "elyes", "elyon", "elysa",
                 "elyse", "elysia", "elyssa", "elyssia", "elyza", "elzbieta", "emaad", "emaan", "emaline", "emanuel",
                 "emanuela", "emaya", "embar", "ember", "emeilia", "emeka", "emelda", "emeli", "emelia", "emeliah",
                 "emelie", "emelina", "emeline", "emellie", "emely", "emelyn", "emerald", "emerelle", "emerie",
                 "emerita", "emerson", "emersyn", "emery", "emiko", "emila", "emile", "emilea", "emilee", "emileigh",
                 "emili", "emilia", "emilian", "emiliana", "emiliano", "emilie", "emilija", "emilijus", "emilio",
                 "emilis", "emiliya", "emillia", "emillie", "emilly", "emils", "emily", "emima", "emine", "emioluwa",
                 "emirhan", "emlyn", "emmalee", "emmaline", "emmalyn", "emmalynn", "emmanouil", "emmanuel", "emmanuela",
                 "emmanuella", "emmanuelle", "emmelia", "emmeline", "emmene", "emmerson", "emmet", "emmett", "emmey",
                 "emmie", "emmily", "emmitt", "emmylou", "emogene", "emory", "emran", "emrys", "emsley", "emteas",
                 "emyys", "enaaya", "enaldie", "enateri", "enaya", "enayah", "enbane", "encantam", "endijs", "endor",
                 "endra", "endymythalion", "enedina", "eneida", "enfys", "england", "engle", "engoliothil",
                 "eniaranimi", "enidin", "enija", "eniola", "enioluwa", "enlli", "ennio", "ennis", "enoch", "enoka",
                 "enola", "enoon", "enoona", "enora", "enric", "enrico", "enrik", "enrika", "enril", "enrique",
                 "enriqueta", "enton", "eogan", "eogar", "eoghan", "eoghann", "eoina", "eolande", "eoman", "eorinn",
                 "eowyn", "ephraim", "ephram", "epifania", "eppie", "equate", "equebus", "eradan", "erasmo", "erasmus",
                 "erebos", "eregdor", "erenay", "ergar", "ergoth", "eriana", "erica", "erich", "erick", "ericka",
                 "erika", "erikarn", "erikas", "eriks", "erill", "erina", "erinn", "erioluwa", "erion", "erisa",
                 "eritai", "erland", "erleen", "erlend", "erlene", "erlin", "erlinda", "erline", "erman", "ermelinda",
                 "ermin", "ermina", "erminia", "ermit", "ernest", "ernestas", "ernestina", "ernestine", "ernesto",
                 "ernests", "ernie", "errin", "errinaya", "errol", "erryn", "errys", "erthe", "ervin", "erwin",
                 "eryithsyai", "erykah", "eryna", "erynn", "esamae", "esatte", "escariet", "esdros", "esele", "eseosa",
                 "eshaal", "eshaan", "eshal", "eshan", "eshana", "eshani", "eshen", "esher", "eshkol", "esila", "eslem",
                 "esmae", "esmai", "esmanur", "esmay", "esmee", "esmeralda", "esmerelda", "esmie", "esnar", "esosa",
                 "esosasere", "esparanza", "espardo", "espen", "esperanza", "esraa", "esrah", "esrom", "essam",
                 "essault", "essie", "esteban", "estee", "estefana", "estela", "estell", "estella", "estelle", "ester",
                 "estera", "estere", "esther", "esthila", "estidh", "estrela", "estrella", "esyllt", "etana", "etburn",
                 "etdar", "eternity", "etgarrai", "ethain", "ethan", "ethel", "ethelene", "ethelyn", "ethen", "ethesa",
                 "ethna", "ethyl", "etienne", "etinosa", "etmere", "etoile", "etran", "etrigan", "etsuko", "ettie",
                 "eubha", "eudock", "eudora", "eufemia", "eugena", "eugene", "eugenia", "eugenie", "eugenio", "eulah",
                 "eulalia", "eulalie", "eunice", "euphemia", "eurdice", "eusebia", "eusebio", "eustace", "eustolia",
                 "evaan", "evabelle", "evadne", "evagelia", "evaleigh", "evalina", "evaline", "evalyn", "evalynn",
                 "evalynne", "evana", "evanas", "evander", "evangelia", "evangelina", "evangeline", "evangelos",
                 "evani", "evania", "evann", "evanna", "evans", "evarudt", "eveie", "eveleen", "evelia", "evelien",
                 "evelin", "evelina", "eveline", "evelyn", "evelyne", "evelynn", "evelynne", "evere", "everett",
                 "everette", "everleigh", "everley", "everly", "everlyn", "evette", "evianna", "eviee", "evinn",
                 "evissa", "evita", "evlyn", "evlynn", "evoleta", "evonie", "evonne", "evren", "evylyn", "ewall",
                 "ewart", "eylul", "eymen", "eyndy", "eyoel", "eysan", "eythil", "ezaan", "ezana", "ezara", "ezechiel",
                 "ezekiel", "ezequiel", "ezinne", "ezmae", "ezmai", "ezmay", "ezmee", "ezrah", "ezzah", "faaria",
                 "faaris", "faatima", "faatimah", "fabeha", "fabian", "fabiano", "fabien", "fabienne", "fabiha",
                 "fabio", "fabiola", "fabrice", "fabrizia", "facent", "facer", "fadel", "fadila", "fadipe", "fadukes",
                 "faduma", "fadumo", "faelan", "faermate", "faeroh", "faeron", "fafnin", "fafnir", "fahad", "faheem",
                 "fahham", "fahim", "fahima", "fahmida", "fahren", "faiha", "faire", "fairflank", "fairly", "fairy",
                 "faisa", "faisal", "faith", "faithe", "faiza", "faizaan", "faizah", "faizan", "fajar", "fajor",
                 "falak", "falan", "falaq", "falat", "falcon", "faliha", "falisha", "fallan", "fallon", "fallowry",
                 "fallyn", "falon", "fanchon", "fangred", "fannie", "fanny", "fanshuai", "faolan", "faolin", "faoturk",
                 "faowind", "faraday", "farah", "farai", "faran", "farasiko", "farate", "faravinn", "faraz", "fardeen",
                 "fardowsa", "fareed", "fareedah", "fareeha", "fares", "fargo", "farha", "farhaan", "farhan", "farhana",
                 "farhat", "farheen", "farhiya", "faria", "fariah", "farica", "farid", "farida", "faridah", "faridat",
                 "fariha", "farin", "faris", "fariz", "farley", "faron", "farooq", "farrah", "farran", "farrel",
                 "farrell", "farren", "farret", "farris", "farron", "farryn", "farse", "farshadow", "farth", "farwa",
                 "faryaal", "faryal", "faryl", "faryn", "farzad", "farzana", "farzeen", "fasner", "fassen", "fasten",
                 "fateh", "fateha", "fatema", "fatemah", "fater", "fathema", "fathia", "fathima", "fathimah", "fatih",
                 "fatiha", "fatihah", "fatim", "fatima", "fatimah", "fatma", "fatmata", "fatou", "fatoumata",
                 "fatoumatta", "fatuma", "fatumata", "fault", "faust", "fausta", "faustas", "faustina", "faustino",
                 "fausto", "faustyna", "faver", "favian", "faviola", "favour", "favoured", "fawad", "fawaz", "fawks",
                 "fawwaz", "fawziyah", "fayha", "faylinn", "fayme", "fayna", "fayne", "fayrouz", "faysal", "fayth",
                 "fayyaz", "fayzan", "fazal", "fazeela", "fazilatun", "fearchar", "fearghas", "fearghus", "fearlock",
                 "fearn", "fearne", "feart", "febian", "fechi", "fedaykin", "federica", "federico", "fedor", "fedora",
                 "feigy", "feilyn", "feldor", "felecia", "felica", "felice", "felicia", "felicidad", "felicita",
                 "felicitas", "felicity", "feliks", "felipa", "felipe", "felisa", "felisha", "felix", "felixmarte",
                 "felor", "felton", "felwah", "fenella", "fenia", "fenix", "fenna", "fenrirr", "fenton", "fenyx",
                 "feoras", "ferdie", "ferdinand", "fergal", "fergus", "feride", "ferless", "fermin", "fermina",
                 "fernaco", "fernand", "fernanda", "fernande", "fernando", "ferne", "ferny", "feron", "feronia",
                 "ferrate", "ferret", "ferris", "ferrol", "feryal", "fetchstorm", "fetil", "fetmar", "feturn",
                 "feyisayo", "feyza", "ffion", "fflur", "fhain", "fhastine", "fiach", "fiachra", "fiacus", "fiadh",
                 "fiana", "fiannah", "ficadon", "fickfylo", "fidel", "fidela", "fidelia", "fient", "figire", "fikret",
                 "fildon", "filep", "filiberto", "filip", "filipa", "filipe", "filipina", "filippa", "filippo",
                 "filippos", "fillip", "filomena", "filza", "fimbe", "finbar", "finbarr", "finch", "findail", "findal",
                 "findlay", "findley", "finfanfoom", "finian", "finlay", "finlee", "finleigh", "finley", "finlo",
                 "finmottin", "finna", "finnan", "finnbar", "finnegan", "finnian", "finnigan", "finnlay", "finnleigh",
                 "finnley", "finola", "finrink", "fintan", "finton", "finwocket", "fiona", "fionan", "fionn",
                 "fionnlagh", "fionnuala", "fionnula", "fiorella", "fiorenza", "firas", "firdaus", "firdous",
                 "firedorn", "firiro", "firon", "fisher", "fistor", "fitzgerald", "fitzwilliam", "fiyinfoluwa",
                 "fizban", "fizbo", "fizza", "fizzah", "flandrena", "flavia", "flavian", "flavio", "flavius", "fleta",
                 "fletcher", "fleur", "flick", "flinn", "flint", "floki", "flora", "floraidh", "floran", "florance",
                 "florence", "florencia", "florencio", "florene", "florentina", "florentine", "florentino", "floretta",
                 "flori", "floria", "florian", "floriane", "florida", "florie", "florin", "florina", "florinda",
                 "florine", "florrie", "flosi", "flossie", "flower", "floyd", "flynn", "flynt", "folajimi", "folarin",
                 "folasade", "folden", "folmard", "fomdey", "fonda", "fonni", "fonya", "forbes", "fordon", "forer",
                 "forest", "forrest", "forrester", "forseti", "forthe", "foster", "fother", "fovor", "fozia", "fract",
                 "fraderk", "fraia", "fraiser", "fraiza", "fraizer", "frake", "franca", "france", "francene", "frances",
                 "francesca", "francesco", "franceska", "francessca", "franchesca", "francheska", "francie", "francina",
                 "francine", "francis", "francisca", "francisco", "franciszek", "franco", "francois", "francoise",
                 "franek", "frank", "franka", "frankee", "frankey", "franki", "frankie", "frankii", "franklin",
                 "franklyn", "franky", "fransisca", "frantisek", "franziska", "fraser", "frasier", "frater", "frather",
                 "fraya", "frayah", "frayer", "frayne", "frazer", "frazier", "frealaf", "freasse", "freca", "freda",
                 "fredda", "freddi", "freddie", "freddy", "frederic", "frederica", "frederick", "fredericka",
                 "frederico", "frederik", "frederika", "fredi", "fredia", "fredie", "fredric", "fredrick", "fredricka",
                 "fredrik", "freeda", "freeke", "freeman", "freen", "freia", "freida", "freija", "freja",
                 "fremah", "french", "freshta", "freya", "freyah", "freyda", "freyja", "frida", "frieda", "friedrich",
                 "frikin", "frish", "frith", "fritz", "frodo", "fronal", "fronar", "fronde", "frost", "froth",
                 "frufalcon", "fryderyk", "fudder", "fuker", "fukstoan", "fukui", "fullengarten", "fuller", "fulton",
                 "fulvia", "fumiko", "funith", "furkan", "furqan", "fydar", "fynche", "fynlay", "fynlee", "fynley",
                 "fynnete", "fynnley", "gabby", "gabia", "gabija", "gable", "gabor", "gabriel", "gabriela", "gabriele",
                 "gabrielis", "gabrielius", "gabriella", "gabrielle", "gabriels", "gaelan", "gaelanon", "gaelinar",
                 "gaese", "gaess", "gaethaa", "gafna", "gafolern", "gagar", "gaige", "gaius", "galach", "galadren",
                 "galain", "galanna", "galar", "galderon", "galdwulf", "galen", "galet", "galilea", "galileo", "galina",
                 "galion", "galiron", "gallagher", "gallovinn", "gallowglas", "gallowglass", "galron", "galvin",
                 "galzar", "gamal", "gametris", "gamic", "gammer", "gandalf", "ganieda", "ganith", "gannon",
                 "gantholion", "garance", "gardan", "garden", "garel", "garendi", "gareth", "garfield", "garin",
                 "garishaw", "garith", "garland", "garley", "garman", "garnet", "garnett", "garrar", "garren", "garret",
                 "garrett", "garrick", "garrison", "garron", "garry", "garth", "garvey", "garwocket", "gaskite",
                 "gaspani", "gaspar", "gaston", "gatsby", "gauge", "gaukhar", "gaurav", "gauri", "gaurika", "gautam",
                 "gautham", "gauthus", "gavan", "gavein", "gaven", "gavin", "gavriel", "gavyn", "gawain", "gayathri",
                 "gayla", "gayle", "gaylene", "gaylord", "gaynell", "gaynelle", "gaynor", "gazelle", "gearldine",
                 "gebeth", "gedalia", "gedalya", "geena", "geirrod", "gelderon", "gelila", "gelsey", "gemardt",
                 "gemedern", "gemedes", "gemini", "gemma", "genaro", "genesia", "genesis", "geneva", "geneveve",
                 "genevie", "genevieve", "genevive", "geneza", "genghis", "genia", "genie", "genlon", "genna",
                 "gennaro", "gennie", "genny", "genoveva", "genselda", "geocomo", "geoff", "geoffrey", "geordan",
                 "geordie", "georga", "georgann", "george", "georgeann", "georgeanna", "georgene", "georges",
                 "georgetta", "georgette", "georgi", "georgia", "georgiana", "georgiann", "georgianna", "georgianne",
                 "georgie", "georgina", "georgine", "georgio", "georgios", "georgy", "georina", "geraint", "gerald",
                 "geraldine", "geraldo", "geralyn", "gerard", "gerardas", "gerardo", "gerda", "gerirr", "germain",
                 "germaine", "german", "germe", "gerodi", "geront", "gerontius", "gerpin", "gerrard", "gerri", "gerry",
                 "gertha", "gertie", "gertrud", "gertrude", "gertrudis", "gertude", "gerven", "gesell", "gessane",
                 "getale", "gethin", "gethyn", "gette", "gexian", "ghant", "ghata", "ghazanvi", "ghazi", "ghengis",
                 "gheorghe", "ghillie", "ghislaine", "ghita", "ghofran", "ghufran", "ghulam", "ghulen", "ghyll",
                 "giaan", "giacomo", "giada", "giana", "giancarlo", "gianluca", "gianna", "gianni", "giavanna",
                 "gibbon", "gibby", "gibolock", "gibolt", "gibril", "gibson", "gideon", "gidget", "gigha", "gilbert",
                 "gilberte", "gilberto", "gilda", "gilden", "gildor", "giles", "gilgamesh", "gillan", "gillespie",
                 "gillian", "gillie", "gilma", "gilmesh", "gilthanas", "gimli", "ginette", "ginevra", "ginger",
                 "ginita", "ginnie", "ginny", "gintare", "gioia", "giorgi", "giorgia", "giorgiana", "giorgina",
                 "giorgio", "giovani", "giovanna", "giovanni", "giovanny", "girls", "gisela", "gisele", "giselle",
                 "gisselle", "githa", "gittel", "gitty", "giulia", "giuliana", "giulietta", "giulio", "giuseppe",
                 "giuseppina", "gizelle", "gladis", "glady", "gladys", "glanern", "glayds", "glenda", "glendora",
                 "glenn", "glenna", "glennie", "glennis", "glenys", "glesni", "glinda", "glius", "gloria", "gloriatha",
                 "glorious", "glory", "gloryaxe", "glose", "gloth", "glynda", "glyndwr", "glynis", "glynn", "glynnis",
                 "godestere", "godfred", "godfrey", "godhilder", "godrech", "godric", "godsrest", "godswill", "godwin",
                 "gofannon", "gohan", "golam", "golas", "golda", "golden", "goldie", "goldy", "golina", "gollum",
                 "golush", "goman", "goncalo", "gondel", "gonzalo", "goodness", "gorak", "gorbash", "gordon", "gorfet",
                 "goriolo", "gorlais", "goroth", "gorth", "gortin", "gosford", "gospel", "gosselyn", "gothar",
                 "gothikar", "gothsettan", "govind", "gowan", "gowon", "gowri", "grabfoot", "grace", "gracelyn",
                 "gracelynn", "gracey", "gracia", "gracie", "graciela", "gracjan", "gracy", "gradule", "grady",
                 "graeme", "gragold", "graham", "graice", "graidy", "graig", "grainne", "gralon", "gramorn", "granite",
                 "granlon", "grant", "granville", "gratia", "gratiana", "gravin", "grayce", "graye", "graymantle",
                 "graysen", "grayson", "grazyna", "greann", "greatness", "greenblade", "greenbriar", "greenvine",
                 "greer", "greeth", "gregg", "gregor", "gregoria", "gregorio", "gregory", "greig", "grement", "grenda",
                 "gresa", "gresforn", "greta", "gretchen", "gretta", "greyfell", "greylock", "greymalkin", "greyson",
                 "grian", "gricelda", "grieg", "grier", "griff", "griffin", "griffith", "griffydd", "grilik", "grimie",
                 "grimlock", "grimm", "grimman", "grimmand", "grimnir", "grimwall", "grimwulf", "grisel", "griselda",
                 "grisma", "grizelda", "grolim", "gronalyn", "gronf", "gront", "grosner", "grover", "gruff", "gruffudd",
                 "gruffydd", "grumedan", "grunag", "grunen", "gryff", "grzegorz", "guadalupe", "gudrun", "gudus",
                 "gueda", "guenevere", "guerau", "guese", "guice", "guievere", "guilherme", "guillarmo", "guillaume",
                 "guillermina", "guillermo", "guilomar", "guinevere", "guistan", "gulalai", "gulam", "guldergrance",
                 "guled", "gulgonen", "gulianna", "gullaly", "gulliver", "gulsen", "gumuor", "gunasekera", "gunda",
                 "gunde", "gundir", "guney", "gunnar", "gunner", "gunther", "gunveer", "guopeng", "guramrit", "gurbani",
                 "gurdeep", "gurdit", "gurfateh", "gurgi", "gurgwen", "gurion", "gurjas", "gurjeet", "gurjeevan",
                 "gurjivan", "gurjot", "gurkaran", "gurkiran", "gurkirat", "gurleen", "gurmaan", "gurman", "gurmandeep",
                 "gurmiya", "gurmukh", "gurneet", "gurney", "gurnoor", "gurpaige", "gurpreet", "gurrath", "gursahib",
                 "gurseerat", "gursevak", "gurshaan", "gurshan", "gursimran", "gursirat", "gurtaj", "gurtaran",
                 "gurtej", "gurveen", "gurveer", "gurvir", "gussie", "gustas", "gustav", "gustavo", "gustavs", "gustaw",
                 "guste", "gustfer", "gustov", "gusts", "gutar", "guthale", "guthe", "gvene", "gvidas", "gwain",
                 "gwalcmai", "gwath", "gwathard", "gwathis", "gwayhne", "gweir", "gwenan", "gwenda", "gwendari",
                 "gwendha", "gwendolau", "gwendolen", "gwendoline", "gwendolyn", "gwenllian", "gwenn", "gwennan",
                 "gwennia", "gwenno", "gwenyth", "gwertra", "gwethana", "gwilym", "gwion", "gwyddno", "gwydion",
                 "gwyneth", "gwynth", "gwystyl", "gybol", "gybrush", "gymir", "gymmer", "gypsy", "haadi", "haadia",
                 "haadiya", "haadiyah", "haahris", "haajar", "haajra", "haajrah", "haamid", "haaniya", "haaniyah",
                 "haaris", "haarith", "haaroon", "haashim", "haashir", "haaziq", "habeeb", "habeebah", "habib",
                 "habiba", "habibah", "habibullah", "hacer", "hachiman", "hacyon", "hadassa", "hadassah", "haddy",
                 "hadeel", "hadeeqa", "haden", "hades", "hadia", "hadil", "hadiqa", "hadiya", "hadiyah", "hadja",
                 "hadjar", "hadlee", "hadley", "hadoc", "hadrian", "hadriel", "hadya", "hadyn", "haert", "hafeez",
                 "haffis", "hafgan", "hafiz", "hafiza", "hafsa", "hafsah", "hafza", "hagan", "hagels", "hagen",
                 "haidar", "haiden", "haider", "haidyn", "haifa", "haiji", "haikal", "hailee", "hailey", "hailie",
                 "haillie", "haiqa", "hairth", "haisam", "haitham", "hajar", "hajara", "hajira", "hajirah", "hajjra",
                 "hajra", "hajrah", "hakan", "hakeem", "hakim", "haleem", "haleema", "haleemah", "haleigh", "halen",
                 "halete", "haley", "haleyann", "halia", "halianor", "halil", "halim", "halima", "halimah", "halimo",
                 "halina", "halix", "hallam", "halle", "halleck", "hallee", "halley", "hallgerd", "halli", "halliday",
                 "hallie", "halmar", "halogia", "haltach", "hamaad", "hamad", "hamako", "hamayl", "hamda", "hamdaan",
                 "hamdan", "hamdi", "hamdia", "hamed", "hameeda", "hamid", "hamida", "hamidah", "hamilton", "hamish",
                 "hamlet", "hammaad", "hammad", "hammam", "hammer", "hamna", "hamnah", "hampshire", "hamud", "hamza",
                 "hamzah", "hanaa", "hanaan", "hanad", "hanah", "hanako", "hanan", "hanar", "hanasa", "hanaya",
                 "handel", "haneefa", "haneefah", "haneen", "hanfa", "hania", "haniah", "haniel", "hanif", "hanifa",
                 "hanifah", "hanin", "haniya", "haniyah", "hanlo", "hanlon", "hanna", "hannah", "hannahmaria", "hannan",
                 "hannelore", "hannes", "hannibal", "hanniel", "hanny", "hansika", "hanson", "hantal", "hanya", "hanyi",
                 "hanzala", "hanzalah", "haoen", "haoyu", "haque", "haracha", "haralambos", "haram", "haran", "hardep",
                 "hardik", "hardis", "hardnoggin", "hardon", "hardwin", "hardy", "hareem", "hargun", "harika", "harini",
                 "haris", "harish", "harison", "harith", "harjas", "harjeet", "harjeevan", "harjot", "harjovan",
                 "harkamal", "harken", "harkirat", "harla", "harlan", "harland", "harlay", "harlee", "harleen",
                 "harleigh", "harlem", "harlen", "harley", "harli", "harlie", "harlii", "harlo", "harlow", "harlowe",
                 "harly", "harlyn", "harmakros", "harman", "harmani", "harmanjit", "harmanpreet", "harmeet", "harmoni",
                 "harmonie", "harmony", "harnadar", "harnam", "harneet", "harnek", "harnoor", "harnway", "harod",
                 "harold", "haroldas", "haron", "haroon", "haroun", "harpal", "harper", "harpreet", "harrenhal",
                 "harri", "harrie", "harriet", "harriett", "harriette", "harriott", "harris", "harrison", "harrisson",
                 "harrisyn", "harry", "harryson", "harsh", "harshaan", "harsharan", "harshavardhan", "harshil",
                 "harshini", "harshita", "harshith", "harshiv", "harsimran", "harsimrat", "harsirat", "hartley",
                 "haruka", "haruki", "harun", "haruun", "harveen", "harveer", "harven", "harvey", "harvie", "harvin",
                 "harvir", "harvy", "hasaan", "hasan", "haseeb", "haseena", "hashem", "hashim", "hashir", "hasib",
                 "hasina", "haskel", "hasna", "hasnain", "hasret", "hassaan", "hassan", "hassie", "hasten", "haster",
                 "hasti", "hastin", "hathar", "hathil", "hatice", "hatim", "hattie", "hatty", "haunt", "haunta",
                 "havana", "havanah", "havassa", "haven", "havin", "havish", "hawaa", "hawat", "hawkwind", "hawra",
                 "hawthorne", "hawwa", "hayaa", "hayaan", "hayah", "hayan", "hayat", "haydar", "haydee", "hayden",
                 "hayder", "haydn", "haydon", "hayes", "hayla", "haylee", "hayleigh", "hayley", "haylie", "hayston",
                 "haytham", "haywood", "hayyan", "hazal", "hazeka", "hazel", "hazeline", "hazera", "haziq", "haziqah",
                 "heast", "heath", "heathcliff", "heather", "heatrix", "heaven", "heavenly", "hebron", "hectar",
                 "hecton", "hector", "hedaya", "hedwig", "heeba", "heela", "heena", "heerad", "heeya", "hefin", "heide",
                 "heidi", "heidy", "heike", "heimdall", "hektor", "helaina", "helaine", "helayna", "heledd", "helen",
                 "helena", "helene", "helenia", "helga", "helia", "helin", "helina", "hellen", "heloisa", "heloise",
                 "helring", "helskadi", "hemani", "hemanya", "hendricus", "hendrik", "hendrix", "hengest", "henley",
                 "henna", "henning", "henny", "henos", "henri", "henrie", "henrietta", "henriette", "henrik",
                 "henrique", "henry", "henryk", "henson", "hepac", "hepec", "hephzibah", "hepsiba", "heramon", "heran",
                 "herbert", "herbie", "herekin", "herem", "heres", "hergrom", "heriberto", "heridd", "herkus",
                 "herlinda", "herma", "herman", "hermela", "hermelinda", "hermenze", "hermes", "hermila", "hermin",
                 "hermina", "hermine", "herminia", "hermione", "hermuck", "herod", "heron", "herschel", "hersh",
                 "hershel", "hershy", "herta", "hertha", "herty", "herzog", "hesper", "hessa", "hessah", "hester",
                 "hestia", "heston", "hestophes", "hettie", "hetty", "hezak", "hezekiah", "hianor", "hibah",
                 "hibatullah", "hibba", "hibbah", "hidaayah", "hidaya", "hidayah", "hiedi", "hifza", "higra", "hikmah",
                 "hilal", "hilaria", "hilario", "hilary", "hilda", "hildale", "hildandi", "hildar", "hilde",
                 "hildegard", "hildegarde", "hildred", "hileict", "hillary", "hillel", "hilma", "hilton", "hilzarie",
                 "himani", "himmat", "hinal", "hinate", "hinda", "hindi", "hindy", "hinge", "hinon", "hipolito",
                 "hirah", "hiram", "hiranur", "hiranya", "hirga", "hiroko", "hisako", "hishaam", "hisham", "hisle",
                 "hiterid", "hitesh", "hithies", "hitts", "hiyab", "hjollder", "hobben", "hobert", "hocine", "hodan",
                 "hodgenik", "hoekstra", "hogon", "hogun", "hokora", "holden", "holferne", "holith", "holland",
                 "holleigh", "holley", "holli", "hollian", "hollie", "hollis", "hollister", "holly", "hollywood",
                 "holth", "homer", "honami", "honesty", "honet", "honey", "hongtuo", "honor", "honora", "honour",
                 "hooper", "hoorain", "hooria", "hooriah", "hooriya", "horace", "horacio", "horatio", "horben", "horik",
                 "horium", "horiya", "horner", "hornmar", "hornt", "horse", "hortalus", "hortencia", "hortense",
                 "hortensia", "horus", "hosage", "hosanna", "hosea", "hoshi", "hosna", "hossam", "hotsprings", "houda",
                 "hount", "houston", "howard", "hower", "howie", "howor", "howpe", "hriday", "hridhaan", "hrishi",
                 "hrishika", "hristo", "hrithik", "hrothgar", "hrugan", "hubert", "huchaw", "huckleberry", "huctute",
                 "hudaifa", "hudhaifa", "hudhayfa", "hudhayfah", "hudson", "hufeza", "hugels", "hughie", "huithnil",
                 "hukam", "hulda", "hultor", "humaira", "humairaa", "humairah", "humayd", "humayl", "humayra",
                 "humayrah", "humberto", "humera", "humna", "humnah", "humphrey", "humza", "humzah", "huner", "hunir",
                 "hunko", "hunni", "hunor", "hunter", "huntley", "huong", "hurain", "huriya", "hurnt", "hurrem",
                 "husain", "husam", "husayn", "huseyin", "huslu", "husna", "husnain", "hussain", "hussein", "hussna",
                 "hussnain", "hustle", "hutant", "huxley", "huyrn", "huzaifa", "huzaifah", "huzayfa", "huzayfah",
                 "hyacinth", "hycar", "hydale", "hydaspes", "hyder", "hyksos", "hyman", "hymir", "hynaril", "hyperion",
                 "hyrim", "hyrum", "hyten", "hywel", "iacov", "iambic", "ianis", "iannis", "ianthe", "ianto", "iarmod",
                 "iarri", "iason", "ibaad", "ibadah", "ibraaheem", "ibraheem", "ibrahiim", "ibrahim", "ibrahima",
                 "ibtihaal", "ibtisam", "ibtissam", "ibukunoluwa", "icarus", "idaho", "idalia", "idalis", "idande",
                 "iddec", "idell", "idella", "idene", "ididnet", "idint", "idona", "idrees", "idric", "idris", "idriss",
                 "ieserk", "iesha", "iestyn", "ieuan", "ifeanyi", "ifeanyichukwu", "ifechukwu", "ifelola", "ifeoluwa",
                 "ifeoma", "iffat", "ifrah", "ignacia", "ignacio", "ignacy", "ignas", "ignatius", "igraine", "ihate",
                 "ihsaan", "ihsan", "ijunt", "ikarus", "ikemefuna", "ikenna", "ikhlas", "ikini", "ikram", "ikran",
                 "ilaina", "ilana", "ilaria", "ilayda", "ildwater", "ileana", "ileen", "ilene", "ilermath", "ilester",
                 "ilgenar", "ilgin", "ilhaan", "ilham", "ilhan", "iliana", "ilias", "iliendor", "ilinca", "ilirian",
                 "ilithya", "ilithyia", "iliya", "iliyas", "illearth", "illia", "illiana", "illilorn", "illium",
                 "ilona", "ilron", "iluminada", "ilwaad", "ilyaas", "ilyana", "ilyas", "ilyes", "imaad", "imaan",
                 "imaani", "imama", "imane", "imani", "imara", "imarah", "imarni", "imberwick", "imelda", "iminter",
                 "imisioluwa", "imler", "immanuel", "immie", "immogen", "imogen", "imogene", "imoiran", "imojen",
                 "imraan", "imran", "imtiyaz", "inaara", "inaaya", "inaayah", "inaba", "inaiya", "inara", "inarah",
                 "inaya", "inayah", "inayat", "indah", "indee", "indhios", "india", "indiah", "indiana", "indianna",
                 "indie", "indigo", "indio", "indira", "indiya", "indiyah", "indra", "indrius", "indya", "indyana",
                 "inell", "inesa", "inessa", "infelice", "infinity", "ingeborg", "ingel", "inger", "ingle", "ingles",
                 "ingram", "ingrid", "inigo", "inioluwa", "inlan", "inlind", "innaya", "innayah", "innes", "innis",
                 "inocencia", "insha", "insiya", "insiyah", "inswich", "intejag", "inter", "intisar", "ioana", "ioanna",
                 "ioannis", "iolder", "ionatan", "ionie", "ionut", "ionythe", "iosif", "iosmut", "iosua", "ipedorn",
                 "iqbal", "iqrah", "iraida", "irati", "irefist", "irekain", "ireland", "irena", "irene", "ireoluwa",
                 "ireoluwatomileyin", "irfaan", "irfan", "irina", "irisa", "irish", "irmak", "irmgard", "irnys",
                 "ironbrand", "irone", "ironmage", "ironmark", "irvin", "irvine", "irving", "irvyn", "irwin", "isaac",
                 "isaak", "isaam", "isaaq", "isabeau", "isabel", "isabela", "isabell", "isabella", "isabelle", "isador",
                 "isadora", "isaia", "isaiah", "isaias", "isambard", "isata", "isatou", "isatu", "isaura", "isbah",
                 "iscon", "iseabail", "isela", "iseld", "iseult", "ishaal", "ishaan", "ishaani", "ishaaq", "ishak",
                 "ishan", "ishana", "ishani", "ishaq", "ishbel", "isher", "ishika", "ishita", "ishmaan", "ishmael",
                 "ishmeet", "ishrat", "ishtiaq", "isiah", "isibis", "isidora", "isidore", "isidra", "isidro", "islah",
                 "islam", "islay", "ismaeel", "ismael", "ismah", "ismahan", "ismail", "ismay", "isobel", "isobell",
                 "isobella", "isobelle", "isolde", "israa", "israel", "israfil", "israh", "israr", "isreal", "issabell",
                 "issabella", "issabelle", "issac", "issah", "issalt", "issam", "issra", "isuara", "isyla", "iszac",
                 "italia", "itazais", "ithlot", "ithric", "itner", "itoro", "itzel", "iulia", "iulian", "iuliana",
                 "iustin", "ivalo", "ivana", "ivanah", "ivanna", "ivayla", "ivelin", "ivelisse", "ivette", "ivles",
                 "ivonne", "ivory", "iwell", "iwinosa", "iyaan", "iyaat", "iyaaz", "iyana", "iyanna", "iyanuoluwa",
                 "iyinoluwa", "iylah", "iylie", "iyobosa", "izaac", "izaak", "izaan", "izabel", "izabela", "izabele",
                 "izabella", "izabelle", "izack", "izadora", "izaiah", "izaiyah", "izara", "izayah", "izetta", "izhaan",
                 "izhaar", "iziah", "izidora", "iziebella", "izobel", "izobella", "izobelle", "izola", "izumi",
                 "izyaan", "izyan", "izzabella", "izzah", "izzet", "izzie", "jaabir", "jaafar", "jaagup", "jaali",
                 "jaana", "jaanvi", "jaazba", "jabari", "jabbert", "jabez", "jabilo", "jabir", "jabriil", "jabril",
                 "jacainto", "jacalyn", "jacee", "jacek", "jacelyn", "jacer", "jacey", "jacha", "jacid", "jacie",
                 "jacinda", "jacinta", "jacinth", "jacinto", "jackeline", "jackelyn", "jacki", "jackie", "jacklyn",
                 "jackqueline", "jackson", "jacky", "jaclyn", "jacob", "jacobe", "jacobi", "jacoby", "jacopo",
                 "jacqualine", "jacque", "jacquelin", "jacqueline", "jacquelyn", "jacquelyne", "jacquelynn", "jacques",
                 "jacquetta", "jacqui", "jacquie", "jacquiline", "jacquline", "jacqulyn", "jacson", "jacub", "jadan",
                 "jaden", "jadesola", "jadiel", "jadon", "jadwiga", "jadyn", "jaeda", "jaeden", "jaedon", "jaelyn",
                 "jaelynn", "jaemii", "jafar", "jagger", "jagoda", "jagraj", "jahan", "jahdel", "jaheim", "jahkai",
                 "jahmai", "jahmal", "jahmar", "jahmari", "jahmene", "jahsiah", "jahzara", "jahziah", "jaicee", "jaida",
                 "jaidan", "jaideep", "jaiden", "jaidev", "jaidon", "jaidyn", "jaime", "jaimee", "jaimelee", "jaimey",
                 "jaimie", "jaina", "jainil", "jairaj", "jairo", "jairus", "jaison", "jaiveer", "jaiven", "jaiya",
                 "jaiyana", "jakob", "jakobe", "jakobi", "jakom", "jakson", "jakub", "jalal", "jaleesa", "jalen",
                 "jalia", "jalil", "jalisa", "jaliyah", "jamaal", "jamaima", "jamaine", "jamal", "jamar", "jamari",
                 "jamarion", "jamee", "jameel", "jameela", "jamel", "jamelia", "james", "jameson", "jamey", "jamie",
                 "jamiel", "jamielee", "jamieleigh", "jamieson", "jamik", "jamika", "jamil", "jamila", "jamilah",
                 "jamina", "jamir", "jamirah", "jamis", "jamison", "jamiya", "jammie", "jamril", "janae", "janani",
                 "janat", "janay", "janaya", "jancis", "jandrel", "janean", "janee", "janeen", "janel", "janell",
                 "janella", "janelle", "janemarie", "janene", "janessa", "janet", "janeth", "janett", "janetta",
                 "janette", "janey", "jania", "janiah", "janice", "janie", "janiece", "janina", "janine", "janis",
                 "janise", "janita", "janiya", "janiyah", "janka", "janlove", "janna", "jannah", "jannat", "jannath",
                 "jannatul", "janneke", "jannet", "jannette", "jannie", "janos", "jansen", "january", "janus",
                 "janusha", "januviel", "janvi", "janyce", "japheth", "japji", "japjot", "japleen", "japneet",
                 "japnoor", "jaquan", "jaqueline", "jaquelyn", "jarak", "jared", "jarema", "jareth", "jargo", "jarlath",
                 "jarod", "jaron", "jaroslav", "jarrad", "jarred", "jarrett", "jarriel", "jarrod", "jartin", "jarvis",
                 "jasdeep", "jaseena", "jasemin", "jashandeep", "jashoone", "jasiah", "jasika", "jasim", "jaskaran",
                 "jaskiran", "jaskirat", "jasleen", "jasmeen", "jasmeet", "jasmin", "jasmina", "jasmine",
                 "jasminemarie", "jasmyn", "jasmyne", "jasneet", "jasnoor", "jason", "jasper", "jaspreet", "jasraj",
                 "jasreet", "jassimar", "jasveer", "jasyn", "jatin", "jaunita", "javan", "javen", "javeria", "javier",
                 "javion", "javon", "jawaad", "jawad", "jawahir", "jawairia", "jawaria", "jawdan", "jaxen", "jaxon",
                 "jaxson", "jaxton", "jaxxon", "jayan", "jayani", "jayce", "jaycee", "jayceon", "jaycie", "jayco",
                 "jaycob", "jayda", "jaydah", "jaydan", "jayde", "jaydee", "jaydeep", "jayden", "jaydi", "jaydn",
                 "jaydon", "jayen", "jayesh", "jaygo", "jayjay", "jayke", "jaykub", "jayla", "jaylah", "jaylan",
                 "jaylee", "jayleen", "jayleigh", "jaylen", "jaylene", "jaylin", "jaylinn", "jaylon", "jaylynn",
                 "jayme", "jaymee", "jaymeleigh", "jaymes", "jaymi", "jaymie", "jaymin", "jayna", "jayne", "jayon",
                 "jayraj", "jayse", "jayson", "jaython", "jayveer", "jayven", "jayvon", "jaziah", "jazib", "jazlyn",
                 "jazlynn", "jazmin", "jazmine", "jazmyn", "jazmyne", "jazzlene", "jazzlyn", "jeana", "jeane",
                 "jeanelle", "jeanene", "jeanett", "jeanetta", "jeanette", "jeanice", "jeanie", "jeanine", "jeanmarie",
                 "jeanna", "jeanne", "jeannetta", "jeannette", "jeannie", "jeannine", "jeast", "jebediah", "jediah",
                 "jedida", "jedidiah", "jeemie", "jeena", "jeevan", "jeevika", "jeeya", "jefferey", "jefferson",
                 "jeffery", "jeffie", "jeffrey", "jeffry", "jegors", "jekabs", "jelani", "jelgo", "jeliala",
                 "jelizaveta", "jemima", "jemimah", "jemma", "jenae", "jenan", "jenansfer", "jenaya", "jeneba", "jenee",
                 "jenell", "jenelle", "jenessa", "jenethrim", "jenette", "jeneva", "jenice", "jenifer", "jeniffer",
                 "jenine", "jenise", "jenish", "jenisha", "jenna", "jennah", "jennefer", "jennell", "jennette", "jenni",
                 "jennie", "jennifer", "jenniffer", "jennine", "jenny", "jennyve", "jensen", "jenson", "jeorgie",
                 "jerald", "jeraldine", "jeramy", "jeremi", "jeremiah", "jeremiasz", "jeremy", "jeriah", "jerica",
                 "jericho", "jerilyn", "jerlene", "jermain", "jermaine", "jerold", "jerome", "jeromy", "jeron",
                 "jeronimo", "jerrell", "jerri", "jerrica", "jerrie", "jerrod", "jerrold", "jerry", "jersey", "jerusha",
                 "jerzy", "jesco", "jesenia", "jeshua", "jeshurun", "jesiah", "jesica", "jesika", "jeslyn", "jespar",
                 "jessa", "jessamine", "jesse", "jesseman", "jessenia", "jessi", "jessia", "jessica", "jessie",
                 "jessika", "jessy", "jester", "jestine", "jesus", "jesusa", "jesusita", "jeter", "jethil", "jethro",
                 "jetson", "jetta", "jettie", "jevan", "jevon", "jewel", "jewell", "jeyda", "jezabel", "jezebel",
                 "jeziah", "jezzail", "jezzine", "jhanvi", "jiahui", "jiana", "jianna", "jianzhou", "jiayao", "jibar",
                 "jibraeel", "jibran", "jibreel", "jibriel", "jibril", "jihaan", "jihan", "jillian", "jimena", "jimmi",
                 "jimmie", "jimmy", "jinny", "jinter", "jinxin", "jireh", "jisma", "jivan", "jiyaan", "jiyan",
                 "jiyanna", "jmais", "joachim", "joakim", "joana", "joane", "joanie", "joann", "joanna", "joanne",
                 "joannie", "joaquin", "joaquina", "joash", "joast", "joban", "jobey", "jobie", "jocelyn", "jocelyne",
                 "jocelynn", "jocosa", "jodee", "jodhveer", "jodie", "joeann", "joeland", "joele", "joell", "joella",
                 "joelle", "joellen", "joely", "joesai", "joeseph", "joesph", "joetta", "joette", "johan", "johana",
                 "johann", "johanna", "johannah", "johanne", "johannes", "johna", "johnathan", "johnathon", "johnboy",
                 "johnetta", "johnette", "johnie", "johnjames", "johnjoe", "johnjoseph", "johnna", "johnnie", "johnny",
                 "johnpaul", "johnross", "johnsie", "johnson", "johnston", "jokubas", "jolan", "jolanda", "joleen",
                 "jolene", "jolie", "jolin", "joline", "jolon", "jolyn", "jolynn", "jolyon", "jonah", "jonas", "jonasz",
                 "jonatan", "jonathan", "jonathon", "jonell", "jonelle", "jones", "jonie", "jonina", "jonjo", "jonjoe",
                 "jonna", "jonnie", "jonny", "jonquil", "jonross", "jonty", "jools", "joori", "joory", "jorad", "jorah",
                 "joram", "jorawar", "jordan", "jordana", "jorden", "jordi", "jordie", "jordon", "jordy", "jordyn",
                 "jordynn", "jorell", "joren", "jorga", "jorge", "jorgi", "jorgia", "jorgie", "joriel", "joris",
                 "jorja", "jorji", "jorjie", "jormunrek", "joscelyn", "josef", "josefa", "joseff", "josefina",
                 "josefine", "joselyn", "joseph", "josephina", "josephine", "josette", "josey", "joshan", "joshua",
                 "joshuah", "joshveer", "joshvin", "josiah", "josie", "josiel", "josiya", "joslyn", "jospeh",
                 "josphine", "josslyn", "josue", "jotham", "joules", "joumana", "journee", "journey", "joury", "jovan",
                 "jovani", "jovanni", "joven", "jovie", "jovita", "jowan", "jowin", "jowita", "joyce", "joycelyn",
                 "joyseysta", "jozef", "jozefina", "joziah", "jozsef", "jozua", "jozzel", "jshoone", "juana", "juanita",
                 "jubal", "jubril", "jucel", "judah", "judas", "judie", "judith", "judson", "juelz", "jujhar", "juktar",
                 "julee", "julene", "jules", "julia", "juliam", "julian", "juliana", "juliane", "juliann", "julianna",
                 "julianne", "julie", "julieann", "julien", "julienne", "juliet", "julieta", "julietta", "juliette",
                 "julija", "julio", "julionne", "julissa", "julius", "juliusz", "julthor", "jumana", "jumanah",
                 "jumaymah", "junaid", "junainah", "junayd", "junbao", "junhao", "junia", "junie", "junio", "junior",
                 "juniper", "junist", "junita", "junius", "junko", "junnut", "junoi", "junper", "junxi", "junyi",
                 "junying", "jupiter", "juraj", "jurine", "jurnee", "jusite", "justa", "justal", "justalyne", "justas",
                 "justice", "justin", "justina", "justine", "justise", "justus", "justyna", "jutta", "juwairiyah",
                 "juwariyah", "juwayriah", "juwayrieh", "juwayriya", "juwayriyah", "jytia", "jzahlaren", "kaashvi",
                 "kaavya", "kaayan", "kabibe", "kabili", "kabir", "kabira", "kacee", "kacela", "kacen", "kacey",
                 "kachina", "kacie", "kacper", "kadee", "kaden", "kadence", "kadian", "kadiatou", "kadie", "kadija",
                 "kadijah", "kadir", "kadyleigh", "kadyn", "kaeden", "kaedie", "kaela", "kaelah", "kaelam", "kaelan",
                 "kaeleb", "kaelem", "kaelen", "kaelin", "kaelyn", "kaesyn", "kafar", "kafeel", "kafira", "kafsal",
                 "kagan", "kagya", "kaheesha", "kahlan", "kahli", "kaian", "kaicee", "kaidan", "kaide", "kaidee",
                 "kaiden", "kaidence", "kaidey", "kaidie", "kaidon", "kaidy", "kaidyn", "kaien", "kaihla", "kaikura",
                 "kaila", "kailah", "kailan", "kailani", "kailas", "kaile", "kaileb", "kailee", "kailem", "kailen",
                 "kailey", "kaili", "kailie", "kailum", "kailun", "kailym", "kailyn", "kaima", "kainaat", "kainan",
                 "kainat", "kaine", "kainen", "kaira", "kairah", "kairan", "kairav", "kairen", "kairi", "kairo",
                 "kairon", "kairyn", "kaisaan", "kaisan", "kaiser", "kaisey", "kaisha", "kaison", "kaitch", "kaitlin",
                 "kaitlyn", "kaitlynn", "kaitlynne", "kaito", "kaius", "kaiya", "kaiyah", "kaiyan", "kaizen", "kaizer",
                 "kajahli", "kajetan", "kajus", "kakatal", "kalan", "kalani", "kalantir", "kaldar", "kalea", "kaleb",
                 "kaleem", "kaleesi", "kalei", "kaleigh", "kaleigha", "kalein", "kaleisha", "kalel", "kalem", "kalen",
                 "kaley", "kalia", "kaliah", "kalib", "kalid", "kalieb", "kalila", "kalili", "kalin", "kalina",
                 "kalinda", "kalishah", "kalisi", "kalista", "kaliyah", "kallan", "kallel", "kallen", "kalli", "kallie",
                 "kallum", "kally", "kaloyan", "kalsoom", "kalub", "kalum", "kalvan", "kalvin", "kalyan", "kalyca",
                 "kalyn", "kalyra", "kamaal", "kamai", "kamal", "kamala", "kamali", "kamalli", "kamani", "kamara",
                 "kamari", "kamaria", "kamarni", "kamden", "kamdyn", "kamee", "kameel", "kamella", "kameron", "kamil",
                 "kamila", "kamilah", "kamile", "kamilla", "kamina", "kamiya", "kamiyah", "kamran", "kamron", "kamryn",
                 "kamsi", "kamsirio", "kamsiriochi", "kamsiyochi", "kamsiyochukwu", "kanana", "kanav", "kandace",
                 "kandi", "kandice", "kandis", "kandra", "kandur", "kandy", "kaneez", "kanesha", "kaniga", "kanika",
                 "kanisha", "kanishk", "kanishka", "kannon", "kantor", "kanye", "kaolan", "kapat", "kaprin", "karam",
                 "karamveer", "karan", "karanbir", "karanjot", "karanveer", "karanvir", "karas", "karden", "kareem",
                 "kareema", "kareemah", "kareen", "kareena", "karel", "karen", "karena", "karenna", "karenza", "kareth",
                 "karey", "kargo", "karie", "karim", "karima", "karin", "karina", "karine", "karis", "karisa",
                 "karisha", "karishma", "karissa", "karla", "karlee", "karleen", "karleigh", "karleize", "karlene",
                 "karley", "karli", "karlie", "karlo", "karlos", "karly", "karlyn", "karma", "karman", "karmanjot",
                 "karmayn", "karmen", "karmin", "karmina", "karol", "karole", "karolina", "karoline", "karolis",
                 "karolos", "karolyn", "karon", "karra", "karrah", "karren", "karri", "karrie", "karris", "karriz",
                 "karrson", "karry", "karsen", "karson", "karsyn", "kartar", "kartel", "karter", "karthi", "karthik",
                 "kartik", "karum", "karyl", "karyn", "karys", "kasandra", "kasara", "kasen", "kasey", "kasha",
                 "kashaf", "kashai", "kashan", "kashem", "kashif", "kashish", "kashvi", "kashvin", "kasia", "kasiah",
                 "kasie", "kasim", "kasin", "kasjan", "kason", "kaspar", "kasparas", "kasper", "kaspian", "kasra",
                 "kassandra", "kassia", "kassidy", "kassie", "kassii", "kassim", "kassina", "kassius", "katah",
                 "kataleja", "kataleya", "katalin", "katalina", "katan", "katana", "katara", "katarina", "katarzyna",
                 "katelin", "katelyn", "katelynn", "katerina", "katerine", "kathaleen", "katharina", "katharine",
                 "katharyn", "kathathorn", "kathe", "kathein", "katheleen", "katherin", "katherina", "katherine",
                 "kathern", "katheryn", "kathey", "kathi", "kathie", "kathleen", "kathlene", "kathline", "kathlyn",
                 "kathrin", "kathrine", "kathryn", "kathryne", "kathy", "kathyrn", "katia", "katie", "katina", "katiya",
                 "katlin", "katlyn", "katniss", "katra", "katrice", "katriel", "katrien", "katrin", "katrina", "katsu",
                 "kattie", "katya", "kaula", "kausar", "kavalpreet", "kavan", "kavelin", "kavin", "kavinayan", "kavish",
                 "kaviya", "kavya", "kawena", "kawthar", "kawther", "kayaan", "kayah", "kayahan", "kayal", "kayan",
                 "kayanah", "kayce", "kaycee", "kayci", "kaycie", "kayda", "kaydae", "kaydan", "kayde", "kaydee",
                 "kayden", "kaydence", "kaydi", "kaydie", "kaydin", "kaydis", "kaydn", "kaydon", "kayen", "kayetan",
                 "kayhan", "kayinat", "kayla", "kaylah", "kaylan", "kaylay", "kayleb", "kaylee", "kayleen", "kayleigh",
                 "kaylem", "kaylen", "kaylene", "kayley", "kaylib", "kaylie", "kaylin", "kayll", "kaylon", "kaylub",
                 "kaylum", "kaylun", "kaylyb", "kaylyn", "kaylynn", "kayne", "kayon", "kayonga", "kayori", "kayra",
                 "kaysah", "kaysan", "kaysen", "kaysha", "kaysie", "kayson", "kaythan", "kayti", "kaytlin", "kayton",
                 "kaziah", "kazim", "kazimierz", "kazuko", "kazuyo", "keagan", "keahi", "keala", "kealan", "kealii",
                 "keane", "keanna", "keannah", "keano", "keanu", "keara", "keatin", "keaton", "keavey", "keavi",
                 "keavie", "keavy", "kebba", "kecia", "kedem", "kedrick", "keean", "keeana", "keefer", "keegan",
                 "keeghan", "keela", "keelan", "keeleigh", "keeley", "keelia", "keelie", "keelin", "keely", "keena",
                 "keenan", "keene", "keenedge", "keerat", "keesha", "keeva", "keevagh", "keevah", "keevie", "keevy",
                 "keeya", "keeyan", "kegan", "kehinde", "keian", "keiara", "keigan", "keiko", "keila", "keilan",
                 "keimee", "keiomei", "keira", "keirah", "keiran", "keirlyn", "keiron", "keisha", "keita", "keith",
                 "keitha", "keitija", "keiva", "keivah", "kekuda", "kelan", "kelcie", "kelda", "kelechi", "kelia",
                 "kelian", "kelis", "kelise", "kelisha", "kellan", "kelle", "kellee", "kellen", "keller", "kelley",
                 "kelli", "kellie", "kellielouise", "kellin", "kelly", "kellye", "kelsea", "kelseigh", "kelsey",
                 "kelsi", "kelsie", "kelson", "keltan", "keltus", "keltz", "kelvin", "kelyn", "kemal", "kemar",
                 "kemberly", "kemper", "kempton", "kemuel", "kenadie", "kenan", "kenaya", "kenda", "kendal", "kendall",
                 "kendos", "kendra", "kendrick", "kendyl", "kenechi", "kenechukwu", "kenedi", "keneolisa", "keneth",
                 "kenia", "kenisha", "kenji", "kenley", "kenna", "kennedi", "kennedy", "kenneldor", "kenneth",
                 "kennidi", "kennie", "kennith", "kenny", "kenobi", "kenrick", "kensa", "kensey", "kensi", "kensington",
                 "kensley", "kenton", "kenya", "kenyah", "kenyatta", "kenyetta", "kenyia", "kenyon", "kenza", "kenzi",
                 "kenzie", "kenzo", "kenzy", "keona", "keoni", "keppa", "keran", "kerberos", "kerem", "keren",
                 "kerensa", "kerenza", "kerian", "kerim", "kerin", "keris", "kermit", "kerren", "kerri", "kerrie",
                 "kerrigan", "kerrin", "kerrinen", "kerris", "kerry", "kerryn", "kerstin", "keryn", "kerys", "kesad",
                 "kesha", "keshav", "keshavi", "keshia", "keshigan", "keshika", "keshini", "kesia", "kesmon", "kesrick",
                 "kessius", "kester", "keston", "ketan", "kethren", "kethtaz", "ketial", "ketinella", "ketlz", "ketsia",
                 "keturah", "keval", "kevan", "keven", "kevin", "kevinas", "kevins", "kevon", "kevvy", "kevward",
                 "kexin", "keyaan", "keyan", "keyann", "keyara", "keyarah", "keyla", "keylan", "keyon", "keyra",
                 "keyyan", "kezban", "kezia", "keziah", "khaalid", "khadeeja", "khadeejah", "khadeja", "khadel",
                 "khadidja", "khadiga", "khadija", "khadijah", "khadiza", "khadra", "khaine", "khaira", "khairah",
                 "khalam", "khaled", "khaleel", "khaleesi", "khalessi", "khali", "khalia", "khalid", "khalida",
                 "khalie", "khalif", "khalifa", "khalifah", "khalil", "khalilah", "khalisa", "khalisah", "khalisha",
                 "khang", "khansa", "khari", "kharis", "khawlah", "khaya", "khayrah", "khian", "khianna", "khiera",
                 "khirad", "khivi", "khizar", "khizer", "khizr", "khloe", "khodie", "khody", "khris", "khrisha",
                 "khubaib", "khurram", "khush", "khushal", "khushi", "khwaja", "khyati", "khyla", "khymir", "khyra",
                 "khystros", "kiaan", "kiahra", "kiana", "kianat", "kiandra", "kianha", "kianna", "kiannah", "kianne",
                 "kiara", "kiarah", "kiaran", "kiaren", "kiarna", "kiarra", "kiarrah", "kiaya", "kibbe", "kibber",
                 "kibib", "kibidon", "kiden", "kidus", "kiean", "kieana", "kieara", "kiefer", "kiegan", "kielan",
                 "kiele", "kient", "kiera", "kieran", "kieren", "kiernan", "kieron", "kierra", "kiersten", "kiesha",
                 "kieth", "kikelomo", "kilan", "kilayox", "kilbas", "kilburn", "kildarien", "kilen", "kiley", "kilia",
                 "kilian", "killian", "killin", "killrey", "kilmer", "kilyne", "kimani", "kimarni", "kimaya", "kimber",
                 "kimberely", "kimberlee", "kimberley", "kimberli", "kimberlie", "kimberly", "kimbery", "kimbra",
                 "kimbriella", "kimdar", "kimia", "kimiko", "kimiya", "kimmy", "kimora", "kimran", "kimura", "kinan",
                 "kindra", "kines", "kineta", "kinga", "kingsley", "kingsliege", "kingsly", "kingson", "kingston",
                 "kingurvind", "kinley", "kinnin", "kinnon", "kinorn", "kinsey", "kinsley", "kinwerd", "kinza", "kiora",
                 "kippe", "kiran", "kirani", "kiranjot", "kiranpreet", "kirat", "kiratveer", "kirby", "kirder", "kiren",
                 "kirik", "kiril", "kirill", "kiringard", "kiron", "kirpa", "kirra", "kirsi", "kirsten", "kirstie",
                 "kirstin", "kirstwig", "kirsty", "kirstyn", "kirtan", "kirwendus", "kisha", "kishan", "kishi",
                 "kishon", "kisler", "kista", "kitana", "kitti", "kittie", "kitty", "kivleen", "kiyaan", "kiyah",
                 "kiyan", "kiyana", "kiyanna", "kiyla", "kiyoko", "kiyomi", "kiyra", "kizzi", "kizzie", "kizzy",
                 "kjarren", "klaidas", "klajdi", "klara", "klass", "klaudia", "klaudija", "klaudijus", "klaus",
                 "klayten", "klayton", "klean", "klemnor", "klerak", "klesteus", "kletus", "klevis", "klion", "klore",
                 "klose", "klothe", "knorthur", "knour", "kobain", "koben", "kobey", "kobichukwudi", "kobie",
                 "kobimtochi", "kodeah", "koden", "kodey", "kodie", "kodina", "kodof", "kohde", "kohen", "kokba",
                 "kolaren", "kolbe", "kolbi", "kolbie", "kolby", "kolmorn", "kolten", "kolton", "koltyn", "komal",
                 "konain", "konane", "konil", "konner", "konnie", "konnor", "konor", "konrad", "konstancja",
                 "konstantin", "konstantinos", "konstanty", "kontouche", "kooper", "koplyn", "koral", "koray", "korba",
                 "korban", "korben", "korbin", "korbyn", "kordell", "kordian", "korell", "koren", "korene", "koreth",
                 "korey", "korie", "korik", "korinn", "kornag", "kornel", "kornelia", "kornelija", "korneliusz",
                 "korri", "kortney", "korvyn", "kosar", "koshan", "kosisochukwu", "kosma", "kosmas", "kothe", "kotryna",
                 "kountra", "kouper", "kourosh", "kourtney", "koutara", "koutra", "koydl", "koysta", "kozue", "kraig",
                 "krank", "krash", "krasimir", "krass", "kreed", "krekle", "kressara", "krile", "krina", "krinn",
                 "krish", "krisha", "krishan", "krishang", "krishav", "krishay", "krishen", "krishika", "krishiv",
                 "krishma", "krishn", "krishna", "krishnan", "krisiries", "kriss", "krissi", "krissie", "krissy",
                 "krista", "kristal", "kristan", "kristaps", "kristeen", "kristel", "kristen", "kristers", "kristhanna",
                 "kristi", "kristian", "kristiana", "kristians", "kristie", "kristin", "kristina", "kristine",
                 "kristion", "kristiyan", "kristl", "kristle", "kristof", "kristofer", "kristoferis", "kristofers",
                 "kristoff", "kristoffer", "kristopher", "kristupas", "kristy", "kristyn", "kristyna", "krithik",
                 "kriti", "kritika", "kriya", "kronos", "krrish", "krupa", "krush", "kruze", "kryspin", "krysta",
                 "krystal", "krystall", "krysten", "krystian", "krystin", "krystina", "krystle", "krystof", "krystyna",
                 "krywood", "krzysztof", "ksawery", "ksawier", "ksenia", "ksenija", "kseniya", "kubkli", "kubra",
                 "kullen", "kulneet", "kulsoom", "kulsuma", "kulthum", "kunwar", "kupakwashe", "kurtis", "kuruk",
                 "kushagra", "kushal", "kushi", "kuvar", "kuzey", "kwabena", "kwadwo", "kwaku", "kwame", "kweku",
                 "kwesi", "kyana", "kyanna", "kyanne", "kyara", "kyden", "kyelan", "kyeran", "kyeron", "kyiana",
                 "kyira", "kylah", "kylan", "kylar", "kylee", "kyleigh", "kylen", "kyler", "kylia", "kylie", "kymani",
                 "kymarni", "kymberly", "kynan", "kyndall", "kynlee", "kynnedi", "kynthia", "kyoko", "kyong", "kypros",
                 "kyrad", "kyrah", "kyraleigh", "kyran", "kyree", "kyreece", "kyrell", "kyren", "kyrese", "kyriacos",
                 "kyrie", "kyrin", "kyron", "kyrone", "kyros", "kyson", "kyung", "kyzer", "laaiba", "laaibah",
                 "laaieah", "laasya", "labeeb", "labeeqa", "labib", "labibah", "lacee", "lacei", "lacey", "laceyjane",
                 "laceymay", "lachelle", "lachie", "lachlan", "lachlann", "lacie", "laciee", "lackus", "lacresha",
                 "lacspor", "ladan", "ladawn", "ladebi", "laderic", "ladislav", "ladonna", "laela", "laelff", "laelia",
                 "laelithra", "laelyre", "laenaya", "laertes", "lafornon", "lagor", "lahoma", "lahorn", "laiba",
                 "laibah", "laicee", "laicey", "laicie", "laighton", "laihla", "laikra", "laila", "lailaa", "lailah",
                 "lailaha", "lailha", "laili", "laima", "laina", "lainah", "lainaigh", "laine", "lainee", "lainey",
                 "lainie", "lainy", "laird", "laissez", "laith", "laithan", "laithen", "laithi", "laiton", "laiya",
                 "lajka", "lajuana", "lakai", "lakeesha", "lakeisha", "laken", "lakendra", "lakenya", "lakesha",
                 "lakeshia", "lakhveer", "lakia", "lakiesha", "lakisha", "lakita", "laksh", "lakshan", "lakshana",
                 "lakshman", "lakshmi", "lakyn", "lalasa", "lalita", "lamar", "lamara", "lamees", "lamek", "lamia",
                 "lamiah", "lamin", "lamine", "lamis", "lamiya", "lamonica", "lamont", "lamorna", "lamya", "lanae",
                 "lanah", "lanai", "lanaya", "lance", "lancelot", "landen", "lander", "lando", "landolfur", "landon",
                 "landoris", "landrin", "landry", "landyn", "lanell", "lanelle", "laner", "lanette", "laney", "langdon",
                 "lange", "langston", "lanie", "lanieyah", "lanika", "lanissiel", "lanita", "laniya", "laniyah",
                 "lanna", "lannah", "lannie", "lanny", "lanora", "lanrthal", "lanthal", "lanya", "laora", "laquanda",
                 "laqueta", "laquita", "laracal", "larae", "laragh", "larah", "laraib", "laraine", "laree", "lareen",
                 "lareina", "laren", "largo", "larhonda", "lariah", "larin", "larina", "larisa", "larissa", "larita",
                 "larkin", "larna", "larne", "laronda", "larrah", "larraine", "larrisa", "larry", "larson", "larsson",
                 "larue", "larya", "lasandra", "lasca", "lashae", "lashanda", "lashandra", "lasharn", "lashaun",
                 "lashaunda", "lashawn", "lashawna", "lashawnda", "lashay", "lashell", "lashon", "lashonda", "lashunda",
                 "lason", "lasonya", "lassie", "lasuni", "laszlo", "latanya", "latarsha", "latasha", "latashia",
                 "lataya", "latayah", "lateef", "lateisha", "latesha", "latham", "lathan", "latia", "laticia", "latifa",
                 "latifah", "latina", "latisha", "latona", "latonia", "latonya", "latoria", "latosha", "latoya",
                 "latoyah", "latoyia", "latrell", "latrice", "latricia", "latrina", "latrisha", "lauchlan", "laughlan",
                 "laughlin", "lauma", "launa", "launt", "laura", "lauralee", "lauran", "laure", "laured", "laureen",
                 "laurel", "laurelin", "lauren", "laurena", "laurence", "laurene", "laurent", "lauretta", "laurette",
                 "laurh", "lauri", "laurianne", "laurice", "laurie", "laurinda", "laurine", "laurya", "lauryn",
                 "lavada", "lavana", "lavanya", "lavell", "lavelle", "lavender", "lavenia", "lavera", "lavern",
                 "laverna", "laverne", "laveta", "lavette", "lavin", "lavina", "lavinia", "lavleen", "lavon", "lavona",
                 "lavonda", "lavone", "lavonia", "lavonn", "lavonna", "lavonne", "lawan", "lawana", "lawand", "lawanda",
                 "lawanna", "lawerence", "lawin", "lawrence", "lawrie", "lawson", "laxmi", "layaal", "layaan", "layah",
                 "layal", "layan", "layana", "layanne", "laycee", "layci", "laycie", "layden", "layker", "layla",
                 "laylaah", "laylah", "laylan", "layland", "laylen", "layley", "laylind", "layna", "layne", "laynie",
                 "layth", "laythan", "layton", "lazar", "lazarak", "lazaro", "lazarus", "lazer", "leach", "leagment",
                 "leaha", "leala", "lealand", "leana", "leander", "leandra", "leandro", "leane", "leann", "leanna",
                 "leanne", "leanora", "leart", "leatha", "leatham", "leatrice", "leavitt", "lebran", "lebron", "lecia",
                 "ledale", "ledell", "ledion", "ledley", "leeann", "leeanna", "leeanne", "leejay", "leela", "leelan",
                 "leeland", "leena", "leenah", "leeroy", "leesa", "leeya", "leeyah", "lefreth", "legend", "legolas",
                 "lehana", "leiah", "leida", "leigh", "leigha", "leighah", "leighann", "leighanna", "leigharna",
                 "leighla", "leighland", "leighton", "leighvi", "leila", "leilah", "leilan", "leiland", "leilani",
                 "leimoni", "leina", "leior", "leisa", "leise", "leisha", "leith", "leiva", "leiya", "lekisha", "lelah",
                 "lelan", "leland", "lelani", "lelia", "leliana", "lelland", "lelynd", "lemar", "lemma", "lemuel",
                 "lenala", "lenard", "lenas", "lencho", "lenci", "lenita", "lenka", "lenke", "lenna", "lennard",
                 "lenni", "lennie", "lennix", "lennon", "lennox", "lenny", "lenora", "lenore", "lenox", "leola",
                 "leoma", "leona", "leonard", "leonarda", "leonardo", "leonaro", "leone", "leonel", "leonell", "leoni",
                 "leonia", "leonid", "leonida", "leonidas", "leonie", "leonien", "leonila", "leonor", "leonora",
                 "leonore", "leontine", "leopold", "leopoldo", "leopopira", "leora", "leota", "lephar", "lephidiles",
                 "lerin", "leroy", "lerryn", "lesha", "leshay", "lesia", "leslee", "lesley", "lesli", "leslie", "lesly",
                 "lesphares", "lessie", "lester", "letha", "letia", "leticia", "letisha", "letitia", "letizia",
                 "letnerr", "letor", "lettice", "lettie", "letty", "leuan", "leuke", "leuvdar", "levan", "levana",
                 "levelys", "leven", "levent", "levente", "leverett", "levia", "levii", "levin", "levon", "levvo",
                 "lewanna", "lewellyn", "lewie", "lewin", "lewinda", "lewis", "lewys", "lexci", "lexey", "lexia",
                 "lexie", "lexii", "lexileigh", "lexine", "lexis", "lexiss", "lexton", "lexus", "lexxi", "lexxii",
                 "leyah", "leyana", "leyanna", "leyla", "leylah", "leylan", "leyland", "leyna", "leynar", "leyon",
                 "leytinn", "leyton", "lezlie", "lhunig", "liaba", "liadan", "liadh", "liana", "liane", "lianie",
                 "lianna", "liannah", "lianne", "liara", "liarna", "liath", "libaan", "liban", "libbi", "libbie",
                 "libby", "liberty", "librada", "licia", "licinius", "lidia", "lidorn", "lidya", "lienna", "liepa",
                 "lieselotte", "liesl", "lifity", "light", "ligia", "lihuel", "lijana", "lilac", "lilah", "lileah",
                 "lilia", "lilian", "liliana", "liliane", "lilianna", "lilias", "lilibet", "lilibeth", "lilie",
                 "liliella", "lilien", "liliha", "lilijana", "lilika", "lilita", "lilith", "liliya", "lilja", "lilla",
                 "lilleh", "lilley", "lilli", "lillia", "lilliam", "lillian", "lilliana", "lilliane", "lillianna",
                 "lillianne", "lilliarna", "lillias", "lillie", "lilliemae", "lillith", "lilly", "lillyana", "lillyann",
                 "lillyanna", "lillyanne", "lillyarna", "lillymae", "lillymai", "lillymay", "lillyrose", "liloh",
                 "lilou", "liluye", "lilya", "lilyan", "lilyana", "lilyann", "lilyanna", "lilyanne", "lilybella",
                 "lilybelle", "lilybeth", "lilymae", "lilymay", "lilyrose", "limner", "lincoln", "lincon", "linda",
                 "linden", "lindon", "lindsay", "lindsey", "lindsy", "lindy", "linette", "lingar", "linley", "linnea",
                 "linney", "linnie", "linor", "linovahle", "linsey", "linton", "linus", "linwood", "linxuan", "linyah",
                 "linzi", "liona", "lionel", "liora", "liphanes", "liran", "lisabeth", "lisamarie", "lisandra",
                 "lisandro", "lisbeth", "lisette", "lisha", "lishitha", "lisimba", "lisle", "lisma", "lissa",
                 "lissette", "lissie", "listor", "lithe", "lithuir", "litsa", "liutauras", "livana", "livia", "livic",
                 "livie", "livinia", "livleen", "livvi", "livvie", "livvy", "liwia", "liwsi", "lixue", "liyaana",
                 "liyah", "liyan", "liyana", "liyanah", "lizabeth", "lizbeth", "lizeth", "lizette", "lizzette",
                 "lizzie", "lizzy", "llayton", "lleucu", "llewellyn", "llewelyn", "lleyton", "llinos", "llion",
                 "lliyle", "lloyanda", "lloyd", "lluara", "llyle", "llywelyn", "loath", "loban", "lochan", "lochie",
                 "lochlainn", "lochlan", "lochlann", "lochloinn", "lochlyn", "locke", "loerya", "loetter", "logan",
                 "logang", "loghan", "logius", "logun", "logyn", "lohan", "lohla", "lohtur", "loida", "loine", "loise",
                 "lolah", "lolinda", "lolita", "lolla", "lollie", "lolly", "lomond", "lonan", "lonavan", "londa",
                 "london", "londyn", "longin", "longston", "lonna", "lonnie", "lonnit", "lonny", "lookfar", "loopzig",
                 "loraine", "loralee", "loralei", "loralye", "loran", "lorand", "lorcan", "lorean", "loree", "loreen",
                 "loreena", "lorelai", "lorelei", "loren", "lorena", "lorene", "lorenza", "lorenzo", "loreta",
                 "loretta", "lorette", "loria", "loriann", "loric", "lorie", "lorien", "lorienith", "lorik", "lorilee",
                 "lorin", "lorina", "lorinda", "lorine", "loris", "lorita", "lorna", "lorne", "lorraine", "lorretta",
                 "lorri", "lorriane", "lorrie", "lorrine", "losalini", "losner", "lossar", "lotanna", "lothard",
                 "lotta", "lotte", "lotti", "lottie", "lotty", "lotus", "louann", "louanne", "louay", "louella",
                 "louetta", "louhanna", "louie", "louis", "louisa", "louise", "louisiana", "louka", "loukas", "loura",
                 "lourdes", "lourenco", "lourie", "louvenia", "loveday", "loveleen", "lovell", "lovella", "lovelle",
                 "lovetta", "lovie", "lovisa", "lowan", "lowell", "lowen", "lowena", "lowenna", "lowra", "lowri",
                 "lowrie", "loxley", "loyce", "lozhin", "luana", "luann", "luanna", "luanne", "lucaas", "lucah",
                 "lucan", "lucas", "lucca", "luccas", "lucea", "lucee", "luchia", "lucia", "lucian", "luciana",
                 "lucianna", "luciano", "lucie", "lucien", "lucienne", "lucifer", "lucija", "lucila", "lucile",
                 "lucilla", "lucille", "lucina", "lucinda", "lucine", "lucio", "lucis", "lucius", "lucja", "lucjan",
                 "lucky", "lucrecia", "lucretia", "lucrezia", "luctost", "lucus", "lucyanna", "ludie", "ludivina",
                 "ludlow", "ludmila", "ludokrin", "ludovic", "ludovico", "ludwik", "luella", "luenetta", "luetta",
                 "lugaid", "luigi", "luisa", "luise", "luiza", "luize", "lujain", "lukacs", "lukas", "lukasz", "lukne",
                 "lukrecija", "lukus", "lulah", "lullah", "lumax", "lumbar", "lumen", "lumin", "lunasha", "lunetta",
                 "luntha", "lupercus", "luphildern", "lupin", "lupita", "luqmaan", "luqman", "lurlene", "lurline",
                 "luster", "luthe", "luther", "luvenia", "luxanustar", "luxor", "lyall", "lyana", "lyanna", "lycoris",
                 "lycra", "lydia", "lydon", "lylah", "lylia", "lylish", "lylla", "lyman", "lynch", "lyncon", "lynda",
                 "lynden", "lyndi", "lyndia", "lyndon", "lyndsay", "lyndsey", "lynell", "lynelle", "lynessa", "lynetta",
                 "lynette", "lynna", "lynne", "lynnette", "lynnie", "lynsey", "lynwood", "lyric", "lysander",
                 "lysandra", "lysette", "lyssa", "lyvia", "maachal", "maahi", "maahin", "maahir", "maahirah",
                 "maahnoor", "maalik", "maame", "maanav", "maanvi", "maanya", "maaria", "maariah", "maariya",
                 "maariyah", "maarya", "maaya", "mabel", "mabelle", "mable", "mabli", "mabon", "macaulay", "macauley",
                 "macbeaust", "macbeth", "macci", "macduff", "macee", "macenzie", "maceo", "macer", "macey", "macha",
                 "machelle", "macie", "maciej", "maciek", "mackay", "mackela", "mackenzie", "mackie", "mackinley",
                 "macks", "macon", "macsen", "madalena", "madalene", "madalin", "madaline", "madalyn", "madalynn",
                 "madara", "madarlon", "maddalena", "madden", "maddi", "maddie", "maddison", "maddisyn", "maddisynn",
                 "maddox", "maddy", "maddyson", "madeeha", "madelaine", "madeleine", "madelene", "madeline", "madelyn",
                 "madelyne", "madelynn", "mades", "madge", "madhav", "madhi", "madie", "madiha", "madihah", "madilyn",
                 "madilynn", "madina", "madinah", "madis", "madisen", "madison", "madisyn", "madlen", "madlyn",
                 "madmartigan", "madoc", "madonna", "madonnla", "madra", "madric", "madsa", "madse", "madukes",
                 "madyson", "maebh", "maecie", "maegan", "maelie", "maelle", "maelwys", "maelys", "maere", "maeva",
                 "maeve", "mafalda", "mafar", "mafaro", "magali", "magaly", "magamp", "magan", "magar", "magaret",
                 "magda", "magdalen", "magdalena", "magdalene", "magen", "magena", "magenta", "maggie", "magius",
                 "magkain", "maglos", "magnar", "magni", "magnolia", "magnus", "magus", "magveil", "mahad", "mahadev",
                 "mahala", "mahalia", "maham", "mahamed", "mahammed", "mahari", "mahathi", "mahathy", "mahdi",
                 "mahdiya", "mahdiyah", "maheen", "maheera", "mahek", "maher", "mahfuz", "mahibah", "mahid", "mahika",
                 "mahiki", "mahim", "mahima", "mahin", "mahir", "mahira", "mahirah", "mahisha", "mahitha", "mahiya",
                 "mahlia", "mahmood", "mahmoud", "mahmud", "mahmut", "mahnaz", "mahnoor", "mahon", "mahreen", "mahri",
                 "mahrosh", "mahrus", "mahsa", "mahtab", "mahum", "mahveen", "maiah", "maicey", "maici", "maicie",
                 "maida", "maidah", "maider", "maidukes", "maija", "maikl", "maila", "maildun", "maile", "mailie",
                 "mailin", "maimoona", "maimouna", "maimuna", "maina", "maira", "maire", "mairead", "mairi", "mairin",
                 "maisa", "maisah", "maisam", "maise", "maisee", "maisey", "maisha", "maisi", "maisie", "maison",
                 "maisy", "maisyn", "maiten", "maiya", "maiyah", "maiyale", "maize", "maizee", "maizey", "maizie",
                 "maizy", "majed", "majeed", "majid", "majka", "major", "majorie", "majus", "makai", "makani", "makar",
                 "makara", "makayla", "makeda", "makena", "makenna", "makenzie", "makhi", "makhtar", "makinley",
                 "makoto", "maksim", "maksims", "maksym", "maksymilian", "malaak", "malachai", "malachi", "malachy",
                 "malaika", "malaikah", "malak", "malakai", "malakhi", "malaki", "malakie", "malakye", "malala",
                 "malan", "malana", "malander", "malaya", "malayah", "malayeka", "malaysia", "malcolm", "malcom",
                 "malcuma", "maleah", "maleeha", "maleehah", "maleek", "maleeka", "maleekah", "maleeya", "maleha",
                 "malek", "malena", "malfar", "malgorzata", "malhi", "malia", "maliah", "malick", "maliha", "malik",
                 "malika", "malikah", "malikai", "maliki", "malin", "malina", "malinda", "malini", "maliq", "malisa",
                 "malissa", "malistra", "maliya", "maliyah", "malka", "malki", "malky", "malley", "mallie", "mallory",
                 "malloy", "mally", "malorie", "malory", "maluije", "malvika", "malvin", "malvina", "malwina", "malyka",
                 "mamadou", "mamie", "mammie", "mamoudou", "manaal", "manahal", "manahil", "manal", "manan",
                 "manandeep", "manas", "manasa", "manasseh", "manav", "manda", "mandeep", "mandel", "mandi", "mandie",
                 "mandisa", "mandricardo", "mandy", "maneet", "manel", "mangarak", "mango", "manha", "manie", "manien",
                 "maninder", "manish", "manisha", "manjot", "mankiran", "manmeet", "mannat", "manni", "mannix", "manny",
                 "manon", "manpreet", "manpriya", "manraj", "manreet", "manroop", "manseerat", "mansimrat", "mansoor",
                 "mansour", "mansur", "mantas", "mantra", "manual", "manuel", "manuela", "manuella", "manus", "manveer",
                 "manvi", "manvir", "manviraj", "manvydas", "manya", "maple", "maragaret", "maragret", "maraidh",
                 "maraki", "maram", "maran", "maranda", "marcco", "marce", "marcel", "marcela", "marcelene",
                 "marcelina", "marceline", "marcelino", "marcell", "marcella", "marcelle", "marcello", "marcellus",
                 "marcelo", "marcene", "marcey", "marchelle", "marci", "marcia", "marciano", "marcie", "marcin",
                 "marco", "marcos", "marcqus", "marcus", "marcy", "mardder", "mardell", "marderdeen", "mardha",
                 "mardin", "mareberth", "mared", "mareena", "marek", "mareks", "maren", "marena", "margaret",
                 "margareta", "margarete", "margarett", "margaretta", "margarette", "margarida", "margarita",
                 "margarite", "margarito", "margart", "margaux", "marge", "marged", "margene", "margeret", "margert",
                 "margery", "marget", "margherita", "margie", "margit", "margita", "margo", "margolis", "margonn",
                 "margorie", "margot", "margott", "margret", "margrett", "marguerita", "marguerite", "margurite",
                 "margy", "marhta", "maria", "mariah", "mariam", "mariama", "marian", "mariana", "marianela", "mariann",
                 "marianna", "marianne", "mariano", "maribel", "maribeth", "marica", "maricela", "maricruz", "marid",
                 "marie", "marieke", "mariel", "mariela", "mariella", "marielle", "marien", "maries", "marietta",
                 "mariette", "marigold", "marija", "marijus", "marik", "marika", "mariko", "marilee", "marilou",
                 "marilu", "marilyn", "marilynn", "marin", "marina", "marinda", "marine", "marino", "mario", "marioara",
                 "marion", "marios", "maris", "marisa", "marise", "marisela", "marisha", "marisol", "marissa", "marita",
                 "maritza", "marium", "marius", "mariusz", "marivel", "mariya", "mariyah", "mariyam", "marja", "marjan",
                 "marjean", "marjorie", "marjory", "markahn", "markard", "markas", "markdoon", "markel", "marketta",
                 "markfrancis", "markis", "markita", "marklin", "marko", "markos", "marks", "markus", "markuss",
                 "marla", "marlana", "marlay", "marlee", "marleen", "marleigh", "marlen", "marlena", "marlene",
                 "marley", "marli", "marlie", "marlin", "marline", "marlo", "marlon", "marlow", "marlowe", "marlyn",
                 "marlys", "marmund", "marna", "marnee", "marney", "marni", "marnie", "marnin", "marnja", "marny",
                 "marnyn", "marophon", "marquerite", "marques", "marquetta", "marquis", "marquita", "marquitta",
                 "marrlie", "marry", "marsaili", "marsali", "marsel", "marsela", "marsh", "marsha", "marshal",
                 "marshall", "marsidy", "marta", "marte", "martel", "marten", "marth", "martha", "marthienus", "marti",
                 "martim", "martin", "martina", "martine", "martino", "martins", "marton", "marty", "martyn", "martyna",
                 "martynas", "maruf", "marva", "marval", "marvel", "marvella", "marvellous", "marven", "marvin",
                 "marvis", "marwa", "marwaan", "marwah", "marwan", "marwenfyw", "marya", "maryalice", "maryam",
                 "maryama", "maryan", "maryann", "maryanna", "maryanne", "marybelle", "marybeth", "maryella",
                 "maryellen", "maryetta", "maryisa", "maryjane", "maryjo", "marykate", "maryland", "marylee", "marylin",
                 "maryln", "marylou", "marylouise", "marylyn", "marylynn", "maryrose", "marysia", "maryum", "masako",
                 "masen", "mashal", "mashasen", "mashfik", "masie", "masimba", "maskeen", "maslon", "mason", "masooma",
                 "masoud", "masroor", "massimiliano", "massimo", "masson", "masud", "masyn", "matan", "matas", "mataya",
                 "mateen", "matei", "matej", "matel", "mateo", "mateus", "mateusz", "matew", "matha", "mathar", "mathe",
                 "matheo", "matheus", "mathew", "mathias", "mathide", "mathieu", "mathilda", "mathilde", "mathis",
                 "mathr", "matia", "matias", "matilda", "matilde", "matin", "matiss", "matisse", "matrika", "matsu",
                 "mattea", "matteo", "matthew", "matthias", "matthieu", "matthis", "matthäus", "mattia", "mattias",
                 "mattie", "matty", "matus", "matvey", "matyas", "matylda", "maude", "maudie", "maugh", "maugrim",
                 "maura", "maurain", "maureen", "maurice", "mauricio", "maurine", "maurita", "maurizio", "mauro",
                 "maven", "maverick", "mavis", "mawada", "mawaddah", "mawgan", "maxamillion", "maxen", "maxence",
                 "maxfield", "maxie", "maxim", "maxima", "maxime", "maximilian", "maximiliano", "maximilien",
                 "maximillia", "maximillian", "maximillina", "maximillion", "maximina", "maximino", "maximo", "maximos",
                 "maximus", "maxine", "maxmilian", "maxon", "maxton", "maxwel", "maxwell", "maxxy", "maxymilian",
                 "mayaa", "mayaar", "mayah", "mayan", "mayank", "mayar", "maybel", "maybell", "maybelle", "mayce",
                 "maycee", "maycie", "mayda", "mayeda", "mayesha", "mayga", "mayla", "maylee", "mayleigh", "mayme",
                 "maymoona", "maymuna", "maymunah", "maynard", "mayola", "mayowa", "mayra", "mayre", "maysa", "maysam",
                 "maysie", "mayson", "maysoon", "mayssa", "maytal", "mayukh", "mayukha", "mayumi", "mayur", "mayzee",
                 "mayzie", "mazen", "mazhel", "mazie", "mazin", "mcauley", "mccauley", "mcdonnega", "mckai", "mckayla",
                 "mckenna", "mckenzi", "mckenzie", "mckinley", "mcrae", "meabh", "meadcraft", "meader", "meadow",
                 "meagan", "meaghan", "mechel", "mechelle", "medain", "medarin", "medeea", "medel", "medhir", "medin",
                 "medina", "medine", "medsa", "medua", "medwyn", "meegosh", "meekal", "meela", "meena", "meera",
                 "meerab", "meeral", "meesam", "meets", "meeya", "megan", "megelin", "meggan", "meghan", "meghann",
                 "meghna", "megija", "megyn", "mehaan", "mehad", "mehak", "mehande", "mehar", "mehdi", "mehek", "meher",
                 "mehjabeen", "mehjabin", "mehmet", "mehnaz", "mehran", "mehreen", "mehrish", "mehry", "mehtaab",
                 "mehtab", "mehtyl", "mehvish", "mehwish", "meida", "meika", "meila", "meilah", "meilani", "meilech",
                 "meinne", "meira", "meisha", "meiya", "mekhi", "meklit", "melaine", "melani", "melania", "melanie",
                 "melanija", "melantha", "melany", "melathor", "melatus", "melba", "melchior", "melchizedek", "melda",
                 "melek", "melia", "melida", "meliel", "meliha", "melika", "melina", "melinda", "melis", "melisa",
                 "melisande", "melissa", "melissia", "melita", "meliz", "mellamo", "mellie", "mellind", "mellisa",
                 "mellissa", "melman", "melodee", "melodi", "melodie", "melody", "melonie", "melony", "melva", "melvin",
                 "melvina", "melvyn", "melynda", "memla", "memor", "memphis", "menaal", "menachem", "menahil", "mencia",
                 "mendel", "mendy", "menelaus", "mengqi", "menlaus", "menna", "mensa", "mentle", "menus", "meowol",
                 "merab", "meragrand", "meraj", "meral", "mercedes", "mercedez", "mercer", "mercy", "merdon",
                 "meredigawn", "meredith", "meriam", "merick", "merida", "meridan", "merideth", "meridith", "meriel",
                 "meriem", "merilyn", "merin", "merissa", "meriyam", "merkesh", "merle", "merlene", "merlin",
                 "merlinna", "merlon", "merlyn", "merna", "merri", "merrick", "merrie", "merrilee", "merrill", "merrin",
                 "merry", "merryn", "mertie", "merve", "mervin", "mervyn", "meryam", "meryem", "meryl", "merythe",
                 "mesaan", "mesah", "mesake", "mesech", "mesha", "meshach", "mesophan", "mesoton", "messa", "messchoro",
                 "messi", "messiah", "metehan", "metellus", "metin", "metron", "metshanal", "metta", "meurig",
                 "meursault", "meyer", "mhairi", "mhari", "mhill", "mhirren", "mhoram", "miakoda", "miali", "miami",
                 "miattraddi", "miaya", "micael", "micaela", "micah", "micaiah", "micajah", "micha", "michael",
                 "michaela", "michaele", "michaella", "michaelle", "michail", "michal", "michala", "michale",
                 "michalina", "micheal", "micheel", "micheil", "michel", "michelangelo", "michelangl", "michelanglo",
                 "michele", "michelina", "micheline", "michell", "michelle", "michiko", "mickael", "mickal", "mickey",
                 "micki", "mickie", "micky", "middibell", "midiga", "mieke", "miela", "mielo", "miesha", "mieszko",
                 "migdalia", "migle", "mignon", "migorn", "miguel", "miguelina", "mihaela", "mihai", "mihail",
                 "mihailo", "mihika", "mihir", "mihran", "mihrimah", "mikaal", "mikaeel", "mikael", "mikaela", "mikail",
                 "mikali", "mikasi", "mikayeel", "mikayla", "mikaylah", "mikeala", "mikel", "mikey", "mikha", "mikhael",
                 "mikhaela", "mikhail", "mikhil", "mikkel", "mikki", "miklos", "mikolaj", "mikyle", "milad", "milagro",
                 "milagros", "milah", "milan", "milana", "milanas", "milander", "milania", "milannia", "milano",
                 "milda", "mildin", "mildred", "milee", "milen", "milena", "miler", "miles", "mileta", "miley",
                 "milford", "miliana", "milinia", "milisa", "milissa", "milita", "milla", "millan", "millar", "millard",
                 "millee", "millen", "miller", "milley", "milli", "milliani", "millicent", "millie", "milliejane",
                 "millierose", "milly", "milne", "miloh", "milos", "milosz", "milou", "milton", "mimir", "minaal",
                 "minah", "minahal", "minahil", "minal", "minda", "mindi", "mindukes", "mindy", "minen", "minerva",
                 "minga", "minge", "mingo", "mingus", "minha", "minhal", "miniya", "minna", "minnah", "minnie", "minsa",
                 "minsk", "minta", "minuka", "minuli", "minyue", "miphates", "miquel", "mirabel", "mirabella",
                 "mirabelle", "mirac", "miracle", "mirah", "mirain", "miraj", "miral", "miram", "miran", "miranda",
                 "miray", "miraya", "mirayam", "mirebane", "mireille", "mirel", "mirela", "mirella", "miren", "mireya",
                 "mirha", "miriam", "miriama", "mirian", "mirielle", "mirin", "mirith", "miritna", "mirna", "miron",
                 "miroslav", "miroslava", "mirran", "mirren", "mirrin", "mirryn", "mirta", "mirtha", "miruna", "miryam",
                 "mirza", "misael", "misary", "misbah", "mischa", "misek", "misha", "mishaal", "mishal", "mishall",
                 "mishayla", "mishika", "mishka", "miski", "missi", "missie", "missy", "mistbow", "misti", "mistie",
                 "mistio", "mistiss", "mistweave", "misty", "mitar", "mitch", "mitchel", "mitchell", "mitchh",
                 "mithanica", "mitheor", "mithian", "mithra", "mithush", "mitsue", "mitsuko", "mittie", "mitzee",
                 "mitzi", "mitzie", "mitzy", "miyah", "miyanda", "miyla", "miyoko", "miyya", "mizanur", "mljet",
                 "mmesomachi", "mnelisi", "moana", "moanna", "moataz", "moawia", "mobeen", "mobin", "modesireoluwa",
                 "modesta", "modesto", "modou", "modred", "modric", "modru", "modum", "modupe", "moeez", "moeletsi",
                 "moesha", "mogologolo", "mohamad", "mohamed", "mohammad", "mohammed", "mohammod", "mohammud", "mohan",
                 "mohaymin", "mohib", "mohid", "mohit", "mohmed", "mohmmad", "mohmmed", "mohsen", "mohsin", "mohtad",
                 "moira", "moirin", "moiron", "moisa", "moise", "moises", "moishe", "mojolaoluwa", "mokanna", "mokomis",
                 "moksh", "moldovan", "molestorm", "mollee", "molli", "mollie", "molly", "mollye", "molti", "momal",
                 "momin", "momina", "mominah", "momodou", "momolaoluwa", "momos", "monae", "monai", "monas", "moncaire",
                 "moncy", "moneer", "monegomery", "monet", "monga", "mongo", "monica", "monika", "monique", "monisha",
                 "monna", "monnie", "monroe", "monserrate", "monta", "montagu", "montague", "montana", "montanna",
                 "montasir", "monte", "montego", "montezuma", "montgomery", "montserrat", "monty", "moondancer",
                 "moonfriend", "moonshadow", "moort", "moosa", "morag", "moraine", "moranet", "moranielen", "morathi",
                 "moray", "morayo", "morayooluwa", "morcant", "morchan", "mordche", "mordecai", "mordechai", "morela",
                 "morena", "morex", "morga", "morgain", "morgan", "morgana", "morgen", "morgur", "moriah", "moriba",
                 "morie", "morin", "morireoluwa", "moritz", "morley", "morna", "morrigan", "morril", "morris",
                 "morrisa", "morrison", "morrissey", "morsal", "morth", "mortimer", "morton", "morven", "morwenna",
                 "morwynn", "moses", "moshe", "mosiah", "mostafa", "mostyn", "motanmoluwa", "motiejus", "motti",
                 "motty", "mouhamed", "mouloud", "mouna", "mourad", "mousa", "moushe", "moussa", "mowahib", "mowgli",
                 "moxie", "moyann", "moyinoluwa", "moyna", "moyosore", "mozell", "mozella", "mozelle", "mozes",
                 "mpumalanga", "mryddren", "muaad", "muaadh", "muaaz", "muadh", "muawiyah", "mubarak", "mubashir",
                 "mubashirah", "muchuan", "mudaser", "mudasir", "mudassir", "mudon", "mueez", "mufar", "mufaro",
                 "muhamad", "muhamed", "muhammad", "muhammed", "muhammet", "muhammud", "muhannad", "muhaymin", "muheeb",
                 "muhib", "muhmmad", "muhsin", "muizz", "mujahid", "mujarin", "mujtaba", "mukhtar", "mulan", "mulikah",
                 "muliya", "muluin", "mumin", "mumina", "muminah", "mumtahina", "mumtaz", "munachi", "munachimso",
                 "munachiso", "munashe", "mundelin", "muneeb", "muneeba", "munesuishe", "munib", "muniba", "munir",
                 "munira", "munirah", "munro", "munroe", "munstar", "muntaha", "munyaradzi", "muqadas", "muraco",
                 "murad", "muram", "murat", "murdo", "murdoch", "murgle", "muriel", "murine", "murky", "murphy",
                 "murran", "murray", "murren", "murrin", "murron", "murry", "murryn", "mursal", "murtan", "murtaza",
                 "murtle", "musaab", "musab", "musaeus", "musawwir", "muscab", "musfirah", "mushtaq", "muska",
                 "muskaan", "muskan", "musky", "muslim", "mussa", "mustafa", "mustafaa", "mustafah", "mustapha",
                 "mustaqeem", "mustaqim", "mustle", "musty", "mutasim", "mutia", "mutle", "muzainah", "muzamil",
                 "muzammil", "muznah", "muzzammil", "myanna", "myesha", "myfanwy", "myiah", "myiesha", "mykel", "mylah",
                 "mylan", "mylee", "myleene", "myleigh", "mylene", "myles", "myley", "mylie", "myong", "myonra",
                 "myrah", "myrcides", "myrddin", "myriam", "myrle", "myrna", "myron", "myrshad", "myrta", "myrtice",
                 "myrtie", "myrtis", "myrtle", "mysha", "mythik", "mythil", "myung", "myvar", "naail", "naama", "naana",
                 "nabaa", "nabeeha", "nabeel", "nabeela", "nabeelah", "nabiha", "nabihah", "nabil", "nabila", "nabilah",
                 "nacer", "nachaloa", "nachman", "nacle", "nadal", "nadav", "nadeem", "nadeer", "nadene", "nader",
                 "nadezhda", "nadia", "nadie", "nadine", "nadir", "nadira", "nadiya", "nadya", "naeem", "naeema",
                 "naeemah", "naema", "naevia", "nafees", "nafeesa", "nafisa", "nafisah", "nafrat", "naftali", "naftoli",
                 "naftuli", "nagic", "naglis", "nahal", "naheem", "nahia", "nahid", "nahla", "nahom", "nahum", "naida",
                 "naila", "nailah", "naima", "naimah", "naimh", "naina", "nainika", "naira", "nairi", "nairn", "nairne",
                 "naiser", "naisha", "naiya", "najah", "najam", "najib", "najla", "najlaa", "najma", "najwa", "nakesha",
                 "nakia", "nakisha", "nakita", "nakkarra", "naksh", "nalan", "nalani", "naledi", "nalfar", "naman",
                 "namiah", "namid", "namir", "namira", "namirah", "namish", "namorn", "namra", "namrata", "nancee",
                 "nancey", "nanci", "nancie", "nancy", "nandi", "nandini", "nandita", "nanette", "nanna", "nannette",
                 "nannie", "nannor", "nansi", "naoki", "naolin", "naoll", "naoma", "naomi", "naomie", "napassara",
                 "naphates", "napoleon", "napua", "naqeebah", "narain", "narayan", "narcis", "narcisa", "narcissa",
                 "narcisse", "nareen", "naren", "narges", "naria", "nariah", "nariko", "narin", "narisa", "nariyah",
                 "narjis", "narla", "narmin", "narok", "narthlis", "naryan", "nascha", "naseehah", "naseem", "naser",
                 "nasha", "nashwan", "nasiha", "nasim", "nasir", "nasnan", "nasra", "nasreen", "nasri", "nasrin",
                 "nasser", "nassic", "nassim", "natacha", "natalee", "natali", "natalia", "natalie", "nataliya",
                 "nataly", "natalya", "natalyia", "natan", "natanael", "natania", "nataniel", "natanya", "natare",
                 "natas", "natasha", "natashia", "natasza", "nataya", "natazha", "natesa", "nathaira", "nathalia",
                 "nathalie", "nathaly", "nathan", "nathanael", "nathaneal", "nathania", "nathanial", "nathaniel",
                 "nathen", "nathnael", "natisha", "natividad", "natko", "natnael", "natori", "natosha", "natsu",
                 "natsumi", "nature", "nauman", "naureen", "nausheen", "navaeh", "navami", "navanah", "navayah",
                 "naveed", "naveen", "navid", "navin", "navjot", "navleen", "navneet", "navpreet", "navraj", "navroop",
                 "navya", "nawaal", "nawaf", "nawal", "nawar", "nawaz", "nawel", "nawfal", "nawwaf", "nayab", "nayah",
                 "nayan", "nayana", "nayara", "nayati", "nayeli", "nayer", "nayla", "naylah", "naylor", "nayomi",
                 "nayra", "naysa", "nayte", "naythan", "nazia", "nazifa", "nazim", "nazira", "nazish", "nazli",
                 "nazmin", "nealon", "neavah", "neave", "nebuchadnezzar", "nebula", "necari", "nechama", "necia",
                 "necole", "necur", "nedas", "nedra", "neela", "neelam", "neely", "neema", "neerav", "neeryaana",
                 "neeryug", "neeson", "neeti", "neeva", "neeve", "neevin", "nefarus", "nefeli", "negin", "nehaan",
                 "nehal", "nehan", "nehemiah", "nehir", "neida", "neidas", "neila", "neilas", "neill", "neirin",
                 "neisha", "neitas", "neitonas", "neiva", "neive", "neivel", "nelda", "nelenna", "nelia", "nelida",
                 "nella", "nelle", "nelli", "nellicy", "nellie", "nellija", "nelly", "nelson", "neneh", "nenet",
                 "nenita", "neola", "neoma", "neomi", "neona", "neowyld", "nephele", "neral", "nerea", "nereida",
                 "nereus", "neria", "neriah", "nerile", "nerina", "nerine", "nerissa", "nerita", "nerth", "nerthus",
                 "nerys", "nesbit", "nesrin", "nessa", "nessamay", "nessan", "nesta", "nestle", "nestor", "netanel",
                 "netera", "netherman", "nette", "nettie", "nettina", "netzigon", "nevaan", "nevada", "nevaeh",
                 "nevaeha", "nevan", "nevard", "nevarious", "nevaya", "neveah", "neveyah", "nevie", "neville", "nevin",
                 "newton", "neymar", "neysa", "nezek", "ngozi", "ngozichukwu", "nguyet", "niabi", "niall", "niamh",
                 "niara", "nibal", "niccolo", "nichelle", "nichol", "nichola", "nicholas", "nichole", "nicholle",
                 "nicki", "nickie", "nickolas", "nickole", "nicky", "nicodem", "nicodemus", "nicol", "nicola",
                 "nicolai", "nicolas", "nicolasa", "nicole", "nicoleta", "nicoletta", "nicolette", "nicolle", "nicolo",
                 "nidal", "nidale", "nidhi", "nidia", "nieema", "niefred", "niesha", "nievah", "nieve", "nieves",
                 "nigel", "nigella", "night", "nightstalker", "nihaal", "nihad", "nihal", "niharika", "nikan", "nikas",
                 "nikhil", "nikia", "nikil", "nikita", "nikitha", "nikki", "nikkita", "nikko", "niklas", "niklaus",
                 "nikodem", "nikol", "nikola", "nikolai", "nikolaj", "nikolaos", "nikolas", "nikolay", "nikole",
                 "nikoletta", "nikoli", "nikpal", "nikrolin", "niktohal", "nilah", "nilay", "nilda", "nilesh", "nilnot",
                 "nilofar", "nilsa", "nilsu", "nilyn", "nimah", "nimaminanon", "nimbara", "nimco", "nimeesha",
                 "nimisha", "nimlad", "nimra", "nimrah", "nimrat", "nimrit", "nimrita", "nimrod", "nimue", "ninfa",
                 "niome", "niomi", "niraj", "niran", "niraya", "nirbhay", "nirvair", "nirvan", "nirvana", "nirvei",
                 "nisha", "nishaan", "nishan", "nishi", "nishika", "nishka", "nishtha", "nismen", "nissa", "nissi",
                 "nitara", "nitesh", "nitsa", "nitya", "nitza", "nivaan", "nivaya", "nived", "niven", "nixie", "nixon",
                 "niyah", "niyam", "niyati", "niyaz", "nizanna", "nizra", "njoba", "nnanyelugo", "nnenna", "nneoma",
                 "nobath", "noble", "nobuko", "nockmaar", "nodebechukwu", "nodin", "noelani", "noelia", "noella",
                 "noelle", "noemi", "noemie", "noford", "nogah", "nogen", "nohemi", "nojus", "nokomis", "nokutenda",
                 "nolah", "nolan", "noleta", "noman", "nomlanga", "noname", "noomi", "noora", "noorah", "nooryasin",
                 "nophalis", "norah", "norbert", "norberto", "norberts", "nordine", "nordri", "noreen", "norene",
                 "noria", "norie", "noriko", "norina", "norine", "norma", "norman", "normand", "normunds", "norris",
                 "norse", "north", "norvi", "nosson", "nothar", "notlbrob", "notty", "noura", "noureen", "noushin",
                 "novah", "novak", "novella", "novia", "nowatah", "noyan", "nuala", "nuasair", "nubaid", "nubia",
                 "nuckle", "nucky", "nuhaa", "nulaith", "numan", "numbers", "nuncio", "nunoo", "nuraz", "nuria",
                 "nuriyah", "nurjenna", "nusaiba", "nusaibah", "nusaiybah", "nusayba", "nusaybah", "nusrat", "nuthor",
                 "nutsy", "nuuruddiin", "nuwolf", "nuzhat", "nyall", "nyanya", "nyasha", "nyawira", "nydale", "nydia",
                 "nylah", "nymira", "nyoka", "nyomi", "nyota", "nyrah", "nyree", "nyrlol", "nyssa", "nysty", "nythil",
                 "oakes", "oaklan", "oaklee", "oakleigh", "oakley", "oaklie", "oaliyah", "oasis", "obadiah", "obafemi",
                 "obaid", "obaloluwa", "obdulia", "obehi", "oberon", "obert", "obinna", "ocarin", "occelot", "occhi",
                 "ocean", "oceana", "oceane", "oceanna", "ochala", "octavia", "octavian", "octavio", "octavius",
                 "odalis", "odalomen", "odalys", "odana", "odaren", "odeir", "odele", "odelia", "odell", "odelya",
                 "odessa", "odetta", "odette", "odhran", "odilia", "odina", "odoacer", "odona", "odosamamwen",
                 "odunayo", "odyaseus", "odyss", "odysseus", "oelita", "ofelia", "ofeva", "ofira", "ofton", "ogardus",
                 "ogechi", "oghenebrume", "oghenefejiro", "oghenekaro", "ogheneruno", "oghenetejiri", "ogien", "ogrus",
                 "ogyvan", "ohemaa", "ohene", "oheneba", "ohethlic", "ohran", "oilli", "oisin", "okalani", "okalik",
                 "okapi", "okike", "oktawiusz", "oktay", "olachi", "oladapo", "oladayo", "oladimeji", "oladipupo",
                 "olamide", "olamiposi", "olanna", "olanrewaju", "olaoluwa", "olath", "olaxtin", "olayemi", "olayinka",
                 "olene", "olerato", "olesia", "oleta", "olevia", "olgen", "olgierd", "oliana", "oliat", "olidi",
                 "olimpia", "olinda", "olissa", "oliva", "olive", "olivea", "oliver", "olivers", "olivia", "oliviah",
                 "oliviajo", "olivier", "oliviero", "olivija", "oliwer", "oliwia", "oliwier", "ollie", "olliea",
                 "olliver", "ololade", "olomorn", "olotin", "olsen", "oluchi", "oluebubechukwu", "olufemi",
                 "olufeyitamilore", "olumide", "olurotimi", "olusegun", "oluwabukunmi", "oluwadabira", "oluwadamilare",
                 "oluwadamilola", "oluwadara", "oluwadarasimi", "oluwademilade", "oluwadurotimi", "oluwafemi",
                 "oluwaferanmi", "oluwafeyikemi", "oluwafifehanmi", "oluwafikayomi", "oluwafikunayomi", "oluwafikunmi",
                 "oluwafimidara", "oluwafolajimi", "oluwafolakunmi", "oluwafolayemi", "oluwafunke", "oluwafuntan",
                 "oluwajomiloju", "oluwajuwon", "oluwakemi", "oluwamidara", "oluwamotemi", "oluwamuyiwa", "oluwanifemi",
                 "oluwapelumi", "oluwasemiloore", "oluwasemilore", "oluwaseun", "oluwaseyi", "oluwatamilore",
                 "oluwataramisore", "oluwateniayo", "oluwateniola", "oluwatimilehin", "oluwatimileyin", "oluwatishe",
                 "oluwatobi", "oluwatobiloba", "oluwatofunmi", "oluwatomi", "oluwatomisin", "oluwatomiwa", "oluwatoni",
                 "oluwatooni", "oluwatosin", "oluwatoyosi", "oluwatumininu", "olwen", "olympia", "omaidh", "omaima",
                 "omair", "omaniron", "omari", "omarion", "omarn", "omega", "omera", "omganesh", "omobolaji", "omolara",
                 "omotara", "omotola", "omournil", "omsell", "onathe", "onawa", "onbrawst", "ondine", "ondola",
                 "ondrea", "ondrej", "oneida", "oneli", "onella", "onita", "onkar", "onnan", "onrine", "onulion",
                 "onyedikachi", "onyinyechi", "onyinyechukwu", "oolndiana", "oonagh", "oorlagh", "ophelia", "ophelio",
                 "ophira", "ophra", "opimius", "oprah", "opshun", "optima", "orabias", "oralee", "oralia", "oranius",
                 "orard", "orbal", "orbin", "ordell", "ordelle", "ordred", "orenda", "oreoluwa", "orest", "orestas",
                 "orestes", "orestis", "oretha", "orgalan", "orgen", "orges", "orgorgan", "orhan", "oriah", "oriana",
                 "orianna", "oriel", "orien", "orinda", "oringo", "orion", "orken", "orkurga", "orlagh", "orlah",
                 "orlaigh", "orlaith", "orlando", "orlenda", "orlina", "orlla", "orloft", "ormanda", "ormay", "ormiss",
                 "ornela", "ornella", "ornice", "orpha", "orpheus", "orran", "orren", "orrhaen", "orrick", "orrin",
                 "orryn", "orsay", "orsen", "orson", "ortho", "orton", "orval", "orville", "orwyne", "osama",
                 "osamudiamen", "osasere", "osato", "osazeme", "osborn", "osbourne", "oscar", "osemen", "osgar",
                 "oshawal", "oshian", "osian", "osias", "osiasse", "osiris", "oskar", "oskaras", "oskars", "osman",
                 "osondrea", "ospar", "osprey", "osric", "ossian", "ossie", "osten", "ostin", "ostyn", "osvaldo",
                 "oswald", "oswaldo", "oswin", "otaiy", "otelia", "othelen", "othkar", "othman", "othniel", "othran",
                 "otilia", "otlen", "otsuka", "ottilia", "ottilie", "ottobien", "ottoline", "otylia", "ouida",
                 "ousainou", "ousman", "ousmane", "oviya", "oviyan", "owain", "owais", "owura", "oxbaren", "oyindamola",
                 "oyindasola", "oyinkansola", "ozell", "ozella", "ozias", "ozioma", "ozorak", "ozzie", "pablo", "pacey",
                 "padan", "paddy", "padishah", "padraic", "padraig", "padrias", "padricus", "padys", "paeld", "pagan",
                 "pagetti", "paige", "paighton", "paislee", "paisleigh", "paisley", "paiton", "paityn", "pakapon",
                 "palak", "palani", "palden", "palesa", "palid", "palila", "pallantides", "pallaton", "palma", "palmer",
                 "palmira", "palnma", "paloadrin", "paloma", "palomides", "palti", "palus", "palwasha", "pamala",
                 "pamela", "pamelia", "pamella", "pamila", "pamula", "panagiotis", "panashe", "panav", "panayiotis",
                 "pancho", "pandora", "panna", "pansy", "paola", "paolo", "papina", "papur", "parale", "param",
                 "paramveer", "paramvir", "paras", "parch", "pardor", "parele", "parellus", "paria", "paride",
                 "paridhi", "parin", "parina", "paris", "parisa", "parishay", "parker", "parkor", "parla", "parlan",
                 "parmeet", "parmis", "parmveer", "parneet", "parnika", "parsa", "parse", "parser", "parson", "parth",
                 "parthenia", "parthinia", "particia", "pascal", "pascent", "paschar", "pascheine", "pasha", "pasquale",
                 "pasty", "patch", "pathcines", "patience", "patnas", "patnos", "paton", "patrel", "patria", "patrica",
                 "patrice", "patricia", "patricija", "patrick", "patrik", "patriks", "patrina", "patris", "patrycja",
                 "patryk", "patsy", "patter", "patti", "pattie", "pattin", "patty", "patula", "paula", "paulene",
                 "pauletta", "paulette", "paulie", "paulina", "pauline", "paulita", "paulius", "paulo", "pavan",
                 "pavel", "pavleen", "pavlina", "pavlos", "pavni", "pavol", "pavraj", "pawel", "paxton", "payal",
                 "payson", "payton", "peace", "peaches", "pearce", "pearl", "pearle", "pearlene", "pearlie", "pearline",
                 "pearly", "pearse", "peash", "pebbles", "pedro", "peener", "peeple", "peetrie", "pefergg", "peggie",
                 "peggy", "peighton", "peigi", "peirce", "peitar", "pelagia", "pelin", "pellar", "pelles", "pelops",
                 "pelphides", "pelthros", "pemba", "penda", "pendar", "pender", "pendragon", "pendus", "penelope",
                 "pengarth", "peniel", "penina", "penney", "penni", "pennie", "penny", "penrose", "pensif", "peony",
                 "pepin", "pepita", "pepper", "pepsi", "peral", "peramee", "percival", "percy", "perder", "perdita",
                 "perdy", "peredon", "peregrin", "peregrine", "pereta", "pereth", "perez", "perith", "perla", "perle",
                 "perol", "peronn", "perran", "perri", "perrie", "perrin", "perry", "persephone", "perseus", "persia",
                 "perta", "perth", "petal", "petar", "peter", "peterjames", "pethcines", "pethros", "pethsine",
                 "petita", "petra", "petrad", "petrina", "petroman", "petronila", "petru", "petter", "petula",
                 "petunia", "peyton", "phaedra", "phairdon", "phames", "phara", "phardir", "pharrell", "pharysene",
                 "phebe", "phebian", "pheblon", "phelan", "phemedes", "phemia", "phendin", "phenix", "pheobe",
                 "pheobie", "pheonix", "phera", "phexides", "phialia", "phife", "philadona", "philana", "philantha",
                 "philena", "philip", "philipp", "philippa", "philippe", "phillip", "phillipa", "phillipe", "phillippa",
                 "phillis", "philo", "philomena", "philth", "phineas", "phinehas", "phira", "phlith", "phlunk",
                 "phoebe", "phoebie", "phoenix", "phong", "phornel", "phung", "phuong", "phylicia", "phylis", "phyliss",
                 "phyllis", "phyllon", "picard", "picceppa", "picon", "pictal", "picti", "picumar", "pidla", "piedad",
                 "pierce", "pierre", "piers", "pierson", "pieter", "pietra", "pietro", "pietten", "pigly", "pijus",
                 "pilar", "pildoor", "pildor", "pilis", "pillan", "pilon", "pinchos", "pinkie", "pinky", "piotr",
                 "pious", "piper", "pippa", "pippin", "piran", "pirouetta", "pirrelli", "pirro", "pitchblend",
                 "pitchblende", "piter", "pixdale", "pixey", "pixie", "placido", "plaiglos", "plamen", "plamena",
                 "plato", "platon", "pnaya", "pochos", "pogenthoni", "polina", "pollux", "polly", "pollyanna",
                 "polonius", "polor", "polson", "polyxeni", "ponile", "ponith", "pooja", "pooky", "poppi", "poppie",
                 "poppy", "poran", "porcha", "porchia", "porchos", "porfirio", "porib", "porix", "porscha", "porsche",
                 "porsha", "portan", "porter", "portia", "portolis", "poscidion", "posey", "posie", "postolis",
                 "potter", "poyna", "poyraz", "prabal", "prabh", "prabhdeep", "prabhjot", "prabhleen", "prabhnoor",
                 "prabhreet", "prabhroop", "prachi", "pradnia", "prageur", "prageus", "praise", "prajwal", "prakash",
                 "pranav", "pranavi", "pranay", "pranaya", "praneel", "pranesh", "pranitha", "pranshi", "prapti",
                 "prataxis", "pratham", "pratik", "pratyush", "praxiteles", "prayad", "prayan", "precious", "preet",
                 "preeti", "preety", "preeya", "prekake", "prescott", "presley", "preslie", "prestina", "preston",
                 "prestyn", "prewitt", "preya", "pricilla", "pridgit", "prielle", "primo", "primrose", "prince",
                 "princess", "princeton", "princy", "prinice", "prisane", "priscila", "priscilla", "prisha", "pristess",
                 "pritha", "prithvi", "pritika", "priya", "priyah", "priyal", "priyan", "priyana", "priyanka",
                 "priyanshi", "priyasha", "priyen", "promise", "pronos", "prosper", "prothal", "prothalon",
                 "providencia", "proxar", "prudence", "prunella", "prunt", "prush", "pryderi", "prysala", "prytani",
                 "przemyslaw", "psyche", "ptolemy", "ptosphes", "pulsur", "puneet", "punit", "purdey", "purity",
                 "purple", "puthor", "pwyll", "pyder", "pyper", "pythagoras", "pythe", "pytrigon", "qadir", "qaiser",
                 "qaiyum", "qamar", "qasim", "qassim", "qaswa", "qatar", "qaylah", "qeisan", "qeylargo", "qezel",
                 "qiana", "qidan", "qirat", "qiwen", "qiyana", "quaan", "quadran", "quaid", "quana", "quanan", "quang",
                 "quarcoo", "quasee", "queen", "queenie", "quennell", "quentin", "quernister", "quezo", "quiad",
                 "quiana", "quickens", "quickfoot", "quickhand", "quidia", "quihanna", "quike", "quillan", "quincy",
                 "quine", "quinlan", "quinn", "quinne", "quintilius", "quintin", "quinton", "quintrell", "quintus",
                 "quirin", "quirino", "quirrel", "quiss", "qunlac", "quolamin", "quorra", "qupar", "qurak",
                 "quratulain", "quyen", "qwaylar", "qwine", "qysan", "raabia", "raafe", "raahil", "raahill", "raahim",
                 "raajan", "raameen", "rabia", "rabiya", "racer", "rachael", "rachal", "racheal", "rachel", "rachele",
                 "rachell", "rachelle", "racquel", "radag", "radcliff", "radek", "radella", "radha", "radhika",
                 "radhiya", "radin", "radiya", "radiyah", "radley", "radman", "radoslav", "radoslaw", "radridge",
                 "radvin", "radwa", "raeann", "raees", "raeesa", "raeesah", "raegan", "raelene", "raelyn", "raelynn",
                 "raena", "raeya", "rafael", "rafaela", "rafaella", "rafah", "rafaiel", "rafal", "rafan", "rafay",
                 "rafee", "rafeef", "raffa", "raffael", "raffaele", "raffaella", "rafferty", "raffi", "raffy", "rafia",
                 "rafiah", "rafif", "rafik", "rafiq", "ragar", "rager", "raghad", "raghav", "raghnall", "ragnar",
                 "ragnarson", "ragon", "ragons", "raguel", "rahaf", "rahand", "rahasli", "rahat", "raheeb", "raheel",
                 "raheem", "raheema", "raheemah", "rahela", "rahib", "rahil", "rahim", "rahima", "rahma", "rahmah",
                 "rahman", "rahul", "raida", "raiden", "raidon", "raiens", "raife", "raiha", "raihaan", "raihan",
                 "raihana", "railay", "raima", "raimi", "raina", "raine", "rainer", "rainey", "rainie", "rainier",
                 "raisa", "raisha", "raith", "raiya", "raiyaan", "raiyah", "raiyan", "raiyna", "raizy", "rajab",
                 "rajan", "rajdeep", "rajesh", "rajveer", "rajvir", "rajwinder", "rakan", "rakash", "rakeb", "rakeem",
                 "rakib", "ralegeal", "raleigh", "ralfi", "ralfs", "ralibe", "ralitza", "ralje", "ralph", "ralphie",
                 "ralphy", "raluca", "raluchi", "raman", "ramanpreet", "ramari", "ramatoulie", "ramatulai", "rameel",
                 "rameen", "rameesha", "rameez", "rameeza", "ramen", "ramesses", "ramia", "ramin", "ramina", "raminta",
                 "ramir", "ramirez", "ramiro", "ramis", "ramisa", "ramla", "ramnik", "ramon", "ramona", "ramone",
                 "ramonita", "ramous", "ramrod", "ramsay", "ramses", "ramsey", "ramsha", "ramyar", "ramzi", "ramzy",
                 "ranabas", "ranae", "ranald", "ranbir", "randa", "randal", "randall", "randar", "randee", "randell",
                 "randi", "randolf", "randolph", "random", "randy", "ranee", "raneem", "ranell", "ranem", "ranger",
                 "rangsirit", "rania", "raniya", "raniyah", "rannoch", "ranon", "ransisc", "ransky", "ransom", "ransus",
                 "ranulph", "ranveer", "ranvir", "ranxi", "ranya", "raoul", "raphaeel", "raphael", "raphaela",
                 "raphaella", "raqeeb", "raqib", "raquel", "rares", "rarson", "raseel", "rasha", "rashad", "rashan",
                 "rashane", "rashed", "rasheed", "rasheeda", "rashid", "rashida", "rasia", "rasmus", "rason",
                 "rasputin", "rassigatou", "rastolnik", "rateel", "rathia", "rathisa", "raunak", "rauridh", "raveena",
                 "raven", "ravenkin", "ravenor", "raver", "ravisher", "raviv", "ravleen", "ravneet", "ravyn", "ravza",
                 "rawan", "rawand", "rawen", "rayaan", "rayah", "rayan", "rayana", "rayane", "rayann", "rayanne",
                 "rayden", "rayees", "rayen", "rayford", "rayhaan", "rayhan", "rayhana", "raylan", "raylene", "raymon",
                 "raymond", "raymonde", "raymundo", "rayna", "rayne", "rayon", "raysdan", "rayssa", "rayth", "rayya",
                 "rayyaan", "rayyan", "razan", "razia", "raziel", "razvan", "razzia", "razzo", "reace", "reagan",
                 "reagen", "reanna", "reanne", "reansh", "reaper", "reatha", "reave", "reaver", "rebbeca", "rebbecca",
                 "rebeca", "rebecca", "rebeccah", "rebecka", "rebeka", "rebekah", "rebekka", "rebel", "recom", "recoun",
                 "redell", "redford", "redknob", "redley", "redmond", "redthorn", "redwine", "redynvar", "reean",
                 "reece", "reede", "reegan", "reeha", "reeham", "reehan", "reema", "reemas", "reena", "reenie", "reese",
                 "reeva", "reeve", "reeves", "reevur", "reeya", "reeyan", "refael", "refugia", "refugio", "regan",
                 "regena", "regenia", "reggian", "reggie", "regin", "regina", "reginald", "regine", "reginia", "regnar",
                 "rehaan", "reham", "rehan", "rehana", "rehhaile", "rehma", "rehmat", "rehoboth", "reian", "reigan",
                 "reiko", "reiley", "reilly", "reina", "reinaldo", "reinas", "reinis", "reisel", "reisoun", "reiss",
                 "reisy", "reita", "rejoice", "rejus", "rekai", "rekarah", "rekesh", "relkinthrin", "relos", "remarni",
                 "remas", "rematus", "remaya", "rembas", "remco", "remedios", "remedy", "remel", "remell", "remiah",
                 "remie", "remiel", "remington", "remmi", "remona", "remus", "renad", "renae", "renaeyah", "renai",
                 "renaiya", "renaldo", "renas", "renata", "renate", "renato", "renay", "renaya", "renayah", "renaye",
                 "renda", "renea", "renee", "renell", "renelle", "renesmae", "renesmay", "renesme", "renesmee",
                 "renetta", "reneya", "renita", "reniyah", "renna", "rennae", "rennie", "renny", "renshaw", "rentham",
                 "renzette", "renzo", "reona", "resboron", "reshma", "reskind", "ressa", "ressie", "retaal", "retaj",
                 "retal", "retha", "rethik", "retta", "reuban", "reuben", "reubyn", "reuel", "rever", "rexhep", "rexor",
                 "reyaan", "reyaansh", "reyah", "reyan", "reyansh", "reyes", "reyhan", "reyhana", "reylan", "reyna",
                 "reynalda", "reynaldo", "reynar", "reynard", "reyon", "reyss", "reyya", "rezija", "rhain", "rhaya",
                 "rheba", "rheia", "rheigha", "rhema", "rhett", "rheuben", "rheya", "rhian", "rhiann", "rhianna",
                 "rhiannan", "rhianne", "rhiannon", "rhianwen", "rhiara", "rhiley", "rhion", "rhithik", "rhithin",
                 "rhiya", "rhoan", "rhoda", "rhodes", "rhodri", "rhona", "rhonan", "rhonda", "rhonwyn", "rhory",
                 "rhoson", "rhoswen", "rhowyn", "rhuairi", "rhuari", "rhuaridh", "rhudi", "rhudy", "rhuna", "rhura",
                 "rhuri", "rhuriadh", "rhyan", "rhyanon", "rhydian", "rhyka", "rhylee", "rhyley", "rhyse", "rhysling",
                 "rhyss", "rhythm", "riaan", "riamon", "riana", "riandur", "rianna", "rianne", "riatha", "ricarda",
                 "ricardo", "ricards", "riccardo", "ricci", "ricco", "richa", "richard", "richelle", "riches", "richie",
                 "richmond", "rickey", "rickhir", "ricki", "rickie", "rickward", "ricky", "ridah", "riddhi", "rider",
                 "ridhaan", "ridham", "ridhawn", "ridhi", "ridhima", "ridhwan", "ridley", "ridwaan", "ridwan", "rielle",
                 "rielly", "riely", "rifat", "rifkind", "rigby", "riger", "righe", "rigoberto", "rigol", "riham",
                 "rihan", "rihana", "rihann", "rihanna", "rihanne", "rihards", "rijja", "rikar", "riker", "rikki",
                 "rikkitikkitavi", "rikku", "rilee", "rileigh", "riley", "rilia", "rille", "rimona", "rinad", "rinah",
                 "rinalds", "rines", "ringwood", "rinim", "rinnes", "riona", "riordan", "ripentide", "ripley", "risha",
                 "rishaan", "rishabh", "rishan", "rishay", "rishi", "rismak", "ritaj", "ritchie", "riter", "ritesh",
                 "rithika", "rithvik", "ritic", "ritika", "ritisha", "ritvik", "rivaan", "rivan", "rivatha", "riven",
                 "river", "riverfield", "rivers", "riverwind", "rivex", "rivka", "rivkah", "rivky", "riyaan", "riyad",
                 "riyadh", "riyah", "riyan", "riyana", "riyanna", "riyansh", "riyaz", "riyon", "rizwan", "rizwana",
                 "roairi", "roanne", "roary", "robag", "robbi", "robbie", "robbin", "robby", "robbyn", "robeel",
                 "robel", "robena", "robert", "roberta", "roberto", "roberts", "robin", "robinson", "robson", "robyn",
                 "rocco", "rochel", "rochell", "rochelle", "rocio", "rocket", "rocko", "rocky", "rocner", "rodas",
                 "roddy", "roden", "roderick", "roderik", "rodger", "rodin", "rodina", "rodney", "rodolfo", "rodrick",
                 "rodrigo", "rogan", "rogeir", "rogelio", "rogen", "roger", "rogis", "rogist", "rogoth", "rogue",
                 "rogur", "rogus", "rohaan", "rohail", "rohan", "rohanna", "rohannah", "rohat", "rohen", "rohin",
                 "rohit", "rohith", "rohma", "rohun", "roibin", "roisin", "rojin", "rojus", "rokas", "roker", "roksana",
                 "roland", "rolanda", "rolande", "rolando", "rolfur", "rolland", "rolon", "romaan", "romain", "romaine",
                 "romaio", "romaisa", "roman", "romana", "romani", "romanie", "romano", "romany", "romar", "romario",
                 "rombonolw", "romee", "romeesa", "romelia", "romell", "romeo", "romero", "romessa", "romey", "romie",
                 "romilly", "romily", "romina", "romir", "rommel", "romney", "romona", "romulus", "ronak", "ronald",
                 "ronaldo", "ronalie", "ronan", "ronat", "ronav", "ronda", "ronel", "ronetan", "ronica", "ronika",
                 "ronin", "ronit", "ronja", "ronna", "ronni", "ronnie", "ronny", "ronson", "ronya", "rooka", "rooney",
                 "roosevelt", "rophan", "roque", "roran", "rorey", "rorie", "rosabel", "rosabella", "rosabelle",
                 "rosalba", "rosalea", "rosalee", "rosaleigh", "rosalia", "rosalie", "rosalina", "rosalind",
                 "rosalinda", "rosaline", "rosalva", "rosalyn", "rosalynn", "rosamaria", "rosamond", "rosamund",
                 "rosamunde", "rosana", "rosandra", "rosann", "rosanna", "rosanne", "rosaria", "rosario", "rosaura",
                 "rosco", "roscoe", "rosealea", "rosealie", "roseann", "roseanna", "roseanne", "roseate", "roselai",
                 "roselee", "roselia", "roseline", "rosella", "roselle", "roselyn", "rosemarie", "rosemary", "rosemude",
                 "rosena", "rosenda", "rosendo", "rosetta", "rosette", "rosey", "rosha", "roshaan", "roshan", "roshni",
                 "rosia", "rosie", "rosieleigh", "rosina", "rosindo", "rosine", "rosio", "rosita", "roslyn", "rosobal",
                 "rossa", "rossak", "rossana", "rossi", "rossie", "roster", "rostislav", "rothrock", "rotner", "rowan",
                 "rowdy", "rowen", "rowena", "roxana", "roxane", "roxann", "roxanna", "roxanne", "roxie", "roxymarie",
                 "royal", "royce", "royston", "rozalia", "rozan", "rozanna", "rozanne", "rozella", "rozerin", "rozlynn",
                 "rsamen", "ruach", "ruahan", "ruairi", "ruairidh", "ruamaryn", "ruaraidh", "ruard", "ruari", "ruaridh",
                 "ruathy", "ruatomin", "rubab", "ruban", "rubee", "ruben", "rubens", "rubey", "rubie", "rubii", "rubin",
                 "rubina", "rubye", "rubylee", "rubyn", "ruchi", "ruchlight", "rudaigh", "rudeena", "rudey", "rudie",
                 "rudolf", "rudolph", "rudra", "rudransh", "rueben", "ruedi", "ruein", "rufaro", "rufina", "rufus",
                 "ruger", "ruggiero", "rugile", "ruhaan", "ruhama", "ruhan", "ruhani", "ruhma", "ruien",
                 "ruinar", "ruiqi", "rukaiya", "rukaya", "rukia", "rulrindale", "rumaisa", "rumaisah", "rumaysa",
                 "rumaysaa", "rumaysah", "rumer", "rumeysa", "runnik", "rupen", "rupert", "rupprecht", "ruqaiya",
                 "ruqaiyyah", "ruqaya", "ruqayah", "ruqayya", "ruqayyah", "ruqiya", "ruqiyah", "ruqqayah", "rusch",
                 "rushil", "rushlight", "ruslan", "rusne", "russel", "russell", "rustah", "rustam", "rusti", "rustion",
                 "rustle", "rusty", "rutabega", "rutha", "ruthann", "ruthanne", "ruthe", "ruthie", "ruthir", "ruthven",
                 "ruthvi", "rutilus", "rutvi", "ruvarashe", "ruvimbo", "ruvius", "ruwaida", "ruwan", "ruwayda",
                 "ruweyda", "ruzgar", "ryaan", "ryann", "ryanne", "rydan", "rydel", "ryden", "ryder", "ryell", "ryfar",
                 "ryiah", "ryker", "rylan", "ryland", "rylea", "rylee", "ryleigh", "ryley", "rylie", "rylla", "ryodan",
                 "ryonie", "rysdan", "ryszard", "rythen", "rythern", "saachi", "saada", "saadia", "saafir", "saahil",
                 "saahir", "saaim", "saalih", "saaliha", "saanvi", "saanvika", "saara", "saarah", "saarim", "saatvik",
                 "saavan", "saaya", "sabah", "sabal", "sabeeh", "sabeeka", "sabeen", "sabella", "saben", "saberg",
                 "sabia", "sabian", "sabiha", "sabina", "sabine", "sabir", "sabirin", "sabiya", "sable", "saboor",
                 "sabra", "sabreen", "sabreena", "sabri", "sabrin", "sabrina", "sabriya", "sacer", "sacha", "sachi",
                 "sachiko", "sachin", "sachleen", "sadaf", "sadareen", "saddiq", "sadhana", "sadhbh", "sadia", "sadiah",
                 "sadie", "sadiq", "sadiya", "sadiyah", "sadra", "sadria", "sadru", "sadus", "sadye", "saeed",
                 "saeedah", "saesha", "safaa", "safah", "safal", "safeer", "saffa", "saffah", "saffanah", "saffia",
                 "saffie", "saffire", "saffiya", "saffiyah", "saffron", "saffy", "safia", "safiah", "safilix", "safina",
                 "safira", "safire", "safiullah", "safiya", "safiyah", "safiye", "safiyya", "safiyyah", "safoorah",
                 "safreen", "safwa", "safwaan", "safwan", "safwana", "sagal", "sahaj", "sahal", "sahala", "sahana",
                 "sahand", "sahar", "sahara", "sahasra", "saheim", "sahej", "sahel", "sahib", "sahiba", "sahibdeep",
                 "sahibjeet", "sahibveer", "sahil", "sahir", "sahira", "sahitya", "sahra", "saiba", "saibah", "saida",
                 "saidah", "saidi", "saieda", "saifan", "saifullah", "saige", "saikou", "sailas", "sailor", "saima",
                 "saimon", "saimonas", "saina", "sainabou", "saira", "saish", "saisha", "saitej", "saiva", "saiya",
                 "saiyan", "saiyf", "sajan", "sajid", "sajida", "sajjad", "sakeena", "sakeenah", "saker", "saketh",
                 "sakib", "sakina", "sakinah", "saksham", "sakura", "salach", "salahedin", "salahuddeen", "salahuddin",
                 "salahudeen", "salam", "salamasina", "salar", "saleem", "saleena", "saleh", "saleha", "salem",
                 "salena", "salexor", "salie", "saliena", "salifyanji", "salih", "saliha", "salihah", "salik", "salim",
                 "salima", "salimatou", "salina", "salinger", "salley", "sallie", "sally", "salma", "salmaan", "salman",
                 "salome", "salomeea", "saloni", "salor", "salsabeel", "salsabil", "salvador", "salvaore", "salvatore",
                 "salwa", "samaa", "samad", "samah", "samaiera", "samaira", "samairnel", "saman", "samana", "samanta",
                 "samantha", "samar", "samara", "samarah", "samarbir", "samarpreet", "samarth", "samatha", "samaya",
                 "sambor", "sameeha", "sameer", "sameera", "sameerah", "samella", "samera", "sames", "samet", "samhita",
                 "samia", "samiah", "samih", "samiha", "samiksha", "samina", "samir", "samira", "samirah", "samiul",
                 "samiullah", "samiya", "samiyah", "sammi", "sammie", "sammir", "sammy", "samon", "samot", "sampson",
                 "samra", "samraaj", "samraat", "samrah", "samraj", "samrat", "samrath", "samreen", "samreet",
                 "samriddhi", "samsam", "samson", "samual", "samuel", "samuele", "samuella", "samveer", "samvrita",
                 "samwise", "samyad", "samyuktha", "sanaa", "sanad", "sanah", "sanaila", "sanala", "sanam", "sanaya",
                 "sanchez", "sanda", "sandee", "sandeep", "sander", "sandi", "sandie", "sandor", "sandra", "sandro",
                 "sandwave", "sandy", "saneto", "sanford", "sangam", "sanger", "sania", "saniha", "sanika", "sanin",
                 "saniya", "saniyah", "sanjana", "sanjay", "sanjeet", "sanjidah", "sanjog", "sanjuana", "sanjuanita",
                 "sanna", "sannah", "sanne", "sanora", "sansa", "sanskar", "santa", "santana", "santanna", "santhosh",
                 "santi", "santiago", "santina", "santino", "santo", "santos", "santosh", "sanvi", "sanvika",
                 "sanvithi", "sanya", "saoirse", "saorise", "saorla", "saorlaith", "saphia", "saphira", "saphire",
                 "sapna", "sapphira", "sapphire", "saqib", "saqlain", "sarah", "sarahi", "sarai", "saral", "sarama",
                 "saran", "saranie", "saraya", "sarayah", "sarayu", "sardar", "sareen", "sareena", "sargent", "sargo",
                 "sargonus", "sargun", "saria", "sariah", "saril", "sarim", "sarina", "sarisha", "sarita", "sariya",
                 "sariyah", "sarki", "sarma", "sarmacid", "sarmad", "sarmd", "sarme", "sarna", "sarojin", "saron",
                 "saroop", "sarra", "sarrask", "sarrinah", "sartaaj", "sartaj", "sarthak", "sarthgine", "sarujan",
                 "sarunas", "sarvan", "sarvesh", "sarwat", "sasan", "sascha", "sasha", "sashanth", "sashvin", "sasic",
                 "sasilca", "saskia", "sasmeka", "sataura", "sathe", "satian", "satica", "satin", "satinka", "satsuki",
                 "satthik", "saturn", "saturnina", "satvik", "satvir", "saudah", "saugat", "saule", "saumya", "saundra",
                 "saurav", "savana", "savanah", "savanna", "savannah", "savera", "savine", "savio", "savit", "savva",
                 "savvas", "sawda", "sawdah", "sawen", "sawyer", "saxen", "saxon", "saxton", "sayam", "sayan", "sayed",
                 "sayeda", "sayeesa", "sayer", "sayhan", "saylor", "saynab", "sayst", "sayuri", "sayyam", "sayyid",
                 "scarlet", "scarlett", "scarlette", "scarllett", "scarlotte", "scelinn", "sciotus", "scius", "scoth",
                 "scotland", "scott", "scottie", "scotty", "scout", "screva", "scrole", "scronna", "scrooge",
                 "scrounge", "scythe", "scythia", "seaford", "seaftink", "sealanna", "seamus",
                 "seanna", "seared", "season", "sebastiaan", "sebastian", "sebastianne", "sebastiano", "sebastien",
                 "seberg", "sebestian", "sebrina", "secor", "secrean", "sedar", "seeley", "seema", "seemonsh", "seerat",
                 "seereena", "seetia", "sefora", "seghen", "segrim", "segwilma", "sehaj", "sehajdeep", "sehajpreet",
                 "sehajveer", "sehar", "sehej", "seher", "sehrish", "seiji", "seiko", "seiont", "seithenin", "sejal",
                 "sekou", "selah", "selena", "selene", "selenia", "selihom", "selikem", "selim", "selin", "selina",
                 "sellen", "selma", "selmar", "selorm", "semaj", "semaphone", "semira", "semuta", "senaida", "senalda",
                 "senan", "senara", "senay", "seneca", "senick", "senira", "senna", "sennen", "sennetta", "sensai",
                 "sensei", "senson", "senthyril", "senuri", "senwen", "seonagh", "seonaid", "seonaidh", "seoras",
                 "sepek", "sepherene", "sephora", "seporic", "september", "septimus", "sequoia", "serafina", "serah",
                 "seraj", "serane", "seraphina", "seraphine", "seraya", "serayah", "sereana", "sereen", "sereena",
                 "sereice", "seren", "serena", "serene", "serenity", "serenna", "serepta", "serge", "sergei", "sergey",
                 "sergio", "sergius", "serhan", "serin", "serina", "serine", "serita", "serma", "sermak", "serren",
                 "serrma", "seruwaia", "seryn", "seryth", "sesai", "sesklos", "sesmidat", "setayesh", "sethron",
                 "sethuki", "setlo", "setsuko", "settlesand", "seumas", "seungjun", "sevan", "sevda", "severine",
                 "severus", "sevestra", "sevinc", "sevinhand", "seweryn", "seyed", "seymour", "seyon", "sezer",
                 "sezgin", "shaan", "shaania", "shaanul", "shaban", "shabana", "shabd", "shabel", "shabnam", "shacher",
                 "shade", "shado", "shadow", "shadowbane", "shadrach", "shady", "shaemus", "shafi", "shafia", "shafin",
                 "shahab", "shahad", "shahan", "shahana", "shahbaz", "shahd", "shaheed", "shaheem", "shaheen",
                 "shaheer", "shahid", "shahina", "shahir", "shahmeer", "shahzad", "shahzaib", "shahzain", "shahzeb",
                 "shaidon", "shaikh", "shaila", "shailen", "shaima", "shaina", "shaista", "shakai", "shakayla",
                 "shakeel", "shakespear", "shakespeare", "shakia", "shakil", "shakila", "shakir", "shakira", "shakirah",
                 "shakita", "shakthi", "shakti", "shakur", "shala", "shalanda", "shalom", "shalon", "shalonda",
                 "shalpan", "shama", "shamar", "shamara", "shameer", "shameka", "shami", "shamika", "shamir", "shamira",
                 "shamirah", "shamiso", "shammah", "shams", "shamus", "shana", "shanade", "shanae", "shanai", "shanay",
                 "shanaya", "shanaye", "shanda", "shandi", "shandra", "shane", "shaneice", "shaneka", "shanel",
                 "shanell", "shanelle", "shaner", "shani", "shania", "shaniah", "shanice", "shanie", "shanika",
                 "shaniqua", "shanique", "shanita", "shaniya", "shaniyah", "shanna", "shannan", "shannay", "shannel",
                 "shannen", "shannon", "shanon", "shanta", "shantae", "shantay", "shante", "shantel", "shantell",
                 "shantelle", "shanti", "shantra", "shanum", "shanzay",
                 "shara", "sharan", "sharanya", "shard", "sharda", "shardae", "shardo", "shardonnay", "sharee",
                 "sharell", "sharen", "shari", "sharice", "sharie", "sharif", "sharifa", "sharika", "sharilyn",
                 "sharis", "sharita", "sharla", "sharleen", "sharlene", "sharlotte", "sharmaine", "sharmin", "sharn",
                 "sharna", "sharnie", "sharolyn", "sharon", "sharonda", "sharra", "sharri", "sharron", "sharvin",
                 "shary", "sharyl", "sharyn", "shasa", "shashwat", "shasmeen", "shasta", "shatra", "shauksten",
                 "shaula", "shaun", "shauna", "shaunda", "shauni", "shaunie", "shaunna", "shaunta", "shaunte",
                 "shaurya", "shavannah", "shavon", "shavonda", "shavonne", "shawa", "shawana", "shawanda", "shawanna",
                 "shawen", "shawn", "shawna", "shawnda", "shawnee", "shawnette", "shawnna", "shawnta", "shaya",
                 "shayaan", "shayah", "shayan", "shayana", "shayann", "shayden", "shaydon", "shaye", "shayen",
                 "shayera", "shayla", "shaylah", "shaylan", "shaylee", "shayleigh", "shaylen", "shaylon", "shayma",
                 "shaymus", "shayna", "shayne", "shayon", "shazaib", "shazain", "shazia", "shazil", "sheba", "sheehan",
                 "sheem", "sheena", "sheera", "shees", "shehroze", "sheik", "sheikh", "sheikha", "sheila", "sheilah",
                 "sheindel", "sheindy", "shekhinah", "shekinah", "shela", "shelagh", "shelba", "shelbie", "shelby",
                 "sheldon", "shelia", "shella", "shelley", "shelli", "shellie", "shelly", "shelton", "shelvestra",
                 "shemeka", "shemika", "shena", "shenade", "shenae", "shenaya", "shenika", "shenita", "shenna",
                 "shepherd", "shera", "sheree", "shereen", "shereena", "sherell", "sheri", "sherice", "sheridan",
                 "sherie", "sheriff", "sherika", "sherill", "sherilyn", "sherine", "sherise", "sherita", "sherlene",
                 "sherley", "sherlock", "sherly", "sherlyn", "sherman", "sheron", "sherrell", "sherri", "sherrie",
                 "sherril", "sherrill", "sherron", "sherry", "sherryl", "shervin", "sherwin", "sherwood", "shery",
                 "sheryl", "sheryll", "shetra", "shetre", "shevynn", "shewin", "sheza", "shiann", "shianna", "shianne",
                 "shiela", "shifa", "shifra", "shila", "shilah", "shillana", "shillen", "shiloh", "shimon", "shing",
                 "shino", "shira", "shire", "shireen", "shirel", "shirely", "shiri", "shirin", "shirish", "shirl",
                 "shirlee", "shirleen", "shirlene", "shirley", "shirly", "shirlyn", "shiron", "shiva", "shivam",
                 "shivan", "shivani", "shivansh", "shivanshi", "shiven", "shivesh", "shiyi", "shiza", "shizue",
                 "shizuko", "shloime", "shloimy", "shlok", "shlome", "shlomo", "shmiel", "shmuel", "shneur", "shnorr",
                 "shoaib", "shoaibudin", "shodowwind", "shola", "sholom", "sholto", "shona", "shonagh", "shonah",
                 "shonda", "shondra", "shonna", "shonta", "shontay", "shorn", "shoshana", "shoushan", "shoushanah",
                 "shraga", "shravya", "shree", "shreedatt", "shreeya", "shrestha", "shrew", "shrey", "shreya",
                 "shreyan", "shreyas", "shrihan", "shrishti", "shristi", "shriya", "shruti", "shuaib", "shuayb",
                 "shubh", "shubha", "shukri", "shulem", "shull", "shyam", "shyann", "shyanna", "shyanne", "shyla",
                 "shylah", "shyle", "shylock", "shyloh", "siana", "sianna", "siannah", "siara", "sibel", "sibella",
                 "sibyl", "sicily", "sidar", "sidara", "sidathe", "siddarth", "siddhant", "siddharth", "siddhartha",
                 "siddhi", "siddiq", "siddiqah", "sidharth", "sidney", "sidonia", "sidonie", "sidra", "sidrah",
                 "sieanna", "siena", "sienaleigh", "sienna", "siennah", "sierra", "sigel", "siglaf", "siglin", "signa",
                 "signe", "sigourney", "sigrid", "sigurd", "siguruk", "sigyn", "sihaam", "siham", "sikandar", "silas",
                 "silco", "sildo", "sileas", "silienori", "silius", "sillius", "silne", "silpal", "silva", "silvain",
                 "silvana", "silver", "silverleaf", "silveron", "silvertail", "silverwind", "silvia", "silvyre",
                 "simao", "simar", "simarraj", "simas", "simba", "simbarashe", "simeon", "similoluwa", "simina",
                 "simion", "simisola", "simmont", "simon", "simona", "simonas", "simone", "simonne", "simpriss",
                 "simra", "simrah", "simran", "simrat", "simrath", "simreet", "simrit", "sinade", "sinan", "sincere",
                 "sinclair", "sindija", "sindy", "sinead", "singh", "sinks", "siobhan", "sioned", "sipher", "sirac",
                 "sirah", "siraj", "sirana", "sirat", "sireen", "sirena", "sirine", "sirio", "sirius", "sirma", "sirme",
                 "sirvat", "sisanwunmi", "sitara", "sithik", "siwan", "sixta", "siyaa", "siyana", "siyara", "siyona",
                 "siyuan", "sizuo", "skadi", "skarlett", "skelbanda", "skobo", "skrymir", "skyann", "skyelah", "skyla",
                 "skylah", "skylan", "skylar", "skylark", "skylee", "skyler", "skywalker", "slade", "slamder", "slate",
                 "slater", "slath", "sleeth", "slender", "slevin", "slevon", "slill", "sloan", "sloane", "sloisa",
                 "slorica", "slyvia", "smilte", "smith", "smoglswane", "smoke", "snadrider", "sneha", "snellia",
                 "sobaan", "sobhan", "sobia", "socorro", "socrates", "soderman", "soffia", "sofia", "sofiah", "sofian",
                 "sofiane", "sofianna", "sofie", "sofija", "sofina", "sofiya", "sofiyah", "sofyan", "sohaib", "sohail",
                 "soham", "sohan", "sohana", "sohrab", "soila", "solada", "solana", "solange", "solar", "solara",
                 "solaris", "soledad", "soleil", "solenne", "soley", "soliana", "soliel", "solin", "solisa", "solita",
                 "soliyana", "soloman", "solomon", "solon", "solton", "solveig", "solyana", "somaya", "somer",
                 "somhairle", "sommer", "somtochukwu", "sonam", "soncern", "sondra", "sonel", "sonia", "sonja", "sonni",
                 "sonnie", "sonny", "sonora", "sonya", "sookie", "sophia", "sophiajane", "sophie", "sophieleigh",
                 "sophiemarie", "sophina", "sophiya", "sophy", "soraia", "soraiya", "soranal", "soraya", "sorayah",
                 "sorayya", "sorch", "sorcha", "soren", "sorenna", "soret", "soreth", "soriyah", "sorley", "sorod",
                 "soroh", "soron", "sorrel", "sorren", "sorsha", "sotha", "sothale", "sotiris", "sotonye", "souad",
                 "souce", "souleymane", "soulshaper", "soure", "sourte", "sowayba", "sparkle", "sparrow", "sparrowhawk",
                 "spask", "spazm", "spede", "spencer", "speranza", "spike", "spiros", "spitel", "spring", "spyridonas",
                 "sreshtha", "sretalles", "srihan", "srijan", "srikrishna", "srinika", "sriram", "srisha", "srishti",
                 "sriya", "srodki", "sruli", "sruthi", "staban", "stacee", "stacey", "staci", "stacia", "stacie",
                 "stacy", "stadegrio", "stadlaer", "stagger", "staggner", "staler", "stane", "stanford", "stanislav",
                 "stanislaw", "stanley", "stanton", "staph", "stara", "starla", "starling", "starr", "stasheff",
                 "stasia", "statilius", "staver", "stavriani", "stavros", "stayn", "steadmen", "steel", "steev",
                 "steevie", "stefan", "stefani", "stefania", "stefanie", "stefano", "stefans", "stefany", "steffan",
                 "steffanie", "stein", "steinngium", "stelios", "stell", "stella", "stellan", "stellar", "stentz",
                 "stenwulf", "stepanie", "steph", "stephaine", "stephan", "stephane", "stephani", "stephania",
                 "stephanie", "stephany", "stephen", "stephenie", "stephine", "stephnie", "stera", "sterling", "stesha",
                 "stetson", "steve", "steven", "stevey", "stevi", "stevie", "stevii", "stewart", "stiff", "still",
                 "stina", "stirling", "stone", "stonehand", "stonne", "storm", "stormbringer", "stormy", "strean",
                 "striker", "strolan", "strongarm", "struan", "strubhan", "strus", "stuart", "studd", "stump", "sturm",
                 "stuti", "stylie", "styrix", "suaad", "suanne", "suara", "suarez", "subhaan", "subhan", "subhanallah",
                 "subina", "success", "suchin", "sudais", "sudie", "sudri", "sueann", "suela", "suellen", "sufian",
                 "sufiya", "sufiyan", "sufyaan", "sufyan", "sugar", "suhaib", "suhail", "suhaila", "suhana", "suhani",
                 "suhayb", "suhayl", "suhayla", "suhaylah", "suheera", "suheyb", "suheyla", "sukaina", "sukayna",
                 "sukaynh", "sukhjot", "sukhman", "sukhmani", "sukhpreet", "sukhraj", "sukhveer", "sukhwinder",
                 "suktor", "sulaimaan", "sulaiman", "sulanie", "sulaymaan", "sulayman", "sulcar", "suleiman", "sulema",
                 "suleman", "suleyman", "suliman", "sulis", "sullivan", "sully", "sultan", "sultana", "sumaiya",
                 "sumaiyah", "sumaiyyah", "sumant", "sumaya", "sumayah", "sumayya", "sumayyah", "sumekh", "sumeya",
                 "sumia", "sumiko", "sumiya", "summa", "summah", "summai", "summaiya", "summar", "summas", "summaya",
                 "summayah", "summer", "sumon", "sunberry", "sunday", "sunder", "sundus", "sunee", "sunete", "sunfall",
                 "sunfire", "sungaze", "sunni", "sunnie", "sunny", "sunshadow", "sunshine", "suprit", "supriya",
                 "surabi", "suraiya", "suraj", "suranne", "suraya", "surayah", "surayya", "surbani", "suria", "surina",
                 "surtur", "survin", "surya", "susan", "susana", "susann", "susanna", "susannah", "susanne", "sushant",
                 "susie", "suskin", "sutha", "suther", "sutlin", "sutter", "sutton", "suvan", "suzan", "suzana",
                 "suzann", "suzanna", "suzannah", "suzanne", "suzette", "suzie", "svara", "svein", "sveta", "svetlana",
                 "sveva", "swaedan", "swara", "swarachit", "swayam", "swayley", "sweetwood", "swithun", "sword",
                 "swust", "sybil", "syble", "sydnee", "sydney", "sydni", "sydnie", "syeda", "syedah", "syknernen",
                 "sylar", "sylas", "sylvain", "sylvan", "sylvester", "sylvia", "sylvie", "synan", "synclair",
                 "syndarra", "synestra", "synina", "synthia", "syreeta", "syrus", "syshe", "sythini", "sythril",
                 "szandor", "szene", "szofia", "szymon", "taaha", "taalia", "taaliah", "taaniya", "taban", "tabassum",
                 "tabatha", "taber", "tabetha", "tabika", "tabina", "tabita", "tabitha", "tabithi", "tacer", "tacita",
                 "tadas", "taddi", "tadeusz", "tadhg", "tadiwa", "tadiwanashe", "taeghan", "taejah", "taeju",
                 "taerhael", "taesan", "taevon", "tafadzwa", "tafara", "tafari", "tafia", "tagan", "tagram", "tahani",
                 "taheem", "tahera", "tahiba", "tahir", "tahira", "tahiry", "tahiya", "tahlia", "tahliya", "tahmeed",
                 "tahmid", "tahmidul", "tahmina", "tahoma", "tahreem", "tahrim", "tahseen", "tahsin", "tahsina",
                 "taiah", "taiba", "taibah", "taiga", "taijah", "taima", "taimur", "taina", "taisha", "taite", "taiwo",
                 "taiya", "taiyah", "tajuana", "tajule", "tajus", "takako", "takeo", "takeru", "takisha", "takudzwa",
                 "takunda", "talal", "talarin", "talasi", "talat", "talayah", "talberon", "talbot", "talea", "taleah",
                 "taleen", "taleigha", "talen", "taley", "talgoid", "talha", "talhah", "talia", "taliah", "taliesin",
                 "talio", "talisha", "talitha", "taliya", "taliyah", "tallax", "talli", "tallia", "talliah", "tallis",
                 "tallisan", "tallula", "tallulah", "tallys", "talon", "taltre", "talula", "talulah", "talullah",
                 "talya", "tamala", "tamana", "tamanna", "tamar", "tamara", "tamarantha", "tamare", "tamas", "tamatha",
                 "tambra", "tameem", "tameika", "tameka", "tamekia", "tamela", "tamer", "tamera", "tamerlane",
                 "tamesha", "tamia", "tamiah", "tamica", "tamie", "tamika", "tamiko", "tamilore", "tamim", "tamir",
                 "tamira", "tamisha", "tamiya", "tamjeed", "tamjid", "tamlin", "tammara", "tammera", "tammi", "tammie",
                 "tammy", "tamra", "tamseel", "tamsin", "tamsir", "tamsyn", "tamtha", "tamunoseimieibi", "tamzin",
                 "tamzyn", "tanaiya", "tanaka", "tanav", "tanay", "tanaya", "tancredi", "tandra", "tandy", "taneka",
                 "tanesha", "tangela", "tangia", "tania", "taniah", "tanika", "tanish", "tanisha", "tanishka",
                 "tanishq", "taniyah", "tanja", "tanjot", "tanmay", "tanmeet", "tanna", "tannar", "tanner", "tansanee",
                 "tansang", "tansley", "tansy", "tanush", "tanveer", "tanvi", "tanvika", "tanvir", "tanwen", "tanya",
                 "tanyaradzwa", "tanzeela", "tanzila", "tapiwa", "tapiwanashe", "tapran", "taqwa", "tarah", "taran",
                 "tarana", "taranbir", "tarannom", "taranveer", "taraoluwa", "taren", "targo", "tarika", "tarin",
                 "tariq", "tarjei", "tarlach", "tarlia", "tarquin", "tarra", "tarran", "tarrant", "tarrin", "tarryn",
                 "tarsha", "tarun", "taryn", "tasdar", "tasden", "taseen", "tasfia", "tasha", "tashi", "tashia",
                 "tashina", "tashvi", "tasia", "tasida", "taslima", "tasmia", "tasmin", "tasmiyah", "tasmya", "tasneem",
                 "tasnia", "tasniim", "tasnim", "tasnuva", "tasus", "tatenda", "tatheer", "tatiana", "tatoria", "tatsu",
                 "tatum", "tatyana", "taubir", "tauheed", "taunya", "tavga", "tavia", "tavis", "tavish", "tavleen",
                 "tawana", "tawanda", "tawanna", "tawfik", "tawheed", "tawhid", "tawna", "tawni", "tawny", "tawnya",
                 "tayah", "tayan", "tayana", "tayba", "taybah", "tayden", "tayeb", "tayiba", "tayibah", "tayjah",
                 "tayla", "taylah", "taylan", "taylen", "tayler", "taylon", "taylor", "tayna", "tayon", "tayshaun",
                 "tayte", "tayvon", "tayyab", "tayyaba", "tayyeba", "tayyib", "tayyiba", "tayyibah", "tazanna",
                 "tazeem", "tazia", "tazkia", "tazmeen", "tazmin", "tazoe", "teadd", "teagan", "teagen", "teaghan",
                 "teague", "teale", "tealoh", "teanna", "tearlach", "teddi", "teddie", "teddy", "teegan", "teejay",
                 "teela", "teena", "tegan", "tegen", "tegwen", "tehila", "tehillah", "tehreem", "tehya", "tehzeeb",
                 "teigan", "teighan", "teigra", "teilo", "teirn", "teisha", "tejai", "tejas", "tejaswini", "tejesh",
                 "tejveer", "tejvir", "teksin", "tekyla", "telefe", "teleri", "tellus", "telma", "telpur", "telsin",
                 "temeka", "temesgen", "temidayo", "temika", "temil", "temilade", "temilfist", "temilola",
                 "temilolaoluwa", "temiloluwa", "temitayo", "temitope", "temperance", "tempest", "tempie", "tempist",
                 "temple", "temujin", "tendai", "tenebrig", "tenesha", "tenille", "teninlanimi", "teniola", "tenioluwa",
                 "tenisha", "tenley", "tennie", "tennille", "tennyson", "tensring", "tenuli", "tenzil", "tenzin",
                 "teodor", "teodora", "teodoro", "teofila", "teoman", "teona", "tepena", "tequila", "terass", "tereasa",
                 "tereccler", "terence", "teresa", "terese", "teresia", "teresita", "teressa", "teresse", "tereza",
                 "teribafolu", "terica", "terina", "terisa", "terra", "terrance", "terrel", "terrell", "terrence",
                 "terresa", "terri", "terrie", "terrilyn", "terry", "tesha", "teslanar", "tesni", "tespar", "tessa",
                 "tessie", "tessino", "testimony", "tethra", "tethran", "tevin", "tevis", "tewdig", "texas", "teyah",
                 "teyana", "teyla", "teyrida", "thabani", "thabiso", "thaddefert", "thaddeus", "thady", "thaiba",
                 "thaikir", "thaine", "thais", "thalassa", "thaleen", "thalen", "thalia", "thanakorn", "thandi",
                 "thandie", "thandiwe", "thando", "thane", "thanh", "thanos", "thare", "tharn", "tharthar", "tharun",
                 "thatcher", "thaxter", "thayer", "theadora", "theda", "theia", "thelinde", "thelma", "thelonious",
                 "theoden", "theodor", "theodora", "theodore", "theodoros", "theola", "theon", "theophania",
                 "theophilus", "therad", "theresa", "therese", "theresia", "theressa", "theron", "therr", "thersa",
                 "thiago", "thian", "thiazi", "thibault", "thierry", "thiltran", "thina", "thirle", "thisbe", "thoinen",
                 "tholan", "thomais", "thomas", "thomasena", "thomasina", "thomasine", "thomin", "thomson", "thora",
                 "thorben", "thorbjorn", "thorburn", "thorfinn", "thorin", "thorn", "thorne", "thorus", "thorvin",
                 "thothet", "threndorle", "threndorler", "thresa", "throdi", "throll", "thron", "thufir",
                 "thunderstroke", "thurgudmen", "thurin", "thurman", "thurny", "thymas", "thyra", "tiaamii", "tiago",
                 "tiahna", "tiana", "tianah", "tiang", "tiani", "tianna", "tiannah", "tianne", "tiara", "tiaraoluwa",
                 "tiaret", "tiarna", "tiarnan", "tiarni", "tiayana", "tibber", "tibbie", "tiber", "tiberius", "tibers",
                 "tiberus", "tibolt", "tibor", "ticharol", "tiegan", "tiera", "tiernan", "tierney", "tierno", "tierra",
                 "tiesha", "tifany", "tiffaney", "tiffani", "tiffanie", "tiffany", "tiffiny", "tiger", "tigerlilly",
                 "tigerlily", "tiggi", "tiggy", "tighe", "tighearnan", "tigranes", "tijan", "tijani", "tijuana",
                 "tilda", "tiler", "tilisa", "tillaron", "tilleigh", "tilley", "tilli", "tillie", "tilly", "tilner",
                 "timas", "timberly", "timea", "timeothy", "timika", "timin", "timmy", "timocy", "timofej", "timotei",
                 "timothee", "timotheo", "timothy", "timur", "timurs", "tinaeus", "tinashe", "tinayeishe", "tinisha",
                 "tinley", "tinotenda", "tinsley", "tinus", "tioluwani", "tippi", "tirath", "tiree", "tirenioluwa",
                 "tirian", "tirion", "tirtha", "tirzah", "tisha", "tisiphone", "titan", "titas", "tithan", "titian",
                 "titius", "titus", "tivon", "tivona", "tiwaloluwa", "tiyana", "tiyen", "tizane", "tobale",
                 "tobechukwu", "tobenna", "tobey", "tobiah", "tobias", "tobiasz", "tobie", "tobin", "tobit", "tobyn",
                 "toccara", "tohrm", "tokala", "tolde", "toleen", "tolen", "tolida", "tolle", "tolsar", "tolsen",
                 "tolulope", "toluwalase", "toluwani", "toluwanimi", "tomal", "tomas", "tomasa", "tomass", "tomasz",
                 "tomek", "tomeka", "tomika", "tomiko", "tomiwa", "tommaso", "tommee", "tommi", "tommie", "tommielee",
                 "tommy", "tommye", "tommylee", "tomodrin", "tomoko", "tomos", "tonda", "tondril", "tonette", "toney",
                 "tongue", "tonia", "tonica", "tonie", "tonis", "tonisha", "tonita", "tonja", "tonjie", "tonya",
                 "tooba", "topah", "toprak", "torben", "toren", "torfire", "toria", "torial", "torie", "torin",
                 "toringad", "torinko", "torion", "toritsefe", "torquil", "torran", "torrelloc", "torri", "torrie",
                 "torrin", "torsten", "tortha", "toryn", "tosha", "toshia", "toshiko", "toshita", "totha", "tothale",
                 "tottra", "toulouse", "touret", "tousba", "towanda", "towerlock", "toyna", "trace", "tracee", "tracey",
                 "traci", "tracie", "tract", "tracy", "trahern", "trajan", "trake", "tralen", "tralinth", "trang",
                 "tranl", "tranorr", "trapster", "traven", "travis", "trayvon", "treamuel", "treasa", "treasure",
                 "trece", "trede", "treena", "treka", "trelane", "trele", "trell", "tremaine", "tremayne", "tremec",
                 "trena", "trent", "trenton", "treon", "tresa", "tresiah", "tressa", "tressie", "treva", "trever",
                 "trevon", "trevor", "trewlayne", "treyvon", "tricia", "tricus", "trill", "trina", "tringoll", "trinh",
                 "trinidad", "trinity", "trinsa", "triock", "trion", "tripp", "triscuit", "trish", "trisha", "trista",
                 "tristan", "tristen", "tristian", "tristin", "triston", "tristram", "trixie", "trixy", "troilus",
                 "tronos", "trotwood", "trudi", "trudie", "trudy", "trula", "truman", "trumper", "tryane", "trystan",
                 "tshegofatso", "tsvetelina", "tuana", "tuari", "tuaria", "tuche", "tucker", "tudor", "tudus",
                 "tuesday", "tuguldur", "tulia", "tulip", "tulisa", "tulise", "tulisha", "tuliya", "tullaris", "tulsi",
                 "tulula", "tupaji", "turan", "turle", "turner", "turzig", "tuscanar", "tusdar", "tussah", "tuvor",
                 "tuyet", "tvesta", "twana", "twanda", "twanna", "twila", "twilight", "twisha", "twodawns", "twyla",
                 "tyana", "tybressa", "tyburn", "tycane", "tyden", "tyell", "tyesha", "tyger", "tyisha", "tyjen",
                 "tylah", "tylan", "tylar", "tyldoran", "tyler", "tyller", "tylor", "tymon", "tymoteusz", "tynisha",
                 "tyran", "tyree", "tyreece", "tyreese", "tyrell", "tyrese", "tyrion", "tyron", "tyrone", "tyronica",
                 "tysinni", "tyson", "tytus", "tzipporah", "tzivia", "ubaid", "ubayd", "ubaydah", "ubaydullah",
                 "ubriks", "uchechukwu", "uchenna", "uerthe", "uevarius", "ugmar", "ugnius", "ugochukwu", "ugomsinachi",
                 "ugonna", "uhara", "uilleam", "uisdean", "uisna", "ulema", "ulfang", "ulises", "uljana", "ullie",
                 "ullist", "ulowadjaa", "ulric", "ulrica", "ulrike", "ulror", "ulyana", "ulysses", "umaamah", "umaima",
                 "umaimah", "umair", "umaira", "umairah", "umaiza", "umamah", "umara", "umarah", "umaya", "umayah",
                 "umayma", "umaymah", "umaynah", "umayr", "umayyah", "umeko", "umemaah", "ummaima", "ummayyah",
                 "ummehani", "umrah", "unaisa", "unaisah", "unarath", "unaysah", "undaria", "undin", "unduma", "uneste",
                 "ungard", "ungon", "unique", "unity", "untall", "untamo", "unteel", "unwulf", "unysis", "upasana",
                 "updar", "upkirat", "urania", "uranus", "urbain", "urcit", "urdrasil", "uriah", "uriel", "urijah",
                 "urixen", "urooj", "ursala", "ursula", "urszula", "urwah", "usaid", "usama", "usara", "usayd", "useli",
                 "ushika", "usking", "usmaan", "usman", "usnar", "ussesa", "ussiun", "uswah", "uther", "uthmaan",
                 "uthman", "utkrisht", "uwais", "uyaiabasi", "uzair", "uzayr", "uzziel", "vaani", "vaccon", "vacone",
                 "vadim", "vaelan", "vaginamite", "vagor", "vagot", "vaibhav", "vaila", "vaishnavi", "vaishvi",
                 "vakare", "vakaris", "valacar", "valanka", "valarie", "valda", "valdemar", "valek", "valekka", "valen",
                 "valencia", "valene", "valentin", "valentina", "valentine", "valentino", "valeri", "valeria",
                 "valerie", "valerija", "valery", "valezka", "valiant", "valistor", "valkeri", "vallerie", "valli",
                 "vallie", "valon", "valor", "valorie", "valrie", "valynard", "vamika", "vance", "vanda", "vandalin",
                 "vanesa", "vanessa", "vanetta", "vangel", "vangie", "vania", "vanidor", "vanil", "vanilla", "vanina",
                 "vanita", "vanna", "vannen", "vannesa", "vannessa", "vansh", "vanshi", "vanshika", "vanya", "varag",
                 "varden", "varen", "vargo", "varion", "varken", "varnika", "varota", "varron", "varsha", "varshaa",
                 "varshini", "vartan", "varth", "vartouhi", "varun", "varus", "varvara", "varya", "vasco", "vashel",
                 "vashti", "vasil", "vasile", "vasiliki", "vasilis", "vasilisa", "vasud", "vatch", "vatusia", "vaughan",
                 "vaughn", "vectomon", "vedanshi", "vedant", "vedika", "veera", "veeran", "veerica", "veersukhraj",
                 "vejas", "velda", "veldahar", "velia", "vella", "velma", "velva", "velvet", "venessa", "venetia",
                 "venetta", "venice", "venisha", "venita", "vennie", "venus", "veola", "verda", "verdandi", "verdanez",
                 "verdell", "verdie", "vered", "verena", "vergie", "vergil", "verity", "verla", "verlene", "verlie",
                 "verline", "verna", "vernados", "vernell", "vernetta", "verney", "vernia", "vernice", "vernie",
                 "vernita", "vernon", "verona", "veronica", "veronika", "veronique", "versie", "vertie", "veseere",
                 "vesend", "vespa", "vespar", "vesper", "vesta", "vethelot", "vettius", "vevar", "vevay", "vevina",
                 "veyaan", "veyron", "vhari", "viaan", "viana", "vianna", "vibha", "vicari", "vicenta", "vicente",
                 "vicenzi", "vickey", "vicki", "vickie", "vicky", "victamorel", "victor", "victoria", "victorina",
                 "victory", "vidal", "vider", "vidhan", "vidhi", "vidhya", "vidron", "vidura", "vidya", "vidykal",
                 "vienna", "viggo", "vignesh", "vigoth", "vihaan", "vihan", "vijay", "vijval", "vikki", "vikos",
                 "vikram", "vikrant", "viktor", "viktoria", "viktorija", "vilan", "vildar", "vilma", "vilte", "vinald",
                 "vinay", "vinaya", "vinayak", "vince", "vincent", "vincenza", "vincenzo", "vinda", "vinita", "vinkolt",
                 "vinnie", "vinny", "vinudi", "viola", "violet", "violeta", "violetta", "violette", "viraaj", "viraj",
                 "virat", "virde", "viren", "virgen", "virgie", "virgil", "virgilio", "virgina", "virginia", "virote",
                 "vishal", "vishnu", "visola", "vitalis", "vitaly", "vithuran", "vitor", "vitoria", "vittoria",
                 "vittorio", "vivaan", "vivan", "vivek", "vivian", "viviana", "vivianna", "vivianne", "vivien",
                 "vivienne", "viyan", "vladamere", "vladimir", "vladislav", "vladislavs", "vladmir", "vogue", "vohnkar",
                 "vojtech", "voladea", "voltain", "volux", "voncile", "vonda", "vonnie", "vopnir", "vortigern",
                 "voudim", "vratko", "vrinda", "vrisa", "vroomfondle", "vsevolod", "vulpen", "vuong", "vurner",
                 "vyblos", "vyehntyir", "vysarane", "vytautas", "vythethi", "vythica", "wadaan", "wadad", "waeron",
                 "wafiq", "wagen", "wahab", "wahaj", "wahid", "wahida", "wailan", "waistere", "wajiha", "wakanda",
                 "waldan", "walden", "waldo", "waleed", "walena", "walid", "walkar", "walker", "wallace", "wallis",
                 "wally", "walman", "walnan", "walter", "walton", "waltraud", "wanar", "wanda", "wandagwen",
                 "wandatranna", "wanera", "wanessa", "waneta", "wanetta", "wania", "wanita", "waniya", "warda",
                 "wardah", "wareesha", "wargo", "waris", "warisha", "warmage", "warne", "warner", "warren", "warrick",
                 "warsan", "warwick", "waseem", "washi", "washma", "wasif", "wasim", "wassim", "waste", "wastik",
                 "wateen", "watson", "wavenhair", "wavenhait", "waverley", "waverly", "wayde", "wayfinder", "wayland",
                 "waylon", "wayna", "wayne", "waynock", "weace", "weara", "weaver", "weddington", "wednesday", "wekmar",
                 "welby", "weldig", "weldon", "welisarne", "wellath", "wellisa", "wendell", "wendi", "wendie",
                 "wendolyn", "wendy", "wenona", "wentworth", "wenyuan", "werdha", "werner", "werni", "weronika",
                 "werre", "werymn", "weshin", "wesley", "wesolyne", "westin", "westley", "weston", "westri", "whane",
                 "whitefall", "whitewell", "whithri", "whitley", "whitlock", "whitney", "whorl", "wieth", "wikas",
                 "wiktor", "wiktoria", "wilber", "wilbert", "wilbeth", "wilbur", "wilburn", "wilda", "wildan", "wilder",
                 "wildon", "wildwood", "wiley", "wilford", "wilfred", "wilfredo", "wilfrid", "wilhelm", "wilhelmina",
                 "wilhemina", "wiliam", "willa", "willam", "willard", "willem", "willen", "willena", "willene",
                 "willenhir", "willetta", "willette", "willi", "willia", "william", "williams", "willian", "willican",
                 "willie", "williemae", "willis", "willo", "willodean", "willoughby", "willow", "willowmena", "willy",
                 "wilma", "wilmer", "wilmoor", "wilner", "wilrow", "wilson", "wilster", "wilte", "wiltmar", "wilton",
                 "wimkin", "wimnig", "winda", "winding", "windwalker", "windweave", "windwhisper", "windy", "winewood",
                 "winfield", "winford", "winfred", "winifred", "winius", "winnie", "winnifred", "winny", "winona",
                 "winslet", "winslow", "winston", "winta", "winter", "wisam", "wison", "wisom", "wishane", "witfar",
                 "withion", "witmor", "witner", "witold", "witworld", "wocca", "wodan", "wojciech", "wojech", "wojtek",
                 "wolfe", "wolfgang", "womal", "wonda", "wonder", "wonderer", "wonya", "woodiee", "woodrow", "woody",
                 "wooll", "worden", "wotan", "wrall", "wrathran", "wraythe", "wrothag", "wulfgrim", "wuthmon", "wyanet",
                 "wyatt", "wyder", "wyeta", "wyeth", "wyman", "wymmar", "wymmer", "wynell", "wynnde", "wynne", "wynona",
                 "wynter", "wyrde", "wyvorn", "xander", "xandie", "xandra", "xandria", "xandrog", "xanice", "xannas",
                 "xanril", "xanry", "xanthe", "xanthia", "xanthie", "xanto", "xaver", "xaviar", "xavier", "xaviera",
                 "xavyera", "xealen", "xenia", "xenil", "xenon", "xenos", "xercon", "xerxes", "xiang", "ximena",
                 "xinrui", "xinya", "xiomara", "xithyl", "xiyue", "xochil", "xochitl", "xocholactl", "xuechen",
                 "xylana", "xylano", "xylon", "xzander", "xzavier", "yaakov", "yaaseen", "yaasir", "yabaro", "yacer",
                 "yacine", "yacob", "yacoub", "yacov", "yacqub", "yacub", "yadiel", "yadira", "yaeko", "yagmur",
                 "yahaira", "yahan", "yahia", "yahir", "yahiya", "yahvi", "yahya", "yahyaa", "yahye", "yajaira",
                 "yakoub", "yakov", "yakub", "yakup", "yalda", "yamal", "yameen", "yamen", "yamileth", "yamin",
                 "yaminah", "yamini", "yamka", "yamur", "yanan", "yancy", "yanet", "yanira", "yanis", "yanky", "yannic",
                 "yannick", "yannis", "yanqi", "yanxuan", "yaqeen", "yaqoob", "yaqoub", "yaqub", "yaran", "yardley",
                 "yareli", "yaretzi", "yarin", "yaritza", "yasamin", "yaseen", "yasemin", "yaser", "yashfa", "yashica",
                 "yashika", "yashna", "yashraj", "yashveer", "yashvi", "yasiel", "yasin", "yasir", "yasmeen", "yasmen",
                 "yasmin", "yasmina", "yasmine", "yasna", "yasseen", "yasser", "yassere", "yassin", "yassine", "yassir",
                 "yassmine", "yasuko", "yasuo", "yatish", "yazan", "yazdan", "yazeed", "yazid", "yazmin", "yechiel",
                 "yedidya", "yehuda", "yehudah", "yehudi", "yekshit", "yelena", "yeliz", "yellowleaf", "yepal",
                 "yernazar", "yesenia", "yeshua", "yesirn", "yessenia", "yessica", "yestin", "yetta", "yeurquin",
                 "yevette", "yezda", "yezen", "ygerna", "yiannis", "yichen", "yifei", "yigit", "yildiz", "yilong",
                 "yilvoxe", "yiming", "yingfan", "yinoluwa", "yishai", "yisroel", "yitta", "yitty", "yitzchok",
                 "yixuan", "yoana", "yocheved", "yohan", "yohann", "yohanna", "yohannes", "yoland", "yolanda",
                 "yolande", "yolando", "yolenid", "yolonda", "yonah", "yonatan", "yoninah", "yonis", "yoreth", "yorrek",
                 "yosef", "yoseph", "yoshi", "yoshie", "yoshiko", "yosif", "yosra", "yossi", "yosuf", "youcef",
                 "youlanda", "younes", "young", "younis", "younus", "yousaf", "yousef", "yousif", "yousof", "yousra",
                 "youssef", "yousuf", "ysabeau", "ysabel", "ysabella", "ysabelle", "ysacor", "ysane", "yssik", "yssith",
                 "yuetong", "yuette", "yufan", "yuhan", "yuhao", "yujoe", "yukiko", "yukio", "yukta", "yulanda",
                 "yulia", "yulissa", "yumna", "yumnah", "yunis", "yunus", "yuonne", "yuqiao", "yuriko", "yusaf",
                 "yusef", "yusha", "yusif", "yusra", "yusraa", "yusrah", "yussuf", "yusuf", "yusupha", "yutao",
                 "yutong", "yuvaan", "yuval", "yuvan", "yuvasri", "yuvraaj", "yuvraj", "yuxin", "yvaine", "yvette",
                 "yviene", "yvone", "yvonne", "yvonnette", "yysara", "zaakir", "zaara", "zaarah", "zaccai", "zaccaria",
                 "zaccariah", "zachari", "zacharia", "zachariah", "zacharias", "zachariya", "zachary", "zachery",
                 "zackaria", "zackariah", "zackariya", "zackary", "zackery", "zackma", "zaden", "zadie", "zadok",
                 "zaeem", "zafia", "zafir", "zafira", "zafirah", "zahara", "zahari", "zaheer", "zaheera", "zahia",
                 "zahid", "zahida", "zahir", "zahira", "zahra", "zahraa", "zahrah", "zahur", "zaiba", "zaida", "zaidan",
                 "zaide", "zaiden", "zaigham", "zaila", "zaina", "zainab", "zainah", "zaine", "zaineb", "zainub",
                 "zainul", "zaira", "zairah", "zaire", "zaiyden", "zakai", "zakari", "zakaria", "zakariah", "zakariya",
                 "zakariyah", "zakariyya", "zakariyyah", "zakariyyas", "zakarn", "zakary", "zakee", "zakhary", "zakia",
                 "zakir", "zakira", "zakirah", "zakiya", "zakiyah", "zakiyyah", "zakkary", "zakria", "zakriya",
                 "zakriyya", "zalaan", "zalan", "zalmen", "zalyz", "zaman", "zameer", "zamil", "zamin", "zamzam",
                 "zanab", "zander", "zandinell", "zandra", "zaneta", "zanetta", "zanfalcon", "zaniah", "zanib",
                 "zanice", "zaniyah", "zanna", "zannan", "zantiln", "zanyn", "zarah", "zarak", "zareen", "zareena",
                 "zareenah", "zareesha", "zareh", "zaria", "zariah", "zarif", "zarina", "zarine", "zaring", "zarish",
                 "zariya", "zariyah", "zaroon", "zarra", "zarrah", "zarrar", "zaryab", "zathe", "zavian", "zavier",
                 "zaviera", "zaviyar", "zayaan", "zayah", "zayan", "zayba", "zaydan", "zayden", "zayed", "zayla",
                 "zayna", "zaynab", "zaynah", "zaynb", "zayne", "zayneb", "zaynub", "zayyaan", "zayyan", "zdenek",
                 "zebedee", "zebediah", "zebulon", "zecane", "zecele", "zechariah", "zeeman", "zeena", "zeenat",
                 "zeeshaan", "zeeshan", "zehna", "zehra", "zeina", "zeinab", "zeineb", "zelal", "zelda", "zelida",
                 "zelig", "zelina", "zella", "zelma", "zemira", "zemirah", "zenab", "zenaida", "zendaya", "zenden",
                 "zenevieva", "zenia", "zenib", "zenna", "zenobia", "zenon", "zensunni", "zephale", "zephan",
                 "zephaniah", "zepher", "zephere", "zephyr", "zephyrine", "zeppelin", "zeren", "zerin", "zerlinda",
                 "zerma", "zerya", "zeshan", "zessfar", "zestia", "zeteny", "zetta", "zeyad", "zeynab", "zeynep",
                 "zhane", "zhiqing", "ziana", "zianne", "ziazan", "zidaan", "zidan", "zidane", "zidar", "zienna",
                 "ziggy", "zigmal", "zihan", "zihang", "zikra", "zilan", "zilka", "zilli", "zilocke", "zimal", "zimran",
                 "zinah", "zinar", "zineb", "zineddine", "zinedine", "zinhle", "zinnia", "ziphezinhle", "zipporah",
                 "zivah", "zixil", "zixin", "ziyaad", "ziyad", "ziyan", "zizia", "zlata", "zobia", "zoeya", "zofia",
                 "zohaib", "zohair", "zohal", "zohar", "zohra", "zoila", "zoltan", "zonia", "zonya", "zophia",
                 "zoraida", "zoran", "zoravar", "zorawar", "zorie", "zosia", "zotar", "zoulikha", "zoura", "zoyah",
                 "zsofia", "zsolt", "zsombor", "zubaida", "zubaidah", "zubair", "zubanquer", "zubaydah", "zubayr",
                 "zubeyr", "zubin", "zufash", "zuhair", "zuhairah", "zuhayr", "zulaikha", "zulaykha", "zulekha",
                 "zulekia", "zulema", "zulfa", "zulfiqar", "zulma", "zulqarnain", "zumra", "zunaira", "zunairah",
                 "zuree", "zuriel", "zutar", "zuzana", "zuzanna", "zyana", "zylen", "zymal", "zymos", "zynah",
                 "zyneste", "zynoa", "zyten", "zytka", "étienne"]
    name_select = random.choice(name_list)
    print('Name:', name_select.capitalize())

    desc_list = [
        'Abrasive',
        'Accurate',
        'Adaptable',
        'Adroit',
        'Aggressive',
        'Altruistic',
        'Ambidextrous',
        'Amusing',
        'Analytical',
        'Appealing',
        'Articulate',
        'Artificially Intelligent',
        'Artistic',
        'Beneficent',
        'Brash',
        'Calramite (race)',
        'Calm',
        'Cautious',
        'Charming',
        'Chaotic',
        'Cheerful',
        'Civic',
        'Clever',
        'Clumsy',
        'Committed',
        'Confident',
        'Craven',
        'Cruel',
        'Cultured',
        'Curious',
        'Daring',
        'Deliberate',
        'Desert Dwelling',
        'Devout',
        'Diruk (race)',
        'Dishonorable',
        'Doomed',
        'Driven',
        'Earnest',
        'Echryni (race)',
        'Efficient',
        'Empathic',
        'Empirical',
        'Exacting',
        'Exiled',
        'Extraterrestrial',
        'Fabulous',
        'Fast',
        'Foolish',
        'Forward Thinking',
        'Fugitive',
        'Golthair (race)',
        'Graceful',
        'Gregarious',
        'Guarded',
        'Hardy',
        'Heroic',
        'Hideous',
        'Honorable',
        'Imaginative',
        'Impulsive',
        'Industrious',
        'Inquisitive',
        'Insolent',
        'Intelligent',
        'Intimidating',
        'Introverted',
        'Intuitive',
        'Irrepressible',
        'Jovial',
        'Kind',
        'Know-it-all',
        'Lawful',
        'Learned',
        'Lonely',
        'Loyal',
        'Lucky',
        'Mad',
        'Manipulative',
        'Marine',
        'Mechanic',
        'Meddlesome',
        'Meek',
        'Mercurial',
        'Meticulous',
        'Mlox (race)',
        'Mutant',
        'Mysterious',
        'Mystical',
        'Mechanical',
        'Naive',
        'Nalurus (race)',
        'Noble',
        'Nurturing',
        'Obsessive',
        'Optimistic',
        'Organized',
        'Ormyrl (race)',
        'Paranoid',
        'Passionate',
        'Patient',
        'Perceptive',
        'Persevering',
        'Polyglot',
        'Poker Faced',
        'Prepared',
        'Protective',
        'Proxima (race)',
        'Rebellious',
        'Relentless',
        'Resilient',
        'Resolute',
        'Resourceful',
        'Risk Taking',
        'Rugged',
        'Savage',
        'Serene',
        'Sharp Eyed',
        'Skeane (race)',
        'Skeptical',
        'Slacker',
        'Slick',
        'Spiritual',
        'Stealthy',
        'Strange',
        'Strong',
        'Strong Willed',
        'Subterranean',
        'Swift',
        'Tongue Tied',
        'Tough',
        'Ultraterrestrial',
        'Unforgiving',
        'Varjellen (race)',
        'Vicious',
        'Vigilant',
        'Virtuous',
        'Vengeful',
        'Volcanic',
        'Voracius',
        'Wealthy',
        'Weird',
        'Young',
        ]
    desc_select = random.choice(desc_list)

    foci_list = [
        'Abides in Crystal',
        'Abides in Stone',
        'Absorbs Energy',
        'Abuses Alchemy',
        'Acts Without Consequence',
        'Adapts to Any Environment',
        'Adjures the Leviathan',
        'Augments Flesh With Grafts',
        'Awakens Dreams',
        'Battles Automatons',
        'Bears a Halo of Fire',
        'Becomes Energy',
        'Becomes Flash Fire',
        'Befriended a Machine Intelligence',
        'Blazes with Radiance',
        'Brandishes an Exotic Shield',
        'Breaks Down Walls',
        'Breathes Smoke and Ash',
        'Builds Automatons',
        'Builds Tomorrow',
        'Calculates the Incalculable',
        'Calls Magma',
        'Carries a Quiver',
        'Changes Shape',
        'Channels Balefire',
        'Charges Right In',
        'Collects Bounties',
        'Commands Mental Powers',
        'Commands Monsters',
        'Consorts With the Dead',
        'Controls Beasts',
        'Controls Gravity',
        'Controls Nanomachines',
        'Charges Right In',
        'Conceals the Truth',
        'Consorts with the Dead',
        'Crafts Illusions',
        'Crafts Unique Objects',
        'Dances With Dark Matter',
        'Defends the Gate',
        'Defends the Weak',
        'Delved Too Deeply',
        'Descends From Nobility',
        'Devotes Everything to the Cause',
        'Doesn\'t Do Much',
        'Doomed',
        'Emerged From the Obelisk',
        'Employs Magnetism',
        'Entertains',
        'Excels Physically',
        'Exists in Two Places at Once',
        'Exists Partially Out of Phase',
        'Explores',
        'Explores Dark Places',
        'Explores Deep Waters',
        'Explores Yesterday',
        'Fell From Another World',
        'Fell Through a Rabbit Hole',
        'Fights Dirty',
        'Fights With a Horde',
        'Fights with Panache',
        'Figures Things Out',
        'Finds the Flaw in All Things',
        'Forges a Bond',
        'Focuses Mind Over Matter',
        'Fuses Flesh and Steel',
        'Fuses Mind and Machine',
        'Gazes Into the Abyss',
        'Governs',
        'Grows to Towering Heights',
        'Giant Slayer',
        'Has Three Hands',
        'Helps Their Friends',
        'Howls at the Moon',
        'Hunted By Moths',
        'Hunts',
        'Hunts Abhumans',
        'Hunts Mutants',
        'Hunts Outcasts',
        'Hunts With Great Skill',
        'Imparts Wisdom',
        'Infiltrates',
        'Integrates Weaponry',
        'Interprets the Law',
        'Leads',
        'Learns From Adversity',
        'Learns Quickly',
        'Likes to Break Things',
        'Lives in the Wilderness',
        'Lives on the Road',
        'Looks for Trouble',
        'is Mad',
        'Makes Something Out of Nothing',
        'Manipulates Force',
        'Masters Defense',
        'Masters the Swarm',
        'Masters Weaponry',
        'Metamorphosizes',
        'Metes Out Justice',
        'Moves Like a Cat',
        'Moves like the Wind',
        'Murders',
        'Needs No Weapon',
        'Never Says Die',
        'Plays Tricks',
        'Plays with Portals',
        'Predates',
        'Processes Information',
        'Provides Support',
        'Performs Feats of Strength',
        'Possesses a Shard of the Sun',
        'Radiates Vitality',
        'Rages',
        'Regenerates Tissue',
        'Removes Barriers',
        'Repairs Ancient Devices',
        'Resides in Silicon',
        'Rides the Lightning',
        'Rules the Sea',
        'Runs',
        'Sails',
        'Scavenges',
        'Sees Beyond',
        'Self Evolves',
        'Shapes Liquid',
        'Shepherds the Community',
        'Shreds the Walls of the World',
        'Spawns Clones',
        'Speaks in Exaltation',
        'Speaks to the Datasphere',
        'Speaks with a Silver Tongue',
        'Spies',
        'Stares Down Adversity',
        'Steps Into the Outside',
        'Slays Monsters',
        'Separates Mind From Body',
        'Siphons Power',
        'Solves Mysteries',
        'Speaks for the Land',
        'Stands Like a Bastion',
        'Steals',
        'Sworn to the Crown',
        'Talks to Machines',
        'Taps the Void',
        'Thunders',
        'Throws Boulders',
        'Throws With Deadly Accuracy',
        'Touches the Sky',
        'Travels Through Time',
        'Ventures Into the Night',
        'Walks the Wasteland',
        'is Wanted',
        'Was Foretold',
        'Wears Artifact Armor',
        'Wears a Sheen of Ice',
        'Wields a Whip',
        'Wonders',
        'Wields Power With Precision',
        'Wields Two Weapons at Once',
        'Wields Words Like Weapons',
        'Works Miracles',
        'Works the Back Alleys',
        'Works the System',
        'Would Rather Be Reading'
    ]

    if desc_list == "Mutant":
        foci_list.append('Constantly Evolves')
    else:
        if 'Constantly Evolves' in foci_list:
            foci_list.remove('Constantly Evolves')

    if desc_list == "Varjellen":
        foci_list.append('Reforges Completely')
    else:
        if 'Reforges Completely' in foci_list:
            foci_list.remove('Reforges Completely')

    class_list = [
        'Glaive',
        'Jack',
        'Nano',
        'Delve',
        'Arkus',
        'Wright',
    ]
    class_select = random.choice(class_list)


    foci_select = random.choice(foci_list)

    print(desc_select, class_select, 'who', foci_select)
    if foci_select == 'mutant':
        mutation()

    appearance()

    background_roll = random.randint(1,20)
    if class_select == 'Arkus':
        might += 8
        speed += 9
        intellect += 11
        stats(might, speed, intellect)
        print('Background:')
        if background_roll == 1:
            print('You were in the military and had command over several others who still serve.')
        elif background_roll == 2:
            print('You were the head of a wealthy merchant family that lost everything in a disaster.')
        elif background_roll == 3:
            print('You owned a tavern for a while, but you sold it to a friend so you could seek greater challenges.')
        elif background_roll == 4:
            print('You learned at the feet of an incredibly talented leader who went into hiding for fear of assassination.')
        elif background_roll == 5:
            print('Your first love is involved in the ruling council of the community where you spent much of your youth.')
        elif background_roll == 6:
            print('One of your grandparents was a minor official, but they were ousted and run out of town on suspicion of corruption.')
        elif background_roll == 7:
            print('You spent some time leading a group of violent rebels but thought better of your actions later.')
        elif background_roll == 8:
            print('You once promised to help a negotiation with a group of abhumans that turned out badly.')
        elif background_roll == 9:
            print('A group of traveling nomads always seek you out when they’re nearby because you once helped them.')
        elif background_roll == 10:
            print('You are a member of a small secret society.')
        elif background_roll == 11:
            print('Your ex-best friend tried to have you arrested on trumped-up charges, so you left town.')
        elif background_roll == 12:
            print('You have traveled extensively, and during that time, you accumulated quite a collection of strange souvenirs.')
        elif background_roll == 13:
            print('You grew up in a large, thriving city and still have many friends and contacts back there.')
        elif background_roll == 14:
            print('You spoke up for a person you thought was wrongly accused of a crime.They were released partly based on your testimony, but you later came to have doubts.')
        elif background_roll == 15:
            print('As an orphan, you had a difficult childhood, and your entry into adulthood was challenging.')
        elif background_roll == 16:
            print('You headed a small church, and though you left to pursue your own strange journey, the congregation still tries to lure you back to the pulpit.')
        elif background_roll == 17:
            print('Before they died, your parent was a respected member of the Order of Truth.Those who knew your parent are fond of you, but they also expect great things from you.')
        elif background_roll == 18:
            print('As a political refugee, you are often treated with suspicion.')
        elif background_roll == 19:
            print('When you were a diplomat working for a large city, you made friends with several visiting envoys, some of whom you still contact.')
        else:
            print('You were married but lost your spouse in a horrific accident.The protection you failed to offer them is something you’d like to provide to save others.')
    elif class_select == 'Delve':
        might += 9
        speed += 9
        intellect += 10
        stats(might, speed, intellect)
        print('Background:')
        if background_roll == 1:
            print('You always seem to run into another delve when you explore. Sometimes they help, but sometimes they take the best a ruin has to offer and leave you with drit. ')
        elif background_roll == 2:
            print('A merchant in a nearby city is always asking you for rare and wondrous items, which you’re pretty sure they resell for a far higher price than they ever give you.')
        elif background_roll == 3:
            print('You owned a tavern for a while, but you sold it to a friend so you could seek greater challenges.')
        elif background_roll == 4:
            print('One of your parents was a minor official, with access to many privileges and much information. ')
        elif background_roll == 5:
            print('The town you grew up in was destroyed in a disaster that involved a flock of brilliant spheres of light that burst from the earth and rose into the sky, each taking a portion of the town away. ')
        elif background_roll == 6:
            print('You were taken into slavery as a child but later escaped. You still have scars and bad dreams. ')
        elif background_roll == 7:
            print('The Amber Gleaners have been attempting to recruit you, but so far you’ve put them off. ')
        elif background_roll == 8:
            print('You owe money to a number of people and don’t have the funds to pay your debts. Nobody seems interested in taking iotum.')
        elif background_roll == 9:
            print('You ran with bandits for a short period, but you left them after thinking better of it. Now, however, they are after you, swearing that no one leaves their group while still breathing. ')
        elif background_roll == 10:
            print('You are a member of a small secret society.')
        elif background_roll == 11:
            print('You taught children for many years, but those days are behind you now. ')
        elif background_roll == 12:
            print('You have traveled extensively, and during that time, you accumulated quite a collection of strange souvenirs.')
        elif background_roll == 13:
            print('As an orphan, you had a difficult childhood, and your entry into adulthood was challenging. ')
        elif background_roll == 14:
            print('You led a double life. Most people know you as a conscientious and daring explorer, but you led another life as a thrill-seeking thief. You don’t indulge much in the latter anymore, but you sometimes dream about your lost cache of “trophies.” ')
        elif background_roll == 15:
            print('As an orphan, you had a difficult childhood, and your entry into adulthood was challenging.')
        elif background_roll == 16:
            print('You were married, but your partner was stolen by transdimensional beings. ')
        elif background_roll == 17:
            print(' You had a pet that you loved dearly, but it was killed in an accident. You’re still searching for how that accident came to be; could it have been a deliberate act by your enemies? ')
        elif background_roll == 18:
            print('You were best friends with a nano, possibly even lovers, but the iron wind took them away from you. ')
        elif background_roll == 19:
            print('Your sibling became a glaive and now serves with a traveling band of specimen collectors in the employ of some organization whose name you can never remember. ')
        else:
            print('You’ve often been maligned for your looks. Ungainly, different, of a different species or cultural background—the reason you look different than others is up to you')
    elif class_select == 'Glaive':
        might += 11
        speed += 10
        intellect += 7
        stats(might, speed, intellect)
        print('Background:')
        if background_roll == 1:
            print('You were in the military and have friends who still serve. Your former commander remembers you well. ')
        elif background_roll == 2:
            print('You were the personal guard of a wealthy merchant who accused you of theft. You left her service in disgrace. ')
        elif background_roll == 3:
            print('You were the bouncer in a local bar for a while, and the patrons there remember you.')
        elif background_roll == 4:
            print('You trained with a highly respected mentor. He regards you well, but he has many enemies.')
        elif background_roll == 5:
            print('You trained in an isolated monastery far away. The monks think of you as a brother, but you’re a stranger to all others. ')
        elif background_roll == 6:
            print('You have no formal training. Your abilities come to you naturally (or unnaturally). ')
        elif background_roll == 7:
            print('You spent some time leading a group of violent rebels but thought better of your actions later.')
        elif background_roll == 8:
            print('You spent time on the streets and even were in prison for a while.')
        elif background_roll == 9:
            print('You were conscripted into military service, but you deserted before long. ')
        elif background_roll == 10:
            print('You served as a bodyguard to a powerful criminal who now owes you his life. ')
        elif background_roll == 11:
            print('You worked as a constable. Everyone knows you, but their opinions of you vary. ')
        elif background_roll == 12:
            print('You have traveled extensively, and during that time, you accumulated quite a collection of strange souvenirs.')
        elif background_roll == 13:
            print('You served as a caravan guard. You know a smattering of people in many cities and towns. ')
        elif background_roll == 14:
            print('Your best friend is a sage and a scholar. She is a great source of knowledge.')
        elif background_roll == 15:
            print('Your old trainer still expects you to come back and sharpen her blades and clean up after her classes, but when you do, she occasionally shares interesting rumors.')
        elif background_roll == 16:
            print('You saved the lives of a family when their house burned down. They’re indebted to you, and their neighbors regard you as a hero.')
        elif background_roll == 17:
            print('A man you fought alongside in the military is now the mayor of a nearby town. ')
        elif background_roll == 18:
            print('Your mentor wrote a book on the martial arts. Sometimes other warriors seek you out to ask about its stranger passages. ')
        elif background_roll == 19:
            print('Your blacksmith friend sometimes calls on you for help at the forge. However, he pays you well. ')
        else:
            print('Your older sibling is an infamous glaive who has been disgraced. ')
    elif class_select == 'Jack':
        might += 10
        speed += 10
        intellect += 10
        stats(might, speed, intellect)
        print('Background:')
        if background_roll == 1:
            print('You come from a large family and had to fend for yourself from an early age. ')
        elif background_roll == 2:
            print('Your older sister is a skilled nano. You weren’t able to follow her path, but the numenera is not unknown to you. ')
        elif background_roll == 3:
            print('You’re a member of a guild of explorers who specialize in uncovering ancient mysteries.')
        elif background_roll == 4:
            print('You worked alongside your father, who was skilled in many things, until he disappeared one day with no explanation. ')
        elif background_roll == 5:
            print('You grew up on the streets and studied at the school of hard knocks. ')
        elif background_roll == 6:
            print('You remember little of your past, which has always seemed strange to you. ')
        elif background_roll == 7:
            print('You spent some time leading a group of violent rebels but thought better of your actions later.')
        elif background_roll == 8:
            print('You came of age in the wild and are used to living rough.')
        elif background_roll == 9:
            print('You’re friends with many people in the community and are generally well regarded.')
        elif background_roll == 10:
            print('You have an annoying rival who always seems to get in your way or foil your plans. ')
        elif background_roll == 11:
            print('You’re in love with a local shopkeeper, but that person shows little interest in you. ')
        elif background_roll == 12:
            print('You have traveled extensively, and during that time, you accumulated quite a collection of strange souvenirs.')
        elif background_roll == 13:
            print('Several expeditions preparing to explore old ruins and odd mysteries would like you to join them because you seem like a promising addition to the team.')
        elif background_roll == 14:
            print('Your best friend from childhood is now an Aeon Priest. ')
        elif background_roll == 15:
            print('As an orphan, you had a difficult childhood, and your entry into adulthood was challenging.')
        elif background_roll == 16:
            print('You’re drinking buddies with a number of the local guards and glaives.')
        elif background_roll == 17:
            print('You used to work with a troupe of traveling minstrels and performers, and they remember you fondly (as do people in the places you visited). ')
        elif background_roll == 18:
            print('You’re wanted for a crime you didn’t commit. ')
        elif background_roll == 19:
            print('You have a friend with an extensive library, plenty of food and drink, and a comfortable home—and the door is always open to you.')
        else:
            print('You owe money to a number of people around town and don’t have the funds to pay your debts. ')
    elif class_select == 'Nano':
        might += 7
        speed += 9
        intellect += 12
        stats(might, speed, intellect)
        print('Background:')
        if background_roll == 1:
            print('You served as an apprentice for a nano-sorcerer respected and feared by many people. Now you bear their mark. ')
        elif background_roll == 2:
            print('You studied in a school infamous for its dark, brooding instructors and graduates. ')
        elif background_roll == 3:
            print('You learned nano-sorcery (or gained your modifications) in the temple of an obscure god. Its priests and worshippers, although small in number, respect and admire your talents and potential. ')
        elif background_roll == 4:
            print('While traveling alone, you saved the life of a powerful abhuman brute. Although unwilling to accompany you on your journey, he remains indebted to you. ')
        elif background_roll == 5:
            print('Your mother was a powerful nano while she lived, helpful to many locals. They look upon you kindly, but they also expect much from you. ')
        elif background_roll == 6:
            print('You owe money to a number of people around town and don’t have the funds to pay your debts. ')
        elif background_roll == 7:
            print('You failed disgracefully at your initial studies with your teacher and now proceed on your own.')
        elif background_roll == 8:
            print('You learned your skills faster than your teachers had ever seen before. The powers that be took notice and are paying close attention. ')
        elif background_roll == 9:
            print('You killed a well-known criminal in self-defense, earning the respect of many and the enmity of a dangerous few.')
        elif background_roll == 10:
            print('You trained as a glaive, but your skills with the numenera and other types of lore eventually led you down a different path. Your former comrades don’t understand you, but they respect you. ')
        elif background_roll == 11:
            print('While studying to be a nano, you worked as an assistant for a seamstress, making friends with the owner and the clientele.')
        elif background_roll == 12:
            print('You have traveled extensively, and during that time, you accumulated quite a collection of strange souvenirs.')
        elif background_roll == 13:
            print('Your family owns a large vineyard nearby known to all for its fine wine and fair business dealings. ')
        elif background_roll == 14:
            print('You trained for a time with a group of Aeon Priests, and they still look upon you with fondness. ')
        elif background_roll == 15:
            print('An experiment you conducted in the past went horribly awry. The locals remember you as a dangerous and foolhardy individual. ')
        elif background_roll == 16:
            print('People you meet seem put off by the strange birthmark on your face. ')
        elif background_roll == 17:
            print('You and a friend both smoke the same kind of rare, expensive tobacco. The two of you get together weekly to chat and smoke. ')
        elif background_roll == 18:
            print('Your older sibling is an infamous glaive who has been disgraced. ')
        elif background_roll == 19:
            print('You belong to a secretive social club that gathers monthly to drink and talk.')
        else:
            print('You worked the gardens in the palace of an influential noble. She wouldn’t remember you, but you made friends with her young daughter. ')
    elif class_select == 'Wright':
        might += 9
        speed += 7
        intellect += 12
        stats(might, speed, intellect)
        print('Background:')
        if background_roll == 1:
            print('Your mother praised your artistic talent as a child, but you gave it up in favor of crafting.')
        elif background_roll == 2:
            print('You lost your brother when you were young. Your only memory of him is a doll you yet keep. ')
        elif background_roll == 3:
            print('You retain a pet automaton about the size of a breadbox with wheels that you had even as a child. ')
        elif background_roll == 4:
            print('You are known as a seller of strange gadgets and once even made your living doing so. ')
        elif background_roll == 5:
            print('You once created a machine for distilling spirits that your friends still tell stories about.')
        elif background_roll == 6:
            print('You had a partner who also enjoyed crafting, but there was an accident and they died.')
        elif background_roll == 7:
            print('You created a device that caused you to disappear for three months. You later reappeared with no memory of what had happened and a star-shaped scar on your left temple. ')
        elif background_roll == 8:
            print('You’re a member of a secret organization of wrights who occasionally share messages and plans.')
        elif background_roll == 9:
            print('You once owned a plan for crafting a dread destroyer, but it was stolen. ')
        elif background_roll == 10:
            print('One of your creations accidentally triggered a local incident with the iron wind. At least, that’s what some accused you of after it was all over and the dead were counted. You don’t think it was your fault, but you wonder. ')
        elif background_roll == 11:
            print('You had an apprentice you were teaching your craft to, but they left you in the middle of your most important project, causing it to fail. ')
        elif background_roll == 12:
            print('Your best friend from your youth is now a hated outlaw, though others say they are a hero. You’re not sure where the truth lies. ')
        elif background_roll == 13:
            print('On a few occasions, you’ve found just the iotum you needed to proceed in your work. You don’t know who or what has been responsible for providing them. ')
        elif background_roll == 14:
            print('Religion has always been part of your life, though only recently have you thought to question it. ')
        elif background_roll == 15:
            print('As an orphan, you had a difficult childhood, and your entry into adulthood was challenging.')
        elif background_roll == 16:
            print('A great musician in a nearby large city claims they owe their success to an instrument you crafted. ')
        elif background_roll == 17:
            print('You know where dozens, perhaps even hundreds, of plan seeds are located, but you haven’t been able to mount an expedition to locate and secure the cache yet. ')
        elif background_roll == 18:
            print('You were accused of murdering your brother. You fled to where you are now. ')
        elif background_roll == 19:
            print('You were trained by a master wright who left the world in a magnificent starcraft they built')
        else:
            print('You were married but lost your spouse in a horrific accident. The protection you failed to offer them is something you’d like to provide to save others.')

def mutation_menu():
    def print_menu():
        print(30 * "-", "MUTATION MENU", 30 * "-")
        print("1. Random Mutation")
        print("2. Random Beneficial Mutation")  # update to genera character menu, random mutations and specific mutatoins
        print("3. Random Harmful Mutation")
        print("4. Random Powerful Mutation")
        print("5. Random Cosmetic Mutation ")
        print("6. Midnight Stone Effects")
        print("0. Exit ")
        print(73 * "-")

    loop = True
    int_choice = -1

    while loop:  # While loop which will keep going until loop = False
        print_menu()  # Displays menu
        choice = input("Enter your choice [1-9]: ")
        if choice == '1':
            int_choice = 1
            mutation()

        elif choice == '2':
            int_choice = 2
            beneficial_mutation()

        elif choice == '3':
            int_choice = 3
            harmful_mutation()

        elif choice == '4':
            int_choice = 4
            powerful_mutation()

        elif choice == '5':
            int_choice = 5
            cosmetic_mutation()

        elif choice == '6':
            int_choice = 6
            midnight_stone()

        elif choice == '0':
            int_choice = -1
            print("Exiting..")
            loop = False  # This will make the while loop to end

        else:
            # Any inputs other than listed values we print an error message
            input("Wrong menu selection. Enter any key to try again..")
    return [int_choice, choice]

def get_menu_choice():

        def print_menu():
            print(30 * "-", "NUMENERA MENU", 30 * "-")
            print("1. Items")
            print("2. Random Character") # update to genera character menu, random mutations and specific mutatoins
            print("3. Mutations")
            print("4. Random Discovery")
            print("5. Random Ruins ")
            print("6. Creatures")
            print("0. Exit ")
            print(73 * "-")

        loop = True
        int_choice = -1

        while loop:  # While loop which will keep going until loop = False
            print_menu()  # Displays menu
            choice = input("Enter your choice [1-9]: ")
            if choice == '1':
                int_choice = 1
                item_menu()

            elif choice == '2':
                int_choice = 2
                charGen() # character generator

            elif choice == '3':
                int_choice = 3
                mutation_menu()

            elif choice == '4':
                int_choice = 4
                discovery()

            elif choice == '5':
                int_choice = 5
                ruin()

            elif choice == '6':
                int_choice = 6
                monster()

            elif choice == '0':
                int_choice = -1
                print("Exiting..")
                loop = False  # This will make the while loop to end

            else:
                # Any inputs other than listed values we print an error message
                input("Wrong menu selection. Enter any key to try again..")
        return [int_choice, choice]

print(get_menu_choice())
